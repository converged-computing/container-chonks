{
    "manifests": {
        "0.1.0": {
            "schemaVersion": 1,
            "name": "jwilder/nginx-proxy",
            "tag": "0.1.0",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:f3cd2e50eebe286e17eaa8f61261e9a2458f37e8c014c188057798b3f1c8e160"
                },
                {
                    "blobSum": "sha256:fb4194adbe02dd0ef1c19f9b674b52dc1842b223a81400cc03875606f970e41c"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:49c5793ee8b9bd0344424541ab78a481e21064ca59629e9d0840ffac2acc2e56"
                },
                {
                    "blobSum": "sha256:a9ab50bd15e239b29b378d5d37884f3166ea4f27b3ef369cae488d0180e6eb25"
                },
                {
                    "blobSum": "sha256:3ae9b1e429b88544dd836470a61f715647ed2364d77f48ed432f9153676c1c50"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:391515714543fbaade79ce3bf4efda71d3b5992ca4874d2725dbd7703aebacce"
                },
                {
                    "blobSum": "sha256:406a1e87122954a68bccc9e9d3316d65cc332662ef1ca0d438a3165830ce9766"
                },
                {
                    "blobSum": "sha256:f72b86395ecdcff786174e8fbd2c2cfa794240023bc3ce8d5b42996c4aa4d3b4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:cfd60577ca05a95a2c37b889e567315c0e5d2f7b95c71289e90d8e65e278dc68"
                },
                {
                    "blobSum": "sha256:ada158fbf84dbc5399ebfc626d6dae9397ef5f20ccacda7fd846a2323927bb35"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:4d2e9ae40c411dd421f35dd20c133152bed21f8f9b903ba265a5d77c69a79edc"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"architecture\":\"amd64\",\"author\":\"Jason Wilder jwilder@litl.com\",\"config\":{\"Hostname\":\"b20c898782d0\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"ExposedPorts\":{\"443/tcp\":{},\"80/tcp\":{}},\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"NGINX_VERSION=1.9.2-1~jessie\",\"DOCKER_GEN_VERSION=0.4.0\",\"DOCKER_HOST=unix:///tmp/docker.sock\"],\"Cmd\":[\"forego\",\"start\",\"-r\"],\"ArgsEscaped\":true,\"Image\":\"sha256:71862c40ec2f036ab5f46471ff515b48e4fa50d66515fc16f1a7fa7553a272f1\",\"Volumes\":{\"/etc/nginx/certs\":{},\"/var/cache/nginx\":{}},\"WorkingDir\":\"/app\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"container\":\"841ee8df12eccb68e9830de43c81c6031bd72146cb32c713c7edabd1c55c4206\",\"container_config\":{\"Hostname\":\"b20c898782d0\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"ExposedPorts\":{\"443/tcp\":{},\"80/tcp\":{}},\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"NGINX_VERSION=1.9.2-1~jessie\",\"DOCKER_GEN_VERSION=0.4.0\",\"DOCKER_HOST=unix:///tmp/docker.sock\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"forego\\\" \\\"start\\\" \\\"-r\\\"]\"],\"ArgsEscaped\":true,\"Image\":\"sha256:71862c40ec2f036ab5f46471ff515b48e4fa50d66515fc16f1a7fa7553a272f1\",\"Volumes\":{\"/etc/nginx/certs\":{},\"/var/cache/nginx\":{}},\"WorkingDir\":\"/app\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":{}},\"created\":\"2016-03-21T16:57:46.613639226Z\",\"docker_version\":\"1.10.2\",\"id\":\"e4ad60ffd7adf9de8098a2d5f3f8eec8dbc9c5b33ac33a47f3ae0a065e0f217a\",\"os\":\"linux\",\"parent\":\"7ebae855167a687ebaf0cd6017529d1a0fa6754222eea1321357310364684e8d\",\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"7ebae855167a687ebaf0cd6017529d1a0fa6754222eea1321357310364684e8d\",\"parent\":\"0ec14dbc0803336002b30a7c231538ba07157b63632177bef608410c3dca49b4\",\"created\":\"2016-03-21T16:57:46.456751462Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) VOLUME [/etc/nginx/certs]\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"0ec14dbc0803336002b30a7c231538ba07157b63632177bef608410c3dca49b4\",\"parent\":\"841b5ef91a3fe45a67797dc4daea631d6b6f7f9ae5d52798d016ff86c8486c91\",\"created\":\"2016-03-21T16:57:46.3410947Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV DOCKER_HOST=unix:///tmp/docker.sock\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"841b5ef91a3fe45a67797dc4daea631d6b6f7f9ae5d52798d016ff86c8486c91\",\"parent\":\"35766cc82b03eb6ea05b18a6357ab3f028ad9c3fe44f52ad18dc5606f8b2c49a\",\"created\":\"2016-03-21T16:57:46.200093877Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) WORKDIR /app/\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"35766cc82b03eb6ea05b18a6357ab3f028ad9c3fe44f52ad18dc5606f8b2c49a\",\"parent\":\"b27a259c7882519aeeb2fbb324c277e9ba7b9eae349d599e3f2f7f20c0ebc50d\",\"created\":\"2016-03-21T16:57:46.070907719Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) COPY dir:101c671285134055ccaa180d288232d9c5301f99f44cac38e5b1ebf582a71493 in /app/\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"b27a259c7882519aeeb2fbb324c277e9ba7b9eae349d599e3f2f7f20c0ebc50d\",\"parent\":\"85a4f8a98fecdd2f66f4949a5e279d73912957a421bdbb2e055ea4ed94881077\",\"created\":\"2016-03-21T16:57:45.85882893Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \\u0026\\u0026 tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \\u0026\\u0026 rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"85a4f8a98fecdd2f66f4949a5e279d73912957a421bdbb2e055ea4ed94881077\",\"parent\":\"98a5e12d81ead493402bda55cfa3c4d74d008ce51dbf325928e3383de170bc65\",\"created\":\"2016-03-21T16:57:44.747764441Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV DOCKER_GEN_VERSION=0.4.0\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"98a5e12d81ead493402bda55cfa3c4d74d008ce51dbf325928e3383de170bc65\",\"parent\":\"479d5cadf27f2f15bfdfc917eac9fbe3ab141183a3ca085f31420fec7587e09c\",\"created\":\"2016-03-21T16:57:44.62399257Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c wget -P /usr/local/bin https://godist.herokuapp.com/projects/ddollar/forego/releases/current/linux-amd64/forego  \\u0026\\u0026 chmod u+x /usr/local/bin/forego\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"479d5cadf27f2f15bfdfc917eac9fbe3ab141183a3ca085f31420fec7587e09c\",\"parent\":\"367ad82e530f94f75e0a075e1c706b323236d4fc337a365acf697b815557351c\",\"created\":\"2016-03-21T16:57:42.907925301Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c echo \\\"daemon off;\\\" \\u003e\\u003e /etc/nginx/nginx.conf  \\u0026\\u0026 sed -i 's/^http {/\\u0026\\\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"367ad82e530f94f75e0a075e1c706b323236d4fc337a365acf697b815557351c\",\"parent\":\"864646cf3d38b96f5511700abb9338f713fc13d732794faedb3ad72c65658225\",\"created\":\"2016-03-21T16:57:42.457313231Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-get update  \\u0026\\u0026 apt-get install -y -q --no-install-recommends     ca-certificates     wget  \\u0026\\u0026 apt-get clean  \\u0026\\u0026 rm -r /var/lib/apt/lists/*\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"864646cf3d38b96f5511700abb9338f713fc13d732794faedb3ad72c65658225\",\"parent\":\"db93f512122fb53e81b0e9ce233cfca5e1a26fd82a7685567d632aab6dfc0712\",\"created\":\"2016-03-21T16:57:15.180004936Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) MAINTAINER Jason Wilder jwilder@litl.com\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"db93f512122fb53e81b0e9ce233cfca5e1a26fd82a7685567d632aab6dfc0712\",\"parent\":\"2fbf916f9845fd32987537f35ec67e92e6276a60acd8ca62ea0098c0518af0d5\",\"created\":\"2015-07-14T00:04:53.560160038Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) CMD [\\\"nginx\\\" \\\"-g\\\" \\\"daemon off;\\\"]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"2fbf916f9845fd32987537f35ec67e92e6276a60acd8ca62ea0098c0518af0d5\",\"parent\":\"92618fcc6af1e56779ca416dcd42ab5b85ed27c6f3822a5083139456bbf7542d\",\"created\":\"2015-07-14T00:04:53.264039059Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) EXPOSE 443/tcp 80/tcp\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"92618fcc6af1e56779ca416dcd42ab5b85ed27c6f3822a5083139456bbf7542d\",\"parent\":\"106446e36633a2c8ced9d4de17908914bb095007a6cf0a5e7885d97982d9f18d\",\"created\":\"2015-07-14T00:04:52.975933862Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) VOLUME [/var/cache/nginx]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"106446e36633a2c8ced9d4de17908914bb095007a6cf0a5e7885d97982d9f18d\",\"parent\":\"adfd6654b8c728a8f5d4113300df63cf55ce5ae868d76a25e0daf7173b77dc5e\",\"created\":\"2015-07-14T00:04:52.677300983Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c ln -sf /dev/stderr /var/log/nginx/error.log\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"adfd6654b8c728a8f5d4113300df63cf55ce5ae868d76a25e0daf7173b77dc5e\",\"parent\":\"94ba153e7f51d0b56e096b015658fe177ca9f84102ab2486cab0958a5e6f0f21\",\"created\":\"2015-07-14T00:04:51.657409924Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"94ba153e7f51d0b56e096b015658fe177ca9f84102ab2486cab0958a5e6f0f21\",\"parent\":\"e6ebdc5276c020e129a0d3c3e4ee65268b9bf6b2f6234e275acdf0a78e85767c\",\"created\":\"2015-07-14T00:04:50.50138308Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-get update \\u0026\\u0026     apt-get install -y ca-certificates nginx=${NGINX_VERSION} \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e6ebdc5276c020e129a0d3c3e4ee65268b9bf6b2f6234e275acdf0a78e85767c\",\"parent\":\"e26c6b67a8230313f3c63c19f424fb3af4927b4f4bc9c1da764b4e72202ece4b\",\"created\":\"2015-07-14T00:04:06.34328143Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV NGINX_VERSION=1.9.2-1~jessie\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e26c6b67a8230313f3c63c19f424fb3af4927b4f4bc9c1da764b4e72202ece4b\",\"parent\":\"7932de357bd9a0ee33c4d08dad80f910601eb1aabcb5f5751219e1b9bdfea89a\",\"created\":\"2015-07-14T00:04:06.100727569Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c echo \\\"deb http://nginx.org/packages/mainline/debian/ jessie nginx\\\" \\u003e\\u003e /etc/apt/sources.list\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"7932de357bd9a0ee33c4d08dad80f910601eb1aabcb5f5751219e1b9bdfea89a\",\"parent\":\"04e26b698e13f80e3cb763d3a3cd81d0ce55c2234db4add1b162edc70ec14c6f\",\"created\":\"2015-07-14T00:04:05.125446683Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"04e26b698e13f80e3cb763d3a3cd81d0ce55c2234db4add1b162edc70ec14c6f\",\"parent\":\"17375e2d0732febe4f5a3876d2c392f8585385698f3b0f33e3e9643ddbc3ae66\",\"created\":\"2015-07-14T00:03:54.543937457Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) MAINTAINER NGINX Docker Maintainers \\\"docker-maint@nginx.com\\\"\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"17375e2d0732febe4f5a3876d2c392f8585385698f3b0f33e3e9643ddbc3ae66\",\"parent\":\"b069b57b795c16bc3d301d1229e2d1861b320b530392e1c83ad0b16f8b93ca2a\",\"created\":\"2015-07-13T19:15:53.819698011Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) CMD [\\\"/bin/bash\\\"]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"b069b57b795c16bc3d301d1229e2d1861b320b530392e1c83ad0b16f8b93ca2a\",\"created\":\"2015-07-13T19:15:51.792374893Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ADD file:e1dd18493a216ecd0c624b2237bc1882c99431ec76905f013f17cc7209790601 in /\"]}}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "K627:RWE4:ICMY:MYVV:T2KX:RNPQ:5JAH:UJUW:YKG5:P5YX:LA4A:RNXJ",
                            "kty": "EC",
                            "x": "5qwOsNjY0sfX9qQHwXk8vtjnldLgnL1-qiui8Shakvw",
                            "y": "86SbtRuNJ0kE_q6QSAQmthjBiyKUdqc914yynwHfK_Y"
                        },
                        "alg": "ES256"
                    },
                    "signature": "I57x8oFQuaCq7LpcmURWm_cr07MW24P9eYfFkZjRyD6Pwn8wZyoc9JzZb2Gj7oDHV6aG-pU93gBvNR8Kt7b5LA",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjEzMTI2LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMTI6NDA6MzdaIn0"
                }
            ]
        },
        "0.10": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f70289b971d829ea1889254c0d43ef8ec9f2dea6ad214db479de9cc906551e6c",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:849178583aa15f061c14bb67467ec11bae3ce7c1f4b843df8a63db66ea3ef150",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ffd9c11bc6ffd7541027c1c8c6b41e2c678080f6b2476c1b67ee683390fd1bd7",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.10-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bac9672d116a9a7c9dfff134965cfa6cb6a343b5028be015551eef174a227d66",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e86bb1abde67c2675d9681170b4e0e1749fe8d05f06781e1b619baa15c1002b2",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:fe33c69c9f106b3f8dd8c2777750abb7832a879611f48c54d03613fd9a96285e",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.10.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cf1290b9967988655c1441b25af2426a40828fd079fccd2952607606f636b456",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a19e5883852d56587eb56a1601d14d510e4d858fd2b14fef74c5500c4d0cd0eb",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d57e32fc957b1a502301e5306a1ae845287e9949bb2f821bb7f1bd27b2d208d4",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.10.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:921e97a69eb6c91c31ff6fbb60034b89243c869845b0ae30be9cccdc6106776a",
                    "size": 2824,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ef1e9b7c959f556ebf14e107220a352ea391d7a8f04ff68fef836f1467ceb0b5",
                    "size": 2824,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5f0f4ade5d7f4514383d3de21ae032899a27d6f0ab33ca19b5f33d498781554f",
                    "size": 2824,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.10.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f70289b971d829ea1889254c0d43ef8ec9f2dea6ad214db479de9cc906551e6c",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:849178583aa15f061c14bb67467ec11bae3ce7c1f4b843df8a63db66ea3ef150",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ffd9c11bc6ffd7541027c1c8c6b41e2c678080f6b2476c1b67ee683390fd1bd7",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.10.1-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bac9672d116a9a7c9dfff134965cfa6cb6a343b5028be015551eef174a227d66",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e86bb1abde67c2675d9681170b4e0e1749fe8d05f06781e1b619baa15c1002b2",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:fe33c69c9f106b3f8dd8c2777750abb7832a879611f48c54d03613fd9a96285e",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.2.0": {
            "schemaVersion": 1,
            "name": "jwilder/nginx-proxy",
            "tag": "0.2.0",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:e36e6b228889af0ea549d7a1932f50705c9efa8be468278e13dfdb2170f4e032"
                },
                {
                    "blobSum": "sha256:3af28fda3b3f1b929dc172462914e8d3213b63ea43a8bc3e716aab14fb3fa584"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:d2f90979d9e541d3f9c093ea91b9daacb2300cd68565d92cce39ce7afd89d41d"
                },
                {
                    "blobSum": "sha256:a35b9ece05ab3653716c5e0f4e6736d2481d1712cb3587997ccb4f46552fa78d"
                },
                {
                    "blobSum": "sha256:50b3ee893af31ec630f2fa772015b56e680db47333ca1f723caacced68075490"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:b4e65e3e68bbcac1d38d30969275937f123e4924a1e7829174d870b617d87781"
                },
                {
                    "blobSum": "sha256:d8c1c49ba8d9da388878defac4a2f7ada2d1797cfc935fc0b52d05ed2fd04806"
                },
                {
                    "blobSum": "sha256:566c4a8f64fae561b9f5005163d699bf79037c939064cd341ceaf781f4704f1a"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:fe76480c154386f50ee75a2a4869992b320db813d1d62c3d5975a38079fd6654"
                },
                {
                    "blobSum": "sha256:5990b2a5d0cf3fdf7f359858ce7af2e4c89dcdbbf77aec53f58d7fac0578b01d"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:674ded4e0a754b70be8f9eabf401db21d6caaa2aba6305bcebdfbb67ea7e0424"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"architecture\":\"amd64\",\"author\":\"Jason Wilder jwilder@litl.com\",\"config\":{\"Hostname\":\"e615e9fecf7f\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"ExposedPorts\":{\"443/tcp\":{},\"80/tcp\":{}},\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"NGINX_VERSION=1.9.5-1~jessie\",\"DOCKER_GEN_VERSION=0.4.1\",\"DOCKER_HOST=unix:///tmp/docker.sock\"],\"Cmd\":[\"forego\",\"start\",\"-r\"],\"ArgsEscaped\":true,\"Image\":\"sha256:7f441bb9586c5a42a4d97dc83a00f5ef83ef77541f93e5da3fad5324f5c869b7\",\"Volumes\":{\"/etc/nginx/certs\":{},\"/var/cache/nginx\":{}},\"WorkingDir\":\"/app\",\"Entrypoint\":[\"/app/docker-entrypoint.sh\"],\"OnBuild\":[],\"Labels\":{}},\"container\":\"8386c530659f0c4a8796fea77b1bc856511656dcacaaa51148b47f0145135452\",\"container_config\":{\"Hostname\":\"e615e9fecf7f\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"ExposedPorts\":{\"443/tcp\":{},\"80/tcp\":{}},\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"NGINX_VERSION=1.9.5-1~jessie\",\"DOCKER_GEN_VERSION=0.4.1\",\"DOCKER_HOST=unix:///tmp/docker.sock\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"forego\\\" \\\"start\\\" \\\"-r\\\"]\"],\"ArgsEscaped\":true,\"Image\":\"sha256:7f441bb9586c5a42a4d97dc83a00f5ef83ef77541f93e5da3fad5324f5c869b7\",\"Volumes\":{\"/etc/nginx/certs\":{},\"/var/cache/nginx\":{}},\"WorkingDir\":\"/app\",\"Entrypoint\":[\"/app/docker-entrypoint.sh\"],\"OnBuild\":[],\"Labels\":{}},\"created\":\"2016-03-21T16:54:52.282136215Z\",\"docker_version\":\"1.10.2\",\"id\":\"f033606adf20b951b4a04aefc94bb1524cb3315bef46ef8500b2e9b36d8af097\",\"os\":\"linux\",\"parent\":\"ad8e117225ddfc4cb6ab761c8ca32f707d6393a44538b199aa5bad3b2afd58a5\",\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"ad8e117225ddfc4cb6ab761c8ca32f707d6393a44538b199aa5bad3b2afd58a5\",\"parent\":\"df89aeffb103ff07526dc8de5dc7fa9412d568f917a9cbde3a26f48921025b55\",\"created\":\"2016-03-21T16:54:52.164918448Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENTRYPOINT \\u0026{[\\\"/app/docker-entrypoint.sh\\\"]}\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"df89aeffb103ff07526dc8de5dc7fa9412d568f917a9cbde3a26f48921025b55\",\"parent\":\"b163336949465c01fb29461522eb9b22192a87fa7f546b50495c76df62bb0e63\",\"created\":\"2016-03-21T16:54:52.04861438Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) VOLUME [/etc/nginx/certs]\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"b163336949465c01fb29461522eb9b22192a87fa7f546b50495c76df62bb0e63\",\"parent\":\"2578860e5a33297e2f929bf53b27ddc65eeed3a221b0fa18d6033ea56b9b80f2\",\"created\":\"2016-03-21T16:54:51.896340736Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV DOCKER_HOST=unix:///tmp/docker.sock\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"2578860e5a33297e2f929bf53b27ddc65eeed3a221b0fa18d6033ea56b9b80f2\",\"parent\":\"501805a07887731dca3e9940649d856df30ff5516b35dd0be0cd582b1fbf649d\",\"created\":\"2016-03-21T16:54:51.785056953Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) WORKDIR /app/\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"501805a07887731dca3e9940649d856df30ff5516b35dd0be0cd582b1fbf649d\",\"parent\":\"e3e8634e7d27daf4ea91b590f9a3594142cd7dd535bb6ab2e692860eb0fcf8d6\",\"created\":\"2016-03-21T16:54:51.665145148Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) COPY dir:c8f20e38b8fd09ddd423f8463948a6b709f61b59c4a7fae79bfb1c4f75669925 in /app/\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e3e8634e7d27daf4ea91b590f9a3594142cd7dd535bb6ab2e692860eb0fcf8d6\",\"parent\":\"e1a52c03d088f6d3655208fa87958532a9d5dec9e7521130ee5c972392b0a67f\",\"created\":\"2016-03-21T16:54:51.430004219Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \\u0026\\u0026 tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \\u0026\\u0026 rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"e1a52c03d088f6d3655208fa87958532a9d5dec9e7521130ee5c972392b0a67f\",\"parent\":\"73a3c51768900492f6ab042fa8f71bb4af386086d094d74bd1090d171d82ed89\",\"created\":\"2016-03-21T16:54:50.299813742Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV DOCKER_GEN_VERSION=0.4.1\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"73a3c51768900492f6ab042fa8f71bb4af386086d094d74bd1090d171d82ed89\",\"parent\":\"1fb84ed71a1ecad5a294b996d0f6db616c3f4f8305f395923b049c59ed2e3cb2\",\"created\":\"2016-03-21T16:54:50.182983596Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c wget -P /usr/local/bin https://godist.herokuapp.com/projects/ddollar/forego/releases/current/linux-amd64/forego  \\u0026\\u0026 chmod u+x /usr/local/bin/forego\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"1fb84ed71a1ecad5a294b996d0f6db616c3f4f8305f395923b049c59ed2e3cb2\",\"parent\":\"49970788a7f1d3f7bedd46e6e59b36d6f64b73cc2d8ac6f75b39fb38807ca7e0\",\"created\":\"2016-03-21T16:54:48.580739672Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c echo \\\"daemon off;\\\" \\u003e\\u003e /etc/nginx/nginx.conf  \\u0026\\u0026 sed -i 's/^http {/\\u0026\\\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"49970788a7f1d3f7bedd46e6e59b36d6f64b73cc2d8ac6f75b39fb38807ca7e0\",\"parent\":\"375d8e304b7e08c74306cc1c466a850909610bbce4c739770eeef65cfebd0f68\",\"created\":\"2016-03-21T16:54:48.077359002Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-get update  \\u0026\\u0026 apt-get install -y -q --no-install-recommends     ca-certificates     wget  \\u0026\\u0026 apt-get clean  \\u0026\\u0026 rm -r /var/lib/apt/lists/*\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"375d8e304b7e08c74306cc1c466a850909610bbce4c739770eeef65cfebd0f68\",\"parent\":\"bed48d5ed688db53ac2c66cb8b76e75be21bc7143d731b279fa7331051f618e1\",\"created\":\"2016-03-21T16:54:22.707022154Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) MAINTAINER Jason Wilder jwilder@litl.com\"]},\"throwaway\":true}"
                },
                {
                    "v1Compatibility": "{\"id\":\"bed48d5ed688db53ac2c66cb8b76e75be21bc7143d731b279fa7331051f618e1\",\"parent\":\"851e2266a0111c190ad5e01aeb9a15027c1a1aaf0b47ca847e8b70bfcd641e7a\",\"created\":\"2015-10-23T19:52:29.506798894Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) CMD [\\\"nginx\\\" \\\"-g\\\" \\\"daemon off;\\\"]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"851e2266a0111c190ad5e01aeb9a15027c1a1aaf0b47ca847e8b70bfcd641e7a\",\"parent\":\"727c73bd8ca7b96dd577f744151510905f9125019d43888656f770ac5d79eda7\",\"created\":\"2015-10-23T19:52:29.046339144Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) EXPOSE 443/tcp 80/tcp\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"727c73bd8ca7b96dd577f744151510905f9125019d43888656f770ac5d79eda7\",\"parent\":\"70baf53cd4438ba0d90dde10ce5655687209175fe78d3f828b282dbb74e12b4d\",\"created\":\"2015-10-23T19:52:28.586401375Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) VOLUME [/var/cache/nginx]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"70baf53cd4438ba0d90dde10ce5655687209175fe78d3f828b282dbb74e12b4d\",\"parent\":\"42305f7a916008b95a6dcd5d1bee73320b46a910240e50728110ede98e49218c\",\"created\":\"2015-10-23T19:52:28.135234816Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c ln -sf /dev/stderr /var/log/nginx/error.log\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"42305f7a916008b95a6dcd5d1bee73320b46a910240e50728110ede98e49218c\",\"parent\":\"192bae1f1d627f27c7e3239c3cb97fef7aef07d461ba17ae95714f123990320c\",\"created\":\"2015-10-23T19:52:26.519322429Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"192bae1f1d627f27c7e3239c3cb97fef7aef07d461ba17ae95714f123990320c\",\"parent\":\"a3429fefda58652505ad12a7524fe971b495564edc743eb5ae81032b2b19d701\",\"created\":\"2015-10-23T19:52:24.791306439Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-get update \\u0026\\u0026     apt-get install -y ca-certificates nginx=${NGINX_VERSION} \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"a3429fefda58652505ad12a7524fe971b495564edc743eb5ae81032b2b19d701\",\"parent\":\"9d50c31fdb12286be4d638820b624bac466b136c17502e5c5d759c64cb70e687\",\"created\":\"2015-10-23T19:51:43.058204963Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ENV NGINX_VERSION=1.9.5-1~jessie\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"9d50c31fdb12286be4d638820b624bac466b136c17502e5c5d759c64cb70e687\",\"parent\":\"c4d62752cc7c0a1aa64d70914babdf28407560aa28a35d72d0a9f0fd3ae71bac\",\"created\":\"2015-10-23T19:51:42.599173608Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c echo \\\"deb http://nginx.org/packages/mainline/debian/ jessie nginx\\\" \\u003e\\u003e /etc/apt/sources.list\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"c4d62752cc7c0a1aa64d70914babdf28407560aa28a35d72d0a9f0fd3ae71bac\",\"parent\":\"616e9de3bfa040633192fc2596c65511bf98023ddc08aca28091b1f6ed3c26a0\",\"created\":\"2015-10-23T19:51:40.999148481Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"616e9de3bfa040633192fc2596c65511bf98023ddc08aca28091b1f6ed3c26a0\",\"parent\":\"f11c3947d07f346aa38505089516f07f1bd78accf6688dc29779825b0000149c\",\"created\":\"2015-10-23T19:51:30.138108014Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) MAINTAINER NGINX Docker Maintainers \\\"docker-maint@nginx.com\\\"\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"f11c3947d07f346aa38505089516f07f1bd78accf6688dc29779825b0000149c\",\"parent\":\"8f60d6e8d04055595f4009c8c4d5c78d26767b0119d27b2a09f2af648943764a\",\"created\":\"2015-10-22T21:53:15.490192221Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) CMD [\\\"/bin/bash\\\"]\"]}}"
                },
                {
                    "v1Compatibility": "{\"id\":\"8f60d6e8d04055595f4009c8c4d5c78d26767b0119d27b2a09f2af648943764a\",\"created\":\"2015-10-22T21:53:12.486410304Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop) ADD file:5f0fca122586fe4ea79c5f22acef96c38632a6ce28da26dcc10aac32767cfeff in /\"]}}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "CD5O:CGIA:LJ5P:W2LX:W2Y2:MTNI:ONJX:5VVB:OVG4:ADIC:YRJG:R2XP",
                            "kty": "EC",
                            "x": "GhRAlcQcU2xCcEbXpvh6VRPtnaOTJ50LzbKkUUEmHyU",
                            "y": "1Ycp22MbvUH6SDuW9wTXwnT9aTN1uF2JNWZmQCHEkAc"
                        },
                        "alg": "ES256"
                    },
                    "signature": "dhTUEILKLO52DC0jKVtRL8gNBmQv_SvBBPZIv7FIh1gUHsaNNWW3nFngvk8RTGU0_-k0-0tqleetyI792XjvTw",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjEzNjc4LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMTI6NDA6NDRaIn0"
                }
            ]
        },
        "0.3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7288,
                "digest": "sha256:b7897fa631323775fdb7fa9b0395a3b5a0cf0d701836e1fc49b90380ec681fc2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51367715,
                    "digest": "sha256:fdd5d7827f33ef075f45262a0f74ac96ec8a5e687faeb40135319764963dcb42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23514348,
                    "digest": "sha256:716f7a5f3082a52923e6b276061d3d52a14c781e0c276dee79879ca3a186f6a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196,
                    "digest": "sha256:7b10f03a030928818d8b6639c189f9c270dfe8226af57868477633883c8b883f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15289143,
                    "digest": "sha256:c2465c80f705e43dad9e876a817835e12e24affaffbe165d0c2f21a963435ea4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 518,
                    "digest": "sha256:2bfd72e4f001f15fc244c79c35dd530d1cc0e57f12768a95c75fc3f80570306a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894406,
                    "digest": "sha256:96ba45d925c2a5afd3627c2e36752624c1546847e5d82e29240f6625f9e197df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894406,
                    "digest": "sha256:c63b9be2c1b6e839b082c5fd4b61922e4ffc893a064fd16782ccf2befe2e57f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2911294,
                    "digest": "sha256:d025fdfbb8cbb5bcc009c23eac3a279ab99c056b9cd5d385f071b92310ffc97e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4166,
                    "digest": "sha256:8ac8ea96631c3968f8c5c7ce53070410d6c5cca74b94c2fe6e57c89d0d668dee"
                }
            ]
        },
        "0.4.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7291,
                "digest": "sha256:f639e756be75c17cf43b5e92ea2ee9c314735ee4f4e20fd8f4c6ee485cbe41a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51367715,
                    "digest": "sha256:fdd5d7827f33ef075f45262a0f74ac96ec8a5e687faeb40135319764963dcb42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23514348,
                    "digest": "sha256:716f7a5f3082a52923e6b276061d3d52a14c781e0c276dee79879ca3a186f6a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196,
                    "digest": "sha256:7b10f03a030928818d8b6639c189f9c270dfe8226af57868477633883c8b883f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15289142,
                    "digest": "sha256:472bbb1eaedec1f6b79e27b4599052d6dd92ae79c1aa3912fcb372da8097ad31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 519,
                    "digest": "sha256:f93b81c47ec21f16f88b85ebf28264ee638c5aca67a8d5a6234f98c453f97678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894406,
                    "digest": "sha256:d6abd60eb375a1fe765989cca19542fc6ce6527a23ceda263265cf90866ef475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894399,
                    "digest": "sha256:1d7ce233a4461d07b1dc51e61710e83baf1a1b5c03fd45761ba7288918cb1ba3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3230374,
                    "digest": "sha256:71f257418a1dd4c3b3fccbfb1f310fef5f692b537ad9aec3a4662f85019f0d0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4384,
                    "digest": "sha256:13e1358d3e95ba080a19ace2a44c47aa3bdea9eedfb1e180e5b06f12dd76a7a8"
                }
            ]
        },
        "0.5.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7137,
                "digest": "sha256:72b65b5a6f38395f4702e34f232280034bf0e33e443f265c94298bd0e14fc15b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51365611,
                    "digest": "sha256:357ea8c3d80bc25792e010facfc98aee5972ebc47e290eb0d5aea3671a901cab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20047416,
                    "digest": "sha256:0fc04568277e2ac7eeab8071421127677b1d912bec0ff7319cbfab5925c65179"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:0bed9719ddcb355fb9220423d3dd9cd6c41d8e0be5f44580e3929da574db4530"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13898756,
                    "digest": "sha256:1f6e9329b0a5050e128471c3f3503200c9fe8f4be157f394fe06e390aabf197b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 519,
                    "digest": "sha256:ea18c171a116ac20e2352b687b3d308e9f3c65323bb39edc80edd8ce4486f3e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861643,
                    "digest": "sha256:dab84cc25e0ed580ebdba5f68074a6dba67fbe1d0c0f6adfddedd8bb24a0d84b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861645,
                    "digest": "sha256:f7890c6d58460790d246e5d7a9be948b46e4a08029e454cf3e627e4e51c2caa3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3199297,
                    "digest": "sha256:80f5cef60af212374dfbe280afd5f7e13398727b2f3a40913a06fe2fcd9f7d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4657,
                    "digest": "sha256:bc27d3b690d022dd9f1b441247644504e5bf44092d3704095e07d5711330a256"
                }
            ]
        },
        "0.6.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7147,
                "digest": "sha256:84f341397026d29febe92953cd588cb2b1a8593c9c94c4ea480b77c063b49361"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51363374,
                    "digest": "sha256:693502eb7dfbc6b94964ae66ebc72d3e32facd981c72995b09794f1e87bac184"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20241978,
                    "digest": "sha256:6decb850d2bc195e977880bcec1d4466ceb6ca0c48d1fa7a2efc7dd43595a44f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:c3e19f087ed6e9f950779e85e7ee0198b25eb8063a98df13ad2a951f83ccdc3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13899490,
                    "digest": "sha256:5a54502a230e8f9aadb3a0360962ca3260b6ca06dc660b64ed9e5f82f3ac5590"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 518,
                    "digest": "sha256:c9d083a66d1e69c20a0fc08c59cd0a5bfaad992464682e1df76a23b858a4ec92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861646,
                    "digest": "sha256:762631f99fff5617c0e0ca83b5adab7b385f6cdc6794c2bed00cd2e481794932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861649,
                    "digest": "sha256:d87303187581feccef3e165a6098dc06319d4beb06cd22734a9c65e32611e5aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3199296,
                    "digest": "sha256:adb541f7164aeebddab1e0723023479fe599a65977319d0ce2ae52b4a9e8e255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5018,
                    "digest": "sha256:3680c6f433af4dde404e259aa7a37c764c8765da02ce8b6900fb2cba52506b82"
                }
            ]
        },
        "0.7.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9136,
                "digest": "sha256:f445b41383aed46decc80725865b14aa8727286f959aa3342ed5753802252155"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22488979,
                    "digest": "sha256:2a72cbf407d67c7a7a76dd48e432091678e297140dce050ad5eccad918a9f8d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22026272,
                    "digest": "sha256:fefa2faca81fe5f2d465e38741227d44d07c0fedcaf5e92ced037f07afd291ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 204,
                    "digest": "sha256:080aeede8114545b32a15a1cac9b13fa4b9754104916f72ce43ccd1f8d271744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3468592,
                    "digest": "sha256:e2c67c3a545a46163ad0b65a09894fa8ceaf5ae412bcb7342819916aaa2bbf5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499,
                    "digest": "sha256:34852b2fb8a69ad7c8a2c7e95a398895ce7ef306f6e73ab233d3502b717ef4d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894418,
                    "digest": "sha256:4dd315bae5ca6e57adb280af20bb2086edf662e2e9ea636ac91b02788e79d4cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894418,
                    "digest": "sha256:9df36dee1e2187f1c6151d25e98df80ac6c1437f87f69e8c6121e2f663c485d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3472430,
                    "digest": "sha256:3f50631d517c8ac776f10073c2ae26c76647f8a2cdc39c7ea65c0616c844a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 246,
                    "digest": "sha256:ca0303f829e5d67e2ab88e9671f5bdf68e1eb3d15a328b10de2d4a9dcc38c118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7212,
                    "digest": "sha256:6eccd7b838968409aeca91388c6a3e4dd551a9618f36cd16f5e65c82444f2ba4"
                }
            ]
        },
        "0.8.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10532,
                "digest": "sha256:003e2900151dde69c78d3269cda26b557d44000b7028cc595ccc8f63e49028ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27092228,
                    "digest": "sha256:bb79b6b2107fea8e8a47133a660b78e3a546998fcf0427be39ac9a0af4a97e90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26488807,
                    "digest": "sha256:111447d5894da488d2d91594e67826d7738ee459767206b4f75861b83be63fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 602,
                    "digest": "sha256:a95689b8e6cb7d1e2dcc592eab3d0f974e83c587b9db03fede30a0e3960af4d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 899,
                    "digest": "sha256:1a0022e444c217ae1ead80b9fb67bfded2d5c9d856e01630394df4fedef13e9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 668,
                    "digest": "sha256:32b7488a383359e1b358b4d07f9a067486bcaf60af35d15a85a1e4cf1552c592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 772181,
                    "digest": "sha256:0f50132b5be138ed0232ba6a5e9f0ff59138bcacfdf30259d7d42e89bc0b623b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 506,
                    "digest": "sha256:ad92c2b033c6beb0211d293dd0e9453beaebf024a1915a33c3963664747305b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894427,
                    "digest": "sha256:15b57a8bb69fcfe8c85143bb2eee154aa7788a038fc7e06a09e1c0bae54b094a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894426,
                    "digest": "sha256:c8bcf7b61856c63da1776622af493ee31c61425a5d7846cc3448432c00494d9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3472439,
                    "digest": "sha256:dcc4fc5fa5ac36d59919b7fab5ead40671010e7107243c11370dd059763e4a97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251,
                    "digest": "sha256:0c5d0908dd686c5baa2190cf4cc44008eacd2078681b96a09078a09ff8957007"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8128,
                    "digest": "sha256:c8a69c8547e0b53333bbf7b025f3174587bfb28fd82335729d82852d08ca2a30"
                }
            ]
        },
        "0.9": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6c1843e6175bcf53b8763e0557b5752191e848c437d579c8e9f5d7271d0b645a",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c82751d85437c67de2a8aa6e8de29124a96eadf1f973ff8192f99e18267ed689",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e737586175869a10b405e0f465bd4e00c677238dc7c920b1825d96519ab2a638",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0239b572f54d1a581dca83d3eff20c26f63f886d23a9fc5583295953995ac6a0",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:dc3fa8d30300434d729b52595e4bb40c357089ef03b2ea5f89e226f327c2e5f4",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:540ff274200bd953abf4182450952831160dd3b768cff706b1ffb720cdc8fa3a",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:804fc09090d7cf39f25feb0faa198c6e18388d8847a175947cf9b5806b7462a4",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b94e674c04329d467e3184707a3b8511ab39ee760bd0c05a981ed57b526864fd",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:944b835ac913ad3ddc706ea2162b1b8b92345b2c56a9cce74131c9583958d91a",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4169233bd39c8fbb29090c20fd56ee40d793c9da99938cff7082716e1e79149d",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:53fb94cabca5b62d578f8d375d5dc164471ae51e8067e9f58fea88db5567cd12",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:706a7b590ab405ec9e77e679dd6ec1db3fd428ce194e211eeb289b1d17989970",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:58eab71987ab4cb9060a23a705b6cae82608e9bd3b211bf57c960f7dd425b380",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2e935cfd7196e38750eb3dc323841b6fd84046df8d6735e550fe4956e4286b7c",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d518a41577e368e0e3a546a5a6b7497d84931dab4e39109c1f0fa38124090069",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.1-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:129c8ec4dc7fca657b84afc891004012b241749696825600010a16c25c476e7b",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7f234715f42bdf0b576c7e35a710ce371bf818dc3fd3a43f24a37d3395c932c2",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ac0b25b2f87de820e888384937632b97a0e643d1bd32367e1be23916c791e063",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:335df1d6415a3d80163b15e6aa2185b45fabaa4a55214e66ea33476f59b69067",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5f4f98c6a3ef75772f119b329309e1b253f2bf0afed3e876712eac44cbe46053",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a217c2e7884625502e377af6404435ece5e9bc442e9adce72506cb2169be3d19",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.2-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:868a13fb66570054a9445209701d4008643ee463b2e5ab6351baca20bc413b3a",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:be4d753eaedbd9fc2e26199d671426e47f26cfac6cf39b388a8d3b3de539ae11",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9d4e4468373ddc010e6bdb7247adc1e0ad64c385ae5ff2a43eb350ff76d0dff9",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.3": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6c1843e6175bcf53b8763e0557b5752191e848c437d579c8e9f5d7271d0b645a",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c82751d85437c67de2a8aa6e8de29124a96eadf1f973ff8192f99e18267ed689",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e737586175869a10b405e0f465bd4e00c677238dc7c920b1825d96519ab2a638",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "0.9.3-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:0239b572f54d1a581dca83d3eff20c26f63f886d23a9fc5583295953995ac6a0",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:dc3fa8d30300434d729b52595e4bb40c357089ef03b2ea5f89e226f327c2e5f4",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:540ff274200bd953abf4182450952831160dd3b768cff706b1ffb720cdc8fa3a",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c303b047fe8b2c20dbecd5ee9be186c6b98228cb9d76c52fde510cc92d218dfc",
                    "size": 3031,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f08da149419658f395aaac30bf04173433735191ecd9d919b4357ef677fb85c0",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7af1786d226ec83b29b41016e0b28916686fb63c91851ae6705ec612bbd1f17f",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:78ea83d2e9d40ceac84a353cd12846c6371056c72b9bacd9c3c319a8931ea4b7",
                    "size": 3242,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b0d32c4307809f074e74831c3a46dda2aaf2a6d62cdc349333de584a65ad3de4",
                    "size": 3242,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b1dced00062fe69c3a1ac12aab7a6c0a39d456a8370cf96a4dad17c146acad49",
                    "size": 3241,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:32e0a477864098588c72c217e47da7270dcf598558abd3f65353412d4ea15494",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a1511ae442f135372a9bb7dc5c7d0cf98c663f08c663199ef3fee532ca7d03aa",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:38dc0e2d14bf0a91b7c4cba2e305c07e8c715026d755710263273fc85db2a379",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c1712185b8580fb337d17747f0fc7c9d6896dda18fd924cb12021a1703f1a485",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f906349436564151c8fdddd3772534659a0953774fca24061cc5956c3528a1b1",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9e914da2919d4b5d7f1c97d393e539fd673dacd39f205b2170254566aa39c213",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d0812fc54d4882e245193b00e988b95465c4d8fa455cc5830df52c9c5ab70d11",
                    "size": 3031,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:641f06fae31c5afc62f045f795f181161c845423ea76541347ba43de5b4f97e8",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7d63fa7d518a98ae31c44dabd0bc414e31a5f45a02ceb64d7408dc802f91b072",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.1-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ad3512fb5894c380eceb13b1b732e5f73805ba18c09d3f68088d653991aab31c",
                    "size": 3030,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:247e6b8dc757712f476f85ed6ead1faa5685ffa4e05b2333faf0d04eda1c791d",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8911701292d3458db1ee0188a1396cdc653fa055f9970f50a213f3649255ab72",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5d231e14845488824866828126dab696a24dc191616617b271a68362b8203d08",
                    "size": 3031,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:59f417952f49f058fc63635863aba1ac9df43b805b5442dbe614f5cbcd3a1ac4",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:66409d190f8e250a5f4bf363f698d85f8c3a1fcc514df707d897622a40132d11",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.2-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d005b0854e4f75bdbcea3dc28248e63127278b39ffcc52648e97d61c5a35d290",
                    "size": 3030,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e7e4c8216c11a41cedd7b5f9386af43ba870fb00ea5765243daa846a39f9d38b",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ee978a64e344ea5c7d389956e6de8ba87d4f1335244c8de5b7d922e56533e198",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.3": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c0088576f7565c28f0368e888b34d2a721a65ef9a2214a5e72818ffff9906bae",
                    "size": 3031,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a91f4ac27746a2d1df2eca6c7dbed007b7a23f03066595db2f0bfe892b7e9e0a",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:8deef958a0e56bfb7cba0c73a503651d5698e0bc9cb5bab653b4a407323eb0c2",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.3-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bbb791843b323fccb1eaff64c1e807c9635ce23d70aab15bdfb13ec1bf437f7a",
                    "size": 3030,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:72edc8279211f86fe35cf627f04778f93c3095b95eb7d8a0d5f7f5d163d33686",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b392be1d06780902affb9e1e87850e603e7c4732588902d303b2b840805d9707",
                    "size": 3030,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.4": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c303b047fe8b2c20dbecd5ee9be186c6b98228cb9d76c52fde510cc92d218dfc",
                    "size": 3031,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f08da149419658f395aaac30bf04173433735191ecd9d919b4357ef677fb85c0",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7af1786d226ec83b29b41016e0b28916686fb63c91851ae6705ec612bbd1f17f",
                    "size": 3031,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.0.4-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:78ea83d2e9d40ceac84a353cd12846c6371056c72b9bacd9c3c319a8931ea4b7",
                    "size": 3242,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b0d32c4307809f074e74831c3a46dda2aaf2a6d62cdc349333de584a65ad3de4",
                    "size": 3242,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b1dced00062fe69c3a1ac12aab7a6c0a39d456a8370cf96a4dad17c146acad49",
                    "size": 3241,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5774906b52bd3d926b4708ff01c05ba0547d9e64b4eb0ca8180516052edf188c",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d5bce03382e181a6d3ac3cbcf33277f76f58b49423173ccf3dda08a2676c9d48",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ab95d4783eb29e4882266c17480e0b32c7b738a23bfba907e1f8d9d447a6785f",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.1-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:3b9085d403b9ea4223fc18c82a98cb441672ef85bfb1a6e8dfd8922cba6e4957",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b00787a07bbfef5900173e35bfdfefc2c6ff2f17812c1313684c5fa3fe0d0fed",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ddbdab10520a8239c46bbad251596a0168d442978e939d518bef3158d38ab10f",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.1.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5774906b52bd3d926b4708ff01c05ba0547d9e64b4eb0ca8180516052edf188c",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d5bce03382e181a6d3ac3cbcf33277f76f58b49423173ccf3dda08a2676c9d48",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ab95d4783eb29e4882266c17480e0b32c7b738a23bfba907e1f8d9d447a6785f",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.1.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:3b9085d403b9ea4223fc18c82a98cb441672ef85bfb1a6e8dfd8922cba6e4957",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:b00787a07bbfef5900173e35bfdfefc2c6ff2f17812c1313684c5fa3fe0d0fed",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ddbdab10520a8239c46bbad251596a0168d442978e939d518bef3158d38ab10f",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f9ffae92b034b3866f5c6cf5c36d81eca5f8fcef112fd0d300d5330f1386d0e6",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d4f0c247437be0286a00d76e46b3dadddca9e4e7d2cb2d1a79a775f062100f4b",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:99d18720f6196aa5f12261ab15bc94e9ea8b08beb4a0e8cd506430a82975a909",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5acc8a4a49da94df6a4241429de994b8b339beb93e044976151dbd505ae0eb75",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:feb1316ba3ee5b9ea77c576b7ec2f1c4e12c0e9dab43613e39b8b5fd4600b27a",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bcf3f9ece5a872216ae621c8bdda7b74983c68714ff8d96ef34894f96376bb94",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6dbf449e617901044bcef084b39d11be7447fbf541a2850ddf92d6956b9acbb7",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e159256e8d9d50771ea7f8f01a2fb94a541875c1d68c40d54da44ba577ae343f",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cf00d3e452b8c29c945efdafda8c82a4d5cd88a7777ae14d7194da454b9f8e83",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:e48ae3cb7f93425ea6caca8b7c1dc08bc8b128c58d08d454f8abb7fc039cdace",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:730c703dceeb768d87b59dfd3a821d774110d3c83db6bed621c063231c243f15",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c0117f46ea394663270ab2762d9581353fa40c3d00e971cb0ab1afa1889c42e4",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:ea864eb74413e226f8f54bc8cc9eb767537bf2413cd42549b5cb00b33fd331b9",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:4f370de02b527f48cff16d7c322b1a47b2b32d9c78f1ef92295ff45436138c23",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f03368baca36c83e42e91eaa7de93707c7d2a1fbd61ae64e47e6c5cc50d83b38",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.1-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5ca6057a4dbb0d268a0d256e29df35a572cd76f76e5c4807e695747406aefb8a",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:14dc20e7a002206be601238ca7daf8bc54a5d6a0f7354bd251452ed987c9bfea",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:379ca49c4fe1407815e8a713ace12078692ed9f2be7f715b1f2892134cf58b37",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:cb1b1c63da20875632a820d18e76f19caf85d2649cf4c02f377f5e2fc58a8e17",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:a0b5fbec00c8bb68115ad130e1bcd4951798bf7653ce4fa3aead1d15bb263378",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:6e54ef82fb69541ba9765bb35e847b2c4fa5d2a643ed774e0e6a292c1e5b3bbe",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.2-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d630f53fbaa69ebf530e8515081063338062790c8ff24431d6de8c6d6324a3af",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:69836b55e0f3778d0e11a2da251dacb0ebe93145ab4b2cb3dbacf1c9c06f7c6f",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:7bcd7eb63b5e775189f37aeabc326114ffd752b2567e56122ae1a0059fa6dc1c",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.3": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f9ffae92b034b3866f5c6cf5c36d81eca5f8fcef112fd0d300d5330f1386d0e6",
                    "size": 2850,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d4f0c247437be0286a00d76e46b3dadddca9e4e7d2cb2d1a79a775f062100f4b",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:99d18720f6196aa5f12261ab15bc94e9ea8b08beb4a0e8cd506430a82975a909",
                    "size": 2850,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.2.3-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5acc8a4a49da94df6a4241429de994b8b339beb93e044976151dbd505ae0eb75",
                    "size": 3048,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:feb1316ba3ee5b9ea77c576b7ec2f1c4e12c0e9dab43613e39b8b5fd4600b27a",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:bcf3f9ece5a872216ae621c8bdda7b74983c68714ff8d96ef34894f96376bb94",
                    "size": 3047,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.3": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7251cada0b725e158fee9285defbbf0a2dcc2396087765824c20c57140dde98c",
                    "size": 2753,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5b0b5546539446668cb1fb7608dbc3dd91f72da81e3460b8cf91d50e9730f95b",
                    "size": 2753,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2dc8e7a0374fe46abe5398fd9ff8ca1f9ad0a75dbfb806a5b1b33a326515b1be",
                    "size": 2754,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ca0a3fbbb449190877ae363cb190b861a18bee6bc73f19a79212141e9a56d61b",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:7251cada0b725e158fee9285defbbf0a2dcc2396087765824c20c57140dde98c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:65d576d72957577b0e56dadaf4c2e875172d9816133aa812a17efb8e4f6a6fdd",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:5b0b5546539446668cb1fb7608dbc3dd91f72da81e3460b8cf91d50e9730f95b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:dfc63b5252208b19a7e9f0a38329bb4eac2f3540f999d91f46a53f12535dd3a4",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:2dc8e7a0374fe46abe5398fd9ff8ca1f9ad0a75dbfb806a5b1b33a326515b1be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.3-alpine": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a31f9c2eb02f3c1a8fbdde789d2ae217f44816c205b034b748fd1a796e27555f",
                    "size": 2949,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:97a807e99fc5771ed2a7da0162ea4f8615441770d510fa6d87395efeee9904a3",
                    "size": 2949,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:34fda2fcc5b76c2548475cdbe616e91a56ee9e3a972dbefea9bffb2f35b029d9",
                    "size": 2948,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:192207ae7f1c4052f7f554e1a69975e8b954d6bccd582c6b6f27612578ef3a47",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a31f9c2eb02f3c1a8fbdde789d2ae217f44816c205b034b748fd1a796e27555f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9dc09dd3a9b8178e5709a6cbae9396b773c1a76942441fabdb39561abac115c9",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:97a807e99fc5771ed2a7da0162ea4f8615441770d510fa6d87395efeee9904a3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:25d713fc8bacde12b7cf036d66a20bfdcbf8c7e1aa0b1a014728d6ce1920284b",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:34fda2fcc5b76c2548475cdbe616e91a56ee9e3a972dbefea9bffb2f35b029d9",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.3.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:5e7962eaf02682224c39019466fe7107959f7b3698d3bc15bfdb0565519dedae",
                    "size": 2851,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:29e1a87bae3ea452ac3e9a3cd2df7d9c804a7b9492c94dc904276eff37ef3b27",
                    "size": 2851,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:d4124f868a00a9b4ee6d36c937cde247b5973ca5bf751f4417618f7216a379ec",
                    "size": 2851,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.3.0-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2b29f20a355aeeb11924215c159e426d4c064c05b42008447eaf9439a7d4f1cd",
                    "size": 3049,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c256683ba311fc3c19c399a098c4b76e25d6a6dc31dca587be04847233a662c7",
                    "size": 3049,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:28bda4350c5a34bd05fc26049d63ec711e4b986b17e953cfeb660684b409e393",
                    "size": 3048,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.3.1": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7251cada0b725e158fee9285defbbf0a2dcc2396087765824c20c57140dde98c",
                    "size": 2753,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5b0b5546539446668cb1fb7608dbc3dd91f72da81e3460b8cf91d50e9730f95b",
                    "size": 2753,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:2dc8e7a0374fe46abe5398fd9ff8ca1f9ad0a75dbfb806a5b1b33a326515b1be",
                    "size": 2754,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ca0a3fbbb449190877ae363cb190b861a18bee6bc73f19a79212141e9a56d61b",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:7251cada0b725e158fee9285defbbf0a2dcc2396087765824c20c57140dde98c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:65d576d72957577b0e56dadaf4c2e875172d9816133aa812a17efb8e4f6a6fdd",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:5b0b5546539446668cb1fb7608dbc3dd91f72da81e3460b8cf91d50e9730f95b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:dfc63b5252208b19a7e9f0a38329bb4eac2f3540f999d91f46a53f12535dd3a4",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:2dc8e7a0374fe46abe5398fd9ff8ca1f9ad0a75dbfb806a5b1b33a326515b1be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.3.1-alpine": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a31f9c2eb02f3c1a8fbdde789d2ae217f44816c205b034b748fd1a796e27555f",
                    "size": 2949,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:97a807e99fc5771ed2a7da0162ea4f8615441770d510fa6d87395efeee9904a3",
                    "size": 2949,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:34fda2fcc5b76c2548475cdbe616e91a56ee9e3a972dbefea9bffb2f35b029d9",
                    "size": 2948,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:192207ae7f1c4052f7f554e1a69975e8b954d6bccd582c6b6f27612578ef3a47",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a31f9c2eb02f3c1a8fbdde789d2ae217f44816c205b034b748fd1a796e27555f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9dc09dd3a9b8178e5709a6cbae9396b773c1a76942441fabdb39561abac115c9",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:97a807e99fc5771ed2a7da0162ea4f8615441770d510fa6d87395efeee9904a3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:25d713fc8bacde12b7cf036d66a20bfdcbf8c7e1aa0b1a014728d6ce1920284b",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:34fda2fcc5b76c2548475cdbe616e91a56ee9e3a972dbefea9bffb2f35b029d9",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e9308d39dc92c559f3b35a2e023aea621983ce2c22e6a3dbea8ac4e70814801d",
                    "size": 2942,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:404a0ed184ad2e5d3b0ccb8e1c6d984b4abf261d4881d7afe54ff717a2c9ae54",
                    "size": 2942,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:02578077946f1ed1c0f144e05d38e7b48f71a376697e434f25640ca02b7061d5",
                    "size": 2943,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:86867d8183bd32b61dcb7800b5378362171138651cffd6eb5456b53b93630ff2",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e9308d39dc92c559f3b35a2e023aea621983ce2c22e6a3dbea8ac4e70814801d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:621dda3f098af48852ef41d92ee0e03e42d19fbd02930c45c517c59be4e0cbd1",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:404a0ed184ad2e5d3b0ccb8e1c6d984b4abf261d4881d7afe54ff717a2c9ae54",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1529d23a12a8be0abe76133ab1082f40fe5aa8cb64ed7aa893af3835754ba878",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:02578077946f1ed1c0f144e05d38e7b48f71a376697e434f25640ca02b7061d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e170b4a0b987f4588d5f308c45d138b5acca6511f78bf9830d29ab574aee8451",
                    "size": 3138,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0cae8c3fc7fb0b795197fd8fc5582446d531106f4d9ab00f88f1c4bfaac85532",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a433ec6e59244dfdb4d32e5a225a35f481f125f47f5cbbdaa4807763a1c376fe",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bd4203aee2d01dad0929e663c571d08f857732d26be9a9448d4f53467c4b387e",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e170b4a0b987f4588d5f308c45d138b5acca6511f78bf9830d29ab574aee8451",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b236720aabc37a7e1cdb0f8434efc82a1e5a9d38814c34625b996febb7ddb30c",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0cae8c3fc7fb0b795197fd8fc5582446d531106f4d9ab00f88f1c4bfaac85532",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:fb94cadefa03eae96e74844c0f0ecb48ebb21a43c7b087e534149ad6a9e790cf",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a433ec6e59244dfdb4d32e5a225a35f481f125f47f5cbbdaa4807763a1c376fe",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.4.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e9308d39dc92c559f3b35a2e023aea621983ce2c22e6a3dbea8ac4e70814801d",
                    "size": 2942,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:404a0ed184ad2e5d3b0ccb8e1c6d984b4abf261d4881d7afe54ff717a2c9ae54",
                    "size": 2942,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:02578077946f1ed1c0f144e05d38e7b48f71a376697e434f25640ca02b7061d5",
                    "size": 2943,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:86867d8183bd32b61dcb7800b5378362171138651cffd6eb5456b53b93630ff2",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e9308d39dc92c559f3b35a2e023aea621983ce2c22e6a3dbea8ac4e70814801d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:621dda3f098af48852ef41d92ee0e03e42d19fbd02930c45c517c59be4e0cbd1",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:404a0ed184ad2e5d3b0ccb8e1c6d984b4abf261d4881d7afe54ff717a2c9ae54",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1529d23a12a8be0abe76133ab1082f40fe5aa8cb64ed7aa893af3835754ba878",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:02578077946f1ed1c0f144e05d38e7b48f71a376697e434f25640ca02b7061d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.4.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e170b4a0b987f4588d5f308c45d138b5acca6511f78bf9830d29ab574aee8451",
                    "size": 3138,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0cae8c3fc7fb0b795197fd8fc5582446d531106f4d9ab00f88f1c4bfaac85532",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a433ec6e59244dfdb4d32e5a225a35f481f125f47f5cbbdaa4807763a1c376fe",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bd4203aee2d01dad0929e663c571d08f857732d26be9a9448d4f53467c4b387e",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:e170b4a0b987f4588d5f308c45d138b5acca6511f78bf9830d29ab574aee8451",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b236720aabc37a7e1cdb0f8434efc82a1e5a9d38814c34625b996febb7ddb30c",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:0cae8c3fc7fb0b795197fd8fc5582446d531106f4d9ab00f88f1c4bfaac85532",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:fb94cadefa03eae96e74844c0f0ecb48ebb21a43c7b087e534149ad6a9e790cf",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a433ec6e59244dfdb4d32e5a225a35f481f125f47f5cbbdaa4807763a1c376fe",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d95abb6baac49e6e21b16f4b673f6fddc47ed8b24196352f99cdbf4820e5eff1",
                    "size": 2755,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1d1a1710119d84bf8fbe1a2a19bb913ab25bfef64f9d2b87c389d1b2032d5f18",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:fca017cec070654fb75ed291ac14b5ce3b12ddac2ad341b49d7ebb5956d3bfd3",
                    "size": 2755,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ea94a736adfcae46e4a8799dc310390b1a5423c0976491175becca06696e78e6",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ab62120d0814e2482de02fed6bcf140e3528f755d9f0973f31c93da553357a55",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:d95abb6baac49e6e21b16f4b673f6fddc47ed8b24196352f99cdbf4820e5eff1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5d598d7ce448cbb1a9a9b84ef934c52a9746551090d793a0c4bce73f7104aeea",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:1d1a1710119d84bf8fbe1a2a19bb913ab25bfef64f9d2b87c389d1b2032d5f18",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:60e9ef5aab622b38dc05bfcc3294d4195d64595387ca242db20ca735db2d6c5e",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:fca017cec070654fb75ed291ac14b5ce3b12ddac2ad341b49d7ebb5956d3bfd3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1f13e018e02c3ebb1f0257f7a838909fe7c90b9f684cef242fbe309384d7d14f",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ea94a736adfcae46e4a8799dc310390b1a5423c0976491175becca06696e78e6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c993c7883ad6dd6b68f6e726ae3ff10340608d28e110e9820fc7c77e9061b2db",
                    "size": 3137,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:32ce9b827d552aaf662897757e0d9d60721129e44b412d0f290a90de92ac81e1",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b77adb60b29f4cb65661b239d0316a4da3c815100e15f8a6cb101dcf0a9314ed",
                    "size": 3138,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:770252500ea1643419c72e033f44e2c5abe8795b2bfd91ed85b524a418900ebc",
                    "size": 3137,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4040c6be82363fda79cddb96700f1428b5eeb0e87eab942de4f644b2ad3615e0",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c993c7883ad6dd6b68f6e726ae3ff10340608d28e110e9820fc7c77e9061b2db",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:42b8ace3915631a0bacfb7215afbe15ac04d0da760d61ea08fe250a3b5871f7c",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:32ce9b827d552aaf662897757e0d9d60721129e44b412d0f290a90de92ac81e1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cca96f17bbe9a166f798de389baa5e434ec0606d7da7b83b70ebaaf4127871f2",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b77adb60b29f4cb65661b239d0316a4da3c815100e15f8a6cb101dcf0a9314ed",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3776dea267706332f60f0ae9765d1eebce64bc16700a3e4582d4269443b51358",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:770252500ea1643419c72e033f44e2c5abe8795b2bfd91ed85b524a418900ebc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:abcde24ea56b3ee80f9cfbd92b7a5c24cbf69142012aebaccbda1faaaeedca98",
                    "size": 2755,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c3ed1de61d0527eff2354d60e926e74cb9ce0655ff5ad9060d79e18dfc964696",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:dce53c81f029e8e1083231c3e05d100ab3abf92ee384e5a6edc5fe183b31e7d9",
                    "size": 2755,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:def8afdcbd29cf470d5ea7024405c5a1753bc93f477487136e00a167673bd60a",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:54842973c5f900df2d1b48b5138208cd9e46785b3e6af45d2421f6db6ecdbad8",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:abcde24ea56b3ee80f9cfbd92b7a5c24cbf69142012aebaccbda1faaaeedca98",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:f9cec783aa198e9638bb3905e6bfeb11dceb6d7aec69fa132744498fda3f8db7",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c3ed1de61d0527eff2354d60e926e74cb9ce0655ff5ad9060d79e18dfc964696",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:07fe8d646c34f7814f84933945d0f7b6eb5e7cda2871d94b152128c9d1f919ae",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:dce53c81f029e8e1083231c3e05d100ab3abf92ee384e5a6edc5fe183b31e7d9",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cdc546b0174dceadae51d1fb5e1e9c3b41de72393de4f7162abfb97914bae269",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:def8afdcbd29cf470d5ea7024405c5a1753bc93f477487136e00a167673bd60a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a81976e29ac199b23a4332fcc44e333933fee3cb333bcae8c4cb25a479203655",
                    "size": 3137,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:077d6837e1b8569bca348b06f582894c3ab63aecd08569b492c7af6a0fc41cac",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9f5ec8fea2330b1a52b62cb7db7f4d85befab36dd85adfce1ce32534695befff",
                    "size": 3138,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:bdb37b4f6550e32d86d893a676e9cda0d45b8360f46d24aef048645260be7864",
                    "size": 3137,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3df552f8df79fa512a2c777cf5a80d139f3fa3cc8f86d2480abc647108b1af07",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a81976e29ac199b23a4332fcc44e333933fee3cb333bcae8c4cb25a479203655",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:41ad530ac1a0389679c58b8d8973972894f4993c4cfa032f99f27de637f761bf",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:077d6837e1b8569bca348b06f582894c3ab63aecd08569b492c7af6a0fc41cac",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d6ff5ed146b4b7797cf81108dcfcfbc36642cdc51869f994b4ddeb60eca3fa85",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:9f5ec8fea2330b1a52b62cb7db7f4d85befab36dd85adfce1ce32534695befff",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0eca77a861202a9a9bd2aa9183e95bb77548072fe821eab4a153dda133dc7608",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:bdb37b4f6550e32d86d893a676e9cda0d45b8360f46d24aef048645260be7864",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4a0e766b7a5d7a6054193315842c9a0d840a67c56543490ee11516b3ff577f94",
                    "size": 2755,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a64dcf2daf1097c365600c0ba418fc45b14fdd6538252f05266397a3553723b1",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:a402ebc949b9c505dd9d1b261c43ffd80239b8da469fbb815ad150da15ba5aea",
                    "size": 2755,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:348d93d116b78f9be3f1056d03d0ae2586480becdacc55fd369921e27f6af9d3",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c827ecc33ccce116edd3e7b8721983568bf8230a2116f4554601e0cbd653682c",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:4a0e766b7a5d7a6054193315842c9a0d840a67c56543490ee11516b3ff577f94",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:55344254f3fb4c507ee1c71a26d34c213c385c699fc6b0c8e531febcb4c7ce7b",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a64dcf2daf1097c365600c0ba418fc45b14fdd6538252f05266397a3553723b1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:74a3691ef134b0a1bd56ddcfb930f4a30062f7c6061dca7fc789a7d8ebc05e4c",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:a402ebc949b9c505dd9d1b261c43ffd80239b8da469fbb815ad150da15ba5aea",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3e6264e8143cf988fce50ecaec464d2a447f4a2402cd614ca97917d93cbc6d5b",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:348d93d116b78f9be3f1056d03d0ae2586480becdacc55fd369921e27f6af9d3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:7073274cf017c3bc0e952c799d89e19adb39e688c41624f721c85f3c9be77633",
                    "size": 3137,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ea704f33b0ba57236c0195902441156165e5aafe66406a7a2b9b92aa60742b59",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3658f960ff11fcf184bf68a119341f3922a208dc0cc2ff810b8e3d879b55d5f8",
                    "size": 3138,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b194030ce75ec2c8f2e9007425d7a7a5769ff8e3030cb468171c5ce235fef545",
                    "size": 3137,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c286d84d3a991ba944491bf7647381eabad40259c3cc11f764d4a3136d37b3d5",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:7073274cf017c3bc0e952c799d89e19adb39e688c41624f721c85f3c9be77633",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4949af1752f839cdcc6573637e92fc9fa5a18cbac30a1bd092b6e7e092a63ae5",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ea704f33b0ba57236c0195902441156165e5aafe66406a7a2b9b92aa60742b59",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1bab8b94d9277eb14b882c7b5a50e97f5e6459cec7f4ce7f15ed414cc47c5000",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:3658f960ff11fcf184bf68a119341f3922a208dc0cc2ff810b8e3d879b55d5f8",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:94fc7f966b0bb0fd84263a29b61ac1c65587f6fecc984afa871490e18f2bf6b5",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b194030ce75ec2c8f2e9007425d7a7a5769ff8e3030cb468171c5ce235fef545",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d95abb6baac49e6e21b16f4b673f6fddc47ed8b24196352f99cdbf4820e5eff1",
                    "size": 2755,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1d1a1710119d84bf8fbe1a2a19bb913ab25bfef64f9d2b87c389d1b2032d5f18",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:fca017cec070654fb75ed291ac14b5ce3b12ddac2ad341b49d7ebb5956d3bfd3",
                    "size": 2755,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ea94a736adfcae46e4a8799dc310390b1a5423c0976491175becca06696e78e6",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ab62120d0814e2482de02fed6bcf140e3528f755d9f0973f31c93da553357a55",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:d95abb6baac49e6e21b16f4b673f6fddc47ed8b24196352f99cdbf4820e5eff1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5d598d7ce448cbb1a9a9b84ef934c52a9746551090d793a0c4bce73f7104aeea",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:1d1a1710119d84bf8fbe1a2a19bb913ab25bfef64f9d2b87c389d1b2032d5f18",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:60e9ef5aab622b38dc05bfcc3294d4195d64595387ca242db20ca735db2d6c5e",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:fca017cec070654fb75ed291ac14b5ce3b12ddac2ad341b49d7ebb5956d3bfd3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1f13e018e02c3ebb1f0257f7a838909fe7c90b9f684cef242fbe309384d7d14f",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:ea94a736adfcae46e4a8799dc310390b1a5423c0976491175becca06696e78e6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "1.5.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c993c7883ad6dd6b68f6e726ae3ff10340608d28e110e9820fc7c77e9061b2db",
                    "size": 3137,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:32ce9b827d552aaf662897757e0d9d60721129e44b412d0f290a90de92ac81e1",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b77adb60b29f4cb65661b239d0316a4da3c815100e15f8a6cb101dcf0a9314ed",
                    "size": 3138,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:770252500ea1643419c72e033f44e2c5abe8795b2bfd91ed85b524a418900ebc",
                    "size": 3137,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4040c6be82363fda79cddb96700f1428b5eeb0e87eab942de4f644b2ad3615e0",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:c993c7883ad6dd6b68f6e726ae3ff10340608d28e110e9820fc7c77e9061b2db",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:42b8ace3915631a0bacfb7215afbe15ac04d0da760d61ea08fe250a3b5871f7c",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:32ce9b827d552aaf662897757e0d9d60721129e44b412d0f290a90de92ac81e1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cca96f17bbe9a166f798de389baa5e434ec0606d7da7b83b70ebaaf4127871f2",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:b77adb60b29f4cb65661b239d0316a4da3c815100e15f8a6cb101dcf0a9314ed",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3776dea267706332f60f0ae9765d1eebce64bc16700a3e4582d4269443b51358",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:770252500ea1643419c72e033f44e2c5abe8795b2bfd91ed85b524a418900ebc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6e159c7c9a6220015915b9ce86cd94691ecd294d2f649d1c148fe328aca7669a",
                    "size": 3138,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:32405d144d032b40282d21d570eeeed937b1019b304b4e039aabe7d3c38bfe48",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:3d43d421785cc970f65c570a4526b49567eba4b72902eff06357923772ae5b91",
                    "size": 3138,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:72cfa0f8fdc1f0521fa4e9351e23b7f22dacb39af66a9f0804a1ac203f07b191",
                    "size": 3138,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6beef30081ee745e71ea09d47c246531e007a2838a5fc4ed77bf67a0dc2d3b00",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:6e159c7c9a6220015915b9ce86cd94691ecd294d2f649d1c148fe328aca7669a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:73be27ff657e5f61351fe511d5bcee6c30cf9344e6d00829a19a89b4fbe2acd0",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:32405d144d032b40282d21d570eeeed937b1019b304b4e039aabe7d3c38bfe48",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:12023f3729f5a4c0943edcba0bd6c388d6c937cffa8a514ddccc801f875f7638",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:3d43d421785cc970f65c570a4526b49567eba4b72902eff06357923772ae5b91",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1343519334127c34cf69735d8acf17042a8343143b3c4e0bebc7c0e04a493453",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:72cfa0f8fdc1f0521fa4e9351e23b7f22dacb39af66a9f0804a1ac203f07b191",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "alpine-0.6.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11717,
                "digest": "sha256:104a2bb912738689b19a9b2a03529e7255a64b092e3fe4f02fa9336195a4e105"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313384,
                    "digest": "sha256:7095154754192bfc2306f3b2b841ef82771b7ad39526537234adb1e74ae81a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14474414,
                    "digest": "sha256:5142c3ee45c620f7d95a181f73b84080d826e8886e4844e63d9c3493cae2fb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 490,
                    "digest": "sha256:6393d8407bbeeb06995315ab1b6f6b14ebacf70c3ecf8a52b78f0fe7222d0e5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 628,
                    "digest": "sha256:0816ea01673a6b3a5835aff09849b80b9cf77a53d2b6b5e9afca47c7397d5caa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1688053,
                    "digest": "sha256:bc6427f01b56b8dbd61cbbfa98009c5944073784e2548ef7fc5d1664cc78db51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 518,
                    "digest": "sha256:555648fbd087abe00facc16d6ed31dc7e63c85873d22e3afd1d57bf575824266"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861643,
                    "digest": "sha256:e56e53e7a3f2350f25895bc9ad4ee1774b34464bee3f88ecd138b8e2ecfb6173"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2861648,
                    "digest": "sha256:310655c3aa0a3740f659ea5d4a95c97856e23c72cf2ef6e126f45de32e9a8553"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3199500,
                    "digest": "sha256:c48018080e66462ae4798ea5c7cdb9898e4c489d8a479e259e10553fc828e212"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5023,
                    "digest": "sha256:09c1b0cba099dc8196ac9f8e5b2b188ae3f3c06ed48c916e8ab116656824cba0"
                }
            ]
        },
        "alpine-0.7.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11239,
                "digest": "sha256:0106e42bc855c859aa697f8941e2058a2d523aa1a0937def1948a01402611221"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065537,
                    "digest": "sha256:ff3a5c916c92643ff77519ffa742d3ec61b7f591b6b7504599d95a4a41134e28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5820659,
                    "digest": "sha256:e42d0afb8d8c6eb68b86b126983625d6cc60b7cc11d60b52508abd1b03940094"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 493,
                    "digest": "sha256:27afbd0eb904eed9f0759a8fd71c86e53cfe220b12ec2bd9c9f5d690f7b067ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 630,
                    "digest": "sha256:5a306d33279c6796d2f7ebac4c5fe0dcd264afcf44d192dbfc65a1d976839520"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2048380,
                    "digest": "sha256:9650b3606f045334678b2ec0105637294b05429d2a9d19239fad780933c6c7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497,
                    "digest": "sha256:8c8003f8e03b40de0ccda82bddd88784cdeb02d3398712b6c47cad185f3cda3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894407,
                    "digest": "sha256:cac2cec66379d163ba283d5e0c9c02481d478dae3d39df8444f672b215b159b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2894413,
                    "digest": "sha256:e4a01d5b3be44d0117496eed0cea78bc1b4783aa13ceb8e676dd854d9b995dbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3472435,
                    "digest": "sha256:8eca912ddb77abe448770564515928810cf2c22a5b1c30cb915a6e0d6c0fd8d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7214,
                    "digest": "sha256:a80f7ef069e11ccb3e432ceffae6f272c179604e6f4a32e67a207a0ed9c957da"
                }
            ]
        },
        "dev": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:467902037ee9734c18056043e3360986d5df0a0da836d541c648d948a843619b",
                    "size": 2826,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:901b46a53a44f2cb946a8ed2efdffec20deeaf6a7b685a2b117b0ea17f57cfec",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:2d23d63a9aad37726dd785393df1637db99baac040c7cd1bb73cc9d447d7e72a",
                    "size": 2826,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "dev-alpine": {
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:3aecb869916b53f95b17a024ce435d936d030d70ed714c78c31198f59a5cd697",
                    "size": 2825,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:73d01030cc4798cb7adcd700de1daebb49634110ffc12d5f80560ae89574bb91",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c6535637165770ee3037fdaf45e31a9aee1b5a21fd5ee6e1efa031b6af11e1ef",
                    "size": 2825,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:befb64fba32bfe66d3f552fa28500e1bcfa4a5b12d13c5982e6cc02511ddfb49",
                    "size": 2755,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:cb10793b09ffd1d5793554d9e9257812b8b33ea9773b72aed6dab0e769b26336",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5ce665a3195273d814683faea0efbf012a493c2807ce59c07c403a22011231be",
                    "size": 2755,
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:60b6264769e8241afbc3af8093bf3581e3e47078ae6c8e96e6a101efdae24e08",
                    "size": 2755,
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:37ec2c94ef939df5a1c4998e4ed9b2b8493dfc903e59f7ec64a3e50bea1e9ac2",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:befb64fba32bfe66d3f552fa28500e1bcfa4a5b12d13c5982e6cc02511ddfb49",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e5f840fb57e20258e25b35b2dd3608dfdf8d9b89e3a2c2ce969d55e6ca48572f",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:cb10793b09ffd1d5793554d9e9257812b8b33ea9773b72aed6dab0e769b26336",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1f63459f90443b54b787210233e9777a32e449c946f71e5aba120d9b9c6a5cfd",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:5ce665a3195273d814683faea0efbf012a493c2807ce59c07c403a22011231be",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0dc2a142463236a410865e3c58a7d7b3d891b4ae1e18c15c123d2944d400c06a",
                    "size": 841,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:60b6264769e8241afbc3af8093bf3581e3e47078ae6c8e96e6a101efdae24e08",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        }
    },
    "tags": [
        "0.1.0",
        "0.10",
        "0.10-alpine",
        "0.10.0",
        "0.10.0-alpine",
        "0.10.1",
        "0.10.1-alpine",
        "0.2.0",
        "0.3.0",
        "0.4.0",
        "0.5.0",
        "0.6.0",
        "0.7.0",
        "0.8.0",
        "0.9",
        "0.9-alpine",
        "0.9.0",
        "0.9.0-alpine",
        "0.9.1",
        "0.9.1-alpine",
        "0.9.2",
        "0.9.2-alpine",
        "0.9.3",
        "0.9.3-alpine",
        "1.0",
        "1.0-alpine",
        "1.0.0",
        "1.0.0-alpine",
        "1.0.1",
        "1.0.1-alpine",
        "1.0.2",
        "1.0.2-alpine",
        "1.0.3",
        "1.0.3-alpine",
        "1.0.4",
        "1.0.4-alpine",
        "1.1",
        "1.1-alpine",
        "1.1.0",
        "1.1.0-alpine",
        "1.2",
        "1.2-alpine",
        "1.2.0",
        "1.2.0-alpine",
        "1.2.1",
        "1.2.1-alpine",
        "1.2.2",
        "1.2.2-alpine",
        "1.2.3",
        "1.2.3-alpine",
        "1.3",
        "1.3-alpine",
        "1.3.0",
        "1.3.0-alpine",
        "1.3.1",
        "1.3.1-alpine",
        "1.4",
        "1.4-alpine",
        "1.4.0",
        "1.4.0-alpine",
        "1.5",
        "1.5-alpine",
        "1.5.0",
        "1.5.0-alpine",
        "1.5.1",
        "1.5.1-alpine",
        "1.5.2",
        "1.5.2-alpine",
        "alpine",
        "alpine-0.6.0",
        "alpine-0.7.0",
        "dev",
        "dev-alpine",
        "latest"
    ],
    "configs": {
        "0.10": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=0.10.1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-25T17:26:56.373Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9cdb8047bf72568b1a0d41c4e94352d0f7ad7721",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-25T17:28:50.570760401Z",
            "history": [
                {
                    "created": "2022-01-26T01:40:35.769668496Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:90495c24c897ec47982e200f732f8be3109fcd791691ddffae0756898f91024f in / "
                },
                {
                    "created": "2022-01-26T01:40:36.265271157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.353797681Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.609113093Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.827389248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:36.065482015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:32.922897871Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-26T08:58:33.350372757Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-26T08:58:33.610126307Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:33.859413094Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.141005346Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.342239735Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.562322806Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.813995669Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:35.041664322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:35.701226877Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:50.19090794Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.533459529Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.551063052Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d0ebbe3f5d26c1b5ec4d5dbb6fe3205d7061f9735080b0162d550530328abd6",
                    "sha256:9a3a6af98e18f06f2a233aa2b2374a5d83d3812e2784b0ab8db949f34cd1a7d6",
                    "sha256:9a94c4a55fe4c8a5cfea7fbac1dde94c38973dbdab17a6314f0c8b35b68aba95",
                    "sha256:6173b6fa63db8be9be756acf32a7beea0e8115f4e932d7de50b6071e7c55ee50",
                    "sha256:235e04e3592ae74b04d0f29af65312be4c50c259b23b74698e35d42b2a4430ab",
                    "sha256:762b147902c09d1860cccdaf4c5b28f5dea3760cb35c213c60ba2315950cbdaa",
                    "sha256:b37c2a7e4fdb90aa3767c656b305b7ea60f52b7846e74012af9cbd5e4c2ecb75",
                    "sha256:d197838f945920f684e9fca669c30e85952aee02b56704a14a14c8f814accfcb",
                    "sha256:9068308fdc1d626b31839321f9ac0f7f8034669983f24f2514cab293c745868f",
                    "sha256:95afd81e80254adb8640ce62a733c0c9b849df0f8fa538de38f37f5823e68b45",
                    "sha256:767a846fe8d2ebee5aa78ce88407b738b6d2e77977e60766b442cdadc15ea9b1",
                    "sha256:803a695c48d066f791ec63028e227f1a36e9a24f6edcbea7e9d948d47bbeaa3f"
                ]
            }
        },
        "0.10-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=0.10.1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-25T17:26:59.981Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9cdb8047bf72568b1a0d41c4e94352d0f7ad7721",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-25T17:28:35.946716976Z",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.16538557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.564847523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.780944464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:58.001318895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:07.536319062Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-25T20:39:08.151512909Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-25T20:39:08.618949282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.304128562Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.813218835Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:10.15290576Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.498199739Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.860347544Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:11.21594189Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:30.164929376Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:45.848723789Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.892531013Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.919388496Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:67bae81de3dc5ccf5101dd4973e8e4b10ee3d5681feb9c30119e6acee1e12dd5",
                    "sha256:89f4d03665cee1ca943d0b55c086ea7577f4658c2cabe69eaf640f1dc47129f9",
                    "sha256:318191938fd7801d80ad617482e4312f0ced71e6c1d4bcb02e12d90a9d65eb11",
                    "sha256:a770f8eba3cb3840d7579e2c4925c9fa275813e8719fe5435905b887a9ee7674",
                    "sha256:6fda88393b8b02872c87c6626807e7bfac1f49e63f47a5ddba0cd11fae99b575",
                    "sha256:3fe7a0e2858f67dc3934d7f3e1e3e21609e26b1d50f018ccbb5fe7c0b37efc69",
                    "sha256:1c2a3bf7e9e044195c8aea2909ee58d0f6888ad222873503d9d2e14931c752c2",
                    "sha256:a6a4cdd7b57d8e8e4b4bd167e6eb5f53b613acbd4c950dc93243d823a7e13178",
                    "sha256:08a89b112f1a27dfb82204dfc31993f20de3d4fd21806f5ad95e0e5303e86ae2",
                    "sha256:347cc5256fd007fdc579d08218319d2b13d4eed1f7003637c8a0d631e12c0571",
                    "sha256:41bfa8a1b33724c383165b36de2a05f420e796cb749f595c0de40da4e6b4eef8"
                ]
            }
        },
        "0.10.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.5",
                    "NJS_VERSION=0.7.1",
                    "PKG_RELEASE=1~bullseye",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2022-01-06T15:37:38.959Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "ed7b17d9d7159c19b5a2232f28506258c2da70ad",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-01-06T15:39:36.90576422Z",
            "history": [
                {
                    "created": "2021-12-21T01:22:43.418913408Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:09675d11695f65c55efdc393ff0cd32f30194cd7d0fbef4631eebfed4414ac97 in / "
                },
                {
                    "created": "2021-12-21T01:22:43.799429634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T03:00:06.15011478Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:08.071260391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:08.248669935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:08.472939138Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:27.976946316Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-12-29T19:28:28.390440509Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-12-29T19:28:28.640632824Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:28:28.864872406Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:28:29.113627588Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:28:29.296888541Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:29.498026198Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:29.705311925Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:28:29.892199479Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:21.336755566Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:21.336755566Z",
                    "created_by": "RUN /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:22.732636346Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:37.583903976Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:39:36.859000395Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:39:36.859000395Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:39:36.859000395Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:39:36.885275414Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:39:36.90576422Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:39:36.90576422Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:39:36.90576422Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:39:36.90576422Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:39:36.90576422Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2edcec3590a4ec7f40cf0743c15d78fb39d8326bc029073b41ef9727da6c851f",
                    "sha256:e379e8aedd4d72bb4c529a4ca07a4e4d230b5a1d3f7a61bc80179e8f02421ad8",
                    "sha256:b8d6e692a25e11b0d32c5c3dd544b71b1085ddc1fddad08e68cbd7fda7f70221",
                    "sha256:f1db227348d0a5e0b99b15a096d930d1a69db7474a1847acbc31f05e4ef8df8c",
                    "sha256:32ce5f6a5106cc637d09a98289782edf47c32cb082dc475dd47cbf19a4f866da",
                    "sha256:d874fd2bc83bb3322b566df739681fbd2248c58d3369cb25908d68e7ed6040a6",
                    "sha256:e5f54d1f744ddbdf0f5d7d55120837d96483ad69da0d0cf3a4e45d99e614d034",
                    "sha256:f7f76bdf1ecdc2c1f1aab25d985a06649bb85ec54e5c220192bcc8bc23886e92",
                    "sha256:743d515f0746752f05d8e8d858be1aed2ffa71154a27395baed6164246ab377e",
                    "sha256:b4e77c9c7c1bf6144c8bfe54b79ab378323c024aa89e1bba7ece4d10ea48eac0",
                    "sha256:6d2cd6d30bc26f7a1184c1cec017a65fc1a3256bf6c70774dd48d34b9e7ec911",
                    "sha256:1c8d423bce5e0127fc097e1234b122f13407b6b489213f793c1c250d8fa7638d"
                ]
            }
        },
        "0.10.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.5",
                    "NJS_VERSION=0.7.1",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2022-01-06T15:37:36.129Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "ed7b17d9d7159c19b5a2232f28506258c2da70ad",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.0-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-01-06T15:38:42.166831409Z",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.16538557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.390147627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.577978445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.788037552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:12.068582134Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"b0ed109a820a2e8921f313d653032b8e70d3020138d634039ebb9194dc3968493f6eb4d85bdbf18d2aea7229deddb98ca0f1d9825defcc5af45f68ee37845232 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-12-29T19:29:12.391644093Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-12-29T19:29:12.646096171Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:29:12.866301243Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:29:13.11583395Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-12-29T19:29:13.304458527Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:13.487009533Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:13.689668979Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:13.874392808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:37:58.979385646Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:37:58.979385646Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:37:59.395667021Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:04.113128269Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:42.072871463Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:42.072871463Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:42.072871463Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:42.092269721Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:42.166831409Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T15:38:42.166831409Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:42.166831409Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:42.166831409Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T15:38:42.166831409Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:1c9c1e42aafaa6067e6591a2b3214b4d6c6c357b597377bd395486d9999209cd",
                    "sha256:3f87f0a06073927060d269480f2c55cd4ac978732291be1e900a0e834dbc0db0",
                    "sha256:5ee3266a70bd586778d7d3dc36fd1dbc2ab407d559615a1c3508697eac86142f",
                    "sha256:0e835d02c1b5a93d74af44edda6dc7b36938429847b13d0553a5ba4adab1e686",
                    "sha256:419df8b600324530e8b64cabca7b0e6b959efc8d41fb2b8253014a4099747501",
                    "sha256:5af1c5f7787e77cf9ca832d652fb4c579b63e614d75d7b60d67aaa409c65188a",
                    "sha256:df7930da2fc702d2a8d8c2975b2e31b061fae65f49d15bcc5afb1b067e2c658d",
                    "sha256:ae1ffbd2d6e438cb60e70c8971474824474e7532a5511b46a00b9656e0218527",
                    "sha256:ec67a3e45e9a238984875e39ca1a724322f35f755f24fd45be09fb27d2c050cc",
                    "sha256:f781e3daae77866e63394338f09b18b7d10275f2e4123acc8358177cb3255b53",
                    "sha256:16f2b5af5b2c2eaf584ceef516c015d112632d9e483b99ce8bb4b7b882c6ecb3"
                ]
            }
        },
        "0.10.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=0.10.1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-25T17:26:56.373Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9cdb8047bf72568b1a0d41c4e94352d0f7ad7721",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-25T17:28:50.570760401Z",
            "history": [
                {
                    "created": "2022-01-26T01:40:35.769668496Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:90495c24c897ec47982e200f732f8be3109fcd791691ddffae0756898f91024f in / "
                },
                {
                    "created": "2022-01-26T01:40:36.265271157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.353797681Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.609113093Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.827389248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:36.065482015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:32.922897871Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-26T08:58:33.350372757Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-26T08:58:33.610126307Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:33.859413094Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.141005346Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.342239735Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.562322806Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.813995669Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:35.041664322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:34.414587088Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:35.701226877Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:50.19090794Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.533459529Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.551063052Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:50.570760401Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d0ebbe3f5d26c1b5ec4d5dbb6fe3205d7061f9735080b0162d550530328abd6",
                    "sha256:9a3a6af98e18f06f2a233aa2b2374a5d83d3812e2784b0ab8db949f34cd1a7d6",
                    "sha256:9a94c4a55fe4c8a5cfea7fbac1dde94c38973dbdab17a6314f0c8b35b68aba95",
                    "sha256:6173b6fa63db8be9be756acf32a7beea0e8115f4e932d7de50b6071e7c55ee50",
                    "sha256:235e04e3592ae74b04d0f29af65312be4c50c259b23b74698e35d42b2a4430ab",
                    "sha256:762b147902c09d1860cccdaf4c5b28f5dea3760cb35c213c60ba2315950cbdaa",
                    "sha256:b37c2a7e4fdb90aa3767c656b305b7ea60f52b7846e74012af9cbd5e4c2ecb75",
                    "sha256:d197838f945920f684e9fca669c30e85952aee02b56704a14a14c8f814accfcb",
                    "sha256:9068308fdc1d626b31839321f9ac0f7f8034669983f24f2514cab293c745868f",
                    "sha256:95afd81e80254adb8640ce62a733c0c9b849df0f8fa538de38f37f5823e68b45",
                    "sha256:767a846fe8d2ebee5aa78ce88407b738b6d2e77977e60766b442cdadc15ea9b1",
                    "sha256:803a695c48d066f791ec63028e227f1a36e9a24f6edcbea7e9d948d47bbeaa3f"
                ]
            }
        },
        "0.10.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=0.10.1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-25T17:26:59.981Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9cdb8047bf72568b1a0d41c4e94352d0f7ad7721",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-25T17:28:35.946716976Z",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.16538557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.564847523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.780944464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:58.001318895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:07.536319062Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-25T20:39:08.151512909Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-25T20:39:08.618949282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.304128562Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.813218835Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:10.15290576Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.498199739Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.860347544Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:11.21594189Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:27:29.930825869Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:30.164929376Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=0.10.1 DOCKER_GEN_VERSION=0.7.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:27:45.848723789Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.892531013Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.919388496Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-25T17:28:35.946716976Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:67bae81de3dc5ccf5101dd4973e8e4b10ee3d5681feb9c30119e6acee1e12dd5",
                    "sha256:89f4d03665cee1ca943d0b55c086ea7577f4658c2cabe69eaf640f1dc47129f9",
                    "sha256:318191938fd7801d80ad617482e4312f0ced71e6c1d4bcb02e12d90a9d65eb11",
                    "sha256:a770f8eba3cb3840d7579e2c4925c9fa275813e8719fe5435905b887a9ee7674",
                    "sha256:6fda88393b8b02872c87c6626807e7bfac1f49e63f47a5ddba0cd11fae99b575",
                    "sha256:3fe7a0e2858f67dc3934d7f3e1e3e21609e26b1d50f018ccbb5fe7c0b37efc69",
                    "sha256:1c2a3bf7e9e044195c8aea2909ee58d0f6888ad222873503d9d2e14931c752c2",
                    "sha256:a6a4cdd7b57d8e8e4b4bd167e6eb5f53b613acbd4c950dc93243d823a7e13178",
                    "sha256:08a89b112f1a27dfb82204dfc31993f20de3d4fd21806f5ad95e0e5303e86ae2",
                    "sha256:347cc5256fd007fdc579d08218319d2b13d4eed1f7003637c8a0d631e12c0571",
                    "sha256:41bfa8a1b33724c383165b36de2a05f420e796cb749f595c0de40da4e6b4eef8"
                ]
            }
        },
        "0.3.0": {
            "architecture": "amd64",
            "author": "Jason Wilder mail@jasonwilder.com",
            "config": {
                "Hostname": "e5c68db50333",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.9.12-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6820823588ca298c2c642c970176270a82a729f5433286e9a381c1b83cb8f663",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app/",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "fc928d0d37f3ca6f1da89ed3dd7ec964f80f72cd4ead88361d3d182ac1d6d93a",
            "container_config": {
                "Hostname": "e5c68db50333",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.9.12-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6820823588ca298c2c642c970176270a82a729f5433286e9a381c1b83cb8f663",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-21T18:59:34.953852086Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2016-03-01T18:51:11.375621601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b5391cb13172fb513dbfca0b8471ea02bffa913ffdab94ad864d892d129318c6 in /"
                },
                {
                    "created": "2016-03-01T18:51:14.143360029Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-03-02T10:58:25.175419786Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER NGINX Docker Maintainers \"docker-maint@nginx.com\""
                },
                {
                    "created": "2016-03-09T21:30:05.367411583Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) ENV NGINX_VERSION=1.9.12-1~jessie"
                },
                {
                    "created": "2016-03-09T21:31:26.717726444Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-xslt \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-03-09T21:31:29.541633219Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2016-03-09T21:31:30.211480418Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 443/tcp 80/tcp"
                },
                {
                    "created": "2016-03-09T21:31:30.879548586Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                },
                {
                    "created": "2018-04-21T18:57:47.016848162Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:25.216196921Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-21T18:59:26.767336276Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/^http {/&\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-04-21T18:59:28.407439181Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) ADD ea5c2864952441ee145fe088d72b5e101ce41409accb7cdcb01aa78839dfcba1 in /usr/local/bin/forego "
                },
                {
                    "created": "2018-04-21T18:59:30.146275432Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2018-04-21T18:59:30.549991171Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:32.870253746Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2018-04-21T18:59:33.300201781Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) COPY dir:130e447a8d5419f18d8d278030676272d4880132e747186b771b5d3ccabfea1a in /app/ "
                },
                {
                    "created": "2018-04-21T18:59:33.660043694Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:33.94113369Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:34.30064658Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:34.63845745Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T18:59:34.953852086Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:917c0fc99b353c0397a9effdf042d72529de7c452669b1e11b05bec3088c7056",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d7d68f89e518cc65ffb6892c4c21f135a9140ffc1911afe86521fff2c9ed17",
                    "sha256:3f3324023e75cc3fb9f72fee3a13b39fb5cf46f8c234a7c582c3ae69089911c3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf00803f7e083b96aa979d5e6867261d1de523b56a4ac3caa3eacf4df12bd0dd",
                    "sha256:cdfdca5df60536cfa71365783a36568b01b48a4b374a0c9bb4c3a462c10b1792",
                    "sha256:aec92440ed0e25e09f6f7b6789cec2f5f9ed3af90d94dce69eb217e3b0666ebd",
                    "sha256:3ab4a3fa5e096e122f14c9af8904ff513b06c7e7e5cad0d54f6ed6707159bbbb",
                    "sha256:1fcffa6611de678c9b83a8fc7cd3f128e0d5ba53e73f9b3b2d164cf18dd3a19c",
                    "sha256:cc933e77863f5fc8df80f8a741d6c77e1b2140fad5ffe49baf87452fd8bec585"
                ]
            }
        },
        "0.4.0": {
            "architecture": "amd64",
            "author": "Jason Wilder mail@jasonwilder.com",
            "config": {
                "Hostname": "e5c68db50333",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.9.12-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cc2fef89b2f765f69bb12e19de6e527a0dbe2e9261a9b6c5e3bbc61fd5c77cd",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app/",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "7cc06ae8ff7b523c15c0c237b9fb9d25697550477d8fa317d0f202b13fc3675b",
            "container_config": {
                "Hostname": "e5c68db50333",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.9.12-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cc2fef89b2f765f69bb12e19de6e527a0dbe2e9261a9b6c5e3bbc61fd5c77cd",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-21T19:01:33.664053191Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2016-03-01T18:51:11.375621601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b5391cb13172fb513dbfca0b8471ea02bffa913ffdab94ad864d892d129318c6 in /"
                },
                {
                    "created": "2016-03-01T18:51:14.143360029Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-03-02T10:58:25.175419786Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER NGINX Docker Maintainers \"docker-maint@nginx.com\""
                },
                {
                    "created": "2016-03-09T21:30:05.367411583Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) ENV NGINX_VERSION=1.9.12-1~jessie"
                },
                {
                    "created": "2016-03-09T21:31:26.717726444Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-xslt \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-03-09T21:31:29.541633219Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2016-03-09T21:31:30.211480418Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 443/tcp 80/tcp"
                },
                {
                    "created": "2016-03-09T21:31:30.879548586Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                },
                {
                    "created": "2018-04-21T18:59:44.486906676Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:24.222588047Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-21T19:01:25.731874156Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/^http {/&\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-04-21T19:01:27.245387986Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) ADD ea5c2864952441ee145fe088d72b5e101ce41409accb7cdcb01aa78839dfcba1 in /usr/local/bin/forego "
                },
                {
                    "created": "2018-04-21T19:01:28.824896776Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2018-04-21T19:01:29.244632876Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:31.556564338Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2018-04-21T19:01:31.960211732Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) COPY dir:4ddd7b7f33b24e934490fd6f489af9a55d8deec30a90c00a2de79d440623eff7 in /app/ "
                },
                {
                    "created": "2018-04-21T19:01:32.302010403Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:32.595717928Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:32.949155322Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:33.269499105Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-21T19:01:33.664053191Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:917c0fc99b353c0397a9effdf042d72529de7c452669b1e11b05bec3088c7056",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d7d68f89e518cc65ffb6892c4c21f135a9140ffc1911afe86521fff2c9ed17",
                    "sha256:3f3324023e75cc3fb9f72fee3a13b39fb5cf46f8c234a7c582c3ae69089911c3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a5fa0a8fe82a767dff8f8ad5bd53044903f763869f22e5b354766f46cf2f7168",
                    "sha256:647662f6f659870a843edf13b258d96008056a9922feeb7b3d0cc66c8b37dd32",
                    "sha256:49883f1c178fa5da44e38d5156d54172e29f63f0c3cced94dc7f81f5400cb856",
                    "sha256:a5c3d5424c094bb2f0f95740acfe14ded209565fe7cec3e87b4d52221c8fe0b7",
                    "sha256:c733e1e19e310436c7ee86157455b0cac48b54d5aeea8b6feeece687b2ac2a86",
                    "sha256:6f3a31a7fe2902dedb8c38673708aaf593952ed35d61388c494adb1293ab51b3"
                ]
            }
        },
        "0.5.0": {
            "architecture": "amd64",
            "author": "Jason Wilder mail@jasonwilder.com",
            "config": {
                "Hostname": "2da0903ff372",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.3-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:29a4bb180d27d8e2d4d1eddc880b00123f7376719ca0550fc234cf9b5314aa94",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "4f7c262007f08660a18f5e9c28bfc91a6250f571a0c1a171559a623f2a8ca252",
            "container_config": {
                "Hostname": "2da0903ff372",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.3-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:29a4bb180d27d8e2d4d1eddc880b00123f7376719ca0550fc234cf9b5314aa94",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-12-01T05:42:34.269629386Z",
            "docker_version": "1.12.3-cs3",
            "history": [
                {
                    "created": "2016-07-28T17:47:54.990622865Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e0565652aa852f62033d99f84892216020d30f64521ded5e72d4940bc4c9697 in /"
                },
                {
                    "created": "2016-07-28T17:47:55.809686499Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-23T18:49:31.945397165Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-23T18:49:33.057946615Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) ENV NGINX_VERSION=1.11.3-1~jessie",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-23T18:51:19.236946594Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-xslt \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tnginx-module-perl \t\t\t\t\t\tnginx-module-njs \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-08-23T18:51:21.574094006Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2016-08-23T18:51:22.632895061Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 443/tcp 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-08-23T18:51:23.709520142Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:41:46.608143774Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:05.848883349Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-12-01T05:42:08.717296746Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/^http {/&\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2016-12-01T05:42:12.561133096Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) ADD tarsum.v1+sha256:1d06435eb34c3c48ee88fcd3062a6667c15755d382f7101d23fe1ee811240a4f in /usr/local/bin/forego "
                },
                {
                    "created": "2016-12-01T05:42:16.321362659Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2016-12-01T05:42:18.52649335Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:22.397983642Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2016-12-01T05:42:24.532277584Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) COPY dir:77d1d207db5a61b53cdb492f8c9926de1981b5703cd8fcf1a8cf927b4f8779dc in /app/ "
                },
                {
                    "created": "2016-12-01T05:42:26.824875174Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:28.637503724Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:30.556021174Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:32.460897674Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-01T05:42:34.269629386Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f71b45e4e254ddceb187b1467f5471f0e14d7124ac2dd7fdd7ddbc76e13f0e5",
                    "sha256:d7953e5e5bba5c637ce6eb81a4528a777c4265386cb12e9bff8124ef97538746",
                    "sha256:69ecf026ff94793ab573754612e6fa40b28331a47c3584de0b32d39a88959c37",
                    "sha256:9014c6483d2143e3f6eb8ecac4a3ae1b21e550e1ba491756d1d7123fbd0e0656",
                    "sha256:2ddfd626d62e600437bc119230b0808c8c1f649bb33bf8cb050acd6a529f9c77",
                    "sha256:266963458ffa544e79bce087a41aa3f556ebc892c341a471ad43d26ded25bcbe",
                    "sha256:d9993d7818c9631edf7d16a3fa5052e16fbc128718c137313abe8986954b237b",
                    "sha256:4cf9920c05b0b2203b571c992184e62513c2183fabed390780c209316564ad86",
                    "sha256:42745769a0e2bf2b209f7530d41f59251d9e8adea05608d5c339d2d22ce5b786"
                ]
            }
        },
        "0.6.0": {
            "architecture": "amd64",
            "author": "Jason Wilder mail@jasonwilder.com",
            "config": {
                "Hostname": "ed11f485244a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.10-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f213368de859b37c0e1aad4131b44fe07da62d4c7eaccc80574bb0a21f22e7c1",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "8f855ca726817b71424a0d031493fa5a7f2d4943078a525a564812dd168c011b",
            "container_config": {
                "Hostname": "ed11f485244a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.10-1~jessie",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f213368de859b37c0e1aad4131b44fe07da62d4c7eaccc80574bb0a21f22e7c1",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-04-05T04:49:51.796928409Z",
            "docker_version": "1.12.6-cs6",
            "history": [
                {
                    "created": "2017-02-27T20:34:36.966911578Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:41ac8d85ee35954bf6c8353d9681a045ba260aa9a96dbbded7bcd6e37ee49bea in / "
                },
                {
                    "created": "2017-02-27T20:34:37.813657023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-28T15:14:51.527762075Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-28T15:14:51.823965747Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.11.10-1~jessie",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-28T15:15:06.767411692Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-xslt \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tnginx-module-perl \t\t\t\t\t\tnginx-module-njs \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-02-28T15:15:07.767044736Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2017-02-28T15:15:08.041656771Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 443/tcp 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-02-28T15:15:08.311733303Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:10.981224552Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:28.520908143Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-04-05T04:49:30.477404493Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/^http {/&\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2017-04-05T04:49:33.162281205Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) ADD tarsum.v1+sha256:1d06435eb34c3c48ee88fcd3062a6667c15755d382f7101d23fe1ee811240a4f in /usr/local/bin/forego "
                },
                {
                    "created": "2017-04-05T04:49:35.467293853Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2017-04-05T04:49:37.209322542Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:40.284561236Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2017-04-05T04:49:42.101956535Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) COPY dir:1dd03a1a817b900eba105e248efa94820f920a561051b49edf0ad285052922ef in /app/ "
                },
                {
                    "created": "2017-04-05T04:49:43.907974195Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:45.858821443Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:47.793737145Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:49.782057184Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:49:51.796928409Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d17d48b2382adda1fd94284c51d725f0226bf20b07f4d29ce09596788bed7e8e",
                    "sha256:cf0d2468e7265561d327837d9e4f8b33c66ac652f3b89ae48e11b5354a1ff05e",
                    "sha256:e3a86ffb1c457760f4daaa5bdf001f2d48f2d82ee8217b72c9ca01d977fe2d85",
                    "sha256:66cef9f22ed8e252fc1915087c8e94059f9cfb699b3dc5ca2c0eaa00c9a5abd8",
                    "sha256:f76bab60956113ca7e8e591d3816d8355313bc787467fc4a6a7397e59b72eed9",
                    "sha256:f3b7bf10ec2806cea4b1c788d2b118089dc86d17473f5c5c45d223dcc1aee8e9",
                    "sha256:4ab0fa33a4da87cd2c3c9ed250662198ccad55fa0c4a6710c04b8ab11173c72e",
                    "sha256:a061dc2445837fbde66da78755d27f8430337a4e3e9070fc07dfcd9dff00b6ce",
                    "sha256:d85db7010eaec48e8ff51fe246f4095ca7ad2ea843e332fd0da42a8729c8f75f"
                ]
            }
        },
        "0.7.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.10-1~stretch",
                    "NJS_VERSION=1.13.10.0.1.15-1~stretch",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:11d5728fd522c3934123c8f01691d1745b5a064703ca673c29b423da878c87e1",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "babfc4f60fb9bce4b6a409a73cbefef7011f7e03974807c40b91b50cbe34497d",
            "container_config": {
                "Hostname": "babfc4f60fb9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.10-1~stretch",
                    "NJS_VERSION=1.13.10.0.1.15-1~stretch",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:11d5728fd522c3934123c8f01691d1745b5a064703ca673c29b423da878c87e1",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-03-24T05:42:17.790246591Z",
            "docker_version": "18.03.0-ce-rc4",
            "history": [
                {
                    "created": "2018-03-13T22:27:37.022366567Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3250bb9848f956bdb43b205f1237df0d81a25088c95dbdeb20a1e2baf1d884f in / "
                },
                {
                    "created": "2018-03-13T22:27:37.3121465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T08:14:39.289492329Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:39:27.900672928Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.13.10-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:39:28.221113354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=1.13.10.0.1.15-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:39:53.085339634Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\" \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION} \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION} \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386) \t\t\techo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*) \t\t\techo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp -d)\" \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&& ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&& ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package: ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
                },
                {
                    "created": "2018-03-22T00:39:53.938563266Z",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-03-22T00:39:54.193377367Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:39:54.455252848Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:39:54.716614157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:41:53.65574864Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:04.413421677Z",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-24T05:42:05.780548467Z",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-03-24T05:42:09.350881403Z",
                    "created_by": "/bin/sh -c #(nop) ADD ea5c2864952441ee145fe088d72b5e101ce41409accb7cdcb01aa78839dfcba1 in /usr/local/bin/forego "
                },
                {
                    "created": "2018-03-24T05:42:10.798678544Z",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2018-03-24T05:42:11.148086769Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:15.346769841Z",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2018-03-24T05:42:15.676930143Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f72bf3b51833a50a1fdb61faad04010c34a8d3beeb96d9938cf0f7226959903 in /etc/nginx/ "
                },
                {
                    "created": "2018-03-24T05:42:15.961599413Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:bbe100487cf4b8e9ec265c2def449193587c1995076bc9881f2ab8b9f6604025 in /app/ "
                },
                {
                    "created": "2018-03-24T05:42:16.345745116Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:16.685242698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:17.040162829Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:17.406449719Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:17.790246591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3358360aedad76edf49d0022818228d959d20a4cccc55d01c32f8b62e226e2c2",
                    "sha256:974dc137309787ccced29b2fe7395602969c3acbb0eab47e1f42286380bb1716",
                    "sha256:8e5e010ce6ad9bc6fbc7b68d995ecbc0b9febc86b6ca04cdf1da4d33f9c77f58",
                    "sha256:cba5e6d5f20206b180b0233ba1cdd684a905781f0b7fcf1cc0d089bea8dc63f6",
                    "sha256:9a0756f6653159853fde26c83c2f7683a9b42df6ffbf464874aae4f51ebe0668",
                    "sha256:13b3cb67ca29c5fd468db452cbbb50c9200ba9a357bac5cd58a38af53007297e",
                    "sha256:95721cdaedba4588dd881cdfdcad0678d4f2c87f3d40f560e4300ff041325f4d",
                    "sha256:9571d85d2eff9cb079c46a41059800ae045a2d422e6b946d24719ae607b9211c",
                    "sha256:ba6e6197c178d3ff03f25a75d01fd000fbb4f4ed171276ff01125240b2b3f58a",
                    "sha256:e1bd758b92390a8a5b0c14455984fa7826f28d7eddfa16f869926178dc45be43"
                ]
            }
        },
        "0.8.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.3",
                    "NJS_VERSION=0.4.4",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Image": "sha256:ab5e4e0acb8e3acfc0b20849b3aa46f8ef51c061f946f82412a6c618979a5ea0",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "bcbd5435d2e77f2574f39e1038c4e8d14788996feb422653a4b6e807577810ce",
            "container_config": {
                "Hostname": "bcbd5435d2e7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.3",
                    "NJS_VERSION=0.4.4",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "Image": "sha256:ab5e4e0acb8e3acfc0b20849b3aa46f8ef51c061f946f82412a6c618979a5ea0",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2020-10-30T16:25:52.318126818Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2020-10-13T01:39:05.233816802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dc53e7886c35bc21ae6c4f6cedda54d56ae9c9e9cd367678f1a72e68b3c43d4 in / "
                },
                {
                    "created": "2020-10-13T01:39:05.467867564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:08.450805972Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:08.6671505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:08.990775709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.4.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:09.243307883Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:41.236383166Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2020-10-13T08:39:42.013498735Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e7e183879c35719c18aa7f733651029fbcc55f5d8c22a877ae199b389425789e in / "
                },
                {
                    "created": "2020-10-13T08:39:42.439313424Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d0a4127e78a26c11640bbedaeaa28ecafb5c40effef923390c04428192d665a in /docker-entrypoint.d "
                },
                {
                    "created": "2020-10-13T08:39:42.793646253Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2020-10-13T08:39:43.119194379Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:43.455098614Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:43.802513734Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGTERM",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T08:39:44.146921461Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:06.34673776Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:32.877128076Z",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-30T16:25:35.100061642Z",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2020-10-30T16:25:40.170391888Z",
                    "created_by": "/bin/sh -c #(nop) ADD 7bcf5568b7130c6de49800a14c4b48e1a1079f0ae70311b5d7cb2eff879a5fea in /usr/local/bin/forego "
                },
                {
                    "created": "2020-10-30T16:25:42.739552694Z",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2020-10-30T16:25:43.254490593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:48.327236426Z",
                    "created_by": "/bin/sh -c wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2020-10-30T16:25:48.974015117Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f72bf3b51833a50a1fdb61faad04010c34a8d3beeb96d9938cf0f7226959903 in /etc/nginx/ "
                },
                {
                    "created": "2020-10-30T16:25:49.633800531Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:9205ae1b78bbe8a334465cdd284e32260d73a81421c385110f0e4a822ecd286c in /app/ "
                },
                {
                    "created": "2020-10-30T16:25:50.159136949Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:50.704502466Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:51.272008534Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:51.783891003Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-30T16:25:52.318126818Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d0fe97fa8b8cefdffcef1d62b65aba51a6c87b6679628a2b50fc6a7a579f764c",
                    "sha256:f14cffae5c1add412127e0704008bb8e730773c0945345c9ea61b7e6eabea8e5",
                    "sha256:280ddd108a0a0ef53ed20d6715facc1cdd9497ef05cad03c3e5b73521a588511",
                    "sha256:fe08d9d9f18556ca241f00b6efd6c7b25767463084e14c05da9e535c0782409c",
                    "sha256:cdd1d8ebeb066bd40f9be824201afe18f0d4fe93b8462353921f0277c09e1289",
                    "sha256:839e6831a4ebe97918989e9f98404a15412b0fe13bea849ff23480d12de2dd0d",
                    "sha256:9b0c591ac3d910a63d340ef893765f2bcbedee2480776ea0ab12a8e7411b88a0",
                    "sha256:4f7d5037d96e62d3384d367e8292d904e61e10df94076a4d3ef613936ae15133",
                    "sha256:e1b0940469ad399530494ace7b61776cd287a2b09f98ae6d43bd45680043cf5e",
                    "sha256:e8da13d525fe444e953540dae0f617d2bdc23a8f4310e42daded8be2bcc28f0a",
                    "sha256:0c926503f4735b8b34dc6d814fe3ff7480391e259d24ee21ba034bf9844708bb",
                    "sha256:a5d4fab28de8da9bbe27821e04b37b458f2040efad3e89566526a68ec083c723"
                ]
            }
        },
        "0.9": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-09-01T07:14:34.353Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "52d208daf382a900c2fa112375fb286dbf724efa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-01T07:16:58.368401059Z",
            "history": [
                {
                    "created": "2021-08-17T01:24:06.028544772Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87b4e60fe3af680c6815448374365a44e9ea461bc8ade2960b4639c25aed3ba9 in / "
                },
                {
                    "created": "2021-08-17T01:24:06.423874059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:28.630768408Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:28.906671303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:29.207166527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:29.511512984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:08.565814231Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-08-17T11:46:09.111951262Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-08-17T11:46:09.566219503Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:09.895283875Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:10.274864873Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:10.495021461Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:10.738406365Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:11.021940075Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:11.370722453Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:42.049677137Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:42.049677137Z",
                    "created_by": "RUN /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:42.670745009Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:49.26762829Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.278966125Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f68ef921efae588b3dd5cc466a1ca9c94c24785f1fa9420bea15ecc2dedbe781",
                    "sha256:d1279c519351f33534aecf6d849e6b4b1b6b344079f4da49507f40de63d6917b",
                    "sha256:678bbd796838432e8db17f2128b7a06eae49adba2991ebf9ed8ebf3b8cbe2d4e",
                    "sha256:009f1d338b5732c48b5a643326d4724797ab786f8fcb3412403f8feab8509fd3",
                    "sha256:8f736d52032f7a4b7d828c0e119571cc3c047514c568f30ad52b6a503d050d85",
                    "sha256:fb04ab8effa8ecf93d0d9b3a13041f95d4566b6e52d3251c1b94097e34b53e89",
                    "sha256:a22ad1dae17eb72c79f79e35b4f9a29a5f99c85c8c74752a08230125cbc36f43",
                    "sha256:f22b3e3e9c2ca60103a746d34562e2abd16fa421f6088d24d115526711231780",
                    "sha256:55f9730619d3a3f3f073df6958ca62cbd8e943d7c5c91884a32f1207f663a609",
                    "sha256:2fefa3a6ccf0553138ae857b027141c2908a18d30490a17f08fd73506fa2f2cb",
                    "sha256:9b9bc9ac6a5ba73279426fe74a50d3bd7dc61de2226660663f822cf7000857d1",
                    "sha256:6c0ecb78d1aa91e38d3ca51755c6cba145302a2808fc26c2e59281e1b1611955"
                ]
            }
        },
        "0.9-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-09-01T07:14:33.746Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "52d208daf382a900c2fa112375fb286dbf724efa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.3-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-01T07:15:56.502205151Z",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:06.520758915Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:06.881866958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:07.216552194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:07.50780149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:16.854343618Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-08-27T20:48:17.528477795Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-08-27T20:48:17.840794232Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.195996077Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.576612238Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.945018699Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:19.270591706Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:19.638937533Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:20.021935314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:09.128296029Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:09.128296029Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:09.696129272Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:15.057604704Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.469870688Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:24934e5e6c6104f7d9210bc221bded7b1c3518fb92d3db06e2c035bc96bdf1d1",
                    "sha256:fc03e3cb8568b16a19365b77f7e9b43ba42d6853a3f05b3c1689715ed16dd132",
                    "sha256:95b99a5c3767f26a3001cda7630c7bb2c4797eedc887eef7b81f6066150e52ca",
                    "sha256:1ea998b9547464916e815671ec321651283c342e237407383f3022fd7f4c31f8",
                    "sha256:45d993692050a801fff32815fb66ecf2d31e6a713f6f214388d8c692e1e1d2dd",
                    "sha256:1d61ef825b44cb54423bc3d301a2488703adb2470ed4176d20f8aa56cba7a549",
                    "sha256:ad247ac40202f5e1ce8ae3d94c10bca5bafc961eea506f58816f9a66d72dd3c7",
                    "sha256:ffbcb607f9e4c8f5bd9aba6c76e2ca8e45e7fd17f64124a27889511615ea46bf",
                    "sha256:9bca2a05ccc4aefe773bc22002904f8a0cbdef79411754620ad7bf6a0b488bb0",
                    "sha256:61caff3a8885f19fae1c78a10c46d9c2734cd97a4f23732bd094e4b2f9cd1ba7",
                    "sha256:9fa21b61477c5010bf07150154ee26ffe8af314ece4b97891c60c7510305a15d"
                ]
            }
        },
        "0.9.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.10",
                    "NJS_VERSION=0.5.3",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.6",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-04-28T20:31:55.292Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "35df872705bf18def497668ee496ae08a75bfa2f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-04-28T20:34:04.257248069Z",
            "history": [
                {
                    "created": "2021-04-10T01:20:22.165237076Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c855b3c65f5ba94d548d7d2659094eeb63fbf7f8419ac8e07712c3320c38b62c in / "
                },
                {
                    "created": "2021-04-10T01:20:22.511428053Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T07:31:54.638894246Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:18.770459018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:18.978350624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:19.154267704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:38.501196913Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-04-13T19:20:38.824436116Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-04-13T19:20:39.009968164Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-13T19:20:39.216624158Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-13T19:20:39.398513594Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-13T19:20:39.578331198Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:39.770844641Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:39.937921533Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-13T19:20:40.106253868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:32:48.462037788Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:32:48.462037788Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:32:48.750650832Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf  && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:33:23.369566184Z",
                    "created_by": "COPY /go/src/github.com/ddollar/forego/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:34:04.173572335Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:34:04.173572335Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.173572335Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.193792427Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:34:04.257248069Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7e718b9c0c8c2e6420fe9c4d1d551088e314fe923dce4b2caf75891d82fb227d",
                    "sha256:4dc529e519c4390939b1616595683c89465782bb7d9fc7b90b30cc1e95bc723a",
                    "sha256:23c959acc3d0eb744031aef67adf6ceb5120a19c8869727d588f7d9dabd75b09",
                    "sha256:15aac1be5f02f2188ab40430b28a5f79be1bcb805db315bbe4d70f70aeabaa36",
                    "sha256:974e9faf62f1a3c3210e3904420ffec1dc351b756ac33024f2dd2683bf44c370",
                    "sha256:64ee8c6d0de0cfd019841b29c8cb18f4ab38e4687f7784866b840d5b2c31c8b9",
                    "sha256:242f7ab09764547d9967d54484a100a8cf14ac418e47d3ef42c9b5b23d246b0b",
                    "sha256:36000458d0253053eef279e7f6a87414eff4c4f6044517b752deb6113c0240f9",
                    "sha256:6b58db19d914fb3e5328ed54d85513ef6d26ea8583a1fdf89adad69e91009d56",
                    "sha256:2aa5cbafe9d4d2b7b928f2a4f29084b0fe8893f171a16c471f6325a36745c1b2",
                    "sha256:bf18bbaa7dee90ba84efc78b9f07f96cce1bb1c907242cb5ee928b640e39fc32",
                    "sha256:05bc72647e9eaee29144058553f5d4c4f873da70493d1d82d9e3caa1545c5dcd"
                ]
            }
        },
        "0.9.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.10",
                    "NJS_VERSION=0.5.3",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.6",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-04-28T20:31:56.071Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "35df872705bf18def497668ee496ae08a75bfa2f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.0-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-04-28T20:33:15.265736425Z",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.217479283Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.402396209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.570057463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.753592791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:36.703547664Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && case \"$apkArch\" in         x86_64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-04-14T23:14:36.967039881Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-04-14T23:14:37.154007452Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.345349498Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.550999676Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.738145043Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:37.906240579Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:38.081931431Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:38.270015592Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:32:16.793815805Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:32:16.793815805Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps     ca-certificates bash wget openssl     && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:32:17.600767931Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf  && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:32:47.592316206Z",
                    "created_by": "COPY /go/src/github.com/ddollar/forego/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:33:15.220071788Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:33:15.220071788Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.220071788Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.233636436Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:33:15.265736425Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:ed3fe3f2b59f88def4ef31f4020793e2dc613571bebd4e8ee1241185fd2e6945",
                    "sha256:4531e200ac8d238b1f09c9b6f6aa2283532ec011de255b28cce9cf4aabf758f0",
                    "sha256:3c369314e0038454cd2849c5efac02812cea5a3b575f4e74cf6a9d1790360b24",
                    "sha256:3480549413ea041ba4a469d540b4bd3fe579029098f0a02038c0d1f4f0c25bdf",
                    "sha256:4689e8eca613fc415093e337de5d9194fbe1f767cc474f07b73ff08d2efcdac0",
                    "sha256:6cbfe4ddc502f09523c4cf949bdf440afd2f7079b13b76951845d90a9dc9a911",
                    "sha256:9da160e7b5a4e8c4289e5ce2539aa0c4a007ce9ad4ced0c14729c42286009d30",
                    "sha256:94e3706c072f47e8f8e4a7489c45918a6f682a842597782de9a4e5bcb7a971cc",
                    "sha256:949879e8a7de393cfc0b3ae6fe677064a6a8ab752e1390cfa00a7127c0b0a108",
                    "sha256:a109859afe2f79c6c44c234e1c00e9d267dcca6a73fef3669b7b620ad28cbb78",
                    "sha256:0ca90c335692d1b7c06c1340f3672b3ce1a2ff2b8ee49f81e98aff431d1ddeef"
                ]
            }
        },
        "0.9.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.10",
                    "NJS_VERSION=0.5.3",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.6",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-06-14T11:47:16.463Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "eb00b066dea1df25063060ce3732284ee1d3796e",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-14T11:49:05.897177079Z",
            "history": [
                {
                    "created": "2021-05-12T01:21:22.128649612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7362e0e50f30ff45463ea38bb265cb8f6b7cd422eb2d09de7384efa0b59614be in / "
                },
                {
                    "created": "2021-05-12T01:21:22.552826465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:09.516837708Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:09.723912201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:09.916962659Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:10.123059623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:29.923483086Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-05-12T08:40:30.293933275Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-05-12T08:40:30.499212768Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-05-12T08:40:30.719139485Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-05-12T08:40:30.932338514Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-05-12T08:40:31.107007251Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:31.303974452Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:31.484050629Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T08:40:31.711670345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:09.970466915Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:09.970466915Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y -q --no-install-recommends     ca-certificates     wget  && apt-get clean  && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:10.221283768Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf  && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:11.925500022Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:49:05.814053704Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:49:05.814053704Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.814053704Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.827219376Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:49:05.897177079Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02c055ef67f5904019f43a41ea5f099996d8e7633749b6e606c400526b2c4b33",
                    "sha256:431f409d4c5a8f79640000705665407ff22d73e043472cb1521faa6d83afc5e8",
                    "sha256:4b8db2d7f35aa38ac283036f2c7a453ebfdcc8d7e83a2bf3b55bf8847f8fafaf",
                    "sha256:c9732df61184e9e8d08f96c6966190c59f507d8f57ea057a4610f145c59e9bc4",
                    "sha256:eeb14ff930d4c2c04ece429112c16a536985f0cba6b13fdb52b00853107ab9c4",
                    "sha256:f0f30197ccf95e395bbf4efd65ec94b9219516ae5cafe989df4cf220eb1d6dfa",
                    "sha256:86bad16288f8197c68ad3d870cfa7bbfce1bf4e54c3ed055a92e4a5f42a461e6",
                    "sha256:fe677b0c769d1ec145f5ae1f0c2fa91089ec006dc61d18c2c9b6a681c027b8bf",
                    "sha256:ef3ce45b8d346a0ad6d3f4a4261df3675cf2d3c26e02c343ea8cc988d284ff43",
                    "sha256:a4f236beb9e011b22d3e6e412e3a74af5ed422cf4dcee382787ebed028ee8819",
                    "sha256:3d4dd0e9d61b9c6cc036886f1002a85732b069aa0c2b91ff459fb71a86365e03",
                    "sha256:01875dd0e79a940004b678c114e091ecd1a759851f2a9fcf5f1e39c672bdcdc7"
                ]
            }
        },
        "0.9.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.10",
                    "NJS_VERSION=0.5.3",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.6",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-06-14T11:47:16.700Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "eb00b066dea1df25063060ce3732284ee1d3796e",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.1-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-06-14T11:48:41.391427015Z",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.217479283Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.402396209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.570057463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:29.753592791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:36.703547664Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && case \"$apkArch\" in         x86_64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-04-14T23:14:36.967039881Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-04-14T23:14:37.154007452Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.345349498Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.550999676Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-04-14T23:14:37.738145043Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:37.906240579Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:38.081931431Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:14:38.270015592Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:47:48.20616253Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:47:48.20616253Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps     ca-certificates bash wget openssl     && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:47:49.016945243Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf  && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:47:56.023350943Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:41.331149021Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:41.331149021Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.331149021Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.353470978Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-14T11:48:41.391427015Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:ed3fe3f2b59f88def4ef31f4020793e2dc613571bebd4e8ee1241185fd2e6945",
                    "sha256:4531e200ac8d238b1f09c9b6f6aa2283532ec011de255b28cce9cf4aabf758f0",
                    "sha256:3c369314e0038454cd2849c5efac02812cea5a3b575f4e74cf6a9d1790360b24",
                    "sha256:3480549413ea041ba4a469d540b4bd3fe579029098f0a02038c0d1f4f0c25bdf",
                    "sha256:4689e8eca613fc415093e337de5d9194fbe1f767cc474f07b73ff08d2efcdac0",
                    "sha256:58a2f5d09de113264b5b87afc4e059a7ec81fd5c49049727c04e056762d3df43",
                    "sha256:d77ed098d292bd224c1369eaa46e53365706d292786e509080081845c4ee49ae",
                    "sha256:d5f8d964041ef0254a32c974b82fefdcbb1970f04b13df555e5ed2b3fa026fd2",
                    "sha256:0475318fb2cee452674e8e43c102893dc92dbe411998b8b7c18316fe68f380fb",
                    "sha256:33fb4fd24d0fa62bbf731becbad109e6852ef79a9699c77a93ab5370408ceb79",
                    "sha256:ab334445d6c82c51c7da64b8c06540b392b27d0ff04ee81667997906bf96266c"
                ]
            }
        },
        "0.9.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-08-11T15:58:22.516Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "0e3844ad1ebcbc77ca63eb7cfaf83572c5d2df1d",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-11T16:00:28.588714747Z",
            "history": [
                {
                    "created": "2021-07-22T00:45:43.828746523Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:45f5dfa135c848a348382413cb8b66a3b1dac3276814fbbe4684b39101d1b148 in / "
                },
                {
                    "created": "2021-07-22T00:45:44.255062023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:12:42.723010373Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:12:43.025749392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:12:43.27697977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:12:43.519475803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:13:16.852284698Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-07-22T10:13:17.39900309Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-07-22T10:13:17.716341211Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-07-22T10:13:18.075262662Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-07-22T10:13:18.405059583Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-07-22T10:13:18.744579878Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:13:19.067330295Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:13:19.340931071Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T10:13:19.618829582Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:20.249682519Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:20.249682519Z",
                    "created_by": "RUN /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:20.906841578Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:25.965361529Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T16:00:28.506147688Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T16:00:28.506147688Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.506147688Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.523573744Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T16:00:28.588714747Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:814bff7343242acfd20a2c841e041dd57c50f0cf844d4abd2329f78b992197f4",
                    "sha256:7c0b223167b96d7deaacf1e1d2d35892166645b09b17bcc8675a4d882ef84893",
                    "sha256:59b01b87c9e7f668b740d23eb872c5964636c33aef795f1186f08b172197bc35",
                    "sha256:988d9a3509bbb7ea8037d4eba3a5e0ada5dc165144c8ff0df89c0048d1ac6132",
                    "sha256:b857347059916922b353147882544f17bb96e64c639081c0677bf386c446be4f",
                    "sha256:e3135447ca3e69c6975aee1621c406e3865e0e143c807bbdcf05abefa56054a2",
                    "sha256:e19461bdc9777553c4b8165c91d27a8b2ae03ca35e15b4bf099b236714f5d7ea",
                    "sha256:286e304cfe70c1ba0b1fe4eea256b6dfd3a6586403f682091b407b6f0040334b",
                    "sha256:83e0199db72296c780b949455176c43c8665d8a4520beaa35b9ff1bb5b0e01e6",
                    "sha256:925ab85b78c6f87b2fd21e4d1018d7f6deb6ec3bc49e902c3f03bfb4e46a8640",
                    "sha256:b690af96d35effb2db792f384f353c6e5d91624fc7bdf489b7ead0f222f40328",
                    "sha256:bf8a9c10b14fa8df3f3e97a116f290832d8f4caf32142af4125c75bae0889b15"
                ]
            }
        },
        "0.9.2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-08-11T15:58:24.361Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "0e3844ad1ebcbc77ca63eb7cfaf83572c5d2df1d",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.2-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-08-11T15:59:57.908231273Z",
            "history": [
                {
                    "created": "2021-08-06T17:19:45.007652184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34eb5c40aa00028921a224d1764ae1b1f3ef710d191e4dfc7df55e0594aa7217 in / "
                },
                {
                    "created": "2021-08-06T17:19:45.183996158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:09:51.849552981Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:09:52.061719649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:09:52.261251863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:09:52.451471474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:09:59.22472711Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-08-07T00:09:59.491467806Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-08-07T00:09:59.698778544Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-07T00:09:59.922728244Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-07T00:10:00.134882118Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-07T00:10:00.318989521Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:10:00.494217008Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:10:00.670478521Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-07T00:10:00.850351003Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:02.595384161Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:02.595384161Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:03.145269483Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:11.203839837Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:57.844010276Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:57.844010276Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.844010276Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.865707744Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-11T15:59:57.908231273Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                    "sha256:82c3b921d80c1f50e539119e6212e3b56c153223b38072f5a9c2ebbb7801c4e7",
                    "sha256:b9239390c1b8396c4980e75888e4aaf0d4116ae40b34009df06e9e4ea2ec76dd",
                    "sha256:a33cbf3e54399d614f69a1effc4d6754717893bdab667791cba0fed39f95dbd1",
                    "sha256:c126a1b4f3176e96998298af3107cb129d3140d021ddde32ecc5ece423b8f6e5",
                    "sha256:cb460864147eef0b645c16a1c45d21db1c9457aacc0bb38cfcaf9e7c69f6d585",
                    "sha256:4ace8738d79f74bbee4e992060a9d06c43de05603237fc6c177291b1afee1f21",
                    "sha256:7dc9b7a678145a3e4b982fea248532b4ab05c06681eb5dbc5d10e7707547d9df",
                    "sha256:0fd83973faacf7d3795c12c539683c73924eef169cdc025166ac271db188a37b",
                    "sha256:2031cc041fd99412235dd352ec83281e12931d9e8fec9f0426a66194d0462523",
                    "sha256:b202a117e326d66392ac2a3cdd6882ff9ad8aea3a25bda732175eac9ecd610bf",
                    "sha256:707ef0b83c8449ef5f2e48e2ec40f147eb5a07f3a75f3738bce7c52d393531c6"
                ]
            }
        },
        "0.9.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1~buster",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-09-01T07:14:34.353Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "52d208daf382a900c2fa112375fb286dbf724efa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-01T07:16:58.368401059Z",
            "history": [
                {
                    "created": "2021-08-17T01:24:06.028544772Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87b4e60fe3af680c6815448374365a44e9ea461bc8ade2960b4639c25aed3ba9 in / "
                },
                {
                    "created": "2021-08-17T01:24:06.423874059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:28.630768408Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:28.906671303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:29.207166527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:45:29.511512984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:08.565814231Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-08-17T11:46:09.111951262Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-08-17T11:46:09.566219503Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:09.895283875Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:10.274864873Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-17T11:46:10.495021461Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:10.738406365Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:11.021940075Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-17T11:46:11.370722453Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:42.049677137Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:42.049677137Z",
                    "created_by": "RUN /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:42.670745009Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:49.26762829Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.260380114Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.278966125Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:16:58.368401059Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f68ef921efae588b3dd5cc466a1ca9c94c24785f1fa9420bea15ecc2dedbe781",
                    "sha256:d1279c519351f33534aecf6d849e6b4b1b6b344079f4da49507f40de63d6917b",
                    "sha256:678bbd796838432e8db17f2128b7a06eae49adba2991ebf9ed8ebf3b8cbe2d4e",
                    "sha256:009f1d338b5732c48b5a643326d4724797ab786f8fcb3412403f8feab8509fd3",
                    "sha256:8f736d52032f7a4b7d828c0e119571cc3c047514c568f30ad52b6a503d050d85",
                    "sha256:fb04ab8effa8ecf93d0d9b3a13041f95d4566b6e52d3251c1b94097e34b53e89",
                    "sha256:a22ad1dae17eb72c79f79e35b4f9a29a5f99c85c8c74752a08230125cbc36f43",
                    "sha256:f22b3e3e9c2ca60103a746d34562e2abd16fa421f6088d24d115526711231780",
                    "sha256:55f9730619d3a3f3f073df6958ca62cbd8e943d7c5c91884a32f1207f663a609",
                    "sha256:2fefa3a6ccf0553138ae857b027141c2908a18d30490a17f08fd73506fa2f2cb",
                    "sha256:9b9bc9ac6a5ba73279426fe74a50d3bd7dc61de2226660663f822cf7000857d1",
                    "sha256:6c0ecb78d1aa91e38d3ca51755c6cba145302a2808fc26c2e59281e1b1611955"
                ]
            }
        },
        "0.9.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.1",
                    "NJS_VERSION=0.6.1",
                    "PKG_RELEASE=1",
                    "DOCKER_GEN_VERSION=0.7.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "org.opencontainers.image.created": "2021-09-01T07:14:33.746Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "52d208daf382a900c2fa112375fb286dbf724efa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.9.3-alpine"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-09-01T07:15:56.502205151Z",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:06.520758915Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:06.881866958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:07.216552194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:07.50780149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:16.854343618Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-08-27T20:48:17.528477795Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2021-08-27T20:48:17.840794232Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.195996077Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.576612238Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-08-27T20:48:18.945018699Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:19.270591706Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:19.638937533Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T20:48:20.021935314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:09.128296029Z",
                    "created_by": "LABEL maintainer=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:09.128296029Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:09.696129272Z",
                    "created_by": "RUN /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:15.057604704Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.450667904Z",
                    "created_by": "ENV DOCKER_GEN_VERSION=0.7.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.469870688Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T07:15:56.502205151Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:24934e5e6c6104f7d9210bc221bded7b1c3518fb92d3db06e2c035bc96bdf1d1",
                    "sha256:fc03e3cb8568b16a19365b77f7e9b43ba42d6853a3f05b3c1689715ed16dd132",
                    "sha256:95b99a5c3767f26a3001cda7630c7bb2c4797eedc887eef7b81f6066150e52ca",
                    "sha256:1ea998b9547464916e815671ec321651283c342e237407383f3022fd7f4c31f8",
                    "sha256:45d993692050a801fff32815fb66ecf2d31e6a713f6f214388d8c692e1e1d2dd",
                    "sha256:1d61ef825b44cb54423bc3d301a2488703adb2470ed4176d20f8aa56cba7a549",
                    "sha256:ad247ac40202f5e1ce8ae3d94c10bca5bafc961eea506f58816f9a66d72dd3c7",
                    "sha256:ffbcb607f9e4c8f5bd9aba6c76e2ca8e45e7fd17f64124a27889511615ea46bf",
                    "sha256:9bca2a05ccc4aefe773bc22002904f8a0cbdef79411754620ad7bf6a0b488bb0",
                    "sha256:61caff3a8885f19fae1c78a10c46d9c2734cd97a4f23732bd094e4b2f9cd1ba7",
                    "sha256:9fa21b61477c5010bf07150154ee26ffe8af314ece4b97891c60c7510305a15d"
                ]
            }
        },
        "1.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.4",
                    "DOCKER_GEN_VERSION=0.9.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-23T19:00:38.980Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "cb82aad4c07756e7be16f3224edcf857c961294f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.4"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-23T19:02:45.534409664Z",
            "history": [
                {
                    "created": "2022-12-21T01:20:32.555983351Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73e68ae6852c9afbb2989dc9c5b7c6668843f454b1bdcfb48658bfbc6c4af69e in / "
                },
                {
                    "created": "2022-12-21T01:20:33.000852514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.413671015Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.516379152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.617205236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.717393791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:34.991458906Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-12-21T11:28:35.261837393Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-12-21T11:28:35.384501045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.502804529Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.615080628Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.722296229Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:35.829816286Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:35.931828183Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:36.032076444Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:35.96894785Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:40.903016406Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.478640239Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.491015656Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.523954135Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNCIsInBpbiI6InNoYTI1Njo2NjBmMTM4YjQ0NzcwMDFkNjUzMjRhNTFmYTE1OGMxYjg2ODY1MWI0NGU0M2YwOTUzYmYwNjJlOWYzOGI3MmYzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OjAwNDdiNzI5MTg4YTE1ZGE0OTM4MGQ5NTA2ZDY1OTU5Y2NlNmQ0MDI5MWNjZmI0ZTAzOWY1ZGM3ZWZkMzMyODYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a70d251b65364698f195f5a0b424e0d67de81307b79afbe662abd797068a069",
                    "sha256:2dadbc36c170719f910a91a5417bf49deabd05bc39ccff3819a391462675ecd0",
                    "sha256:2b3eec3578075bf2ebce00bd6958f1c21b4b5624fcdde301a01b4bda7b8a9bc7",
                    "sha256:d13aea24d2cb0aee650b72ffa8a0c7863a5b06327542ae46fe5987f223cb836c",
                    "sha256:9a0ef04f57f54323637935c32b46a2cae3e0451a39b1c306d5b4bc6d4f479e0b",
                    "sha256:c72d75f45e5b50e9d16b482faac4646268abc644f1bd68dc2f45100defcf08a2",
                    "sha256:398acf5ca24759c732a193c5b8d5cd7bbab51a75fd44774aa68dd1fff7452ede",
                    "sha256:b806fdc0b80fe596c535f55faf9deba3589a7efaf2ca10e9178df668aaae3191",
                    "sha256:daca56121708bdc3393137353c4d9d84c89f56e6d561331ce33409a0f05fd3d4",
                    "sha256:9f7f39c591a3dca17383b5279832006210e10055142835c1a8606673bb04daf8",
                    "sha256:3b7119bfbeeeb6e1de0a76ee162f154938be63f6d9d3ba83734dbdc05931eea0",
                    "sha256:4b9274928006d4324a96a8f1cc972dcd9ba97e259b2bf34f6331665127299e6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.0.4",
                    "DOCKER_GEN_VERSION=0.9.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-23T19:00:39.067Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "cb82aad4c07756e7be16f3224edcf857c961294f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.4"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-23T19:01:54.125240695Z",
            "history": [
                {
                    "created": "2022-11-22T22:19:28.870801855Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:587cae71969871d3c6456d844a8795df9b64b12c710c275295a1182b46f630e7 in / "
                },
                {
                    "created": "2022-11-22T22:19:29.008562326Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.23926615Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.338402332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.439904881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:33.698866061Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-12-14T01:20:33.852199806Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-12-14T01:20:33.966851731Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.078579075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.190070722Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.287012336Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.391304535Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.506251802Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.607076382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:45.695395677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:51.418230446Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:11.283416124Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:16.850351903Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:53.99297098Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.043229868Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.092512864Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6YTliMjRiNjdkYzgzYjMzODNkMjJhMTQ5NDFjMmIyYjJjYTZhMTAzZDgwNWNhYzY4MjBmZDEzNTU5NDNiZWFmMSJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6ZGQ4YTA1NGQ3ZWYwMzBlOTRhNjQ0OTc4MzYwNWQ2YzMwNmMxZjY5YzEwYzJmYTA2YjY2YTAzMGUwZDFkYjc5MyJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ded7a220bb058e28ee3254fbba04ca90b679070424424761a53a043b93b612bf",
                    "sha256:1fee4bd55a8558ea7d3c6853234c5cfd8e0604bce76d06338817535f22858098",
                    "sha256:ec7e4a91c33b5d0d8ef5a4a79113648caab03a6176a43407bdc4f548bbdb0c68",
                    "sha256:0511ab7e6edc3eadfc6ce2a8a0691c5da36300336453807ca9b4ad87d6a1a6d0",
                    "sha256:c23f26e962bd25628cd27d47c812b759beb564299927b7f23cf1679eac91b534",
                    "sha256:f2d47996fdfa7691b228d6c50a33c8526e15e2ac958d58c9d47f454885c7d780",
                    "sha256:9e173cdce044cd94cc216182cf69274f233491d6582122d31d820e7679553a76",
                    "sha256:cb42400c77bd9899ab49afe21f46800fc6c327db85d6d3b869c76b443ecee817",
                    "sha256:69db722ae7191404dba67a1140ddff42596e6d60364c3d2e343ebd64dc3a4986",
                    "sha256:eaf384d32289402255d5569bea2df6c7bf0c026d25cdab016009d947ae5c084c",
                    "sha256:9b06ba8ca1606e3d29f430bd1e6b3c2f0ec07d0d01f18a2b021d44f2dd0eec98",
                    "sha256:b9abd280b8b0803ee8dc49494255616413104f60af75d2e6c43fc055fee8c7db",
                    "sha256:bdb376534e20998766daf11e0d323349b3f0a4137cb31a826d4248852ec3e005",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.0",
                    "DOCKER_GEN_VERSION=0.8.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-03-07T13:23:18.635Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "3257177d80cfcc27d3ae556471a9b87a7af5f92a",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-03-07T13:25:52.902406922Z",
            "history": [
                {
                    "created": "2022-03-01T02:13:29.453738761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48a85028743f16ed927507322e3e3beee187fbfadd0b781d4b89de197c64b5b in / "
                },
                {
                    "created": "2022-03-01T02:13:29.758634534Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T13:58:55.0198628Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T13:58:55.219084328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T13:58:55.411408823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T13:58:55.552222668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T14:00:04.12469115Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-03-01T14:00:04.492433083Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-03-01T14:00:04.790503847Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-01T14:00:05.030550223Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-01T14:00:05.313489827Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-01T14:00:05.440317527Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T14:00:05.589555883Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T14:00:05.738639007Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T14:00:05.875390518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:24:11.176182125Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:24:11.176182125Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:24:11.176182125Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:24:11.176182125Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:24:12.388760465Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:24:19.132948321Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:52.831680635Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:52.849759262Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:52.902406922Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:52.902406922Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:25:52.902406922Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:25:52.902406922Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1401df2b50d5de5a743b7bac3238ef3b7ce905ae39f54707b0ebb8eda3ab10bc",
                    "sha256:57a9a0cdd450687265b5d49d47e8dc707f178772faa43a7b01c2299cd39113b7",
                    "sha256:3baebd9b50ad6c27671bb9748f3f44922650c46f04977a7857c0366390920afb",
                    "sha256:d3ae25fc9f7a917bcd2c3158eff7dc5fc848157e724efdb9af9ffe3771cda464",
                    "sha256:53db376e88c7ebd83d9b30e0d20ee818787c21d97c2bd365b02cf23487592007",
                    "sha256:e4b39f9495876939f14376f32d7c7ba83526636a8a8b52c008ab32ade9ba6e06",
                    "sha256:341bd4bfd105988d9da98dcca143971481295e401c4ea1de6aa03e48f8c3bb3f",
                    "sha256:cedae8e38a883a9ad23ccfbd4b132d237d0ebaf9b8103d28a31cbc283f8e76e1",
                    "sha256:05a8fc7a5a8ca7a35e41275214e98816bf4d7e010750135f063658cb268caa5f",
                    "sha256:02620285bd68531983edc95f83059d7c649adf6cc9de6acb6d0433ba40337eaf",
                    "sha256:f7e08a05dfe3dadd8a35a1a1a332a0b6cbbb8eddbd7540420691bdb79b9a3298",
                    "sha256:bacbecbb14c418711f0b88e9f2ed1502fb1fd75e56d9436a7ff8e8f277b716ad"
                ]
            }
        },
        "1.0.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.0.0",
                    "DOCKER_GEN_VERSION=0.8.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-03-07T13:23:18.104Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "3257177d80cfcc27d3ae556471a9b87a7af5f92a",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-03-07T13:25:09.293517194Z",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.16538557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.564847523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.780944464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:58.001318895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:07.536319062Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-25T20:39:08.151512909Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-25T20:39:08.618949282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.304128562Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.813218835Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:10.15290576Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.498199739Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.860347544Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:11.21594189Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:23:43.921659448Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:23:43.921659448Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:23:43.921659448Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:23:43.921659448Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:23:44.602039789Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.0 DOCKER_GEN_VERSION=0.8.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:23:50.871166259Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:09.245992478Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:09.265891767Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:09.293517194Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-07T13:25:09.293517194Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:25:09.293517194Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T13:25:09.293517194Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:67bae81de3dc5ccf5101dd4973e8e4b10ee3d5681feb9c30119e6acee1e12dd5",
                    "sha256:89f4d03665cee1ca943d0b55c086ea7577f4658c2cabe69eaf640f1dc47129f9",
                    "sha256:318191938fd7801d80ad617482e4312f0ced71e6c1d4bcb02e12d90a9d65eb11",
                    "sha256:a770f8eba3cb3840d7579e2c4925c9fa275813e8719fe5435905b887a9ee7674",
                    "sha256:6fda88393b8b02872c87c6626807e7bfac1f49e63f47a5ddba0cd11fae99b575",
                    "sha256:89c6c0822afd8fac6f0691e6df8e890b99a47f52b66cd28089bef7e3502578d4",
                    "sha256:3966acf6205be7efd7a05bf3e880b3acfee3a319e489013126163017aaee0ca0",
                    "sha256:4a32a882f15081d31bb076884b4557985158b3c1ef26e6a1bf4829112cfb8f8c",
                    "sha256:01e206d04bdd298bec820badacee069a526abeddc83867defd5b92c0761c696b",
                    "sha256:4465464553a79747d2744fec5388b4fe6a2aadded07e7101e536fdb8d790602e",
                    "sha256:c0100c307bcc364e40202170e9616fba847ac5865dc90aa7b0da7d553bec6d87"
                ]
            }
        },
        "1.0.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.1",
                    "DOCKER_GEN_VERSION=0.9.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-04-10T11:51:15.346Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2f82265891f1dc70c9fc815ded5bfa2920016054",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-04-10T11:53:17.652786247Z",
            "history": [
                {
                    "created": "2022-03-29T00:22:18.812238611Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:966d3669b40f5fbaecee1ecbeb58debe19001076da5d94717080d55efbc25971 in / "
                },
                {
                    "created": "2022-03-29T00:22:19.186561403Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:26.369925595Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:26.464244745Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:26.552416285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:26.642035979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:43.887359375Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-03-29T16:02:44.149274948Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-03-29T16:02:44.25432537Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-29T16:02:44.355088428Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-29T16:02:44.452259547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-03-29T16:02:44.537389801Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:44.630304858Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:44.719455911Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-29T16:02:44.809073004Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:52:02.123478894Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:52:02.123478894Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:52:02.123478894Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:52:02.123478894Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:52:02.618389518Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:52:10.267150803Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:17.527379527Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:17.561807662Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:17.619688533Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:17.652786247Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:17.652786247Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:53:17.652786247Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguMCIsInBpbiI6InNoYTI1Njo1ZWI1OGNhMGE3NDdlZDJlMmY0ZTA2OWQxMTE2YmFkYjAyYTE3MmNmMTYwZDMxZjgwMTc3NmEyMzQyYzEyODYzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMS42IiwicGluIjoic2hhMjU2OjIyNzVhZjBmMjBkNzFiMjkzOTE2ZjE5NThmODQ5N2Y5ODdiOGQ4ZmQ4MTEzZGY1NDYzNWYyYTU5MTUwMDJiZjEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:608f3a074261105f129d707e4d9ad3d41b5baa94887f092b7c2857f7274a2fce",
                    "sha256:ea207a4854e73eca698e94f323fadb920bbc5fc2af83d4bda9f47fd33fa1a076",
                    "sha256:33cf1b723f65c22ccc4660c44fe8b919b75e7bb9ffcfe80432bb75363be34a5b",
                    "sha256:5c77d760e1f430188e860d79c2f4efa0f082f6831046e5584810bc5ead42dc5d",
                    "sha256:fac199a5a1a59d93dd9b23d4c3445c39070ce0d94f94def585085476f89610cf",
                    "sha256:ea4bc0cd4a9350584676b6aa3669984eb614f559229c11dc56a85140b49f0228",
                    "sha256:d7ca3de751405bd2505c22c6824f3e81e9f5ea32804621fb8531fe90a0e4bc77",
                    "sha256:73c255ab99146e9895bfe8452d4bf4305b0d5dc28abfb916d0c608e87c411130",
                    "sha256:3424c0ebccd224fbcfa5b5d8a6172bce9bf81cb6daeefcd0cf939ee56956fa8e",
                    "sha256:2837b93cac883dec12458d6d704f68cf290eedbad786d4ebb368275e1f74b5ae",
                    "sha256:2e42073ce95e2f8423e7e264cb5ed94fdf7c4c310829afc81cefb029838b4450",
                    "sha256:728a9dc79e8525ae02126cfb3d0376282172f6eef854a33ddd37857e712577a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.0.1",
                    "DOCKER_GEN_VERSION=0.9.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-04-10T11:51:16.131Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2f82265891f1dc70c9fc815ded5bfa2920016054",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-04-10T11:53:01.272743251Z",
            "history": [
                {
                    "created": "2022-04-05T00:19:59.790636867Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d673d25da3a14ce1f6cf66e4c7fd4f4b85a3759a9d93efb3fd9ff852b5b56e4 in / "
                },
                {
                    "created": "2022-04-05T00:19:59.912662499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.233408317Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.329866853Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.42983028Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.55049367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:02.69647011Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-04-05T07:22:02.862704884Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-04-05T07:22:02.969544931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-04-05T07:22:03.07131569Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-04-05T07:22:03.186450503Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-04-05T07:22:03.278197234Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:03.374037556Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:03.469273224Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:03.563972877Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:51:55.600300763Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:51:55.600300763Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:51:55.600300763Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:51:55.600300763Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:51:56.241389199Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.1 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:52:04.459300546Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:01.216452706Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:01.235676282Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:01.257969423Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:01.272743251Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-10T11:53:01.272743251Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-10T11:53:01.272743251Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguMC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6YTJjYTRmNGMwODI4YjFiNDI2YTMxNTNiMDY4YmYzMmEyMTg2ODkxMWM1N2E5ZmM0ZGNjZGM1ZmJiNjU1M2IzNSJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjEuNi1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NWEwZGY3ZmI3YzhjMDNlNDE1OGFlOTk3NGJmYmQ2YTE1ZGEyYmRmZGVkZWQ0ZmI2OTQzNjdlYzgxMjMyNWQzMSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fc242d58285699eca05db3cc7c7122a2b8e014d9481f323bd9277baacfa0628",
                    "sha256:be9057e6dae465a3dd10306bd5398b445a51ede456e250bf9821a346ff5b3570",
                    "sha256:c0b09410617a2a08c34804b5b7831f74c89e11f4d05350c64b1e32e2470bca63",
                    "sha256:d63b53686463856fa959fe99bc6ae02f00dd0afa7f2cb91a1e6c13b39d83aa2c",
                    "sha256:8df6b63c60d47188f987ef2b5efdc442f9d81650cebdc0e9f7fa8cd4a9012dd3",
                    "sha256:b991c80c3ef2663f4070e668193bc2bb543a77efc2801ebc7f6c2c1bfdb39e5e",
                    "sha256:01269f0cf7196d3463d86a5b78b127711ea7f987bb61005c8b4a867ddc7ff5e2",
                    "sha256:250a150e3274634f67d93091bd92940446773711f7b9873f795fabe29b67b6eb",
                    "sha256:88ef9d1f2b200cfc6496ae2bd50c1df8ea89a62bb9c4ce02c5b5ec1601b65891",
                    "sha256:95d0ac519b55646be4f5dff13a387ba9d28ae463dea159ec4a9e400b93e5bf88",
                    "sha256:f5900a48208a495dec8039d7c0d447a4fd88ffabd15c9fe40c37d5c805c56b99",
                    "sha256:77e47dd2aae7efaedc45899067e5c24b68cda1c15994bd885709754cdea30965",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.2",
                    "NJS_VERSION=0.7.7",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.2",
                    "DOCKER_GEN_VERSION=0.9.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-01T11:55:53.334Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "14ccabf45ac896730c4d4e41b3c8efb08f698ed3",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-01T11:57:59.817245574Z",
            "history": [
                {
                    "created": "2022-11-15T04:04:54.409488453Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d08e242792caa7f842fcf39a09ad59c97a856660e2013d5aed3e4a29197e9aaa in / "
                },
                {
                    "created": "2022-11-15T04:04:54.804179931Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.57587928Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.677442832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.776125681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.874368479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:31.038100236Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-11-15T13:14:31.391193841Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-11-15T13:14:31.505914256Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.620933268Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.735164268Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.832459386Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:31.938730316Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:32.053703641Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:32.170016733Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:43.95990101Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:43.95990101Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:43.95990101Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:43.95990101Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:56:44.947497532Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:56:57.40530685Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:59.765132038Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:59.781142372Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:59.80241835Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:59.817245574Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:59.817245574Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:57:59.817245574Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguMSIsInBpbiI6InNoYTI1NjoxMmQzOTk1MTU2Y2IwZGNkYmI5ZDNlZGI1ODI3ZTRlOGUxYmY1YmY5MjQzNmJmZDEyZDY5NmVjOTk3MDAxYTlhIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4yIiwicGluIjoic2hhMjU2OmUyMDlhYzJmMzdjNzBjMWUwZTk4NzNhNWY3MjMxZTkxZGNkODNmZGYxMTc4ZDhlZDM2YzJlYzA5OTc0MjEwYmEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec4a38999118b78eab6899b913a548cb0b2c9b68fd05aff846a56b628b597f38",
                    "sha256:f7ed3797e2964e58da7a396e8b1a98b2aaa84a6190f5fabc57123a92fca78469",
                    "sha256:f86e88a471f4cf2a042312c5c2472838b1c806c5ee83b37a2b2e436c76fcdfb7",
                    "sha256:5a5bafd53f766cdebd7cf6ec4d07dda9300b5d5906a7afa0829b41899a82ea6e",
                    "sha256:e2d75d87993c69701dab59a11e3c081b5d42129048df04e01b50c11bebcf0a5c",
                    "sha256:6cffb086835a28fcada50f39aed18e189ae4d3c139717411d477763274412414",
                    "sha256:6bc287b48dfda13f59b905adec6170435a1b30461beb23209a4a003c70bbe689",
                    "sha256:61c43a6994f491987d9bd08421096b759e5d255ed470be31a4ed2033395f0206",
                    "sha256:cfd229fca33ac739aa18dd23b2345197cf7deb9f710b88caf11fb549d0d78bde",
                    "sha256:6270e0af79d34b6f22562ed07d24c1995499fa82dd32e729ebb9f7ec46cf2391",
                    "sha256:4a96691dd2fd642bc8453233ad66fbb09826a97c24ded4ad90476eadc04d9283",
                    "sha256:bfd3ca410ec1b7d307d01690878f6af374698abbb5ba726594d33646f7eb26d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.2",
                    "NJS_VERSION=0.7.7",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.0.2",
                    "DOCKER_GEN_VERSION=0.9.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-01T11:55:48.301Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "14ccabf45ac896730c4d4e41b3c8efb08f698ed3",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-01T11:57:07.545093859Z",
            "history": [
                {
                    "created": "2022-11-12T04:19:23.05154209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ceeb6e8632fafc657116cbf3afbd522185a16963230b57881073dad22eb0e1a3 in / "
                },
                {
                    "created": "2022-11-12T04:19:23.199716539Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.250897562Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.350990952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.461575962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.567489916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:46.416512795Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"98d244d5dea3f0c49692843b1857e21dc7353e749f9ff8a526036a3beeea299e156183b6a98070ffc68a23d191e1f24c577d7ea874f8cc27ce01f4dc832658b6 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-11-12T06:27:46.606923928Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-11-12T06:27:46.72048155Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:46.83133408Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:46.944034729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:47.037384315Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.135428797Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.235819248Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.33774049Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:18.437630136Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:18.437630136Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:18.437630136Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:56:18.437630136Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:56:22.689511272Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.2 DOCKER_GEN_VERSION=0.9.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:56:25.45219308Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:07.495377155Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:07.517363468Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:07.538031587Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:07.545093859Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-01T11:57:07.545093859Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-01T11:57:07.545093859Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguMS1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NDJkMzU2NzQ4NjRmYmI1Nzc1OTRiNjBiODRkZGZiYTFiZTUyYjRkNDI5OGM5NjFiNDZiYTk1ZTlmYjQ3MTJlOCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMi1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NDU1YzM5YWZlYmQ0ZDk4ZWYyNmRkNzAyODRhYTg2ZTY4MTBiMDQ4NWFmNWY0ZjIyMmIxOWI4OTc1OGNhYmYxZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e5e13b0c77cbb769548077189c3da2f0a764ceca06af49d8d558e759f5c232bd",
                    "sha256:07099189e7ec257e501d9625507b55e0ea32c330e38c90d8533b3fa2a7a97069",
                    "sha256:fcf860bf48b4e20f24f44ba02115dc9f23eef6d41d69e9a050889bf25104e12a",
                    "sha256:6636f46e559dffe6373b200c359773488f201ed2153507fb8d8fe3f04fdf477e",
                    "sha256:9365b1fffb04e52b8f6abf1c8737ba4da02e134c1d8550e0ace4cb562d12f070",
                    "sha256:bd502c2dee4c0bc2cf334c7d289e5a14ededd6c9c361137d128d3c12e4babf5d",
                    "sha256:98e6734d32b73b4236723db8919687d52d38658653a4a9496e662ac8a20df331",
                    "sha256:3973482a1ec7da68b7142ae6144a065aa224f21d84002637e3b2fe0f109c51db",
                    "sha256:0ca2eee890ca7d7208fee7ce3aecd6fc756259f0fdd43112b94295929b1c26ce",
                    "sha256:f46ef6df4a00dd6902d9cda57ca17008d2643cc00f83d157ca5801dd9c3caaa6",
                    "sha256:658b201bf2fc3ab6846e2b1af73400772997217302076a4ec3dfbb42521b8f90",
                    "sha256:6a4b43c671c4be1e19235cbc5b0ce468a479662ec3156deb07628781839af332",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.2",
                    "NJS_VERSION=0.7.7",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.3",
                    "DOCKER_GEN_VERSION=0.9.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-03T18:44:53.434Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9c2b2cec38d82e60e6abdd56431d8d435a7b3daa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-03T18:47:30.92796389Z",
            "history": [
                {
                    "created": "2022-11-15T04:04:54.409488453Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d08e242792caa7f842fcf39a09ad59c97a856660e2013d5aed3e4a29197e9aaa in / "
                },
                {
                    "created": "2022-11-15T04:04:54.804179931Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.57587928Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.677442832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.776125681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:11.874368479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:31.038100236Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-11-15T13:14:31.391193841Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-11-15T13:14:31.505914256Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.620933268Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.735164268Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-15T13:14:31.832459386Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:31.938730316Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:32.053703641Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-15T13:14:32.170016733Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:56.434247344Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:56.434247344Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:56.434247344Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:56.434247344Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:45:57.058797927Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:09.964972148Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:47:30.864108621Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:47:30.881513167Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:47:30.907645237Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:47:30.92796389Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:47:30.92796389Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:47:30.92796389Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguOCIsInBpbiI6InNoYTI1NjowOTM2ZTc0NDNhMDQ2NmNkYWQ0NjdhYjhiYWZlNjA4Mjk5OWMwNjVlYmMzODllN2RiMjJiMDQ1MmQ1ZDk4ODQyIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4yIiwicGluIjoic2hhMjU2OmUyMDlhYzJmMzdjNzBjMWUwZTk4NzNhNWY3MjMxZTkxZGNkODNmZGYxMTc4ZDhlZDM2YzJlYzA5OTc0MjEwYmEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec4a38999118b78eab6899b913a548cb0b2c9b68fd05aff846a56b628b597f38",
                    "sha256:f7ed3797e2964e58da7a396e8b1a98b2aaa84a6190f5fabc57123a92fca78469",
                    "sha256:f86e88a471f4cf2a042312c5c2472838b1c806c5ee83b37a2b2e436c76fcdfb7",
                    "sha256:5a5bafd53f766cdebd7cf6ec4d07dda9300b5d5906a7afa0829b41899a82ea6e",
                    "sha256:e2d75d87993c69701dab59a11e3c081b5d42129048df04e01b50c11bebcf0a5c",
                    "sha256:6cffb086835a28fcada50f39aed18e189ae4d3c139717411d477763274412414",
                    "sha256:b20c439772e706e29ab7be3d65f07f01fbf203e816fb7338de78e1d530e4ad25",
                    "sha256:9a5b26a9774f47a3b99990aaa843b8be324f3bbd7e97f445079c1256ca2758f2",
                    "sha256:a591025ab189aef4c16aa02c88b6dcc88a8b6c955d30b40d6cfdda161371e20c",
                    "sha256:5c213f64fc6a63a7244b3b864a8bb7e00ff645acbf3488440c57b6067261758b",
                    "sha256:8818acddda3238b9a19a9d2df11a03fb9ce5274c83b20940034f7206452819dc",
                    "sha256:3ad8376b45fc684312ae02e2edd872968eb02b510b0755095de5e65d4a131eb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.2",
                    "NJS_VERSION=0.7.7",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.0.3",
                    "DOCKER_GEN_VERSION=0.9.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-03T18:44:52.107Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "9c2b2cec38d82e60e6abdd56431d8d435a7b3daa",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-03T18:46:08.274284494Z",
            "history": [
                {
                    "created": "2022-11-12T04:19:23.05154209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ceeb6e8632fafc657116cbf3afbd522185a16963230b57881073dad22eb0e1a3 in / "
                },
                {
                    "created": "2022-11-12T04:19:23.199716539Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.250897562Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.350990952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.461575962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:39.567489916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:46.416512795Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"98d244d5dea3f0c49692843b1857e21dc7353e749f9ff8a526036a3beeea299e156183b6a98070ffc68a23d191e1f24c577d7ea874f8cc27ce01f4dc832658b6 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-11-12T06:27:46.606923928Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-11-12T06:27:46.72048155Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:46.83133408Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:46.944034729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-11-12T06:27:47.037384315Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.135428797Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.235819248Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T06:27:47.33774049Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:23.430048169Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:23.430048169Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:23.430048169Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:45:23.430048169Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:45:25.170120199Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.3 DOCKER_GEN_VERSION=0.9.1 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:45:32.546598348Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:08.189096654Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:08.227479067Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:08.246382476Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:08.274284494Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-03T18:46:08.274284494Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-03T18:46:08.274284494Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTguOC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6ZDM5ODQ4MjMwODE4MTNkMWYyYjM5MzllOWI1YWU3MmVhMTRlM2E4ODZkZDllNzcyNjAwMGJmNjhkMjNjMjMxYSJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMi1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NDU1YzM5YWZlYmQ0ZDk4ZWYyNmRkNzAyODRhYTg2ZTY4MTBiMDQ4NWFmNWY0ZjIyMmIxOWI4OTc1OGNhYmYxZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e5e13b0c77cbb769548077189c3da2f0a764ceca06af49d8d558e759f5c232bd",
                    "sha256:07099189e7ec257e501d9625507b55e0ea32c330e38c90d8533b3fa2a7a97069",
                    "sha256:fcf860bf48b4e20f24f44ba02115dc9f23eef6d41d69e9a050889bf25104e12a",
                    "sha256:6636f46e559dffe6373b200c359773488f201ed2153507fb8d8fe3f04fdf477e",
                    "sha256:9365b1fffb04e52b8f6abf1c8737ba4da02e134c1d8550e0ace4cb562d12f070",
                    "sha256:bd502c2dee4c0bc2cf334c7d289e5a14ededd6c9c361137d128d3c12e4babf5d",
                    "sha256:82f1d442aca0cffaf6540d4e26416cf35ff8c907d9fd87644da7e2aeefa39f1f",
                    "sha256:dc2d473eee8bb7ff46b4c3fd99ad2e4598be848febeee8843f7addc659d92d4c",
                    "sha256:3df78a6799acbba62ca40d14f4de5865604ddf4d01cb31462538419a061ede84",
                    "sha256:4affe20a62091b96648982753c80f8abe28ef03e3e41483a8de5720cd645f9bf",
                    "sha256:1140194f37296423dfa34932b43ba30c0e37f9fa673d1dd1b637eef966cc14c9",
                    "sha256:8ae61e79a9d07a6dcb0d4fc40a60753be5f8ff79cbf5af2f1064d848a5dd9e75",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.0.4",
                    "DOCKER_GEN_VERSION=0.9.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-23T19:00:38.980Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "cb82aad4c07756e7be16f3224edcf857c961294f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.4"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-23T19:02:45.534409664Z",
            "history": [
                {
                    "created": "2022-12-21T01:20:32.555983351Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73e68ae6852c9afbb2989dc9c5b7c6668843f454b1bdcfb48658bfbc6c4af69e in / "
                },
                {
                    "created": "2022-12-21T01:20:33.000852514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.413671015Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.516379152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.617205236Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:16.717393791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:34.991458906Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-12-21T11:28:35.261837393Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-12-21T11:28:35.384501045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.502804529Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.615080628Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-21T11:28:35.722296229Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:35.829816286Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:35.931828183Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:28:36.032076444Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:34.715404226Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:35.96894785Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:40.903016406Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.478640239Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.491015656Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.523954135Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:02:45.534409664Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNCIsInBpbiI6InNoYTI1Njo2NjBmMTM4YjQ0NzcwMDFkNjUzMjRhNTFmYTE1OGMxYjg2ODY1MWI0NGU0M2YwOTUzYmYwNjJlOWYzOGI3MmYzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OjAwNDdiNzI5MTg4YTE1ZGE0OTM4MGQ5NTA2ZDY1OTU5Y2NlNmQ0MDI5MWNjZmI0ZTAzOWY1ZGM3ZWZkMzMyODYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a70d251b65364698f195f5a0b424e0d67de81307b79afbe662abd797068a069",
                    "sha256:2dadbc36c170719f910a91a5417bf49deabd05bc39ccff3819a391462675ecd0",
                    "sha256:2b3eec3578075bf2ebce00bd6958f1c21b4b5624fcdde301a01b4bda7b8a9bc7",
                    "sha256:d13aea24d2cb0aee650b72ffa8a0c7863a5b06327542ae46fe5987f223cb836c",
                    "sha256:9a0ef04f57f54323637935c32b46a2cae3e0451a39b1c306d5b4bc6d4f479e0b",
                    "sha256:c72d75f45e5b50e9d16b482faac4646268abc644f1bd68dc2f45100defcf08a2",
                    "sha256:398acf5ca24759c732a193c5b8d5cd7bbab51a75fd44774aa68dd1fff7452ede",
                    "sha256:b806fdc0b80fe596c535f55faf9deba3589a7efaf2ca10e9178df668aaae3191",
                    "sha256:daca56121708bdc3393137353c4d9d84c89f56e6d561331ce33409a0f05fd3d4",
                    "sha256:9f7f39c591a3dca17383b5279832006210e10055142835c1a8606673bb04daf8",
                    "sha256:3b7119bfbeeeb6e1de0a76ee162f154938be63f6d9d3ba83734dbdc05931eea0",
                    "sha256:4b9274928006d4324a96a8f1cc972dcd9ba97e259b2bf34f6331665127299e6f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.0.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.0.4",
                    "DOCKER_GEN_VERSION=0.9.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-12-23T19:00:39.067Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "cb82aad4c07756e7be16f3224edcf857c961294f",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.0.4"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-12-23T19:01:54.125240695Z",
            "history": [
                {
                    "created": "2022-11-22T22:19:28.870801855Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:587cae71969871d3c6456d844a8795df9b64b12c710c275295a1182b46f630e7 in / "
                },
                {
                    "created": "2022-11-22T22:19:29.008562326Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.23926615Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.338402332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:28.439904881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:33.698866061Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-12-14T01:20:33.852199806Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2022-12-14T01:20:33.966851731Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.078579075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.190070722Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2022-12-14T01:20:34.287012336Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.391304535Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.506251802Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:34.607076382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:45.695395677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T01:20:51.418230446Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:08.28384604Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:11.283416124Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.0.4 DOCKER_GEN_VERSION=0.9.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:16.850351903Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:53.99297098Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.043229868Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.092512864Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-23T19:01:54.125240695Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6YTliMjRiNjdkYzgzYjMzODNkMjJhMTQ5NDFjMmIyYjJjYTZhMTAzZDgwNWNhYzY4MjBmZDEzNTU5NDNiZWFmMSJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6ZGQ4YTA1NGQ3ZWYwMzBlOTRhNjQ0OTc4MzYwNWQ2YzMwNmMxZjY5YzEwYzJmYTA2YjY2YTAzMGUwZDFkYjc5MyJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ded7a220bb058e28ee3254fbba04ca90b679070424424761a53a043b93b612bf",
                    "sha256:1fee4bd55a8558ea7d3c6853234c5cfd8e0604bce76d06338817535f22858098",
                    "sha256:ec7e4a91c33b5d0d8ef5a4a79113648caab03a6176a43407bdc4f548bbdb0c68",
                    "sha256:0511ab7e6edc3eadfc6ce2a8a0691c5da36300336453807ca9b4ad87d6a1a6d0",
                    "sha256:c23f26e962bd25628cd27d47c812b759beb564299927b7f23cf1679eac91b534",
                    "sha256:f2d47996fdfa7691b228d6c50a33c8526e15e2ac958d58c9d47f454885c7d780",
                    "sha256:9e173cdce044cd94cc216182cf69274f233491d6582122d31d820e7679553a76",
                    "sha256:cb42400c77bd9899ab49afe21f46800fc6c327db85d6d3b869c76b443ecee817",
                    "sha256:69db722ae7191404dba67a1140ddff42596e6d60364c3d2e343ebd64dc3a4986",
                    "sha256:eaf384d32289402255d5569bea2df6c7bf0c026d25cdab016009d947ae5c084c",
                    "sha256:9b06ba8ca1606e3d29f430bd1e6b3c2f0ec07d0d01f18a2b021d44f2dd0eec98",
                    "sha256:b9abd280b8b0803ee8dc49494255616413104f60af75d2e6c43fc055fee8c7db",
                    "sha256:bdb376534e20998766daf11e0d323349b3f0a4137cb31a826d4248852ec3e005",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.1.0",
                    "DOCKER_GEN_VERSION=0.9.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-01-17T07:55:27.227Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "5d22134ee6d37f5f5712aadde6ee2eda85e25956",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.1.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-01-17T07:58:05.72273606Z",
            "history": [
                {
                    "created": "2023-01-11T02:34:44.402266175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e2398d0bf516084b2b37ba1bb76b86d56e66999831df692461679fbd6a5d8eb6 in / "
                },
                {
                    "created": "2023-01-11T02:34:44.829692296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.289903157Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.388654688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.486361076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.583188263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:08.396714963Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-11T06:31:08.738784763Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-11T06:31:08.862689535Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:08.9809022Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.097176184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.200440083Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.306949397Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.408144444Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.511615468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:30.795301388Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:42.696148626Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.656719623Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.674341406Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.699821182Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNSIsInBpbiI6InNoYTI1NjpiYjk4MTFmYWQ0M2E3ZDZmZDIxNzMyNDhkODMzMWIyZGNmNWFjOWFmMjA5NzZiMTkzN2VjZDIxNGM1YjhjMzgzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmI4ZjIzODNhOTU4NzllMWFlMDY0OTQwZDlhMjAwZjY3YTZjNzllNzEwZWQ4MmFjNDIyNjMzOTczNjdlN2NjNGUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:67a4178b7d47beb6a1f697a593bd0c6841c67eb0da00f2badefb05fd30671490",
                    "sha256:7e7121bf193a9d6c7623520cdfe2c1d58da671d201ed13a21525574f8522d32d",
                    "sha256:8477a329ab95b790e1d4be0ff5761a85f39a7344cb45fb8e3f35442155c05945",
                    "sha256:ff1154af28db5b3a94015268111cc49d5dd3fe7370cf2e328425d3d99f12bdb8",
                    "sha256:049fd3bdb25d6b2c0e821db681c0ade756f03f14a1966fb7fc17f208065dce6b",
                    "sha256:80115eeb30bc12d360f0e102c2ef98176079305e9a1f99074093e1965cd23511",
                    "sha256:20b4b00e185ddd56adda77c66688dd8464d8031ee3cd5622a8f08895c940a298",
                    "sha256:9941b9332d4e2393b6d36ed5e9846121d4057ed34fde4515ac76ec4fc2f70590",
                    "sha256:20a184a9db8a67fc1e1d7e21d627fe8cd5dce6e85383afafaf7ee1d372e1a09e",
                    "sha256:bc6d5a1c2d16f672b5ad7d1629b03f930f7df836f7b197cbc81b875ed8b83cc6",
                    "sha256:a18e747cb108a47bd4a3577b7936a475036a406ce8eab953cf3b0b0e07a31471",
                    "sha256:a45f092f0410ae684fc956bec4f0322b0ebbd0cf023d7a375ec3f364d5f676e8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.1.0",
                    "DOCKER_GEN_VERSION=0.9.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-01-17T07:55:23.760Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "5d22134ee6d37f5f5712aadde6ee2eda85e25956",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.1.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-01-17T07:56:44.465337557Z",
            "history": [
                {
                    "created": "2023-01-09T17:05:20.497231175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in / "
                },
                {
                    "created": "2023-01-09T17:05:20.656498283Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.205127795Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.323697598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.432973364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.173527282Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-09T18:39:40.337015296Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-09T18:39:40.454797447Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.570429729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.683138416Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.781316037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.882297456Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.000099879Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.114129153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:50.413130453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:56.392222262Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:55:51.555544445Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:55:59.774825733Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.42633277Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.437804337Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.454802488Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNS1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MjM4MWMxZTVmODM1MGE5MDE1OTdkNjMzYjJlNTE3Nzc1ZWVhYzdhNjY4MmJlMzkyMjVhOTNiMjJjZmQwZjhiYiJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjU5NjEwYWFkYjM0Yjc5NjdkZWE3Njg2OTI2ZmRjZjA4ZDU4OGE3MWM1MTIxZWRiMDk0Y2UwZTRjZGJjNDVlNiJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8e012198eea15b2554b07014081c85fec4967a1b9cc4b65bd9a4bce3ae1c0c88",
                    "sha256:e75b8fc6a0d517f1df8ea88f32b6bbb09920e7199bfc9a7371368da2dbdcdae3",
                    "sha256:c700d3f5f15ba63c02dad44ce7df1907f5bfb54399dde13b6cedcf109617a2a8",
                    "sha256:fc9a7040ee9324751e119abf9d7489f05dd1e611c2dd940940f819087b8a1fde",
                    "sha256:a565521a6b61ff1ae6ca96501c2d9fe9b715c74826b6fd0725bf8e3e7418b7c8",
                    "sha256:2348e9726babe93184fe7d2cccb232b4ff86f79a038c5ca1a77e576706fef462",
                    "sha256:1d886466c4552a8b6d225f9fb0162ab25fa1171e29943ead2c93847533e50a78",
                    "sha256:4fb069ba480395a529ba4075b65b561229c51387a6cebb3b40d0fc53eb964682",
                    "sha256:154526d1a76ff896b3ad027c629db8bf8aa51e2879421891d0c399b5ca13f0b0",
                    "sha256:98e21462c76e0e997c87d78bd378aa75941e344a9b8eff02eef3a1554b85d19d",
                    "sha256:8857496ac82a20943698925f49c127bfc6562f12519a32a06b301e983f437104",
                    "sha256:a6005547969a7438b76311e4bc58b0ed0ef44314db187a7e5e2e1e13309729f9",
                    "sha256:52a247bdb30882ede62e9ac2737b6c68316b1a1059bfaa523d8f4a2b437550da",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.1.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.1.0",
                    "DOCKER_GEN_VERSION=0.9.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-01-17T07:55:27.227Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "5d22134ee6d37f5f5712aadde6ee2eda85e25956",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.1.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-01-17T07:58:05.72273606Z",
            "history": [
                {
                    "created": "2023-01-11T02:34:44.402266175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e2398d0bf516084b2b37ba1bb76b86d56e66999831df692461679fbd6a5d8eb6 in / "
                },
                {
                    "created": "2023-01-11T02:34:44.829692296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.289903157Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.388654688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.486361076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.583188263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:08.396714963Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-11T06:31:08.738784763Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-11T06:31:08.862689535Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:08.9809022Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.097176184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.200440083Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.306949397Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.408144444Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.511615468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:29.965657133Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:30.795301388Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:42.696148626Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.656719623Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.674341406Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.699821182Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:58:05.72273606Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNSIsInBpbiI6InNoYTI1NjpiYjk4MTFmYWQ0M2E3ZDZmZDIxNzMyNDhkODMzMWIyZGNmNWFjOWFmMjA5NzZiMTkzN2VjZDIxNGM1YjhjMzgzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmI4ZjIzODNhOTU4NzllMWFlMDY0OTQwZDlhMjAwZjY3YTZjNzllNzEwZWQ4MmFjNDIyNjMzOTczNjdlN2NjNGUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:67a4178b7d47beb6a1f697a593bd0c6841c67eb0da00f2badefb05fd30671490",
                    "sha256:7e7121bf193a9d6c7623520cdfe2c1d58da671d201ed13a21525574f8522d32d",
                    "sha256:8477a329ab95b790e1d4be0ff5761a85f39a7344cb45fb8e3f35442155c05945",
                    "sha256:ff1154af28db5b3a94015268111cc49d5dd3fe7370cf2e328425d3d99f12bdb8",
                    "sha256:049fd3bdb25d6b2c0e821db681c0ade756f03f14a1966fb7fc17f208065dce6b",
                    "sha256:80115eeb30bc12d360f0e102c2ef98176079305e9a1f99074093e1965cd23511",
                    "sha256:20b4b00e185ddd56adda77c66688dd8464d8031ee3cd5622a8f08895c940a298",
                    "sha256:9941b9332d4e2393b6d36ed5e9846121d4057ed34fde4515ac76ec4fc2f70590",
                    "sha256:20a184a9db8a67fc1e1d7e21d627fe8cd5dce6e85383afafaf7ee1d372e1a09e",
                    "sha256:bc6d5a1c2d16f672b5ad7d1629b03f930f7df836f7b197cbc81b875ed8b83cc6",
                    "sha256:a18e747cb108a47bd4a3577b7936a475036a406ce8eab953cf3b0b0e07a31471",
                    "sha256:a45f092f0410ae684fc956bec4f0322b0ebbd0cf023d7a375ec3f364d5f676e8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.1.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.1.0",
                    "DOCKER_GEN_VERSION=0.9.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-01-17T07:55:23.760Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "5d22134ee6d37f5f5712aadde6ee2eda85e25956",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.1.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-01-17T07:56:44.465337557Z",
            "history": [
                {
                    "created": "2023-01-09T17:05:20.497231175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in / "
                },
                {
                    "created": "2023-01-09T17:05:20.656498283Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.205127795Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.323697598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.432973364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.173527282Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-09T18:39:40.337015296Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-09T18:39:40.454797447Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.570429729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.683138416Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.781316037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.882297456Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.000099879Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.114129153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:50.413130453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:56.392222262Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:55:50.92558218Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:55:51.555544445Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.1.0 DOCKER_GEN_VERSION=0.9.3 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:55:59.774825733Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.42633277Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.437804337Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.454802488Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-17T07:56:44.465337557Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNS1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MjM4MWMxZTVmODM1MGE5MDE1OTdkNjMzYjJlNTE3Nzc1ZWVhYzdhNjY4MmJlMzkyMjVhOTNiMjJjZmQwZjhiYiJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjU5NjEwYWFkYjM0Yjc5NjdkZWE3Njg2OTI2ZmRjZjA4ZDU4OGE3MWM1MTIxZWRiMDk0Y2UwZTRjZGJjNDVlNiJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8e012198eea15b2554b07014081c85fec4967a1b9cc4b65bd9a4bce3ae1c0c88",
                    "sha256:e75b8fc6a0d517f1df8ea88f32b6bbb09920e7199bfc9a7371368da2dbdcdae3",
                    "sha256:c700d3f5f15ba63c02dad44ce7df1907f5bfb54399dde13b6cedcf109617a2a8",
                    "sha256:fc9a7040ee9324751e119abf9d7489f05dd1e611c2dd940940f819087b8a1fde",
                    "sha256:a565521a6b61ff1ae6ca96501c2d9fe9b715c74826b6fd0725bf8e3e7418b7c8",
                    "sha256:2348e9726babe93184fe7d2cccb232b4ff86f79a038c5ca1a77e576706fef462",
                    "sha256:1d886466c4552a8b6d225f9fb0162ab25fa1171e29943ead2c93847533e50a78",
                    "sha256:4fb069ba480395a529ba4075b65b561229c51387a6cebb3b40d0fc53eb964682",
                    "sha256:154526d1a76ff896b3ad027c629db8bf8aa51e2879421891d0c399b5ca13f0b0",
                    "sha256:98e21462c76e0e997c87d78bd378aa75941e344a9b8eff02eef3a1554b85d19d",
                    "sha256:8857496ac82a20943698925f49c127bfc6562f12519a32a06b301e983f437104",
                    "sha256:a6005547969a7438b76311e4bc58b0ed0ef44314db187a7e5e2e1e13309729f9",
                    "sha256:52a247bdb30882ede62e9ac2737b6c68316b1a1059bfaa523d8f4a2b437550da",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.2.3",
                    "DOCKER_GEN_VERSION=0.10.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-03-21T06:29:31.436Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "6c2d17586b21dac1de33bf05230425ac1d12d2f5",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T06:32:57.494849571Z",
            "history": [
                {
                    "created": "2023-03-01T04:09:58.669479866Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:493a5b0c8d2d63a1343258b3f9aa5fcd59a93f44fe26ad9e56b094c3a08fd3be in / "
                },
                {
                    "created": "2023-03-01T04:09:59.032972609Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.144487445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.241141683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.333097773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.429197225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:11.955985229Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-01T18:43:12.236344221Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-01T18:43:12.33344009Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.433127252Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.535486131Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.628381806Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.73026265Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.824086367Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.914398123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:30:26.861130266Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:25.625409165Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.438541329Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.456041529Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.479418495Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMiIsInBpbiI6InNoYTI1Njo1OTkwYzRmYmIxYWIwNzRiNGJlN2JjYzllZTNiOGJkMjg4OGExZDRmOTU3MmZjN2Q2M2I4MDRlYTVkYTU0ZTczIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmFhMGFmZWJiYjNjZmE0NzMwOTlhNjJjNGIzMmU5YjNmYjczZWQyM2YyYTc1YTY1Y2UxZDRiNGY1NWE1YzJlZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:650abce4b096b06ac8bec2046d821d66d801af34f1f1d4c5e272ad030c7873db",
                    "sha256:4dc5cd799a08ff49a603870c8378ea93083bfc2a4176f56e5531997e94c195d0",
                    "sha256:e161c82b34d21179db1f546c1cd84153d28a17d865ccaf2dedeb06a903fec12c",
                    "sha256:83ba6d8ffb8c2974174c02d3ba549e7e0656ebb1bc075a6b6ee89b6c609c6a71",
                    "sha256:d8466e142d8710abf5b495ebb536478f7e19d9d03b151b5d5bd09df4cfb49248",
                    "sha256:101af4ba983b04be266217ecee414e88b23e394f62e9801c7c1bdb37cb37bcaa",
                    "sha256:5b918398a0b85042c7e4d08b4d6118f228acafb232fcbbf7435ccbc828c58145",
                    "sha256:d9957c880c5822ea1a07bf6e6cb2ffe7b756c7178bb810eca747a30a6d11c4a8",
                    "sha256:23c812e4a13db67fb9969e02d2788fc21890b21f4ae3832481ee9a80f10f5e73",
                    "sha256:202dd5882300d5afe28581f6064511f2840639ac42fe2d66bde859b1cf91a29d",
                    "sha256:c6ce4cdc4c92666f3b450e91ade5d482ba375e0f32a92c90eb6389f1f7da56d8",
                    "sha256:8a07c93afcb190d3aea560f72edf86098a73e27465f143a1e812c9adc87f4ad7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.2.3",
                    "DOCKER_GEN_VERSION=0.10.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-03-21T06:29:26.992Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "6c2d17586b21dac1de33bf05230425ac1d12d2f5",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T06:31:48.92279317Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.541889298Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.644195967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.76077532Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:59.928174353Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-02-11T10:04:00.06865286Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-02-11T10:04:00.172404277Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.275335032Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.380167662Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.495285493Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.595321772Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.692767061Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.793725955Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:28.721247489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:34.596569339Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:29:52.014839884Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:30:31.672085077Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.856297269Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.873173422Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.9040065Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMi1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MWRiMTI3NjU1YjMyYWE1NTllMzJlZDM3NTRlZDJlYTczNTIwNGQ5NjdhNDMzZTRiNjA1YWVkMWRkNDRjNTA4NCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjMxODMxNDE4OWI0MGU3MzE0NWE0ODA2MGJmZjQ3ODNhMTE2YzM0Y2M3MjQxNTMyZDBkOTQxOThmYjJjOTYyOSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d8a5a02a8c2d1e625a89a4956f6773baad42859509fb06b6c2e53b0ee3576dfd",
                    "sha256:5e59460a18a391d945829d29a9b295b1c2fdeb0d09d1764012736698cacbdcc2",
                    "sha256:152a948bab3b2e19f92a88342da9b5271b1e2879272ecdad2200eb59159ea624",
                    "sha256:c4d67a5827ca405b493275f4e9df7d5e97f78ecb4bf48d77299e1175cb1dbcc4",
                    "sha256:f1bee861c2ba8de7590cbc91799d2bb8a3579bcf1d1519c2445bd2d385338787",
                    "sha256:042cd3f87f43b1dea43047cd1d4394440122cb2a14ffed326fad8b34d25660fd",
                    "sha256:021b96513bff15edc58fec8ed98b4109090d52d9f0c24c63fd92b9a0594aefa0",
                    "sha256:29011a5f29b889cdd96de457f4585a559b3d133fe87cc8aafc33df78afdbf7e7",
                    "sha256:9f5bdddd7f7d2de1d764396a26fe95a6ee11d1ced28c503be7384d1c19bfe3a1",
                    "sha256:2ee78d9bb0217de9adedb2e13bf34631c04b5963d0ca8ce9f4f34a9811e0baba",
                    "sha256:e14ba9500ff88c56313465f2e84af06d8b5a2deec6e9a9946baef0a6ed0adb5e",
                    "sha256:89510365db090fb48b23a44a31347a7f37dbea625a36d928bdda862e8e522904",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.2.0",
                    "DOCKER_GEN_VERSION=0.9.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-01T06:57:47.763Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "1462ff019d6a9a33a06c411f2b6996599f48e583",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-01T07:00:22.256688055Z",
            "history": [
                {
                    "created": "2023-01-11T02:34:44.402266175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e2398d0bf516084b2b37ba1bb76b86d56e66999831df692461679fbd6a5d8eb6 in / "
                },
                {
                    "created": "2023-01-11T02:34:44.829692296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.289903157Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.388654688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.486361076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:30:49.583188263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:08.396714963Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-11T06:31:08.738784763Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-11T06:31:08.862689535Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:08.9809022Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.097176184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-11T06:31:09.200440083Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.306949397Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.408144444Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T06:31:09.511615468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:47.488084403Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:47.488084403Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:47.488084403Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:47.488084403Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:58:48.2860219Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:58:56.770984411Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T07:00:22.167340759Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T07:00:22.194685181Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T07:00:22.234466257Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T07:00:22.256688055Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T07:00:22.256688055Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T07:00:22.256688055Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNSIsInBpbiI6InNoYTI1NjpiYjk4MTFmYWQ0M2E3ZDZmZDIxNzMyNDhkODMzMWIyZGNmNWFjOWFmMjA5NzZiMTkzN2VjZDIxNGM1YjhjMzgzIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmI4ZjIzODNhOTU4NzllMWFlMDY0OTQwZDlhMjAwZjY3YTZjNzllNzEwZWQ4MmFjNDIyNjMzOTczNjdlN2NjNGUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:67a4178b7d47beb6a1f697a593bd0c6841c67eb0da00f2badefb05fd30671490",
                    "sha256:7e7121bf193a9d6c7623520cdfe2c1d58da671d201ed13a21525574f8522d32d",
                    "sha256:8477a329ab95b790e1d4be0ff5761a85f39a7344cb45fb8e3f35442155c05945",
                    "sha256:ff1154af28db5b3a94015268111cc49d5dd3fe7370cf2e328425d3d99f12bdb8",
                    "sha256:049fd3bdb25d6b2c0e821db681c0ade756f03f14a1966fb7fc17f208065dce6b",
                    "sha256:80115eeb30bc12d360f0e102c2ef98176079305e9a1f99074093e1965cd23511",
                    "sha256:3473c4024d50280fba795166ae764f4e128b784b2c8895ea32eb71a6a23fc2a5",
                    "sha256:204f5fc23583d124a44aafcd8c49d19e502648bc89d6f6f2b429982d38038d29",
                    "sha256:e77b47a726f541ab746084588edc3dd82688ea906305971d8bc86b583d609786",
                    "sha256:ba873ee62d8e835280800eaa07978ef5835fa497813182b51b4e498dec5c5e27",
                    "sha256:f8e1c4fb192622d5e34ac677b685f06ee4e3b25541bb89d7f061922f9f059052",
                    "sha256:9df88d85e49d916c9ae06fb40ea8ea6455db5a72b409e7a96389298a536550dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.2.0",
                    "DOCKER_GEN_VERSION=0.9.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-01T06:57:47.774Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "1462ff019d6a9a33a06c411f2b6996599f48e583",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-01T06:59:16.905810418Z",
            "history": [
                {
                    "created": "2023-01-09T17:05:20.497231175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in / "
                },
                {
                    "created": "2023-01-09T17:05:20.656498283Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.205127795Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.323697598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.432973364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.173527282Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-09T18:39:40.337015296Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-09T18:39:40.454797447Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.570429729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.683138416Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.781316037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.882297456Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.000099879Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.114129153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:50.413130453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:56.392222262Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-02-01T06:58:16.194130763Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:16.194130763Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:16.194130763Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:58:16.194130763Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:58:17.189485689Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.0 DOCKER_GEN_VERSION=0.9.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:58:31.82733425Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:59:16.861051681Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:59:16.875440289Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:59:16.892317216Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:59:16.905810418Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T06:59:16.905810418Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T06:59:16.905810418Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTkuNS1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MjM4MWMxZTVmODM1MGE5MDE1OTdkNjMzYjJlNTE3Nzc1ZWVhYzdhNjY4MmJlMzkyMjVhOTNiMjJjZmQwZjhiYiJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjU5NjEwYWFkYjM0Yjc5NjdkZWE3Njg2OTI2ZmRjZjA4ZDU4OGE3MWM1MTIxZWRiMDk0Y2UwZTRjZGJjNDVlNiJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8e012198eea15b2554b07014081c85fec4967a1b9cc4b65bd9a4bce3ae1c0c88",
                    "sha256:e75b8fc6a0d517f1df8ea88f32b6bbb09920e7199bfc9a7371368da2dbdcdae3",
                    "sha256:c700d3f5f15ba63c02dad44ce7df1907f5bfb54399dde13b6cedcf109617a2a8",
                    "sha256:fc9a7040ee9324751e119abf9d7489f05dd1e611c2dd940940f819087b8a1fde",
                    "sha256:a565521a6b61ff1ae6ca96501c2d9fe9b715c74826b6fd0725bf8e3e7418b7c8",
                    "sha256:2348e9726babe93184fe7d2cccb232b4ff86f79a038c5ca1a77e576706fef462",
                    "sha256:1d886466c4552a8b6d225f9fb0162ab25fa1171e29943ead2c93847533e50a78",
                    "sha256:a669327da03e431800fffbaeffd8d0a969543dea16a1976c4a6d0db2f22523a4",
                    "sha256:56ddb8b47669f0a5a51dc2ba1e64739cad4328579359b476d6f56703f73b4177",
                    "sha256:5c23a1ee28aa2880a8fd56d47693427b72d67b5c018c27c97dd1d80348e741e6",
                    "sha256:c1465d479b0b401beda94b789c7df33af3fbc0f434887e4c78fad7818818effa",
                    "sha256:565488728df785a956827c794c66be2e34db49ba0b47834c8ac90f2611629671",
                    "sha256:3f4d2e9c1a39742f147fade278a34e9bcf6d7730446aa90f4222fe66330e8d51",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.2.1",
                    "DOCKER_GEN_VERSION=0.10.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-09T07:33:49.107Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "bc2ada1f448ea79fbda0e21eeeecfc1d91f8b563",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-09T07:37:27.497691864Z",
            "history": [
                {
                    "created": "2023-02-09T03:20:20.296746756Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ea7c69e4bfac2ebb6f86baaedab31827c86a594dba8080a49928e211ad3c7a0 in / "
                },
                {
                    "created": "2023-02-09T03:20:20.798170292Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.482249607Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.59402474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.699427193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.806722608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:21.383557902Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-02-09T04:36:21.661668908Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-02-09T04:36:21.77575765Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:21.885269244Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:21.996262802Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:22.094100199Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.19435392Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.292671827Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.393029904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:44.566286104Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:44.566286104Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:44.566286104Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:44.566286104Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:34:45.123277777Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:35:48.81220768Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:37:27.425945803Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:37:27.442527319Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:37:27.470121042Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:37:27.497691864Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:37:27.497691864Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:37:27.497691864Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMCIsInBpbiI6InNoYTI1Njo5YmU4ODU5NDQ1NTIzODQzMDg0ZTA5NzQ3YTZmMjVhZWUwNmNlOTJkMjNhZTMyMGUyOGQ3ZjEwMWRkNmEzOWUyIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmRmZTY1ZDVkNzE1NjkzNjgxZTc2OWQ5MWY2NWQ5YTRlNjliODBmYTY0ZjQ0ZWExODI0YTkwMWY1YTkxN2QwYTUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4695cdfb426a05673a100e69d2fe9810d9ab2b3dd88ead97c6a3627246d83815",
                    "sha256:81e05d8cedf626d8f5379172691805c1956449f3ab1bc2def9d67bc6ca0e5e89",
                    "sha256:21a95e83c568f2d9b955c4c6462d87836333eb352c2d7c2273c5887fa703dfdc",
                    "sha256:2df186f5be5ceb2fa3ee025010e8f7e4e9bb2eda2ed7f8711d7e657520939b5d",
                    "sha256:a76121a5b9fdeef2d04457a2898cd5889c19672c2ad7fc66cc25d2bf6a8db7a5",
                    "sha256:3ea1bc01cbfeba5aa6422854e871bc492fee172f196e332317522e991452c757",
                    "sha256:db4a46478a514501604a2171328abe5508be444392d9e393f1ced662b6d49037",
                    "sha256:7ee1a836cf71652921d541a93acf2a251db183bc7a0dac2cf669898f8150db03",
                    "sha256:bb8dfb1b5f5dcc34787a5d2e60a3194d8b89567c95811c66a65e5a4a59f544c4",
                    "sha256:f9235d5a0715245e8ee1e9b9db6be4c0b454d196bb4fd8256c8a2a8be05cd25f",
                    "sha256:9530673ad3d1179201515fd0c944487a9caf147435113e8f350a5bcf1caec746",
                    "sha256:54c134398d733756dfbb4a2ba2fee4c0aba9b2db544f28d16f7bf8217f529228",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.2.1",
                    "DOCKER_GEN_VERSION=0.10.0",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-09T07:33:47.200Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "bc2ada1f448ea79fbda0e21eeeecfc1d91f8b563",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-09T07:36:11.083943689Z",
            "history": [
                {
                    "created": "2023-01-09T17:05:20.497231175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in / "
                },
                {
                    "created": "2023-01-09T17:05:20.656498283Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.205127795Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.323697598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:34.432973364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.173527282Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-01-09T18:39:40.337015296Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-01-09T18:39:40.454797447Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.570429729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.683138416Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-01-09T18:39:40.781316037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:40.882297456Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.000099879Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:41.114129153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:50.413130453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-09T18:39:56.392222262Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-02-09T07:34:12.342049557Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:12.342049557Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:12.342049557Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:34:12.342049557Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:34:13.289392795Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.1 DOCKER_GEN_VERSION=0.10.0 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:34:52.340477454Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:36:11.030538304Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:36:11.041875228Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:36:11.057975405Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:36:11.083943689Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-09T07:36:11.083943689Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T07:36:11.083943689Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MWUyOTE3MTQzY2U3ZTdiZjhkMWFkZDJhYzVjNWZhM2QzNThiMmI1ZGRhYWUyYmQ2ZjU0MTY5Y2U2ODUzMGVmMCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjU5NjEwYWFkYjM0Yjc5NjdkZWE3Njg2OTI2ZmRjZjA4ZDU4OGE3MWM1MTIxZWRiMDk0Y2UwZTRjZGJjNDVlNiJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8e012198eea15b2554b07014081c85fec4967a1b9cc4b65bd9a4bce3ae1c0c88",
                    "sha256:e75b8fc6a0d517f1df8ea88f32b6bbb09920e7199bfc9a7371368da2dbdcdae3",
                    "sha256:c700d3f5f15ba63c02dad44ce7df1907f5bfb54399dde13b6cedcf109617a2a8",
                    "sha256:fc9a7040ee9324751e119abf9d7489f05dd1e611c2dd940940f819087b8a1fde",
                    "sha256:a565521a6b61ff1ae6ca96501c2d9fe9b715c74826b6fd0725bf8e3e7418b7c8",
                    "sha256:2348e9726babe93184fe7d2cccb232b4ff86f79a038c5ca1a77e576706fef462",
                    "sha256:1d886466c4552a8b6d225f9fb0162ab25fa1171e29943ead2c93847533e50a78",
                    "sha256:dde0576d47a679178aa8aec276e67fd60e0d05f1f39a22aa6089807e512bd465",
                    "sha256:6d633bda983b0e184f65ffea99551585edbc645f4926e36d2668edaff3cb62f6",
                    "sha256:a7a586473c083205700ecc05823d3d3d98ed479c7796eacee10d73c32a900166",
                    "sha256:ffcb675f6da98c6c59b144b6782db65173a4a1c99ddbce0395514f4ca698995c",
                    "sha256:f5ed6cd2676de7a74ba6a6376c42ed40101ad250e7398052940c089a955a350c",
                    "sha256:f4095870b5b5241bd6037d1561506aa4d83805cb3f061db332f365b211e51239",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.2.2",
                    "DOCKER_GEN_VERSION=0.10.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-28T07:52:54.846Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "abcef6be86b505159fd79edae3f2fe7f3fa24fba",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-28T07:57:32.107859156Z",
            "history": [
                {
                    "created": "2023-02-09T03:20:20.296746756Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ea7c69e4bfac2ebb6f86baaedab31827c86a594dba8080a49928e211ad3c7a0 in / "
                },
                {
                    "created": "2023-02-09T03:20:20.798170292Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.482249607Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.59402474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.699427193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:02.806722608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:21.383557902Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-02-09T04:36:21.661668908Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-02-09T04:36:21.77575765Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:21.885269244Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:21.996262802Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-09T04:36:22.094100199Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.19435392Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.292671827Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T04:36:22.393029904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:54:03.25337429Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:54:03.25337429Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:54:03.25337429Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:54:03.25337429Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:54:04.033870755Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:24.18757532Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:57:31.99758742Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:57:32.029591447Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:57:32.076788933Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:57:32.107859156Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:57:32.107859156Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:57:32.107859156Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMSIsInBpbiI6InNoYTI1NjoyZWRmNmFhYjJkNTc2NDRmM2ZlNzQwNzEzMmEwZDE3NzA4NDY4Njc0NjVhMzljMjA4Mzc3MGNmNjI3MzRiMDVkIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OjY2NTA1MTNlZmQxZDI3YzFmOGE1MzUxY2JkMzNlZGY4NWNjN2UwZDlkMGZjYjRmZmIyM2Q4ZmE4OWI2MDFiYTgifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4695cdfb426a05673a100e69d2fe9810d9ab2b3dd88ead97c6a3627246d83815",
                    "sha256:81e05d8cedf626d8f5379172691805c1956449f3ab1bc2def9d67bc6ca0e5e89",
                    "sha256:21a95e83c568f2d9b955c4c6462d87836333eb352c2d7c2273c5887fa703dfdc",
                    "sha256:2df186f5be5ceb2fa3ee025010e8f7e4e9bb2eda2ed7f8711d7e657520939b5d",
                    "sha256:a76121a5b9fdeef2d04457a2898cd5889c19672c2ad7fc66cc25d2bf6a8db7a5",
                    "sha256:3ea1bc01cbfeba5aa6422854e871bc492fee172f196e332317522e991452c757",
                    "sha256:d61c31c6b0d37d3a771156c03be44df3d8d62f2eaa8e025172cad76b99112243",
                    "sha256:251ec1a942e90937a7f153b288a986f52a3f1fb5f917eaaaa2e32865a3239bb9",
                    "sha256:e037468c3a8de7267bfd2c82ad2457c671556b36b29ffbb73ac638a734fcbd19",
                    "sha256:b3ffb7cafa35c721642a003232bc4dac8f77c11b6bb91bc49b12e506c0e0ade4",
                    "sha256:76d25c5502c2d6ce114f0480a497742ab4794376891bf2a62e0610b3e0c65cd2",
                    "sha256:ee72b1638d693f711e0e1759ccbabaa74bfd7c162168285d79502bfa477810a4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.2.2",
                    "DOCKER_GEN_VERSION=0.10.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-02-28T07:52:53.848Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "abcef6be86b505159fd79edae3f2fe7f3fa24fba",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-02-28T07:55:43.762415927Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.541889298Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.644195967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.76077532Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:59.928174353Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-02-11T10:04:00.06865286Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-02-11T10:04:00.172404277Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.275335032Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.380167662Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.495285493Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.595321772Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.692767061Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.793725955Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:28.721247489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:34.596569339Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-02-28T07:53:23.097993026Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:53:23.097993026Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:53:23.097993026Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:53:23.097993026Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:53:23.692576411Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.2 DOCKER_GEN_VERSION=0.10.1 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:54:14.658311143Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:43.648781471Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:43.690865288Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:43.734335616Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:43.762415927Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-28T07:55:43.762415927Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-28T07:55:43.762415927Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMS1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NDhmMzM2ZWY4MzY2YjlkNjI0NjI5M2UzMDQ3MjU5ZDBmNjE0ZWUxNjdkYjE4NjliZGJjMzQzZDZlMDlhZWQ4YSJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NmY5NGI3ZjQyMDhiNWQ1MzkxMjQ2YzgzYTk2MjQ2Y2EyMDRmMTVlYWY3ZTYzNmNlZmRhNGU2MzQ4YzhmNjEwMSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d8a5a02a8c2d1e625a89a4956f6773baad42859509fb06b6c2e53b0ee3576dfd",
                    "sha256:5e59460a18a391d945829d29a9b295b1c2fdeb0d09d1764012736698cacbdcc2",
                    "sha256:152a948bab3b2e19f92a88342da9b5271b1e2879272ecdad2200eb59159ea624",
                    "sha256:c4d67a5827ca405b493275f4e9df7d5e97f78ecb4bf48d77299e1175cb1dbcc4",
                    "sha256:f1bee861c2ba8de7590cbc91799d2bb8a3579bcf1d1519c2445bd2d385338787",
                    "sha256:042cd3f87f43b1dea43047cd1d4394440122cb2a14ffed326fad8b34d25660fd",
                    "sha256:6e7d8934fe49116cd1c9ce6ea9c986a33aab8c2dabae445f1d9ac169c20b9344",
                    "sha256:89c4e225e678155a006b2fadef791e21ca359f916f9da5e76f976814d470093b",
                    "sha256:411755ec26717240ea28cedf34a6f437479d5e43fd03c545ea900ad2d6143999",
                    "sha256:a7a55a72b097e6f309f4d8e1fcd3689ae1c97422dbea9ddc2271094e727b7095",
                    "sha256:6757951bc0335ada5e3f26d760d08ec812a2fbac2a9171eb96e135c8d7689c14",
                    "sha256:0169643587218bd07fb056a93b89946878915902bfb7f8ac58a764c3fcfd2dd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.2.3",
                    "DOCKER_GEN_VERSION=0.10.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-03-21T06:29:31.436Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "6c2d17586b21dac1de33bf05230425ac1d12d2f5",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T06:32:57.494849571Z",
            "history": [
                {
                    "created": "2023-03-01T04:09:58.669479866Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:493a5b0c8d2d63a1343258b3f9aa5fcd59a93f44fe26ad9e56b094c3a08fd3be in / "
                },
                {
                    "created": "2023-03-01T04:09:59.032972609Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.144487445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.241141683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.333097773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.429197225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:11.955985229Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-01T18:43:12.236344221Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-01T18:43:12.33344009Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.433127252Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.535486131Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.628381806Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.73026265Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.824086367Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.914398123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:30:26.574590494Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:30:26.861130266Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:25.625409165Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.438541329Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.456041529Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.479418495Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:32:57.494849571Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMiIsInBpbiI6InNoYTI1Njo1OTkwYzRmYmIxYWIwNzRiNGJlN2JjYzllZTNiOGJkMjg4OGExZDRmOTU3MmZjN2Q2M2I4MDRlYTVkYTU0ZTczIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy4zIiwicGluIjoic2hhMjU2OmFhMGFmZWJiYjNjZmE0NzMwOTlhNjJjNGIzMmU5YjNmYjczZWQyM2YyYTc1YTY1Y2UxZDRiNGY1NWE1YzJlZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:650abce4b096b06ac8bec2046d821d66d801af34f1f1d4c5e272ad030c7873db",
                    "sha256:4dc5cd799a08ff49a603870c8378ea93083bfc2a4176f56e5531997e94c195d0",
                    "sha256:e161c82b34d21179db1f546c1cd84153d28a17d865ccaf2dedeb06a903fec12c",
                    "sha256:83ba6d8ffb8c2974174c02d3ba549e7e0656ebb1bc075a6b6ee89b6c609c6a71",
                    "sha256:d8466e142d8710abf5b495ebb536478f7e19d9d03b151b5d5bd09df4cfb49248",
                    "sha256:101af4ba983b04be266217ecee414e88b23e394f62e9801c7c1bdb37cb37bcaa",
                    "sha256:5b918398a0b85042c7e4d08b4d6118f228acafb232fcbbf7435ccbc828c58145",
                    "sha256:d9957c880c5822ea1a07bf6e6cb2ffe7b756c7178bb810eca747a30a6d11c4a8",
                    "sha256:23c812e4a13db67fb9969e02d2788fc21890b21f4ae3832481ee9a80f10f5e73",
                    "sha256:202dd5882300d5afe28581f6064511f2840639ac42fe2d66bde859b1cf91a29d",
                    "sha256:c6ce4cdc4c92666f3b450e91ade5d482ba375e0f32a92c90eb6389f1f7da56d8",
                    "sha256:8a07c93afcb190d3aea560f72edf86098a73e27465f143a1e812c9adc87f4ad7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.2.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.9",
                    "NGINX_PROXY_VERSION=1.2.3",
                    "DOCKER_GEN_VERSION=0.10.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-03-21T06:29:26.992Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "6c2d17586b21dac1de33bf05230425ac1d12d2f5",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.2.3"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T06:31:48.92279317Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.541889298Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.644195967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:54.76077532Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:03:59.928174353Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-02-11T10:04:00.06865286Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-02-11T10:04:00.172404277Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.275335032Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.380167662Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-02-11T10:04:00.495285493Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.595321772Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.692767061Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:00.793725955Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:28.721247489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T10:04:34.596569339Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:29:51.365286701Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:29:52.014839884Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.2.3 DOCKER_GEN_VERSION=0.10.2 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:30:31.672085077Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.856297269Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.873173422Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.9040065Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T06:31:48.92279317Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMi1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MWRiMTI3NjU1YjMyYWE1NTllMzJlZDM3NTRlZDJlYTczNTIwNGQ5NjdhNDMzZTRiNjA1YWVkMWRkNDRjNTA4NCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6NjMxODMxNDE4OWI0MGU3MzE0NWE0ODA2MGJmZjQ3ODNhMTE2YzM0Y2M3MjQxNTMyZDBkOTQxOThmYjJjOTYyOSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d8a5a02a8c2d1e625a89a4956f6773baad42859509fb06b6c2e53b0ee3576dfd",
                    "sha256:5e59460a18a391d945829d29a9b295b1c2fdeb0d09d1764012736698cacbdcc2",
                    "sha256:152a948bab3b2e19f92a88342da9b5271b1e2879272ecdad2200eb59159ea624",
                    "sha256:c4d67a5827ca405b493275f4e9df7d5e97f78ecb4bf48d77299e1175cb1dbcc4",
                    "sha256:f1bee861c2ba8de7590cbc91799d2bb8a3579bcf1d1519c2445bd2d385338787",
                    "sha256:042cd3f87f43b1dea43047cd1d4394440122cb2a14ffed326fad8b34d25660fd",
                    "sha256:021b96513bff15edc58fec8ed98b4109090d52d9f0c24c63fd92b9a0594aefa0",
                    "sha256:29011a5f29b889cdd96de457f4585a559b3d133fe87cc8aafc33df78afdbf7e7",
                    "sha256:9f5bdddd7f7d2de1d764396a26fe95a6ee11d1ced28c503be7384d1c19bfe3a1",
                    "sha256:2ee78d9bb0217de9adedb2e13bf34631c04b5963d0ca8ce9f4f34a9811e0baba",
                    "sha256:e14ba9500ff88c56313465f2e84af06d8b5a2deec6e9a9946baef0a6ed0adb5e",
                    "sha256:89510365db090fb48b23a44a31347a7f37dbea625a36d928bdda862e8e522904",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.3.1",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-05-14T22:40:05.343Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "87108892f6d893ba9fce1599914466ea11898a49",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-05-14T22:40:37.63748458Z",
            "history": [
                {
                    "created": "2023-05-02T23:46:59.831699727Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2378c1b12e95db69e24b9d347441678c6f23239292cce3c822b1524992b6ec4 in / "
                },
                {
                    "created": "2023-05-02T23:47:00.1128963Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:47.862144405Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:47.939315234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:48.020227271Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:48.097124251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:05.443923646Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-05-03T19:51:05.651432117Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-05-03T19:51:05.73780747Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.821337624Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.906294486Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.979700896Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.058893465Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.138099974Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.214253945Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends ca-certificates    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.503958712Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.539632357Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.583098511Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.606381041Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.627152267Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy40IiwicGluIjoic2hhMjU2OjQ4MDg2OGU4YzhjNzk3Nzk0MjU3ZTJhYmQ4OGQwZjlhODgwOWIyZmU5NTZjYmZiYzA1ZGNjMGJjYTFmN2NkNDMifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbmdpbnhwcm94eS9kb2NrZXItZ2VuOjAuMTAuNC1kZWJpYW4iLCJwaW4iOiJzaGEyNTY6ZmZmYzIwOWUwY2EwMTBjOTVlZTExZDRhOTU1MmM0MWYyMjk2OTRjMjc0ZDliYmI1MTBlMDM3NmNhNDUzNjI1NyJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9uZ2lueHByb3h5L2ZvcmVnbzowLjE3LjEtZGViaWFuIiwicGluIjoic2hhMjU2OjBlZjkwNTAyMGZhMzMxZmExYmE0ZjE1MjA2NDc4Y2Q1MmMwYTdmNzQyMWNhNmJhNTc0MmRjZWFhMDIyNTYyYTQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8553b91047dad45bedc292812586f1621e0a464a09a7a7c2ce6ac5f8ba2535d7",
                    "sha256:a29cc9587af6488ae0cbb962ecbe023d347908cc62ca5d715af06e54ccaa9e36",
                    "sha256:6bc8ae8fb3cf0909b3d9c2e74f6cabe16e6a2322c52cec76fbaecaef47006f1d",
                    "sha256:5684be535bf11cb9ad1a57b51085f36d84ae8361eabc2b4c2ba9a83e8b084b20",
                    "sha256:93ee76f39c974e4f819e632149c002d6f509aadc5995ec6523a96b337751c8ed",
                    "sha256:1040838fe30e6f26d31bde96c514f47ee4bf727b3f1c3c7b045ea3891c1c2150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2d8d786341f0670a88b6643580a165e042e4d49101205eee79bd3cf75c5732ba",
                    "sha256:da8115ad4f902a2e68dc369f37e387642dd18f54e8c96d95f494de5475d8a97e",
                    "sha256:800c41876b63b36ea1587c81b0e1f5ff66ece1a21feff3e548419ac0e9cfec45",
                    "sha256:98f23e16a41e95f59b886061152858ad1b0c0671463b85e6376f6f043a932393",
                    "sha256:5f9a3686bf29880b5fa1db75f8c2f5b974c876ab1cc92eee0b6d7f9c99aa9526",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.11",
                    "NGINX_PROXY_VERSION=1.3.1",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-05-14T22:40:08.616Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "87108892f6d893ba9fce1599914466ea11898a49",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-05-14T22:40:34.490371057Z",
            "history": [
                {
                    "created": "2023-03-29T18:19:24.348438709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a4f77dfaba7fd2aa78186e4ef0e7486ad55101cefc1fabbc1b385601bb38920 in / "
                },
                {
                    "created": "2023-03-29T18:19:24.45578926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.826996048Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.902296598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.975496976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.216540441Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-29T22:31:16.339435018Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-29T22:31:16.427781358Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.515135125Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.601542115Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.678093757Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.756398749Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.839607817Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.921795894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:30.252298671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:35.828698308Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apk add --no-cache --virtual .run-deps    bash    ca-certificates    openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.317979959Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.356766083Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.413971515Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.4460255Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.472842855Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy40LWFscGluZSIsInBpbiI6InNoYTI1NjowMmZmZDQzOWI3MWQ5ZWE5NDA4ZTQ0OWI1NjhmNjVjMGJiYmI5NGJlYmQ4NzUwZjFkODAyMzFhYjY0OTYwMDhlIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL25naW54cHJveHkvZG9ja2VyLWdlbjowLjEwLjQiLCJwaW4iOiJzaGEyNTY6MzliNmQ1ZDY4ZGFlODg5NWFmMjQxMTU4NTM3ZmZkODJmNjQwYmUxMTdkOWE4ZjkxYjA0MGViY2Y5N2E1NDYwOCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9uZ2lueHByb3h5L2ZvcmVnbzowLjE3LjEiLCJwaW4iOiJzaGEyNTY6ZDVmM2M4YWYyZTdiNTU1MWE0MjEyOTE4ZjcyYTAyZGYzZmUyNjU5ZTRhOWFlZWNhODUyOTM0ZDQxNzhlM2M3NSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1417ff83b319fbdae6dd9cd6d8c9c88002dcd75ecf6ec201c8c6894681cf2b5",
                    "sha256:1003ff723696bfd596cd65592fa26554840e90780f6937e6ddccc909b8ed1443",
                    "sha256:1d54586a1706c0af48668c10cbd8246626acb4fec01287be54cd9b26d72df15d",
                    "sha256:c1cd5c8c68ef2336b2504336206d58931e9215a863a35a741f66aa3f4970b0f5",
                    "sha256:f0fb842dea4179a94f1b8c2ac178e72690fa2b30e25e03a7a7893794fe9520a5",
                    "sha256:f9cb3f1f1d3d7c591c4ab02118816fe6761a8f2f7b2500a5ec7421a42b8a5ea2",
                    "sha256:31531248c7cbf5b31a8d9695c20041b9b3749b8c04b9831331ad93333fcf1474",
                    "sha256:7be7c9119662eab1c7ee1ab53feeaee900d0f8bbb9a784f8d96d6e5513e6088c",
                    "sha256:4b71517a845f9dc7945801a0e5fa9b1b330745646936b9e9edf7c53841058104",
                    "sha256:e2e70c42d86889efdb3153d4430c55a89629f3180503c6a70765f30c9dcb833f",
                    "sha256:b50f9ce1b33af62e993838363eecd0f00387234e8c20ecfdfab3717f2e677cf8",
                    "sha256:59c7d05933f8413568ceca496ba883b7caef68bd26a5d6e9d758978c4702bb62",
                    "sha256:4a45c13a7c2f65b2418b6fe15d6f86b036d2012437181bf4db0ed3e54400e499",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.3.0",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-04-18T06:16:48.536Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "b4efff04b7975ee7d7495277d2f3a8aa34577fb1",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-04-18T06:19:50.226768908Z",
            "history": [
                {
                    "created": "2023-04-12T00:20:06.126678482Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b1acca3f68b5c5787e292ff8dbdd114964a7272bf3519ab07710cbc01a0838 in / "
                },
                {
                    "created": "2023-04-12T00:20:06.444636881Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:03.751275538Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:03.833960937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:03.918047728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:04.007207184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:21.057932483Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-04-12T08:51:21.258885602Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-04-12T08:51:21.345600772Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-04-12T08:51:21.431180388Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-04-12T08:51:21.51332713Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-04-12T08:51:21.588259734Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:21.671662025Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:21.754589325Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T08:51:21.83677948Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:30.038327567Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:30.038327567Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:30.038327567Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:30.038327567Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:17:30.831902266Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:18:27.282495448Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:50.181447766Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:50.191734666Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:50.216828511Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:50.226768908Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:50.226768908Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:19:50.226768908Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMyIsInBpbiI6InNoYTI1Njo0MDNmNDg2MzNmYjVlYmQ0OWY5YTJiNmFkNjcxOWY5MTJkZjIzZGFlNDQ5NzRhMGM5NDQ1YmUzMzFlNzJmZjVlIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy40IiwicGluIjoic2hhMjU2OjYzYjQ0ZThkZGI4M2Q1ZGQ4MDIwMzI3YzFmNDA0MzZlMzdhNmZmZmQzZWYyNDk4YTYyMDRkZjIzYmU2ZTdlOTQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ed7b0ef3bf5bbec74379c3ae3d5339e666a314223e863c70644f7522a7527461",
                    "sha256:fb6d57d46ad57cbb50dfe16eba53a31d8808aa43e3a4a3ddd5c04d2d6ee0ecc5",
                    "sha256:935b5bd454e1973eb283fbc76d5613def62c190c8c4cc621576ef32f7c7dcb56",
                    "sha256:f12d4345b7f35505fc42fd613ae2c6749ddba30d6c9025e1a5b070c97c1ad2bb",
                    "sha256:79974a1a12aa3a3876d8dbcf16b2eda15ba5372574d38dd94bac68d339b6e124",
                    "sha256:9d907f11dc742442217bda25fde38f11851c7d495cacc6fc4e3869f4cd2c9ad9",
                    "sha256:6c1519653a483ba39820325ef55e22ec10ee58e9a55a2e9a3b37eeb40b009f65",
                    "sha256:c58960782d692cc6941bc7a8b9753003b420dec0a2b3e6a7d8ed860c183f2bfc",
                    "sha256:7849c1b2638501c10787fbca5e677f075323a9c620291040761f24116aa55a92",
                    "sha256:11ec8853f45d40a6b9457f3dd760d815862028ab5f9d531355132ddbe916af31",
                    "sha256:991c4d7b69f598f3c95345811c92ed25017e7d2029b9b0652c4752f0438557c9",
                    "sha256:3ac71aa3e0b863b757dbfb585e8a1633f945c4c767bb817ec0faf1f369f0b5e8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.11",
                    "NGINX_PROXY_VERSION=1.3.0",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-04-18T06:16:52.723Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "b4efff04b7975ee7d7495277d2f3a8aa34577fb1",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-04-18T06:19:23.766648252Z",
            "history": [
                {
                    "created": "2023-03-29T18:19:24.348438709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a4f77dfaba7fd2aa78186e4ef0e7486ad55101cefc1fabbc1b385601bb38920 in / "
                },
                {
                    "created": "2023-03-29T18:19:24.45578926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.826996048Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.902296598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.975496976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.216540441Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-29T22:31:16.339435018Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-29T22:31:16.427781358Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.515135125Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.601542115Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.678093757Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.756398749Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.839607817Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.921795894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:30.252298671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:35.828698308Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-04-18T06:17:25.076597632Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:25.076597632Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:25.076597632Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:17:25.076597632Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:17:26.02601549Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.0 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:18:06.919234595Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:23.716361762Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:23.72716856Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:23.743189157Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:23.766648252Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-18T06:19:23.766648252Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-18T06:19:23.766648252Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMjAuMy1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6MDhlOWMwODYxOTQ4NzUzMzRkNjA2NzY1YmQ2MGFhMDY0YWJkM2MyMTVhYmZiY2Y1NzM3NjE5MTEwZDQ4ZDExNCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L25naW54OjEuMjMuNC1hbHBpbmUiLCJwaW4iOiJzaGEyNTY6ZGQyYTkxNzk3NjU4NDk3NjdiMTBlMmFkZGU3ZTEwYzRhZDZiN2U0ZDQ4NDZlNmI3N2VjOTNmMDgwY2QyZGIyNyJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1417ff83b319fbdae6dd9cd6d8c9c88002dcd75ecf6ec201c8c6894681cf2b5",
                    "sha256:1003ff723696bfd596cd65592fa26554840e90780f6937e6ddccc909b8ed1443",
                    "sha256:1d54586a1706c0af48668c10cbd8246626acb4fec01287be54cd9b26d72df15d",
                    "sha256:c1cd5c8c68ef2336b2504336206d58931e9215a863a35a741f66aa3f4970b0f5",
                    "sha256:f0fb842dea4179a94f1b8c2ac178e72690fa2b30e25e03a7a7893794fe9520a5",
                    "sha256:f9cb3f1f1d3d7c591c4ab02118816fe6761a8f2f7b2500a5ec7421a42b8a5ea2",
                    "sha256:31531248c7cbf5b31a8d9695c20041b9b3749b8c04b9831331ad93333fcf1474",
                    "sha256:c15b9cb06f00ec2be4bcc24fe3333b0aadf3f2d315027feaba8243f76a2663de",
                    "sha256:a55759d328cd09c20b04118cfdd9e4f74dd2abd0b854700fe9a3cbc1062176f4",
                    "sha256:4e4b770747d2a83938a22e9a637e30f7fcd958ceb32157ad2a2c4efec213f059",
                    "sha256:3026c862511da5c3e4ae1ad833bf0d3375e9fa9e0305bd5454ee9ea331db6a48",
                    "sha256:7430873aab807bce73e9a3d46a12812f2b0e3dd9e5c675c5ebd15e049cf84c73",
                    "sha256:a108336f658e9d5ec8963ac6b121799a649fb64cddc38892cbee6d25cadb9425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=1.3.1",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-05-14T22:40:05.343Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "87108892f6d893ba9fce1599914466ea11898a49",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-05-14T22:40:37.63748458Z",
            "history": [
                {
                    "created": "2023-05-02T23:46:59.831699727Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2378c1b12e95db69e24b9d347441678c6f23239292cce3c822b1524992b6ec4 in / "
                },
                {
                    "created": "2023-05-02T23:47:00.1128963Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:47.862144405Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:47.939315234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:48.020227271Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:50:48.097124251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:05.443923646Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-05-03T19:51:05.651432117Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-05-03T19:51:05.73780747Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.821337624Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.906294486Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-03T19:51:05.979700896Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.058893465Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.138099974Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-03T19:51:06.214253945Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.39180347Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends ca-certificates    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.503958712Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.539632357Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.583098511Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.606381041Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.627152267Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:37.63748458Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy40IiwicGluIjoic2hhMjU2OjQ4MDg2OGU4YzhjNzk3Nzk0MjU3ZTJhYmQ4OGQwZjlhODgwOWIyZmU5NTZjYmZiYzA1ZGNjMGJjYTFmN2NkNDMifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbmdpbnhwcm94eS9kb2NrZXItZ2VuOjAuMTAuNC1kZWJpYW4iLCJwaW4iOiJzaGEyNTY6ZmZmYzIwOWUwY2EwMTBjOTVlZTExZDRhOTU1MmM0MWYyMjk2OTRjMjc0ZDliYmI1MTBlMDM3NmNhNDUzNjI1NyJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9uZ2lueHByb3h5L2ZvcmVnbzowLjE3LjEtZGViaWFuIiwicGluIjoic2hhMjU2OjBlZjkwNTAyMGZhMzMxZmExYmE0ZjE1MjA2NDc4Y2Q1MmMwYTdmNzQyMWNhNmJhNTc0MmRjZWFhMDIyNTYyYTQifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8553b91047dad45bedc292812586f1621e0a464a09a7a7c2ce6ac5f8ba2535d7",
                    "sha256:a29cc9587af6488ae0cbb962ecbe023d347908cc62ca5d715af06e54ccaa9e36",
                    "sha256:6bc8ae8fb3cf0909b3d9c2e74f6cabe16e6a2322c52cec76fbaecaef47006f1d",
                    "sha256:5684be535bf11cb9ad1a57b51085f36d84ae8361eabc2b4c2ba9a83e8b084b20",
                    "sha256:93ee76f39c974e4f819e632149c002d6f509aadc5995ec6523a96b337751c8ed",
                    "sha256:1040838fe30e6f26d31bde96c514f47ee4bf727b3f1c3c7b045ea3891c1c2150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2d8d786341f0670a88b6643580a165e042e4d49101205eee79bd3cf75c5732ba",
                    "sha256:da8115ad4f902a2e68dc369f37e387642dd18f54e8c96d95f494de5475d8a97e",
                    "sha256:800c41876b63b36ea1587c81b0e1f5ff66ece1a21feff3e548419ac0e9cfec45",
                    "sha256:98f23e16a41e95f59b886061152858ad1b0c0671463b85e6376f6f043a932393",
                    "sha256:5f9a3686bf29880b5fa1db75f8c2f5b974c876ab1cc92eee0b6d7f9c99aa9526",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.7.11",
                    "NGINX_PROXY_VERSION=1.3.1",
                    "DOCKER_GEN_VERSION=0.10.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-05-14T22:40:08.616Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "87108892f6d893ba9fce1599914466ea11898a49",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.3.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-05-14T22:40:34.490371057Z",
            "history": [
                {
                    "created": "2023-03-29T18:19:24.348438709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a4f77dfaba7fd2aa78186e4ef0e7486ad55101cefc1fabbc1b385601bb38920 in / "
                },
                {
                    "created": "2023-03-29T18:19:24.45578926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.826996048Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.902296598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:10.975496976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.216540441Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-29T22:31:16.339435018Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-29T22:31:16.427781358Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.515135125Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.601542115Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-29T22:31:16.678093757Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.756398749Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.839607817Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:16.921795894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:30.252298671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T22:31:35.828698308Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"8f3f6c1ddd984c0c7320d3bea25eee42749db6d69c251223cf91d69b8d80b703ab39eb94fcf731399a7693ebd8dd37d1b3232ea1184ca98e5ca0ba6165e1a05c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.174308827Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c apk add --no-cache --virtual .run-deps    bash    ca-certificates    openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.317979959Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.3.1 DOCKER_GEN_VERSION=0.10.4 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.356766083Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.413971515Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.4460255Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.472842855Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-14T22:40:34.490371057Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvbmdpbng6MS4yMy40LWFscGluZSIsInBpbiI6InNoYTI1NjowMmZmZDQzOWI3MWQ5ZWE5NDA4ZTQ0OWI1NjhmNjVjMGJiYmI5NGJlYmQ4NzUwZjFkODAyMzFhYjY0OTYwMDhlIn0seyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL25naW54cHJveHkvZG9ja2VyLWdlbjowLjEwLjQiLCJwaW4iOiJzaGEyNTY6MzliNmQ1ZDY4ZGFlODg5NWFmMjQxMTU4NTM3ZmZkODJmNjQwYmUxMTdkOWE4ZjkxYjA0MGViY2Y5N2E1NDYwOCJ9LHsidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9uZ2lueHByb3h5L2ZvcmVnbzowLjE3LjEiLCJwaW4iOiJzaGEyNTY6ZDVmM2M4YWYyZTdiNTU1MWE0MjEyOTE4ZjcyYTAyZGYzZmUyNjU5ZTRhOWFlZWNhODUyOTM0ZDQxNzhlM2M3NSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1417ff83b319fbdae6dd9cd6d8c9c88002dcd75ecf6ec201c8c6894681cf2b5",
                    "sha256:1003ff723696bfd596cd65592fa26554840e90780f6937e6ddccc909b8ed1443",
                    "sha256:1d54586a1706c0af48668c10cbd8246626acb4fec01287be54cd9b26d72df15d",
                    "sha256:c1cd5c8c68ef2336b2504336206d58931e9215a863a35a741f66aa3f4970b0f5",
                    "sha256:f0fb842dea4179a94f1b8c2ac178e72690fa2b30e25e03a7a7893794fe9520a5",
                    "sha256:f9cb3f1f1d3d7c591c4ab02118816fe6761a8f2f7b2500a5ec7421a42b8a5ea2",
                    "sha256:31531248c7cbf5b31a8d9695c20041b9b3749b8c04b9831331ad93333fcf1474",
                    "sha256:7be7c9119662eab1c7ee1ab53feeaee900d0f8bbb9a784f8d96d6e5513e6088c",
                    "sha256:4b71517a845f9dc7945801a0e5fa9b1b330745646936b9e9edf7c53841058104",
                    "sha256:e2e70c42d86889efdb3153d4430c55a89629f3180503c6a70765f30c9dcb833f",
                    "sha256:b50f9ce1b33af62e993838363eecd0f00387234e8c20ecfdfab3717f2e677cf8",
                    "sha256:59c7d05933f8413568ceca496ba883b7caef68bd26a5d6e9d758978c4702bb62",
                    "sha256:4a45c13a7c2f65b2418b6fe15d6f86b036d2012437181bf4db0ed3e54400e499",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "NJS_VERSION=0.8.2",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.4.0",
                    "DOCKER_GEN_VERSION=0.10.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-12-08T00:53:58.756Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "d05175d1d6fc82a045af4d402c28fd653dc3d14b",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.4.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-08T00:54:19.633919672Z",
            "history": [
                {
                    "created": "2023-11-21T05:21:37.108578179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d261a6f6921593f1e0b3f472ab1b1822e2c6deb0b369200f0b3370556bfad017 in / "
                },
                {
                    "created": "2023-11-21T05:21:37.490120886Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:08.890208867Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:08.973984294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.25.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:09.055690549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:09.13626085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bookworm",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:31.351851262Z",
                    "created_by": "/bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-11-21T09:05:31.757621042Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:01e75c6dd0ce317d516928a17584d111cd082840c01e58be0afc851b33adb916 in / "
                },
                {
                    "created": "2023-11-21T09:05:31.847217434Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:caec368f5a54f70a844a13005eb2255bed778809b3672d516e719ce2f4bce123 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:31.932790643Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3b1b9915b7dd898a0e32f7eb9715a35c9feab914022efff68ba990bc1ec7d169 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.015013482Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:57846632accc89753f45cbc00cb9e6223d991e1d31297eec3395a7ca58eed6a6 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.101911945Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9e3b2b63db9f8fc702e2dc2bdd0943be0d990c028cddcf1c159f5556a8ba3030 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.182571426Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.278509322Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.393152592Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.482668371Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends ca-certificates    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.523627814Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.551673797Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.593543342Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.605016273Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.620429445Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92770f546e065c4942829b1f0d7d1f02c2eb1e6acf0d1bc08ef0bf6be4972839",
                    "sha256:8ae474e0cc8f5a81405b04143604f78bfac4756c523e276a36921a8c4da36567",
                    "sha256:f5525891d9e9b43a95b4aa1f79405087922489eb300864a2683262aae0fa5b3a",
                    "sha256:66283570f41bca3619443d121a79e810b8a72849b5329319993e538d563b3e2f",
                    "sha256:c2d3ab485d1b375fdd309458d69d93f8eb9aba8472e928efa32d9e5eda631440",
                    "sha256:cddc309885a283a35ef142af78bc6f2e9c9db10e1981c4ea9cfb2c00b83e68ff",
                    "sha256:0d0e9c83b6f775d68c7517aabf39ec9123ffca29672e3c3f83c5af7fc6aa242b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e5d8432d999bcc2d13e8d4d9483583e8ad76799d8d67108ab4885cbc9f3f636",
                    "sha256:8805d9008fe1cdb53e019269117d20ea69abe864016616ec337cbe2ebab2490e",
                    "sha256:5f95b6bb820e0983f0c2e988e01895c0e42ff0b13f858c3687d80a58e89ae269",
                    "sha256:df642f4aa3a2b75728ae6ad072ac6e7cba2b7df88c888df5e4abaa0a3d45ba53",
                    "sha256:f7dae8ce83f143352b6a9ea6d9f769ef66ce4e3c22b0fca3d41a65a56ef44b77",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.2",
                    "NGINX_PROXY_VERSION=1.4.0",
                    "DOCKER_GEN_VERSION=0.10.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-12-08T00:53:59.195Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "d05175d1d6fc82a045af4d402c28fd653dc3d14b",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.4.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-08T00:54:13.18321692Z",
            "history": [
                {
                    "created": "2023-11-30T23:22:52.632616385Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc714080c3bcbbce7ac746a10d7b4355ffa36293a8d435d62cd5359ea8eb8364 in / "
                },
                {
                    "created": "2023-11-30T23:22:52.738129857Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:09.868549607Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:09.955155155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.25.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:10.040577973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.082715003Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-12-01T07:02:15.206134748Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:01e75c6dd0ce317d516928a17584d111cd082840c01e58be0afc851b33adb916 in / "
                },
                {
                    "created": "2023-12-01T07:02:15.297310223Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:caec368f5a54f70a844a13005eb2255bed778809b3672d516e719ce2f4bce123 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.383437344Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3b1b9915b7dd898a0e32f7eb9715a35c9feab914022efff68ba990bc1ec7d169 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.469808238Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:57846632accc89753f45cbc00cb9e6223d991e1d31297eec3395a7ca58eed6a6 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.55599276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9e3b2b63db9f8fc702e2dc2bdd0943be0d990c028cddcf1c159f5556a8ba3030 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.636070657Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.718549676Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.803119133Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.884340256Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:31.978273705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:37.705774089Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c apk add --no-cache --virtual .run-deps    bash    ca-certificates    openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.054172506Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.081137125Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.130201647Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.147180241Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.167387806Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe9a137fd002363ac64f5af66146702432b638a83ee0c5b620c40a9e433e813",
                    "sha256:dd731ddf52bebac1d332cb7f6557931015cb4672ca25153b2245fe67e5700fae",
                    "sha256:fbed1f6990eee23b4a5bd6f865231faa81cb225b789571cb6dc81cb289c71466",
                    "sha256:28c7b3c0b176e501f56e1ba95c64c7b4e1128304f4a9c0a942f1205050dd7e8b",
                    "sha256:92ef9174e989f2c409a41e9dfb6e095706232c84cfd8b337cbf2e92c228dd1f0",
                    "sha256:b968c967e155d9913c33e6eef1acfbc4144d61caa90c3b6da7c9652af0765f61",
                    "sha256:5e728486380efe115c35a6e6d103be5a045e81f3fdf263dc012d90d80a61fe27",
                    "sha256:a34b395c0ca3e3f03ac029ffec85e70e060e859217eb4fb4c4affc657f4664f3",
                    "sha256:534a1dad869dd87a54e0805c49f74a957dbc0c58b7c2fe7bd3939be6a3979c71",
                    "sha256:c51e484b9eeb815fae136c35660fd5d4bccd2f4a66d150240bc18e3ad187acb0",
                    "sha256:a45a75aa448a7f7083111ffdab644243b0398fbfb8e11c8f2721fb836cbebc1a",
                    "sha256:68ed09cfb575d22efab719e1603291759fec707e44a7ad3c79e4a429bdb878c4",
                    "sha256:40f484e1584d5c601cbacef2b740afefadaffd0f20a5f5c1dfb160b717a03d8c",
                    "sha256:b76190395c573aab760ef17a1e21824a7973e1eccda53ee3c9dd5821e5442e59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.4.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "NJS_VERSION=0.8.2",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.4.0",
                    "DOCKER_GEN_VERSION=0.10.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-12-08T00:53:58.756Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "d05175d1d6fc82a045af4d402c28fd653dc3d14b",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.4.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-08T00:54:19.633919672Z",
            "history": [
                {
                    "created": "2023-11-21T05:21:37.108578179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d261a6f6921593f1e0b3f472ab1b1822e2c6deb0b369200f0b3370556bfad017 in / "
                },
                {
                    "created": "2023-11-21T05:21:37.490120886Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:08.890208867Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:08.973984294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.25.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:09.055690549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:09.13626085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bookworm",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:31.351851262Z",
                    "created_by": "/bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-11-21T09:05:31.757621042Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:01e75c6dd0ce317d516928a17584d111cd082840c01e58be0afc851b33adb916 in / "
                },
                {
                    "created": "2023-11-21T09:05:31.847217434Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:caec368f5a54f70a844a13005eb2255bed778809b3672d516e719ce2f4bce123 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:31.932790643Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3b1b9915b7dd898a0e32f7eb9715a35c9feab914022efff68ba990bc1ec7d169 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.015013482Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:57846632accc89753f45cbc00cb9e6223d991e1d31297eec3395a7ca58eed6a6 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.101911945Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9e3b2b63db9f8fc702e2dc2bdd0943be0d990c028cddcf1c159f5556a8ba3030 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-11-21T09:05:32.182571426Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.278509322Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.393152592Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-21T09:05:32.482668371Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.362300745Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends ca-certificates    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.523627814Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.551673797Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.593543342Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.605016273Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.620429445Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:19.633919672Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92770f546e065c4942829b1f0d7d1f02c2eb1e6acf0d1bc08ef0bf6be4972839",
                    "sha256:8ae474e0cc8f5a81405b04143604f78bfac4756c523e276a36921a8c4da36567",
                    "sha256:f5525891d9e9b43a95b4aa1f79405087922489eb300864a2683262aae0fa5b3a",
                    "sha256:66283570f41bca3619443d121a79e810b8a72849b5329319993e538d563b3e2f",
                    "sha256:c2d3ab485d1b375fdd309458d69d93f8eb9aba8472e928efa32d9e5eda631440",
                    "sha256:cddc309885a283a35ef142af78bc6f2e9c9db10e1981c4ea9cfb2c00b83e68ff",
                    "sha256:0d0e9c83b6f775d68c7517aabf39ec9123ffca29672e3c3f83c5af7fc6aa242b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e5d8432d999bcc2d13e8d4d9483583e8ad76799d8d67108ab4885cbc9f3f636",
                    "sha256:8805d9008fe1cdb53e019269117d20ea69abe864016616ec337cbe2ebab2490e",
                    "sha256:5f95b6bb820e0983f0c2e988e01895c0e42ff0b13f858c3687d80a58e89ae269",
                    "sha256:df642f4aa3a2b75728ae6ad072ac6e7cba2b7df88c888df5e4abaa0a3d45ba53",
                    "sha256:f7dae8ce83f143352b6a9ea6d9f769ef66ce4e3c22b0fca3d41a65a56ef44b77",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.4.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.2",
                    "NGINX_PROXY_VERSION=1.4.0",
                    "DOCKER_GEN_VERSION=0.10.7",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2023-12-08T00:53:59.195Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "d05175d1d6fc82a045af4d402c28fd653dc3d14b",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.4.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-12-08T00:54:13.18321692Z",
            "history": [
                {
                    "created": "2023-11-30T23:22:52.632616385Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc714080c3bcbbce7ac746a10d7b4355ffa36293a8d435d62cd5359ea8eb8364 in / "
                },
                {
                    "created": "2023-11-30T23:22:52.738129857Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:09.868549607Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:09.955155155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.25.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:10.040577973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.082715003Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-12-01T07:02:15.206134748Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:01e75c6dd0ce317d516928a17584d111cd082840c01e58be0afc851b33adb916 in / "
                },
                {
                    "created": "2023-12-01T07:02:15.297310223Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:caec368f5a54f70a844a13005eb2255bed778809b3672d516e719ce2f4bce123 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.383437344Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3b1b9915b7dd898a0e32f7eb9715a35c9feab914022efff68ba990bc1ec7d169 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.469808238Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:57846632accc89753f45cbc00cb9e6223d991e1d31297eec3395a7ca58eed6a6 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.55599276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9e3b2b63db9f8fc702e2dc2bdd0943be0d990c028cddcf1c159f5556a8ba3030 in /docker-entrypoint.d "
                },
                {
                    "created": "2023-12-01T07:02:15.636070657Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.718549676Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.803119133Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:15.884340256Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:31.978273705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:02:37.705774089Z",
                    "created_by": "/bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates"
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:12.889560988Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c apk add --no-cache --virtual .run-deps    bash    ca-certificates    openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.054172506Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.4.0 DOCKER_GEN_VERSION=0.10.7 /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.081137125Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.130201647Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.147180241Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.167387806Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-08T00:54:13.18321692Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe9a137fd002363ac64f5af66146702432b638a83ee0c5b620c40a9e433e813",
                    "sha256:dd731ddf52bebac1d332cb7f6557931015cb4672ca25153b2245fe67e5700fae",
                    "sha256:fbed1f6990eee23b4a5bd6f865231faa81cb225b789571cb6dc81cb289c71466",
                    "sha256:28c7b3c0b176e501f56e1ba95c64c7b4e1128304f4a9c0a942f1205050dd7e8b",
                    "sha256:92ef9174e989f2c409a41e9dfb6e095706232c84cfd8b337cbf2e92c228dd1f0",
                    "sha256:b968c967e155d9913c33e6eef1acfbc4144d61caa90c3b6da7c9652af0765f61",
                    "sha256:5e728486380efe115c35a6e6d103be5a045e81f3fdf263dc012d90d80a61fe27",
                    "sha256:a34b395c0ca3e3f03ac029ffec85e70e060e859217eb4fb4c4affc657f4664f3",
                    "sha256:534a1dad869dd87a54e0805c49f74a957dbc0c58b7c2fe7bd3939be6a3979c71",
                    "sha256:c51e484b9eeb815fae136c35660fd5d4bccd2f4a66d150240bc18e3ad187acb0",
                    "sha256:a45a75aa448a7f7083111ffdab644243b0398fbfb8e11c8f2721fb836cbebc1a",
                    "sha256:68ed09cfb575d22efab719e1603291759fec707e44a7ad3c79e4a429bdb878c4",
                    "sha256:40f484e1584d5c601cbacef2b740afefadaffd0f20a5f5c1dfb160b717a03d8c",
                    "sha256:b76190395c573aab760ef17a1e21824a7973e1eccda53ee3c9dd5821e5442e59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=1~bookworm",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.5.2",
                    "DOCKER_GEN_VERSION=0.12.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-03T11:01:39.419Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2ac4509a61600190b7b82cc7d0cd4c81aa08d7fc",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-03T11:02:07.354368465Z",
            "history": [
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b1be1de1a1e5aa608c688cad2824587262081866180d7368feb79d33ca05953 in / "
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NJS_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/etc/apt/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${NJS_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections  10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.113035239Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.194734881Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.284264055Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.318716074Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:52ec5a4316fadc09a4a51f82b8d7b66ead0d71bea4f75e81e25b4094c4219061",
                    "sha256:a5e3d8df538fb51ab55fd51fa5ed54db53cb4b7fa4f4280f923a014832f28eb3",
                    "sha256:9f2740221651b12ea6bf9ac4353eb66bdc43b3e3bdcd8bac2f8df3563eb79c2c",
                    "sha256:4d2d7313e276e7c6f9f0d53e384fab89feb3a566303e01a6ac83116bb1fa70aa",
                    "sha256:49e8e4f2ae9f54253cef593068af8ab28174a82f3dc5633814067de8c1e7b52f",
                    "sha256:579b32de35b385942d6e4d96342265549ec94b557c8446bfc4cddb17c47370c8",
                    "sha256:f5cc88e38a01b6027ded56e5a16dfb3cd40441e2838ced37869e716b51d3b9ae",
                    "sha256:5b419dfccf457c156ea63df32c483490d9398242f520b244c877aa6ba829d4c4",
                    "sha256:d5348ec19afdef66df1c526e43723f8e7ac1a7603b74baad4268a0a705333b34",
                    "sha256:3858c9af4eed0d9eaf75068fb1622c316284f1e8bab2c57ec7bce5117108b7cd",
                    "sha256:87217e152693f875d3e71507d7bd859ab8c679d5fd8d45198d89866bea81abec",
                    "sha256:9dc4cc3ff49d348a3738e315d11aa1ef09d3a591ea0e638f147ec0c41a386913",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.5.2",
                    "DOCKER_GEN_VERSION=0.12.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-03T11:01:41.043Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2ac4509a61600190b7b82cc7d0cd4c81aa08d7fc",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-03T11:02:04.033567743Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"f0ee7cef9a6e4aa1923177eb2782577ce61837c22c59bd0c3bd027a0a4dc3a3cdc4a16e95480a075bdee32ae59c0c6385dfadb971f93931fea84976c4a21fceb *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NJS_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"f0ee7cef9a6e4aa1923177eb2782577ce61837c22c59bd0c3bd027a0a4dc3a3cdc4a16e95480a075bdee32ae59c0c6385dfadb971f93931fea84976c4a21fceb *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c apk add --no-cache --virtual .run-deps bash openssl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.924079042Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections   10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.948685663Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.994875338Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.010273447Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.025148415Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:c66017523a933d67d5dd8daf14ff35dcff223883fea615a369900ff1104f7f43",
                    "sha256:4531681221ae8b55d3a734a28450573feac6cb4f4be0bf3cdc921122350b6762",
                    "sha256:ad00c3770f636cc5536d088dd33fd522b14171bb35eda93d8caed0fd39d9bc25",
                    "sha256:8bcdb41950bd19ed8b0b9ad0db9b40acef66e38a901958f9eed8fb30eeab6df1",
                    "sha256:d0a420a23105d9444358b1bda0b8456c6732a2396d930c08bd684326bb682958",
                    "sha256:d74615ba5d49fbcbaba71d53a065ac5dd2767227e25b18f4d9b551101dce5e92",
                    "sha256:ab5126cacbcedb16f017106a99f58b4550ac64e081bf3ca53432c98f5b0fae85",
                    "sha256:3162e50195d7c8124687b4b321253f9199b6648aa954aaaf5d04b43ec77e10c1",
                    "sha256:ed3acc6a8a3542673abdce70db3ff1b41c4abf2e04953f2426dbc66c9aa1cc99",
                    "sha256:437a05e3d57f7cfe206c53395126b7e58708d5d37df6f55d7033ba358929f633",
                    "sha256:421819289bfb96498d4723545c32a1240f581e42ec60adb2d239dfdbd125179f",
                    "sha256:bb491bd4c73205a3deeda21db5ad723d0cbc027441537c7d8931c5f78f1b2797",
                    "sha256:fd87d28b08592249ec0397b2ae1edf7d02edac502d91fd7874d249acccbfaff2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "NJS_VERSION=0.8.2",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.5.0",
                    "DOCKER_GEN_VERSION=0.11.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-02-10T18:35:17.788Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "887e2e950c35292f46f3411b9060c67e0a229a2e",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-10T18:35:43.074515815Z",
            "history": [
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af0f4e41d68b67ca88a1ce6297326159e18e27670d7bfc0bf5804a4e2b268cc8 in / "
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NGINX_VERSION=1.25.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:42.825322892Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:42.825322892Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:42.825322892Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.0 DOCKER_GEN_VERSION=0.11.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:42.825322892Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.0 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections  10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:42.871684209Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:42.973975731Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:43.003161944Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:43.043303439Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:43.074515815Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:43.074515815Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:43.074515815Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fb1bd2fc52827db4ce719cc1aafd4a035d68bc71183b3bc39014f23e9e5fa256",
                    "sha256:83bdf27d9eaa4f0e8f11b95dc952e9ab92619792dbd3d72f775d54c67eae1248",
                    "sha256:84e0c9ef07d70aff145d02f297c94d7d5cc0ff7d87449c20eac02f5408a48fd0",
                    "sha256:06536efc503aa0d192e8a5232eb57cad57fce55a8a92dce48d45eaf284f0cc26",
                    "sha256:9f21a390e3f6d9e5af2d02fdb6a622eded91c58c9fe82af76204ad4cd854da39",
                    "sha256:2b28485849eadbf9f3066df698b1579f169a7a306ce754a9809349099a58d11d",
                    "sha256:f205d290cd763a4d8dddb06bee8fbd813cea79b179515fde9dec1b9fd9525856",
                    "sha256:746761004cd30735f09c7806e0efb3b8b353aaef8a89bbedb63298a0d3b5504b",
                    "sha256:b655392bb986dc869587c26f65724a1fe30574014d888cfaa76c66b950b323f9",
                    "sha256:0826f59777554d91e729a31e20ace1d773cd75946c14d6ccb4caafdadaee17e1",
                    "sha256:bf97ec48e243400a5d16cee83cb787b0e04f0774393414fbdd64f8991007ef42",
                    "sha256:aed4825874ebb5ea66936ef1715a99ea516409960d7b6a74ab6e23fdad9c499b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.0-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.3",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.2",
                    "NGINX_PROXY_VERSION=1.5.0",
                    "DOCKER_GEN_VERSION=0.11.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-02-10T18:35:13.521Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "887e2e950c35292f46f3411b9060c67e0a229a2e",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.0"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-10T18:35:28.248854215Z",
            "history": [
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NGINX_VERSION=1.25.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-24T22:44:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:27.930515486Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:27.930515486Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:27.930515486Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.0 DOCKER_GEN_VERSION=0.11.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:27.930515486Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.0 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c apk add --no-cache --virtual .run-deps bash openssl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.114985681Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.0 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections   10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.137226182Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.188084734Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.209178599Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.236655947Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.248854215Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T18:35:28.248854215Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T18:35:28.248854215Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:de350a6975630643c806a99a2f8b4e181a5e71fe1d594951e736f7861aae93ed",
                    "sha256:ad2ff101ef185b6611ecfb6516b03aa9c775a1d68624bd1f58f69b220761d72d",
                    "sha256:9a3be9af92ce9451e146e2acaccc5766e8ba1deb4e6296381f0a2c80c7993a45",
                    "sha256:21eb277a065e4a9fcfdda8056831f87c7e928d61e19be83bef0accdc7f1fb38a",
                    "sha256:4fc77163dad1ca5b418dbc228b4d9befe41ce577b381692f42ee38c56cf2f76d",
                    "sha256:61b0026600b0c2d8961e33441a5f7dc2097fba05db6effee5f5c5ff073a82850",
                    "sha256:489171e8d0fd226e7e8e032a40bdc19083c46ac72c2e1753dc4d1010837a2fe1",
                    "sha256:612394047106ae3131aa6e4b8784ab6f6023af171a7bfdb4ff28801fd2803d8c",
                    "sha256:57771a84a00d6d3493bbb3bcd9bfb65de9b5c87c4e4eed53751a586cce4e2e3b",
                    "sha256:60c0b8f8df4c8a06ecfc21f2b6710b889f9eda762e1ea39008f78b40995c73d3",
                    "sha256:9d91b3d1cb5c0c3b469516f5562641b16cc4ba4af9b95cc5e9291f6134278b2e",
                    "sha256:6bd435d76815b638d720f5751e3e4dd45ba15eab8e702e8906c014fd7cef9330",
                    "sha256:01b6db9bfcd9ba66a79ad53135f21ce23703f1a52b2e39ca70572c73b084e4c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.4",
                    "NJS_VERSION=0.8.3",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.5.1",
                    "DOCKER_GEN_VERSION=0.11.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-02-18T09:10:17.511Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "a2a441e1dbc0e7871f4bf392a78a95798d67f02a",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-18T09:10:44.769501004Z",
            "history": [
                {
                    "created": "2024-02-13T00:37:22.220329179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb6a3def1f69e76655620640e610015f285bc23c97e89855feb1f0548309d518 in / "
                },
                {
                    "created": "2024-02-13T00:37:22.50544929Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV NGINX_VERSION=1.25.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV NJS_VERSION=0.8.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:44.617773974Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:44.617773974Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:44.617773974Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.1 DOCKER_GEN_VERSION=0.11.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:44.617773974Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.1 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections  10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.654558424Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.708571387Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.726615034Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.751765321Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.769501004Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:44.769501004Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:44.769501004Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ceb365432eec83dafc777cac5ee87737b093095035c89dd2eae01970c57b1d15",
                    "sha256:84619992a45bb790ab8f77ff523e52fc76dadfe17e205db6a111d0f657d31d71",
                    "sha256:3137f8f0c6412c12b46fd397866589505b4474e53580b4e62133da67bf1b2903",
                    "sha256:7d52a4114c3602761999a4ea2f84a093c8fcc8662876acc4c3b92878b9948547",
                    "sha256:188d128a188cafb013db48e94d9366f0be64083619f50b452cfd093e7affa260",
                    "sha256:bcc6856722b7b251ad00728c9cd93b679c7836d5e6780b52316b56c20fd5be94",
                    "sha256:61a7fb4dabcd05eba747fed22ff5264f82066d2bf8e16f78198f616e700f5aa7",
                    "sha256:2a72ae90dbeab51fa74f7e7e7e4932522cd9d4e8f6eef3e21a4b829f5cd9ea82",
                    "sha256:42fa08fa680bd7c3b3ff26f19b98db00faae6fd3510f671703b199cca3b3291d",
                    "sha256:08a87681ce545b913b8a38200deb2104ae3f988fbcbbcf86ff69eeeca000e06d",
                    "sha256:739d6c6b0a62d3ee4c6005bd444d0fc874b0bba131ed89bdf063c61b57c35296",
                    "sha256:b94f05c9c32121ef0e37ba117f70cea4536714263b2677413dd4e0e7de56796d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.4",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.3",
                    "NGINX_PROXY_VERSION=1.5.1",
                    "DOCKER_GEN_VERSION=0.11.2",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-02-18T09:10:15.002Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "a2a441e1dbc0e7871f4bf392a78a95798d67f02a",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.1"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-18T09:10:34.052070803Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV NGINX_VERSION=1.25.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"79bf214256bf55700c776a87abfc3cf542323a267d879e89110aa44b551d12f6df7d56676a68f255ebbb54275185980d1fa37075f000d98e0ecac28db9e89fe3 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "ENV NJS_VERSION=0.8.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T18:24:57Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"79bf214256bf55700c776a87abfc3cf542323a267d879e89110aa44b551d12f6df7d56676a68f255ebbb54275185980d1fa37075f000d98e0ecac28db9e89fe3 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -f \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:33.770147302Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:33.770147302Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:33.770147302Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.1 DOCKER_GEN_VERSION=0.11.2 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:33.770147302Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.1 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c apk add --no-cache --virtual .run-deps bash openssl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:33.872917101Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.1 DOCKER_GEN_VERSION=0.11.2 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections   10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:33.931445926Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:33.985100029Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:34.003643198Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:34.034762223Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:34.052070803Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T09:10:34.052070803Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T09:10:34.052070803Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:718db50a47c05a25f683e0295a00889c550c588603281a600ef59ffc684c243b",
                    "sha256:3137f8f0c6412c12b46fd397866589505b4474e53580b4e62133da67bf1b2903",
                    "sha256:c5140fc719ddebf2068a3cdd4a0de43fd423579f3152b70b7581bed83a97aaef",
                    "sha256:9909978d630d5100e7a99cf66a093a5846b7fb943e60b253ebbb4b2e4e1dbb49",
                    "sha256:2593b08e54289677b758a0b311972cd0c90143be3ba12596693e15ab779eaaad",
                    "sha256:d8527026595fdfdf53206d996bac1d8bde7e704e748e608d5b8e1fa65da9fdb3",
                    "sha256:667a247707f028303a5ca37c7098de427b153466d817146fbc11bbe463079098",
                    "sha256:a1762028036d7e7b90486c772611b45b02cab20a68535afa75fe90be57ce407a",
                    "sha256:657d3dece19111f10ad315a6d16859c29f0679e31a812561583c250ee0bd8e4e",
                    "sha256:58bb360c8a3929be5635374a46f149a96bb470d669f56a493be107428d1bc2df",
                    "sha256:160649e59119a7d7a5bebd93bea6b1a20a094baabd978d1c5a28967485a799f0",
                    "sha256:6651e6bf8d42c72dfb798079b0ae78b1620423e77f97a751c8d17879d498252f",
                    "sha256:e5eed156a3726e2de0c5e1d9cbdd3ffed45bc940b276ff68e7fab36289f19a40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=1~bookworm",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.5.2",
                    "DOCKER_GEN_VERSION=0.12.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-03T11:01:39.419Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2ac4509a61600190b7b82cc7d0cd4c81aa08d7fc",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-03T11:02:07.354368465Z",
            "history": [
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b1be1de1a1e5aa608c688cad2824587262081866180d7368feb79d33ca05953 in / "
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV NJS_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/etc/apt/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${NJS_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T22:15:45Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.052391657Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections  10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.113035239Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.194734881Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.284264055Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.318716074Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:07.354368465Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:52ec5a4316fadc09a4a51f82b8d7b66ead0d71bea4f75e81e25b4094c4219061",
                    "sha256:a5e3d8df538fb51ab55fd51fa5ed54db53cb4b7fa4f4280f923a014832f28eb3",
                    "sha256:9f2740221651b12ea6bf9ac4353eb66bdc43b3e3bdcd8bac2f8df3563eb79c2c",
                    "sha256:4d2d7313e276e7c6f9f0d53e384fab89feb3a566303e01a6ac83116bb1fa70aa",
                    "sha256:49e8e4f2ae9f54253cef593068af8ab28174a82f3dc5633814067de8c1e7b52f",
                    "sha256:579b32de35b385942d6e4d96342265549ec94b557c8446bfc4cddb17c47370c8",
                    "sha256:f5cc88e38a01b6027ded56e5a16dfb3cd40441e2838ced37869e716b51d3b9ae",
                    "sha256:5b419dfccf457c156ea63df32c483490d9398242f520b244c877aa6ba829d4c4",
                    "sha256:d5348ec19afdef66df1c526e43723f8e7ac1a7603b74baad4268a0a705333b34",
                    "sha256:3858c9af4eed0d9eaf75068fb1622c316284f1e8bab2c57ec7bce5117108b7cd",
                    "sha256:87217e152693f875d3e71507d7bd859ab8c679d5fd8d45198d89866bea81abec",
                    "sha256:9dc4cc3ff49d348a3738e315d11aa1ef09d3a591ea0e638f147ec0c41a386913",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1.5.2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=1",
                    "NGINX_PROXY_VERSION=1.5.2",
                    "DOCKER_GEN_VERSION=0.12.1",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-03T11:01:41.043Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "2ac4509a61600190b7b82cc7d0cd4c81aa08d7fc",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-03T11:02:04.033567743Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"f0ee7cef9a6e4aa1923177eb2782577ce61837c22c59bd0c3bd027a0a4dc3a3cdc4a16e95480a075bdee32ae59c0c6385dfadb971f93931fea84976c4a21fceb *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "ENV NJS_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-23T21:35:33Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"f0ee7cef9a6e4aa1923177eb2782577ce61837c22c59bd0c3bd027a0a4dc3a3cdc4a16e95480a075bdee32ae59c0c6385dfadb971f93931fea84976c4a21fceb *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:03.846015133Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c apk add --no-cache --virtual .run-deps bash openssl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.924079042Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2 DOCKER_GEN_VERSION=0.12.1 /bin/sh -c sed -i 's/worker_connections.*;$/worker_connections   10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.948685663Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:03.994875338Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.010273447Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.025148415Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T11:02:04.033567743Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:c66017523a933d67d5dd8daf14ff35dcff223883fea615a369900ff1104f7f43",
                    "sha256:4531681221ae8b55d3a734a28450573feac6cb4f4be0bf3cdc921122350b6762",
                    "sha256:ad00c3770f636cc5536d088dd33fd522b14171bb35eda93d8caed0fd39d9bc25",
                    "sha256:8bcdb41950bd19ed8b0b9ad0db9b40acef66e38a901958f9eed8fb30eeab6df1",
                    "sha256:d0a420a23105d9444358b1bda0b8456c6732a2396d930c08bd684326bb682958",
                    "sha256:d74615ba5d49fbcbaba71d53a065ac5dd2767227e25b18f4d9b551101dce5e92",
                    "sha256:ab5126cacbcedb16f017106a99f58b4550ac64e081bf3ca53432c98f5b0fae85",
                    "sha256:3162e50195d7c8124687b4b321253f9199b6648aa954aaaf5d04b43ec77e10c1",
                    "sha256:ed3acc6a8a3542673abdce70db3ff1b41c4abf2e04953f2426dbc66c9aa1cc99",
                    "sha256:437a05e3d57f7cfe206c53395126b7e58708d5d37df6f55d7033ba358929f633",
                    "sha256:421819289bfb96498d4723545c32a1240f581e42ec60adb2d239dfdbd125179f",
                    "sha256:bb491bd4c73205a3deeda21db5ad723d0cbc027441537c7d8931c5f78f1b2797",
                    "sha256:fd87d28b08592249ec0397b2ae1edf7d02edac502d91fd7874d249acccbfaff2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "PKG_RELEASE=1",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=2",
                    "NGINX_PROXY_VERSION=1.5.2-48-ge904471",
                    "DOCKER_GEN_VERSION=",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-28T05:45:14.036Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "e904471cd304643fdbcdd37aef7e67a86c309787",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2-48-ge904471"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-28T05:45:29.194695512Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/73d6839714a2.tar.gz                 && PKGOSSCHECKSUM=\\\"95d513d058493d60cba5a6bb328dc3c3e75ea115cf248a64bd921159e11c6fc87d33c7f058562c584fe440a219b931d53fd66bd4c596244b54287b62979834db *73d6839714a2.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 73d6839714a2.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 73d6839714a2.tar.gz                 && cd pkg-oss-73d6839714a2                 && cd alpine                 && make base                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/73d6839714a2.tar.gz                 && PKGOSSCHECKSUM=\\\"95d513d058493d60cba5a6bb328dc3c3e75ea115cf248a64bd921159e11c6fc87d33c7f058562c584fe440a219b931d53fd66bd4c596244b54287b62979834db *73d6839714a2.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 73d6839714a2.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 73d6839714a2.tar.gz                 && cd pkg-oss-73d6839714a2                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:28.984387893Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:28.984387893Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:28.984387893Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2-48-ge904471 DOCKER_GEN_VERSION= DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:28.984387893Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2-48-ge904471 DOCKER_GEN_VERSION= /bin/sh -c apk add --no-cache --virtual .run-deps bash openssl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.075686301Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2-48-ge904471 DOCKER_GEN_VERSION= /bin/sh -c echo -e \"\\ninclude /etc/nginx/toplevel.conf.d/*.conf;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_connections.*;$/worker_connections   10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/toplevel.conf.d'    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs'    && mkdir -p '/usr/share/nginx/html/errors' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.106118267Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.152657991Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.165760733Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.184479129Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.194695512Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:29.194695512Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:29.194695512Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:0d01880f987b63e1e77dd2aa616b2c81c9849d8bfbcfa2d522a43ed2a8872181",
                    "sha256:2806be01f22987ee4a8b98382efd01e1056b3123bd9dba70fc569ff7b096075f",
                    "sha256:3651e56dc394bd6afea220c0a4957c26d37ca590e7cb93f6a14e77fe4f5dc3e6",
                    "sha256:c19ca31bf212726d6fe268ed0c6d6b43101bf710ee7d8a7b1e2294ab31afc4c2",
                    "sha256:caa2c1164fa4f1e7e10db2fadac85eb3e0f69a60354903373cec81bf45cc23a1",
                    "sha256:c8ee365a8f96603ec94166f1d47a16d5e0d2ec8b021ef8bbb62aa7f6082e22ee",
                    "sha256:3f815151f15aca7a2603d967ba62e73fde583de4fea34083ede8fe7c20c94101",
                    "sha256:aa4964871a6c525873b70d5b7b7bacf81b72adafdbc6a5ec60276704da2e1b3b",
                    "sha256:1aaaa8d6980167ff9bf7e96142427008cda82d2b2066df038f021cfd991c9602",
                    "sha256:849a94a111e0373fe2efbe7f07de0c144e0e27fc4fdaf2359644d49d0635d169",
                    "sha256:65256f0eef4f6545883c5d029ffbc427fe36f3419d3ee4123b15c839390bbcea",
                    "sha256:1e3fd3f106aff5d6159fce9a6267b7e9f144352dcec1d72e1b4c72246a127739",
                    "sha256:cb175c831bcaf34ddf91b6ec270c62471df40083d571b5d75a89bea84799a09b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "alpine-0.6.0": {
            "architecture": "amd64",
            "author": "Jason Wilder mail@jasonwilder.com",
            "config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.10",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f24101d00441d7eda58f36b6d132fdb43adc1ff3b7345b8c37e787d3351d61a",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "a08ad4f09eb3b43c5a038ab50fd1596a759d1c099479435d87b78cc18cb64111",
            "container_config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "443/tcp": {},
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.11.10",
                    "DOCKER_GEN_VERSION=0.7.3",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f24101d00441d7eda58f36b6d132fdb43adc1ff3b7345b8c37e787d3351d61a",
                "Volumes": {
                    "/etc/nginx/certs": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-04-05T04:47:51.445262513Z",
            "docker_version": "1.12.6-cs6",
            "history": [
                {
                    "created": "2017-03-03T20:32:21.010554522Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3df55c321c1c8d73f22bc69240c0764290d6cb293da46ba8f94ed25473fb5853 in / "
                },
                {
                    "created": "2017-03-03T22:02:09.823740715Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T22:02:10.11173297Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T22:03:00.145120559Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-http_perl_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \t&& gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2017-03-03T22:03:00.639871859Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2017-03-03T22:03:01.176145252Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop) COPY file:d15ceb73c6ea776c299822265ed38cd2fd8a78804f4f4889094d1dd1e292984b in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2017-03-03T22:03:01.50316706Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 443/tcp 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T22:03:01.815836512Z",
                    "author": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:34.374474375Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:38.192445388Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .run-deps     ca-certificates bash wget     && update-ca-certificates"
                },
                {
                    "created": "2017-04-05T04:47:39.464592784Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/^http {/&\\n    server_names_hash_bucket_size 128;/g' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2017-04-05T04:47:41.411390277Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) ADD tarsum.v1+sha256:1d06435eb34c3c48ee88fcd3062a6667c15755d382f7101d23fe1ee811240a4f in /usr/local/bin/forego "
                },
                {
                    "created": "2017-04-05T04:47:42.896069676Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2017-04-05T04:47:43.76773471Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:45.873212758Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c wget --quiet https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2017-04-05T04:47:46.775085114Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop) COPY dir:1dd03a1a817b900eba105e248efa94820f920a561051b49edf0ad285052922ef in /app/ "
                },
                {
                    "created": "2017-04-05T04:47:47.624111337Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:48.563796068Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:49.553006997Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:50.508133406Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-04-05T04:47:51.445262513Z",
                    "author": "Jason Wilder mail@jasonwilder.com",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f8566ee5135862dd980160c27bd7721448a6f7f385bbb81f7f001f1b78a5fbf",
                    "sha256:d4930e247b4962e14642f6017cf578fe965514784ca99dc2550373471c45fec8",
                    "sha256:c0ab80890b7ffee1f40a8d33e66b5cc9e63e8c10fec1866384d21d4a8529b816",
                    "sha256:4a8d9a67e458d2c8fe42c5aa2a2a35303c7484df30207e233fcf03ab7bb9ffec",
                    "sha256:57223eb2c5c6c2ebfbc2454c645eb6bc2b63dda16d54bb75db6a2f25a4cd9b2b",
                    "sha256:4892cdd0eb5dbfcbac2c2d7af685c321267ff6de87d6afd636ec0b7ecc57328f",
                    "sha256:8d944e13acc8f3623dcaa414262c4823766e8fff88d4bf1961748e599d4fa34c",
                    "sha256:4c6656363b8ccfc7b9a366a399916faaed5e855b58e8c00502f94b63c23969d2",
                    "sha256:25622aa1bc3d4bada83714d88df024fbb827106a7745cd2b9b5874b1103bfcc8",
                    "sha256:b2d2775f464fae7f7a95d8ad2aeff9f90a6f847b28d85332ffc8878b6d0b700d"
                ]
            }
        },
        "alpine-0.7.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.10",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d0a0f25471ac020c77b4e9950f8ef948f4eb5b454a037a3620a2785b7804781a",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app/",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "5888ae8cf8fa53df9cf87b2a19f98718e62bcd6c84cc8c76b69ca18270cf8e10",
            "container_config": {
                "Hostname": "5888ae8cf8fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.13.10",
                    "DOCKER_GEN_VERSION=0.7.4",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"forego\" \"start\" \"-r\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d0a0f25471ac020c77b4e9950f8ef948f4eb5b454a037a3620a2785b7804781a",
                "Volumes": {
                    "/etc/nginx/certs": {},
                    "/etc/nginx/dhparam": {}
                },
                "WorkingDir": "/app",
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "maintainer": "Jason Wilder mail@jasonwilder.com"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-03-24T05:43:03.308160178Z",
            "docker_version": "18.03.0-ce-rc4",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T22:54:03.35482938Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:40:58.154892681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:41:59.29442983Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-03-22T00:41:59.788918295Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-03-22T00:42:00.387691777Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-03-22T00:42:00.660401543Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:42:00.920629371Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-22T00:42:01.204501201Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:46.46058088Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Jason Wilder mail@jasonwilder.com",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:42:51.147739996Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .run-deps     ca-certificates bash wget openssl     && update-ca-certificates"
                },
                {
                    "created": "2018-03-24T05:42:52.56647808Z",
                    "created_by": "/bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf  && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-03-24T05:42:55.291959213Z",
                    "created_by": "/bin/sh -c #(nop) ADD ea5c2864952441ee145fe088d72b5e101ce41409accb7cdcb01aa78839dfcba1 in /usr/local/bin/forego "
                },
                {
                    "created": "2018-03-24T05:42:56.798718768Z",
                    "created_by": "/bin/sh -c chmod u+x /usr/local/bin/forego"
                },
                {
                    "created": "2018-03-24T05:42:57.178942713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_GEN_VERSION=0.7.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:43:01.226900548Z",
                    "created_by": "/bin/sh -c wget --quiet https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && tar -C /usr/local/bin -xvzf docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  && rm /docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
                },
                {
                    "created": "2018-03-24T05:43:01.530423557Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:bbe100487cf4b8e9ec265c2def449193587c1995076bc9881f2ab8b9f6604025 in /app/ "
                },
                {
                    "created": "2018-03-24T05:43:01.886779195Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /app/",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:43:02.25741919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_HOST=unix:///tmp/docker.sock",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:43:02.58544252Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/nginx/certs /etc/nginx/dhparam]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:43:02.937099957Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-24T05:43:03.308160178Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"forego\" \"start\" \"-r\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:07a1c4abad329d12023bc7e2acd32c9c0a7e6e1ebbcd5dda383a8a42b5d72904",
                    "sha256:981aba65961af8e31c773406eed24ee1e4c83f6a17b04d83ead6308d5406505b",
                    "sha256:d50f331da2e331000e08bfd9b9fb689454353747cc40014d97466ae83b63ae8b",
                    "sha256:2cbdcba82373e79eb6999f287ad30352d0289fb3aa3057af80d111cdcade0dc4",
                    "sha256:51e3520669de8035361d94d6ccb87a1230f29e50dedbafa23a6d48f9df2b4f87",
                    "sha256:b419d17edff8f6bab08e42b22ed27fd06db5c71f7602328b181bd3940ac9aeb0",
                    "sha256:e06db9ea93dcafc8727b9ef196429170f1214c39eeb1029bae95cc5f30febc6b",
                    "sha256:2a047864ba9148373db29fbd643ce580acc7d1bbf5f033fb3508ec911b744e45",
                    "sha256:c5115a8298820c429ef3a6355ae50143c5d5ab041c5f7c2614bbd697cc94120a"
                ]
            }
        },
        "dev": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1~bullseye",
                    "NGINX_PROXY_VERSION=",
                    "DOCKER_GEN_VERSION=main",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-24T14:51:37.916Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "0185a2971c6538afa72021acefd9bfdc1552034d",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.0-46-g0185a29"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-24T14:54:11.35185918Z",
            "history": [
                {
                    "created": "2022-01-26T01:40:35.769668496Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:90495c24c897ec47982e200f732f8be3109fcd791691ddffae0756898f91024f in / "
                },
                {
                    "created": "2022-01-26T01:40:36.265271157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.353797681Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.609113093Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:35.827389248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:57:36.065482015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:32.922897871Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-26T08:58:33.350372757Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-26T08:58:33.610126307Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:33.859413094Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.141005346Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-26T08:58:34.342239735Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.562322806Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:34.813995669Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:58:35.041664322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:32.422880101Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:32.422880101Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:32.422880101Z",
                    "created_by": "ENV NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:32.422880101Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main /bin/sh -c apt-get update    && apt-get install -y -q --no-install-recommends    ca-certificates    wget    && apt-get clean    && rm -r /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:52:32.7067516Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:52:32.744988492Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:54:11.236377138Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:54:11.260444463Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:54:11.35185918Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:54:11.35185918Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:54:11.35185918Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:54:11.35185918Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d0ebbe3f5d26c1b5ec4d5dbb6fe3205d7061f9735080b0162d550530328abd6",
                    "sha256:9a3a6af98e18f06f2a233aa2b2374a5d83d3812e2784b0ab8db949f34cd1a7d6",
                    "sha256:9a94c4a55fe4c8a5cfea7fbac1dde94c38973dbdab17a6314f0c8b35b68aba95",
                    "sha256:6173b6fa63db8be9be756acf32a7beea0e8115f4e932d7de50b6071e7c55ee50",
                    "sha256:235e04e3592ae74b04d0f29af65312be4c50c259b23b74698e35d42b2a4430ab",
                    "sha256:762b147902c09d1860cccdaf4c5b28f5dea3760cb35c213c60ba2315950cbdaa",
                    "sha256:a29100b330108f7264adebc46b6d6228ef9c9d9d13a2df5b73cc451a6880a4b8",
                    "sha256:cbab6bc742369ec42581a1ec4554da99d3f8636ea1bc7aac1a074380acf830a2",
                    "sha256:736ade5969f83a50a7fb073b35a922ef0922f2def9e4ae38a76feb8c744003e9",
                    "sha256:836663d2d3974192c4acd97005aa90b5e629fe750eb1e8ceb77bec8ff55ee92f",
                    "sha256:d1a0f0688b0503d61ad0ee2c5b5d81474396d2ac52bde86ef92422590a20327c",
                    "sha256:3ac65d5899ba5496dafe074c59705897f377f67310219187d3a51253bf0fb814"
                ]
            }
        },
        "dev-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.2",
                    "PKG_RELEASE=1",
                    "NGINX_PROXY_VERSION=",
                    "DOCKER_GEN_VERSION=main",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2022-02-24T14:51:36.484Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "0185a2971c6538afa72021acefd9bfdc1552034d",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "0.10.0-46-g0185a29"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-02-24T14:53:21.336023335Z",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-29T19:29:04.16538557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.564847523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:57.780944464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:38:58.001318895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:07.536319062Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"29ec1c635da36b7727953544e1a20e9d75bd9d2050e063b9f81f88ca07bb7ea0b65cef46d0f3cb7134b38ce9b94ecada631619f233231845a3d8a16b6ad0db82 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-01-25T20:39:08.151512909Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-01-25T20:39:08.618949282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.304128562Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:09.813218835Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-01-25T20:39:10.15290576Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.498199739Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:10.860347544Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:39:11.21594189Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:04.270881958Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:04.270881958Z",
                    "created_by": "ARG DOCKER_GEN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:04.270881958Z",
                    "created_by": "ENV NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:52:04.270881958Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main /bin/sh -c apk add --no-cache --virtual .run-deps    ca-certificates bash wget openssl    && update-ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:52:04.499595635Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION= DOCKER_GEN_VERSION=main /bin/sh -c echo \"daemon off;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_processes  1/worker_processes  auto/' /etc/nginx/nginx.conf    && sed -i 's/worker_connections  1024/worker_connections  10240/' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/dhparam' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:52:08.557975438Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:53:21.281222442Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:53:21.302944398Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:53:21.336023335Z",
                    "created_by": "COPY . /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-24T14:53:21.336023335Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:53:21.336023335Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-24T14:53:21.336023335Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:67bae81de3dc5ccf5101dd4973e8e4b10ee3d5681feb9c30119e6acee1e12dd5",
                    "sha256:89f4d03665cee1ca943d0b55c086ea7577f4658c2cabe69eaf640f1dc47129f9",
                    "sha256:318191938fd7801d80ad617482e4312f0ced71e6c1d4bcb02e12d90a9d65eb11",
                    "sha256:a770f8eba3cb3840d7579e2c4925c9fa275813e8719fe5435905b887a9ee7674",
                    "sha256:6fda88393b8b02872c87c6626807e7bfac1f49e63f47a5ddba0cd11fae99b575",
                    "sha256:9ae262555adac8610519f6454ffc7ae29bb705513b36bdfa666318092ef23afc",
                    "sha256:040f8e966f7b25697a73e31b3b80784783cc71b7f5c74034182f2196624be8a5",
                    "sha256:3dbfc854ed5dcb50b255f38d626b2183ab633d8068c566d7963673f92a7a890e",
                    "sha256:7fc47cf0ebc27dc503744d0f8abc488408508de50f8bd46cee9366a5d6753c7b",
                    "sha256:9e036e9e6b4de1772885e24449754a3ddafa239730a0d3e18bb7336e6bb77ff1",
                    "sha256:52d6e900c7bd82fa30930cac55c35d8e41e97e1030d485f3929132d32d4c3936"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.26.0",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=2~bookworm",
                    "PKG_RELEASE=1~bookworm",
                    "NGINX_PROXY_VERSION=1.5.2-48-ge904471",
                    "DOCKER_GEN_VERSION=",
                    "DOCKER_HOST=unix:///tmp/docker.sock"
                ],
                "Entrypoint": [
                    "/app/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "forego",
                    "start",
                    "-r"
                ],
                "WorkingDir": "/app/",
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "org.opencontainers.image.authors": "Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder",
                    "org.opencontainers.image.created": "2024-05-28T05:45:13.180Z",
                    "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                    "org.opencontainers.image.licenses": "MIT",
                    "org.opencontainers.image.revision": "e904471cd304643fdbcdd37aef7e67a86c309787",
                    "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.title": "nginx-proxy",
                    "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                    "org.opencontainers.image.version": "1.5.2-48-ge904471"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-28T05:45:33.141848922Z",
            "history": [
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5aaace706aa00ff97d243daa2c29f5de88f124e1b97c570634f16eef90783286 in / "
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.26.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=2~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/etc/apt/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${NJS_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:32.84210753Z",
                    "created_by": "ARG NGINX_PROXY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:32.84210753Z",
                    "created_by": "ARG DOCKER_GEN_VERSION=unknown",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:32.84210753Z",
                    "created_by": "ENV NGINX_PROXY_VERSION=1.5.2-48-ge904471 DOCKER_GEN_VERSION= DOCKER_HOST=unix:///tmp/docker.sock",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:32.84210753Z",
                    "created_by": "RUN |2 NGINX_PROXY_VERSION=1.5.2-48-ge904471 DOCKER_GEN_VERSION= /bin/sh -c echo \"\\ninclude /etc/nginx/toplevel.conf.d/*.conf;\" >> /etc/nginx/nginx.conf    && sed -i 's/worker_connections.*;$/worker_connections  10240;/' /etc/nginx/nginx.conf    && sed -i -e '/^\\}$/{s//\\}\\nworker_rlimit_nofile 20480;/;:a' -e '$!N;$!ba' -e '}' /etc/nginx/nginx.conf    && mkdir -p '/etc/nginx/toplevel.conf.d'    && mkdir -p '/etc/nginx/dhparam'    && mkdir -p '/etc/nginx/certs'    && mkdir -p '/usr/share/nginx/html/errors' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:32.896742831Z",
                    "created_by": "COPY /usr/local/bin/forego /usr/local/bin/forego # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:33.048991906Z",
                    "created_by": "COPY /usr/local/bin/docker-gen /usr/local/bin/docker-gen # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:33.076335429Z",
                    "created_by": "COPY network_internal.conf /etc/nginx/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:33.122097707Z",
                    "created_by": "COPY app nginx.tmpl LICENSE /app/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:33.141848922Z",
                    "created_by": "WORKDIR /app/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-28T05:45:33.141848922Z",
                    "created_by": "ENTRYPOINT [\"/app/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-28T05:45:33.141848922Z",
                    "created_by": "CMD [\"forego\" \"start\" \"-r\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d4427064ecc46e3c2add169e9b5eafc7ed2be7861081ec925938ab628ac0e25",
                    "sha256:b64902b7f501d9464a8c51b204e6ab3b80895ce2a7852c6a8d41b2808c400ae3",
                    "sha256:abf5f31b6a0b271668d3a0de49c3e6b7016abab30826973933cf7bef0242a647",
                    "sha256:8fec15e62229a628d1205ec33343cfdbead7413a57cb9e7a756735f166efb02e",
                    "sha256:7e7eba133fb8b4fba6aea78f7ea99de254200870bc593cf5a6387416cf90e22a",
                    "sha256:619ad0127e6bf9bfc204fe187f4c2bfe65560d27e579fd7705dd9ab55264d606",
                    "sha256:55ee6a06cb8d928e14394087fdcedb4db2c6cbc01b03121c8c44fd414ce878de",
                    "sha256:054988a20b1db4e3a24e1796102184b7bb40c290f83da66fee6d8925fe6a4496",
                    "sha256:5392706685ea7a03010eb4450ceb327e9c70786e5c7300ddb1bf609824ea2a04",
                    "sha256:8a1d59ed8fc65ae75dee367a3be005bbbcfbd5fceee53f436898fcf5eb3eac5c",
                    "sha256:57eb7de2e53e17f3c687716e8a16390668420925a7cfd5db6f5f85f3204373d7",
                    "sha256:e4b1f757bd92745feadd5f15b0fbe3cbddfcf5b9cf6313105aeb88b06f732143",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        }
    }
}