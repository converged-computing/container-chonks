{
    "manifests": {
        "2021.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 23695,
                "digest": "sha256:361a6a56784e0acd5aed5e21e12aa4c737a901a1af2973d9c319a58934345d87"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28563271,
                    "digest": "sha256:da7391352a9bb76b292a568c066aa4c3cbae8d494e6a3c68e3c596d34f7c75f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:14428a6d4bcdba49a64127900a0691fb00a3f329aced25eb77e3b65646638f8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:2c2d948710f21ad82dce71743b1654b45acb5c059cf5c19da491582cef6f2601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4329,
                    "digest": "sha256:eff3c88e1cdfe89aa6c4beca7b997eda1fda2fba4cafa8c73bdb77ea8cac5a2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5890164,
                    "digest": "sha256:416a89a791d94d8d4d46a00d236830bfbc55ebcccb8001acbfed62d15f55fce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138640441,
                    "digest": "sha256:3ed67d5bbe98afa21ca7c30e181e79c74cb9ebdf02e0301d4cea1630f8559a39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99,
                    "digest": "sha256:73cc4b8b28fb6d04e6a2dbbf0380db0c1e544e78b7a415ccfd8c96b080305b10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71486750,
                    "digest": "sha256:325a8dc0e8ba9bae3a0a8852e6aeadbfc37aebf2f8586f66f6b288efa5f968e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488128133,
                    "digest": "sha256:8b89b4db1cfb7d391b426bf2cc359e127db6abd44b9a4f5fbed26de358c89d11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10903484,
                    "digest": "sha256:821c1187529e5084c26b2d1f40233b5e7a105c44dd6eb8a02f7b1fe5ef235ce4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4124366,
                    "digest": "sha256:c38acb53f398cadb201b9082680e3fe49ec50caa7863787b3fb71a11b04966d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48574865,
                    "digest": "sha256:e1cab02f9bed13458f000df250d1dd789130fd068b59deb1ef7531ba85d1817b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30127420,
                    "digest": "sha256:bf78c51e4c8ad82f363f6bf371fc106c0419196287607ca76c250d8b143e891b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45460020,
                    "digest": "sha256:8e3aeb276420c41885df657df468d5f79bf452f8fd4aa4d3a1afd1dc9442452e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120,
                    "digest": "sha256:4572311e52e0a892b16221120fa5aa97b184c592b06a0f4acdf59957b51c598d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13345533,
                    "digest": "sha256:bfa22701cc74705be5e1317e47dc181461d9def9723204f8e2a5e33c5492d7bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373535,
                    "digest": "sha256:697fe7e46be4d8d44931e48663cf068a09ab1606369fcd0a1bb642edb69678a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11088051,
                    "digest": "sha256:d977970ea98452c4289d89f086922ea3b28b723d781428aed0b0848b49c7b07a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466660,
                    "digest": "sha256:609869d6be2b96282badfcb0b35b83a9883376791eee93401b4f8adfad33fa32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16463,
                    "digest": "sha256:eb736222031ce232b0643359c8a4a1f18579589f7288cfa223700460c4888f58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18592256,
                    "digest": "sha256:924182d4878c4b6f4de076907d1fc522463b27bb68f77a0de2da52eedff410b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4006,
                    "digest": "sha256:fc7fa97441de397abbbee01847c0e17efe8cf4262db50bfb3485b048c1e1decf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338646,
                    "digest": "sha256:7a37347f5f22081a3641285c0ca952fb8041059eafae7f227040094901a5e650"
                }
            ]
        },
        "2021.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20050,
                "digest": "sha256:8bfe54f0260cdc30b90ce452d005e3a6ace27fb75bd5acf9b6a32ad7ec9b9a90"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567785,
                    "digest": "sha256:5d3b2c2d21bba59850dac063bcbb574fddcb6aefb444ffcc63843355d878d54f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:3fc2062ea6672189447be7510fb7d5bc2ef2fda234a04b457d9dda4bba5cc635"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:75adf526d75b82eb4f9981cce0b23608ebe6ab85c3e1ab2441f29b302d2f9aa8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4329,
                    "digest": "sha256:c5d7f58264153b0c009aec572f41203aaa2d7246d2c0dbf20f29c9a8419c2bc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:5c820eae019d0e63b35ba86674d2b8496053b091c5691fecfd0bb530f4b31fb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111086471,
                    "digest": "sha256:42f3a0643605784e17e053a442b1e9d2fb52bf60c5d030ff8a4ebb552d4a3f8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99,
                    "digest": "sha256:3269213b15d0c6b210f92204f2d41d0ee309543a5da734e108290ab131bdc84c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89309800,
                    "digest": "sha256:53c5cd76fe74ec830ab63534b5a278f75a2e1e4db1a9a415a2d29cd178b62491"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186997424,
                    "digest": "sha256:692c7ad2bdc91158f47274f88d8110a792cb4ecc27aa69bb811f4776c048735e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343,
                    "digest": "sha256:e2870d74878abc9e3c33a8aa51e0fd7dedbba3dd4e8b7405b849e51fdedefb81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4151407,
                    "digest": "sha256:17f9b14e70d19d916bf84f9cc3256af75f9b353024ad10100ff223f9d4e706e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72470359,
                    "digest": "sha256:f03612ef7b7b29d05634b0d807525e2a5223c794aaf76a907c00f6e4fdb9efc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 414802,
                    "digest": "sha256:3bb14fe19c71eb6081304c9682303e79a0fbf52df1355480d5d464d603c52129"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45466027,
                    "digest": "sha256:b2a5257b37d761ec73503ffb5f82cbee3d0d625f6fe200feef20c75e87b61d90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4278197,
                    "digest": "sha256:d77290f6ba8eb2b49ddfc7aee25e5a422cd4313ba07eecd6d7bb9378ae34a6ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373472,
                    "digest": "sha256:961a3e8a964dc731a23314e5945204894c8fc27f42921ef61056e5af2ce3c7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466662,
                    "digest": "sha256:e8a2e9cc771397cf51958d3eb52e775cd168fce4bc9ca01b59fdf1b232b02501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16708,
                    "digest": "sha256:5399a94be826f0b3ee9157df95fa7c02f0f75ffc462d62fd902c2388d6b7754e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18597906,
                    "digest": "sha256:068626c26ec43415967ce0118d24cb071a22d5221db8a40a53724d0b5686eaf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4101,
                    "digest": "sha256:f91a8f97c8316ceff86086f7c4731e026338b4deed0e86ab4b78e15ab83f2c16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344821,
                    "digest": "sha256:6eb7e6f8407e7273a2b44f61e1516c19ea4529ebff7b866f6b5870f6be3cfd7d"
                }
            ]
        },
        "2021.3_src": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20007,
                "digest": "sha256:f77ac1b3927a27129d8135ff17c31710c302bfef5442a20dacc0bc1db869bfd2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567785,
                    "digest": "sha256:5d3b2c2d21bba59850dac063bcbb574fddcb6aefb444ffcc63843355d878d54f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:3fc2062ea6672189447be7510fb7d5bc2ef2fda234a04b457d9dda4bba5cc635"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:75adf526d75b82eb4f9981cce0b23608ebe6ab85c3e1ab2441f29b302d2f9aa8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4331,
                    "digest": "sha256:3fe962df7050c2cc7555a77d29e9ae6b20494b0d0814d65e18dfc402540e0089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:31f68cadf72c798ea1f7686c918784faa33049d446fb8a892f7ca642f4898b73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111087114,
                    "digest": "sha256:0ecb18863e1ff8202ade4d87c6a44935706847267544bec243b29ec9328c03d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99,
                    "digest": "sha256:7959fb9c7678c4adfdde0cff9085369afa2310942180cbf9380a0d5c3adb2593"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89309696,
                    "digest": "sha256:d53c68bff06bdec07d8c1dd939201e5a8a56e75be95d6efc3c8da47ee07fb996"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1184119528,
                    "digest": "sha256:7478139a4780bbcd1864b418f12100b49ec6f57bde22aa6c5ab548baf77ae404"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4151485,
                    "digest": "sha256:d0ade2bcb7fcece2dcef97382bcdc5d522ee7562efd0466c1af92ca78ff403c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72470153,
                    "digest": "sha256:9ebf42fff5f1a1764141f0daabe4252b379b2900542a136db486c91b20ebae08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 414828,
                    "digest": "sha256:1750e6d3c29c3a2271dbe889a372044b67a736f3981b5ed3167fb2322731d097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45465998,
                    "digest": "sha256:018012898ab13ce1db1664c29576def7440846e695acb34a69de4e977b60556f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4279200,
                    "digest": "sha256:c197e85812063d12523996530d55ab3c66a682e45714120084b4020f86caf2d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373527,
                    "digest": "sha256:5caae10d0a14ab847bffb525c6d02af9a47190b31b2393d23ef142fd04273e1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466655,
                    "digest": "sha256:a8ffbb6261a9cb3c2093f74c4cf5f6df61cd421f563436c44958d5db845fe3c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16676,
                    "digest": "sha256:78a25c754fb72a7a7f7d35122353c6068fce5c15429f6627414a031ffe776039"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18597875,
                    "digest": "sha256:66b1aa56cd0ea9ee505b6058ff465078aa8dfd2767a5bdd74039e5de973b1367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4102,
                    "digest": "sha256:c21ba086f35b2608e92820837ebc0bceae00d4d2c5a9154b36772c292969fc46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344832,
                    "digest": "sha256:7ae4c6a7ab9177d90e5a3a92d0c19712de8272148dc50d56c666b9ffc446bcc6"
                }
            ]
        },
        "2021.3_vaapi_fix": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20051,
                "digest": "sha256:9b288a2144f86ab4d244bb2d63ae47a8bd3eb64cd9cbd0accab9f68fd795cd4f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28569428,
                    "digest": "sha256:04a5f4cda3eea2313a61a2f72208342a57ea36a9326dff54f4f26ed47d145c7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ff496a88c8ed9b745dab2f00bfbd9013c6d1db198442a6a8683998a29a85458a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:0ce83f459fe7e0bf459d0c222ef3b2ca4d9911f6b0f9aae02c2120561b54ca18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4381,
                    "digest": "sha256:264db57cc401b4c84979f5c639c4cbe6b90c33c29a2e76f5d120052beb7d9d86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:af985c2587afd8c818518cad4d18a6944dde97d62c6689373b28742719fec0d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111102366,
                    "digest": "sha256:bff6cfd97bf62cf44541b6a3d1bb1cbccf36cefee7f821d192bafc6e37e4f623"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:3e39d2a6aec9af3917dc6a374559ee9eb55845cffff48645da23dee389d3e2b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89312118,
                    "digest": "sha256:786e604055947e8548a6b77cbe4fd456826534cb81963a71120dfe8d0810072a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186696004,
                    "digest": "sha256:e7049f6642ea8ff45ef6f189a709c7fa914b51c5aa774a94bb7432230a3bb2f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343,
                    "digest": "sha256:4c265fdf357db033b87b0ca8668f88554fe20343488ef60f060e05acb4fcbf1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4151044,
                    "digest": "sha256:bda2398e9d41ab7d51d42d376233d750c7c1e9bf9bab0e837e0f5fc437869e68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72473507,
                    "digest": "sha256:82797b01f32992a4580750d5cef5c6d98f039df0999acbd773cd35c06448eb96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 635744,
                    "digest": "sha256:3193422af488dc8d4b672feea938a12f55a82a072c044ed2077784a15d8e9f27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45466902,
                    "digest": "sha256:985744cdd2d2283735019a5ad75e30a8818429320080ba90d1432fd2415f74b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4392323,
                    "digest": "sha256:d9aac79b03454cb990b8519c79796afddf7f56cf499a50adf417529e7134c0f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373370,
                    "digest": "sha256:039c4f8d764449e7b6a539492801872277452e56df678fd1ea9a18a4d3830c3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466725,
                    "digest": "sha256:c6e73a77a66878bb8c87ea273560cb80fc1333003fef9178b5fc2d22f03688d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16794,
                    "digest": "sha256:24df1866d1e630bd6027f8b7a5e7491016785ea708224b2338635042ca48d6e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18817850,
                    "digest": "sha256:769f39cfdf1e76827bc5b923988cf7105989c821bfc724fc08e0cc267d1f96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4108,
                    "digest": "sha256:00cf61820a1f89d1ca05907f363b3daaceaf87022810bc62e6c89e2bfe963cdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 566006,
                    "digest": "sha256:7ac737284d7f4d1d97d7c3e0866a114d56e78bdf90f51c92fd4384e2a77c5f04"
                }
            ]
        },
        "2021.3_vaapi_fix_sec": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20195,
                "digest": "sha256:49c5bb07fb3c7afddd3f208efa4f16a80b26f3b666b2093767ccda0053dd6125"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4387,
                    "digest": "sha256:c16c844a254c39b3f5590aa1dfe75842a899bdf1d62bc98def1ede11bb1ece23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:a0fdf06183350209fc47a722f8cfc58b80c017fc53dbfdf404981d34d175108e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111102548,
                    "digest": "sha256:d4e695795d3b35c2ffa818bb2490f04c3cce199af157ce35f8bb310a5aa38601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:d742095a0bbc29ce4111bc488d18260bfd00ca341c6a5b7507029dbb3194f7ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89311782,
                    "digest": "sha256:91f315eeca7e4d34769203edb1db41bfec43b220260cbc143470f5628d5664af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186714578,
                    "digest": "sha256:aac080d5986eebaba8b08c2d37d7e627eb24a6444d698a9a57d9d7f6c8beebc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 342,
                    "digest": "sha256:b63416d690e868def375f3049258c01ca99bf4bc34f8a3395e831cd804d9d475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4176840,
                    "digest": "sha256:d67e2de310367cf4051da45c3f4f626422b715453748fd301c5be1e3a2af9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73093074,
                    "digest": "sha256:8981efc4df77c452cbbcb900910c99f1ff65c69ff679c9d9f2af539453352c3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 636410,
                    "digest": "sha256:deb4889c868be7b91a84ab310eec36c51cd8407bdc81d89700ce5bcee0c946b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45467281,
                    "digest": "sha256:01bccae718cbe980fd4232252da6231fcafd882854001f8e0ac2d4b03f0f7ec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4393069,
                    "digest": "sha256:07856bfa489ea1f09cb5ac3a4602b3dd1a5734126c735915c13b54247a10c3b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373569,
                    "digest": "sha256:8d61257eaefc930240c21e40ec6bdbf9dd0abdc9d89e369762f61c91fb3eec65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466725,
                    "digest": "sha256:f4f7025578990409a0ad65d5436b18def4fad6f090f66748734739008e9a7918"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16633,
                    "digest": "sha256:7a19ca10c732090af589af063d66bd154282dd002051bc7fc575aadd3b489966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18818308,
                    "digest": "sha256:cec752149b9d2122e4ce28371690c77f1fef08879521a6300e892b87857dd6fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4107,
                    "digest": "sha256:4e62d6b737dedecf2745f501f7d84deca6154029ab8d8ccdf1b17158652acbd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 566604,
                    "digest": "sha256:de94cbb60dc80d95af4f437c6b6e208299c4fcca02c534b32dcb7c86564d884b"
                }
            ]
        },
        "2021.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18627,
                "digest": "sha256:d99576cd96971b556710e5361fd7a92708fc1b8854b44b2f825e47a042e7b1f4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565863,
                    "digest": "sha256:a31c7b29f4ad2bd946738970f040825704a523ded1b9d6f9c7c7cafc6ab731df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4376,
                    "digest": "sha256:2a60bb8181066fa39ce57f4506cc614ae7880c3bf9a1d9f34d48dd752b9effe2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146,
                    "digest": "sha256:104ca823ddac14e9aa118d209950b3f734d3d34a1cbd59e427ebdad209258e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197429874,
                    "digest": "sha256:c52e4fd9e190a176b0aab538fab8368180bb7d212213f66c219744f21936e2ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:20e57a7e8f5060154614447815ff6ca02a12f024e92a9b9357354a5fae46ccbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85071485,
                    "digest": "sha256:c666807562f80191e946d606f7892caa764aaa78a2a32330b3144fe860e10439"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194945739,
                    "digest": "sha256:d6cd613fd804bb8ba09655906cb88f62e407d4d2230d0426d12edd1e11230c3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 340,
                    "digest": "sha256:d54f5cfd61241e256f1cf546c98c35d0c8fa3d0f808656c71223b2fc67489436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4177795,
                    "digest": "sha256:865f004a4e72dfba28303d67fedc9e255096dfe3673bb0e933711a5885f31c53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68638129,
                    "digest": "sha256:0eb0f6a7c3871647cf4328a4b2ead6408b97e26d36e057cb05eee8f8c54f0c03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279,
                    "digest": "sha256:bfce8a2d11b0b5b52718a2f41941a107724a753220beff126c4438ad48c42d0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15997,
                    "digest": "sha256:301f7b6bcf79d5652bf4ead15d139dfdce635c16dbff39bad72ee17f133a5ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45464137,
                    "digest": "sha256:7503a85b5c64509f4415e0aaee3e3da6bacba4caa7384fb2f8c86ff818421e56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4388534,
                    "digest": "sha256:4ed9f3e65715d308aa119324f969a4b226250293876d1225838ee049e103f5d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373537,
                    "digest": "sha256:ee34011e2c72d954aa25328245b20f1fcbf01b75b955aaa5a64fc7d00e3e01ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466721,
                    "digest": "sha256:8452d3b881ed878098ae6b5df6472e312a652c6be159c29c43001efeec9dbe7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16693,
                    "digest": "sha256:7ccb02b01d24ae2ccd646bdff340dfd86f9f1bf7ce705f76613ecfad183b5a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18812502,
                    "digest": "sha256:7fd52f39fbf8b2d3c18ce2d4eb57c59ffd4c85faad9b113e6c996aaf979b74bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3846,
                    "digest": "sha256:60226df83c2558f4a0af9358a2b619a6e9154e33af76f45e81d930c0efe9d131"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 353,
                    "digest": "sha256:228b58ef6a9cd3cca04b2206dab74f56b1cc5614503567bdb1d546a2d63d854f"
                }
            ]
        },
        "2021.4.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18946,
                "digest": "sha256:63d38c2dde42e3f3082b3f1ac4aaf17f5d9b5c4de17bf021c4746c53ab8c1168"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4377,
                    "digest": "sha256:553b7487840a1201d875e80aa01cdecf6c704a1d9aefae191b2ea33cf2d62e0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:99427de3b13f37c7af3db43445b469ba47c703c8dda341745939a426c251bc62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199631683,
                    "digest": "sha256:6f80bf35bc3bc29481c967b86bf5450d0c503c61bf9d4e97db3974948df9228a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:4169d23dafc46d5eaba504adfbc08c1866ce03b769e77b84b0d55e7559a81829"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87534505,
                    "digest": "sha256:a81a227990edbdbd07cd56ce5f33a0a95f58fe0777824d16e0aeec786c7edefe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194934051,
                    "digest": "sha256:7c681f1e8aae1a68fe4e91d814e720e9bcf988c92d45fdf6b6db850801da9949"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344,
                    "digest": "sha256:91b0f344541184ea4c32416cfb64fee334e3112a614abcbb559640f87bffcc2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4212116,
                    "digest": "sha256:5a763c373b8f9921a3b38bee4c71deacec3e2fad75a1a04ce878fb6c3af8c45a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68988646,
                    "digest": "sha256:21765c2841b2d7ebdb27f3d5f93027bf8b39e9dfe6745a6c9927e5e1be657fc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:9d9055d0595597036f14d88045d1cecec40441face30b24eded43c8aa53955c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15999,
                    "digest": "sha256:2e8ea5ee328614010d0f9d8e26c64e544b2b63e15f71d0a382fe995bfacc484c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71758,
                    "digest": "sha256:55e9dadc3cf9ec5e0d1101dc4c229b25664797b3656c518ede90853325504680"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106550706,
                    "digest": "sha256:b8cd7a0e33dca498b57793bea4ad28516034328963db51ce71285c1e4be5beae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4412621,
                    "digest": "sha256:fc301b07fbaf11a957fa8c639ce46c8dd67000715e19da9139e4c88605445887"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373343,
                    "digest": "sha256:8edfd14b1fd9f41336a0e8bfc21597dbb33a9b1fe3b07aac2b1a2815066466ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466727,
                    "digest": "sha256:14f4e46421a092b5c1a830cc863902ec7ff3bfb848ece97a5c9800f6d2f288e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17065,
                    "digest": "sha256:322d3e56a608ef3fafdbba12d60406ba1b01fbf7818bb94523c56ab3adf5bf94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18836368,
                    "digest": "sha256:610f1cf83013ed07568f6ea9b68b439eecb335ed6be9ff85108975b4b23a6035"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3851,
                    "digest": "sha256:abbae8accbf38d20481847fe64b55a622526a0c4b3dbdfa5c362fce8bbebfa44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348,
                    "digest": "sha256:326b040857a1f84263ae6a3dfb2a56dfe25b3c24fdc8d484cbb41cf27f3457da"
                }
            ]
        },
        "2021.4.1_20210416": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18946,
                "digest": "sha256:63d38c2dde42e3f3082b3f1ac4aaf17f5d9b5c4de17bf021c4746c53ab8c1168"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4377,
                    "digest": "sha256:553b7487840a1201d875e80aa01cdecf6c704a1d9aefae191b2ea33cf2d62e0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:99427de3b13f37c7af3db43445b469ba47c703c8dda341745939a426c251bc62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199631683,
                    "digest": "sha256:6f80bf35bc3bc29481c967b86bf5450d0c503c61bf9d4e97db3974948df9228a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:4169d23dafc46d5eaba504adfbc08c1866ce03b769e77b84b0d55e7559a81829"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87534505,
                    "digest": "sha256:a81a227990edbdbd07cd56ce5f33a0a95f58fe0777824d16e0aeec786c7edefe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194934051,
                    "digest": "sha256:7c681f1e8aae1a68fe4e91d814e720e9bcf988c92d45fdf6b6db850801da9949"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344,
                    "digest": "sha256:91b0f344541184ea4c32416cfb64fee334e3112a614abcbb559640f87bffcc2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4212116,
                    "digest": "sha256:5a763c373b8f9921a3b38bee4c71deacec3e2fad75a1a04ce878fb6c3af8c45a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68988646,
                    "digest": "sha256:21765c2841b2d7ebdb27f3d5f93027bf8b39e9dfe6745a6c9927e5e1be657fc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:9d9055d0595597036f14d88045d1cecec40441face30b24eded43c8aa53955c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15999,
                    "digest": "sha256:2e8ea5ee328614010d0f9d8e26c64e544b2b63e15f71d0a382fe995bfacc484c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71758,
                    "digest": "sha256:55e9dadc3cf9ec5e0d1101dc4c229b25664797b3656c518ede90853325504680"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106550706,
                    "digest": "sha256:b8cd7a0e33dca498b57793bea4ad28516034328963db51ce71285c1e4be5beae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4412621,
                    "digest": "sha256:fc301b07fbaf11a957fa8c639ce46c8dd67000715e19da9139e4c88605445887"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373343,
                    "digest": "sha256:8edfd14b1fd9f41336a0e8bfc21597dbb33a9b1fe3b07aac2b1a2815066466ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466727,
                    "digest": "sha256:14f4e46421a092b5c1a830cc863902ec7ff3bfb848ece97a5c9800f6d2f288e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17065,
                    "digest": "sha256:322d3e56a608ef3fafdbba12d60406ba1b01fbf7818bb94523c56ab3adf5bf94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18836368,
                    "digest": "sha256:610f1cf83013ed07568f6ea9b68b439eecb335ed6be9ff85108975b4b23a6035"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3851,
                    "digest": "sha256:abbae8accbf38d20481847fe64b55a622526a0c4b3dbdfa5c362fce8bbebfa44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348,
                    "digest": "sha256:326b040857a1f84263ae6a3dfb2a56dfe25b3c24fdc8d484cbb41cf27f3457da"
                }
            ]
        },
        "2021.4.1_src": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18935,
                "digest": "sha256:bbe47a19d598715aeef54fefdef07f331caaa5c507bb555cedc2d4a4c3fd9931"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4380,
                    "digest": "sha256:7b9c648856538473546327199db18ba777c13cc11de6cc9958b4f5a08eee1e50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:450d5d9a50b650aeff61aee10f71dd691fb4728530ff8f628e94f18bae85d20c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199631720,
                    "digest": "sha256:b5a3bf747e043fd2391b4726df8edbe07a445f6f71027f672ed2f4c593223d15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:151d7a85824fe6b4ef4a28d20c950947278c664fcc79a8f13d1e53aeaaf31142"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87534782,
                    "digest": "sha256:b453a779474d1fe5a9bb6af368ab0170e167b5df56025e1aca54d414dc7eb167"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1226589730,
                    "digest": "sha256:c5f207a45db1915eed570c7274ae277ad31213089ce8b30cc0c5b8062f829237"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4212123,
                    "digest": "sha256:e08ea3daf70299927c5752918f4dfea229ce0690fb5027c5cb5e51d9ed7ca92a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68988755,
                    "digest": "sha256:c885469f76b0a0f632a830c333032573b93f272d173bd0544848abfd96cba87f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275,
                    "digest": "sha256:e9afbdb232614a55960272918f9e098eb53227c3162ab4df82f49551bba79152"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15999,
                    "digest": "sha256:604d132e55463f593abf1eeb57c8678d284435d48b5c0874e656fa6d3ecc680b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71761,
                    "digest": "sha256:9da21795164468a749f23577b76f98d8714e75a5b768fff82e6efb500e818c67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106551397,
                    "digest": "sha256:6b2e350d60b8d3bc4a354bb226239a22477a84f7c1c3fda8f5ef2f3417b01f11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414224,
                    "digest": "sha256:3c847ea564935639a7d2d12a42580c392ae983121f25cdb03d3150be1d1322b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373447,
                    "digest": "sha256:42b75f87deb53ab430d73be91e80cfbaff0db5a1b8d3f106eef0c599785bb130"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466728,
                    "digest": "sha256:cecbba53c2dbb3fb23ca9508b554a1c10d514409244072a9ff2bcea417c77b02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17030,
                    "digest": "sha256:183357bef22f0f98f47028b47c30f63f6239f1cc1e58de18e7dc5c3cc297fd6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18838878,
                    "digest": "sha256:aa5589678024e1b82350d8ffd3da03f8f9660ea518efa6ffa4efdb0846100eb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3849,
                    "digest": "sha256:b4b4a5f56a40b2bbdad6fc9d16017f4ae2bcc4008156786a409a27536d4aa92b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 351,
                    "digest": "sha256:a636fb4d53848b0374bb3e62ed5c773855a951b35f5eb29dc281b03a12a1da97"
                }
            ]
        },
        "2021.4.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19053,
                "digest": "sha256:73fcdb5b37c8b63740dfbf4346806cb36a6a133082a27c2346527d3160fff2ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386,
                    "digest": "sha256:528f464ab548440d122024af86b51d549f93cabd8a7cf1e58ed91246326574a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:01149f9e91973d6a87a3a38365caf2b7a8b18cf95121c63c1c5c2ad47c21a3a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199903109,
                    "digest": "sha256:fe8dcc234e9a0e0f464894d0f76badabc3c05acb62198774dacdcc6a404f82c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:146f19ece93917f962e95add894629e713934a5dc9283a35aca65acff894855d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87541161,
                    "digest": "sha256:d4077997da9599070184481c07527876fcfe02579060085a8c828efa7107bf7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194949266,
                    "digest": "sha256:bdeae3c67ad40f4cff2fca35b5d9ce205184e809d2766ffe9bd9e30915f44c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343,
                    "digest": "sha256:dbd21c4c8bb8919009812ecac544d42366cd442e2e4de24fb13fc11e65d1868a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4567232,
                    "digest": "sha256:3a947cb00ddde52148370d28e55df15faff4a10b450033f1acdd9aa77bdb4af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79562260,
                    "digest": "sha256:d7e4a60c3f1c2406251ba267b0f462c58c1166c7baa2816ef8250b28957850da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:2b45487764c26e3d16e9d2f936dac73767ae2343b2dbfaa3914b1467483676be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16002,
                    "digest": "sha256:ee17063c2c94ea1c841f524cbad28b26da7e487dcfc476e5c4ed65848bf44cba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71763,
                    "digest": "sha256:b9ef579a8b76c3e8667638d0d8ccf8feddc0bb2686dd2020db7771a7bda13a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106559588,
                    "digest": "sha256:3df831e5436ba3f26442676281fdce4ca26f6be5342632f61a901b0332dbd6dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414006,
                    "digest": "sha256:bdcfe69b357eacdfda0e41ee65b7a587f9954a178010d4169851fd522f5646fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373436,
                    "digest": "sha256:3bd9322ff75f7dbfb4f9b8e0fade9de3fbc74f3a8f4cf0aece5e5cf75ae3f75d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466725,
                    "digest": "sha256:1f095bd0cf40c54ac1e54b723672f4e7ccc4cd76cc0c86be7bdf3dca4a8899a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17020,
                    "digest": "sha256:81b830f92ed5f56308eb66a14c71962d35334097f7af438ee773186ac6980052"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18838921,
                    "digest": "sha256:dba3029f30962446dcfb6c06b3ae66088877b475a4116cf44fb383146dc7398b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3849,
                    "digest": "sha256:d5ee3710a84246c6948ad5ab2431bcd68f885ba45bb772bef7c7563c3a53572f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348,
                    "digest": "sha256:674012477aaf1ae8fe227756d517ca0c137dc092831eeac3a0b0e216f1f3790a"
                }
            ]
        },
        "2021.4.2_20210416": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19053,
                "digest": "sha256:73fcdb5b37c8b63740dfbf4346806cb36a6a133082a27c2346527d3160fff2ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386,
                    "digest": "sha256:528f464ab548440d122024af86b51d549f93cabd8a7cf1e58ed91246326574a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:01149f9e91973d6a87a3a38365caf2b7a8b18cf95121c63c1c5c2ad47c21a3a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199903109,
                    "digest": "sha256:fe8dcc234e9a0e0f464894d0f76badabc3c05acb62198774dacdcc6a404f82c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:146f19ece93917f962e95add894629e713934a5dc9283a35aca65acff894855d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87541161,
                    "digest": "sha256:d4077997da9599070184481c07527876fcfe02579060085a8c828efa7107bf7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194949266,
                    "digest": "sha256:bdeae3c67ad40f4cff2fca35b5d9ce205184e809d2766ffe9bd9e30915f44c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343,
                    "digest": "sha256:dbd21c4c8bb8919009812ecac544d42366cd442e2e4de24fb13fc11e65d1868a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4567232,
                    "digest": "sha256:3a947cb00ddde52148370d28e55df15faff4a10b450033f1acdd9aa77bdb4af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79562260,
                    "digest": "sha256:d7e4a60c3f1c2406251ba267b0f462c58c1166c7baa2816ef8250b28957850da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:2b45487764c26e3d16e9d2f936dac73767ae2343b2dbfaa3914b1467483676be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16002,
                    "digest": "sha256:ee17063c2c94ea1c841f524cbad28b26da7e487dcfc476e5c4ed65848bf44cba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71763,
                    "digest": "sha256:b9ef579a8b76c3e8667638d0d8ccf8feddc0bb2686dd2020db7771a7bda13a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106559588,
                    "digest": "sha256:3df831e5436ba3f26442676281fdce4ca26f6be5342632f61a901b0332dbd6dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414006,
                    "digest": "sha256:bdcfe69b357eacdfda0e41ee65b7a587f9954a178010d4169851fd522f5646fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373436,
                    "digest": "sha256:3bd9322ff75f7dbfb4f9b8e0fade9de3fbc74f3a8f4cf0aece5e5cf75ae3f75d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466725,
                    "digest": "sha256:1f095bd0cf40c54ac1e54b723672f4e7ccc4cd76cc0c86be7bdf3dca4a8899a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17020,
                    "digest": "sha256:81b830f92ed5f56308eb66a14c71962d35334097f7af438ee773186ac6980052"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18838921,
                    "digest": "sha256:dba3029f30962446dcfb6c06b3ae66088877b475a4116cf44fb383146dc7398b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3849,
                    "digest": "sha256:d5ee3710a84246c6948ad5ab2431bcd68f885ba45bb772bef7c7563c3a53572f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348,
                    "digest": "sha256:674012477aaf1ae8fe227756d517ca0c137dc092831eeac3a0b0e216f1f3790a"
                }
            ]
        },
        "2021.4.2_src": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18975,
                "digest": "sha256:9a8947c96f5738a27d6122a25ceb5426c8dca7fa73639d8f522ee4da4995ef74"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386,
                    "digest": "sha256:c4c7c619064acdfa89587bd98b3f7f31010ec6bc8b80b3d0ffeb47c398308764"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:40a3bf2c163814860220f946d2c7f651b4860f3d3d335a84ab9bbe52e69cc8ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199903517,
                    "digest": "sha256:dbef04f512ab599267e9a9fc27e46451c6d9b7d7b3e2119fac0357eb3c053ba1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:0e4b315c0c3cc905d6a6d3ebd8b4a39ce7c4f0e1f3f89d09211194a25a51e670"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87541439,
                    "digest": "sha256:ffa840b67137bd076253042ee84d74f6209f85fa222a89f1e0a5f9329d5cbb86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1226975090,
                    "digest": "sha256:c33b63fe8c3704020da8162af08a19394876ec68107f3cb8abf0f7680ae97901"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4567235,
                    "digest": "sha256:fbe37a4068e29461cddb768af0b38d1621b28861e6ba4e03114c5fc9e206920b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79562298,
                    "digest": "sha256:0f33201a2845db1130d6e3919781fb46d88bab9dc93eede848afcdf471474415"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:f8d3fa2eba5e1b01858017ea0b002c0dc8b52d1538d648fb734f3632b239b8ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15999,
                    "digest": "sha256:b077e2c299b3cbc68c2dc4fc82c5f886ba3294c56a69b154a8c8430786b18f5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71761,
                    "digest": "sha256:4ea4862a6ad3eff9d7482ba8d0d9809bb8814ecc1caab3e940dba9c28c5b2963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106560812,
                    "digest": "sha256:ed8829a026c2553e0af84155f80a78b9be1526bfe470e4396ac1cda5910ab996"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415384,
                    "digest": "sha256:79f910b4f41680a8685610263e7897b75c5a9c8d87714d74d6ffcfb816e19cb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373473,
                    "digest": "sha256:a6b5b14c4fb9532ccac5db7460ce7a14aafb01fe64bcaaa8062346ab5338b1de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466729,
                    "digest": "sha256:05471e6455a20eaaded3c637286917eddf31adc7a65c7a6517bb44fd9d668e55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17353,
                    "digest": "sha256:30e51bf2ad5e08ad4580416d8ebe2e07aafe6969fc99d893012313636576ddc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18840280,
                    "digest": "sha256:4602289c24c9aca11c01c64b4f86c7f789ca3ed1e19959759cf37166f852d337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3847,
                    "digest": "sha256:0b4304225a13cf271074f147f3808b4634127835b683ea4b6cd0fc8e2cd7f929"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 357,
                    "digest": "sha256:8f926879956d5fca90791817a87119e9fc6527365a8d8cdd999297ffba58c7b4"
                }
            ]
        },
        "2021.4_src": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18554,
                "digest": "sha256:5666a0193e298134acaefb21a24ea0f836b0136c1ded2791561f8b0e398968df"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565863,
                    "digest": "sha256:a31c7b29f4ad2bd946738970f040825704a523ded1b9d6f9c7c7cafc6ab731df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4378,
                    "digest": "sha256:ed5d7d324782a7cec74b7d23a482f767d5337f5858592362f5ea5829017c0d7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146,
                    "digest": "sha256:250d527982291a5694b3d23052c1992b745d66f45e6589ed2b511363fcc46304"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197429890,
                    "digest": "sha256:5519316240a3ccd1749a5a3dfd1686db9a9787e4e64f9c7887eee6a96b935a0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:fe1fe05213a25da201c55b80788725536530a96a22589ee63edf54bb983711d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85071600,
                    "digest": "sha256:43ff06d852e9dd1081c3d208c9dd7e6d15fa61ba7c7b012d01f7a8a97b58d339"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1217518821,
                    "digest": "sha256:c532577063e8a310cdd7d394bacc03a045cb935a455025f9cd33598198e7000f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4178065,
                    "digest": "sha256:8df117eea87ed38f08d4fbafecf8475a615bde81981d49179f6e90898d0257cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68638405,
                    "digest": "sha256:92f11e35dd10332419e30e29f2fca72074feb1580a0e84fab1410eceaddc2360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:6a655b12e7ec1c02c472658bc944d2e079e7755f0a3179ed3b1939c19a1333ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15997,
                    "digest": "sha256:0464689bea9e4c036730c59acbc78ff009cd839155b4a28d131a8e9cefbfa7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45464354,
                    "digest": "sha256:d79a32b4e3db39f719303e105e108f1bc51073e197cead125cb923da61f23c38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4389852,
                    "digest": "sha256:57eeaf564140dcd72777fcd4efe497d2b44f5fa0e6c07ffa44fa4835ad68d912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373442,
                    "digest": "sha256:05e20222217e8710bfae77a2a29d02ed1b51fa0915ebfa099b1bf0ea9b5c4110"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466718,
                    "digest": "sha256:0cc5a7d8fc46aec1ba61eec23c6dfb708eac6f2448d661e833b22d5811aaa8d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16800,
                    "digest": "sha256:d5763b445e5e03c9e750fd230b55fd1e6601c3f9188ca0461accbb96b25768e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18812900,
                    "digest": "sha256:52768ec1769e06dc74ea62d319483b0affae4f30e83edc08a34ccffc20decda3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3847,
                    "digest": "sha256:379cd883a8fcd90ce87238d3f5458a633da5bc24e4ae7f1563bfb753604547e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 354,
                    "digest": "sha256:8ce428403d43fca5016fc2beb4552620646213a5283b2e7687785a690375c85e"
                }
            ]
        },
        "2021.4_tgl": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18596,
                "digest": "sha256:e42518d8e4c0c76c4556b58378551c5e225ddf94507de4ff1f2306b33b4ab145"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565863,
                    "digest": "sha256:a31c7b29f4ad2bd946738970f040825704a523ded1b9d6f9c7c7cafc6ab731df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4375,
                    "digest": "sha256:acb45abbff32fb747bf5aff5678526bfaff832bc90c70e4080cee7d376d0d0e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146,
                    "digest": "sha256:e35f5e580bf990caa6e4314496876156ca06080c06aae595155a67d99acd7655"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197429750,
                    "digest": "sha256:1b6e020760ae15d9f4248b97ba3b7d846279e020e569048fdc4da995ce7652c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:268c96e6aedc774c62f6d67e447547cf0a77dd91590281f55416617869f38007"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85071469,
                    "digest": "sha256:605605840ad1c86751558d69274b13b5172951bdbd40c8d06f9bd45c351c6304"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194945181,
                    "digest": "sha256:5bdc99ae98257ae6dadefe07de0074211dbbb921db865f76d226ac9f90182e97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 342,
                    "digest": "sha256:1e6201e09864246dbe2387daa08fb0a345414a0a5462f609e9cbfc48d8a7c9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4178081,
                    "digest": "sha256:1058575cae74ae9ecf4a8c9a00503f5a8dafb1f7e94d50e6492539ecad8d6085"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68638342,
                    "digest": "sha256:8aa94e4ca8ca782cd19b42b943352493e98c55718bed4b5bf538c995400fed60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 276,
                    "digest": "sha256:724e43027cc88ca4514aa5830390c32a471162ca7e1cf126f81ae2888e3a81f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15996,
                    "digest": "sha256:9a2f270170ec0cebb69ce734534ac9ee7e16a09723e3b6b0dbf91754529c4988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76498025,
                    "digest": "sha256:fd9dee94598bac2f8240068bd2badd43f032253b82775ecbcbaaa095177a2889"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4389021,
                    "digest": "sha256:227260ba1a0d65026bf8892626c995fb55474c2cd265e06d6369f5dbb82e290c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373481,
                    "digest": "sha256:d85171d9a07456215bea9ff1c45b35461b0da6fff789d13f8a16270d66334b3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466721,
                    "digest": "sha256:353e0ce6c80c10e9ec14d2d26adf6513d6adbed0cca5830ec261dcae2418144d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16895,
                    "digest": "sha256:461ba88dc734e798ebe63dcdc694a3fe5c2af8fc7a4ab87255c20895162423ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18813368,
                    "digest": "sha256:1d0620e59757929c874db7c5684c172a1dfbd954407ad921c7969dca74eedd54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3845,
                    "digest": "sha256:b8197a49344c564595016319e049e21ac09e234950376b403373a7032d2b911f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 354,
                    "digest": "sha256:768feff86e0c7d3e4b4d73298be7a6b1d512cccf72954b5b6e91d3706f074e7a"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19053,
                "digest": "sha256:73fcdb5b37c8b63740dfbf4346806cb36a6a133082a27c2346527d3160fff2ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386,
                    "digest": "sha256:528f464ab548440d122024af86b51d549f93cabd8a7cf1e58ed91246326574a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:01149f9e91973d6a87a3a38365caf2b7a8b18cf95121c63c1c5c2ad47c21a3a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199903109,
                    "digest": "sha256:fe8dcc234e9a0e0f464894d0f76badabc3c05acb62198774dacdcc6a404f82c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133,
                    "digest": "sha256:146f19ece93917f962e95add894629e713934a5dc9283a35aca65acff894855d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87541161,
                    "digest": "sha256:d4077997da9599070184481c07527876fcfe02579060085a8c828efa7107bf7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194949266,
                    "digest": "sha256:bdeae3c67ad40f4cff2fca35b5d9ce205184e809d2766ffe9bd9e30915f44c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343,
                    "digest": "sha256:dbd21c4c8bb8919009812ecac544d42366cd442e2e4de24fb13fc11e65d1868a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4567232,
                    "digest": "sha256:3a947cb00ddde52148370d28e55df15faff4a10b450033f1acdd9aa77bdb4af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79562260,
                    "digest": "sha256:d7e4a60c3f1c2406251ba267b0f462c58c1166c7baa2816ef8250b28957850da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 277,
                    "digest": "sha256:2b45487764c26e3d16e9d2f936dac73767ae2343b2dbfaa3914b1467483676be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16002,
                    "digest": "sha256:ee17063c2c94ea1c841f524cbad28b26da7e487dcfc476e5c4ed65848bf44cba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71763,
                    "digest": "sha256:b9ef579a8b76c3e8667638d0d8ccf8feddc0bb2686dd2020db7771a7bda13a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106559588,
                    "digest": "sha256:3df831e5436ba3f26442676281fdce4ca26f6be5342632f61a901b0332dbd6dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414006,
                    "digest": "sha256:bdcfe69b357eacdfda0e41ee65b7a587f9954a178010d4169851fd522f5646fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2373436,
                    "digest": "sha256:3bd9322ff75f7dbfb4f9b8e0fade9de3fbc74f3a8f4cf0aece5e5cf75ae3f75d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466725,
                    "digest": "sha256:1f095bd0cf40c54ac1e54b723672f4e7ccc4cd76cc0c86be7bdf3dca4a8899a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17020,
                    "digest": "sha256:81b830f92ed5f56308eb66a14c71962d35334097f7af438ee773186ac6980052"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18838921,
                    "digest": "sha256:dba3029f30962446dcfb6c06b3ae66088877b475a4116cf44fb383146dc7398b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3849,
                    "digest": "sha256:d5ee3710a84246c6948ad5ab2431bcd68f885ba45bb772bef7c7563c3a53572f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348,
                    "digest": "sha256:674012477aaf1ae8fe227756d517ca0c137dc092831eeac3a0b0e216f1f3790a"
                }
            ]
        }
    },
    "tags": [
        "2021.2",
        "2021.3",
        "2021.3_src",
        "2021.3_vaapi_fix",
        "2021.3_vaapi_fix_sec",
        "2021.4",
        "2021.4.1",
        "2021.4.1_20210416",
        "2021.4.1_src",
        "2021.4.2",
        "2021.4.2_20210416",
        "2021.4.2_src",
        "2021.4_src",
        "2021.4_tgl",
        "latest"
    ],
    "configs": {
        "2021.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b740cac9c2b6477a4448480b2d31536f16ce36f5737f48368a3735787665f13c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "67ce6eb5b9f562fd2fbd2a0045ad431d535e3bcd699176a5a92f7f9bd1df8be6",
            "container_config": {
                "Hostname": "67ce6eb5b9f5",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:b740cac9c2b6477a4448480b2d31536f16ce36f5737f48368a3735787665f13c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2020-12-16T16:56:42.585069204Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:26.245907708Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f15c4475fbafb3fe335e415e3ea1ac416c34af911fcdfe273c5759438aa8eb4 in / "
                },
                {
                    "created": "2020-11-25T22:25:27.346756278Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:28.342445422Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:29.343142847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:29.546718343Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:48:55.242927808Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:48:56.246697284Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:48:57.218697048Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:48:58.199813614Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:48:59.203611589Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:49:00.73799266Z",
                    "created_by": "/bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2020-12-16T16:49:08.626889853Z",
                    "created_by": "/bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends curl &&     rm -rf /var/lib/apt/lists/* &&     ln -snf /usr/share/zoneinfo/$(curl https://ipapi.co/timezone -k) /etc/localtime  && mkdir /opt/intel"
                },
                {
                    "created": "2020-12-16T16:49:09.385480553Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:49:16.285534372Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:c3861d14e87f9dc75f694fc5b2bf2c523b2a9abe3f610ed7c99c6824ab8267a8 in /opt/intel "
                },
                {
                    "created": "2020-12-16T16:49:25.183524023Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2020-12-16T16:49:26.468049316Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:b6884dfcb9b99070cafedff35bdcd1ef496631e8b2e2678353ea5dcf9522466a in /thirdparty "
                },
                {
                    "created": "2020-12-16T16:49:29.068371791Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=dpkg-dev           libopenexr24           flex",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:49:29.383811119Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:51:38.741287557Z",
                    "created_by": "|2 DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 /bin/bash -xo pipefail -c sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&     apt-get update &&     apt-get install -y curl && ln -snf /usr/share/zoneinfo/$(curl https://ipapi.co/timezone -k) /etc/localtime &&     apt-get install -y --no-install-recommends ${DEPS} ${LGPL_DEPS} &&     apt-get source ${LGPL_DEPS} || true &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-16T16:51:45.741433131Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:51:59.51977073Z",
                    "created_by": "|2 DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends python3-pip python3-dev lib${PYTHON_VER} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-16T16:52:06.377818169Z",
                    "created_by": "|2 DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2020-12-16T16:52:09.535728366Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:54:42.907154137Z",
                    "created_by": "|2 DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2020-12-16T16:54:47.79694457Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:54:51.245394143Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:486da4fafca5db0f22f631c4f5325e23055a410a29d34159885a5adad7294aee in /tmp/opencl "
                },
                {
                    "created": "2020-12-16T16:54:54.943316388Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:55:08.182678327Z",
                    "created_by": "|3 DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ocl-icd-libopencl1 &&     rm -rf /var/lib/apt/lists/* &&     dpkg -i ${TEMP_DIR}/*.deb &&     ldconfig &&     rm -rf ${TEMP_DIR}"
                },
                {
                    "created": "2020-12-16T16:55:12.903940346Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPENDENCIES=udev"
                },
                {
                    "created": "2020-12-16T16:55:16.33116017Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:55:28.873202565Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${DEPENDENCIES} &&     apt-get source --download-only ${DEPENDENCIES} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-16T16:55:32.909660638Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:26ece3960fd59b16cbeca8b948802d8e4bbd6bdb00875167056070e3edc98993 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2020-12-16T16:55:36.582949598Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:9b18866b1916299370703ec7cc75c3a6377ccc69cceb027681207feb8f29c4aa in /thirdparty/systemd.zip "
                },
                {
                    "created": "2020-12-16T16:55:40.025157786Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:55:43.667867226Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2020-12-16T16:55:46.926739351Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:55:50.708859818Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2020-12-16T16:55:54.019607446Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:56:14.695863132Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2020-12-16T16:56:22.332075384Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2020-12-16T16:56:31.802842294Z",
                    "created_by": "|4 DEPENDENCIES=udev DEPS=dpkg-dev           libopenexr24           flex LGPL_DEPS=g++                gcc                libc6-dev                libgtk-3-0                libgstreamer1.0-0                gstreamer1.0-plugins-base                gstreamer1.0-plugins-good                gstreamer1.0-plugins-bad                gstreamer1.0-vaapi                ffmpeg                libgl-dev                libtag-extras1                libfaac0                python3-gi                gstreamer1.0-plugins-ugly                gstreamer1.0-libav                libgstreamer-plugins-base1.0-dev                gstreamer1.0-alsa                libgstrtspserver-1.0-dev                python3-gst-1.0                libfluidsynth2                libnettle7                libglib2.0-0 TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y dpkg-dev &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-16T16:56:35.377594331Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:56:38.973678168Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-16T16:56:42.585069204Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bacd3af13903e13a43fe87b6944acd1ff21024132aad6e74b4452d984fb1a99a",
                    "sha256:9069f84dbbe96d4c50a656a05bbe6b6892722b0d1116a8f7fd9d274f4e991bf6",
                    "sha256:f6253634dc78da2f2e3bee9c8063593f880dc35d701307f30f65553e0f50c18c",
                    "sha256:975ac5f97f94d45bf95357076d5f7c8329d76ac5586435f744ca03b04cb3ad69",
                    "sha256:df77894b3c83dd490361153e7aa93473f6380757e881725380f9bc364e7b606f",
                    "sha256:6fc8bad42ddd3727f682c7f2131c4b2a9262e97a824edd3b3dc178b462c34fa3",
                    "sha256:a7b5a49be2bf918872a8bbc071e52cfa756373901eca7188076f8bc41e6fd68b",
                    "sha256:9c41234a53447999816290ae2bc24f043b09ffea5335f4842ce01e5d40c5332c",
                    "sha256:94813aa162c1488c60eacfd2c603f08b1ed02e27aeb00cd468fec0a77f678b8e",
                    "sha256:9c93b262007d8bdc9addb85c6dc039c5b8ae02b594290decfb6b5043d61055e3",
                    "sha256:26672deb5ea5550aa5c81d6958f7219b4fd66f28968be26fdd21fe76dda8386e",
                    "sha256:1fef439978c94ed6221d8d212257deff3d65f672c019b906f3c55e23d91e2e73",
                    "sha256:d70f93bda24a256d73e1ecd32cd8c150d3b4453934dd48a301b6ed79a1a581f4",
                    "sha256:42b407b071646f5f9649d1beab66232ae5866244570da6ab13e4c8f719c0af96",
                    "sha256:cb0923a08546977037bf1df26c94bdd83323ce3a7df75545263c3b973bde75e7",
                    "sha256:2cd6fdc648ef6dd163e576efebd00374fc19e7340acae31744146ae7a7c37b72",
                    "sha256:33f5936316c30c5cedbd5ffb476fe85ff92b7d444e53e4fd761fd85a56031bd0",
                    "sha256:66453a6980a36d40e11829f0278bd50b2b6c40425dd76a73e1350a20ab6aa171",
                    "sha256:f573d56f8d812f94f4fda55d6800ee05f18e3f8590b5fb16b2ab0aa54dd2453e",
                    "sha256:623457a55bec040f869883084b58fe2f21930e4d4f982f7baa644cc85798178f",
                    "sha256:14dc350d176141bb3fac5794efb6eed9625cff2e29f1c716c07b38b61787d055",
                    "sha256:ddfb021079c9e13e792be9b79db993a25c4cd6af3486644960ef02adad5c7162",
                    "sha256:01d349c49187039734803695f519ad24f6e8d42f15b1bf4c06fcdf78b758fc06"
                ]
            }
        },
        "2021.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b94af9e6bf9705b547fc61de35860ad0827fd10013a0cb449859213619115606",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "41cd049d7a4db55075a5d4c1003dfef09cb8d9b0453d26fa41fbe35cfebebac2",
            "container_config": {
                "Hostname": "41cd049d7a4d",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:b94af9e6bf9705b547fc61de35860ad0827fd10013a0cb449859213619115606",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-03-24T04:19:49.849301327Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-03-04T02:24:39.656512169Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c77338d21e6d1587df92d76a2b0a5c36f0e026ac1640b5cddefb1bf8db8a1204 in / "
                },
                {
                    "created": "2021-03-04T02:24:40.703824194Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-04T02:24:41.667200507Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-04T02:24:42.725632854Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-04T02:24:42.927713926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:18.559614414Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:19.193270741Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:20.194353333Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:21.207666714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:22.196088797Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:23.200924089Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:24.67931337Z",
                    "created_by": "/bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-03-24T04:15:25.628206725Z",
                    "created_by": "/bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-03-24T04:15:26.205973962Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:31.282171797Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:bd4b532c5e8cdf374004f48495f9db5118df17f399bb779e463ddb6430428a2f in /opt/intel "
                },
                {
                    "created": "2021-03-24T04:15:40.30896585Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-03-24T04:15:41.254306946Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:42.263016086Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:43.249353165Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:44.259179331Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:15:45.258848809Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:16:17.053465588Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends dpkg-dev &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:17:39.75405184Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:17:50.003983104Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:17:51.798146695Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-03-24T04:17:53.190392588Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:17:57.997863708Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-03-24T04:17:59.544339134Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:13.170732473Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-03-24T04:18:24.975064329Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends python3-gi-cairo &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:18:26.451613585Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:27.923698696Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:29.381056863Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:45.390165413Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:18:48.477698094Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:49.93308055Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:59.964586264Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:19:01.938985377Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:7f7bc95b2177fa673a7dbfe03281ebf408d32968d0c076e9fc6f78e7529bc45c in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-03-24T04:19:03.705963481Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:05.696877178Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-03-24T04:19:07.143378057Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:08.970106645Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-03-24T04:19:10.487978274Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:29.796729831Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-03-24T04:19:35.66938734Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-03-24T04:19:43.853532439Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y dpkg-dev gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:19:45.816600711Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:47.822375807Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:49.849301327Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aeb3f02e937406fb402a926ce5cebc7da79b14dbcb4f85a5ce0e3855623cec80",
                    "sha256:db978cae6a05486620211667eea3a3174eed3afe6e2a21a1d00e3f05c459a72e",
                    "sha256:c20d459170d8e39bbf5b9ef390136ffbe894caac7823116466008c02d38836ac",
                    "sha256:a717330c0354a64ffa86dcca1faa7ffd3733ba59a415868f21ddadcf04e0cf51",
                    "sha256:bdd0184cce9c9ce2196e69c3ed5c123aae12b6388d145b1716ddb7132cd4d0f1",
                    "sha256:ac41767a28dd458781098e4ec71a1ec180b4466367d87db1e9eebf68d771c512",
                    "sha256:9c4bc83bad0d6086fd28ec935a2ab37ad65906262c75397546be3229b8d08532",
                    "sha256:a0969d29ed760aa0a9226b5d9fb681f7681af1703696123e1d440ae27635d0eb",
                    "sha256:3a4abe226ed6824f2e0e7dbd350885cff548c67c2013610a30cafdbae947e2e0",
                    "sha256:988d60b18ff1794fbcde9c8fbaaa819fc93b44e8a5833c1d6e0d796bc66ae678",
                    "sha256:6a57393ca890babb8f0d7e96f2ab594831e7a2d8d7e546c3df0f874f9c61af92",
                    "sha256:fcf5f60f711e18ed44d96eaea329c0cf6a8014f7befff57171042b985173703d",
                    "sha256:2b56d250d25d01dca5d518e91a93f6bd3d36504feeaa64e8303962016ab3835c",
                    "sha256:f52346db6d70c1c7a209a0fe78299ef48bdbd7ad45a99e73c92e1f5c2be19401",
                    "sha256:08d82d7a697f8f9857792740bcee88026ca36142e2f05d7174f191103675b923",
                    "sha256:6e9c82f596f0811795f5ff0b06c43e9ba809090aec2b68b129bf582d44935dc7",
                    "sha256:c0a26cea6a3556bd9b9994123c3b478656a93f741cf1014732ffe5e24214ee38",
                    "sha256:f4ee53f56ae33b8eca7f0886cd89a1c2c99a3236a596ad45a17c2e76b9317249",
                    "sha256:43fccbdce49f911729899f99ef93a32b4e7cd35ee8c6456ad1a5e2f88c2b740d",
                    "sha256:3dd12e87032c03004cde70fb125c88aabcb2d052fa65167279e16eb137fa16b7",
                    "sha256:9c4aaa14a0f3e7d8f76812d664200cf90beae84730e62a92f777f688561448a7"
                ]
            }
        },
        "2021.3_src": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:df23c064914cecb5a88db06707997908abea2e8e979d35d38bdf7f500d7e1546",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "b49f7d2f5f6c638246f87619c5adb74143e76029c86aff97d56a8fbf58838180",
            "container_config": {
                "Hostname": "b49f7d2f5f6c",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:df23c064914cecb5a88db06707997908abea2e8e979d35d38bdf7f500d7e1546",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-03-24T04:30:36.357414256Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-03-04T02:24:39.656512169Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c77338d21e6d1587df92d76a2b0a5c36f0e026ac1640b5cddefb1bf8db8a1204 in / "
                },
                {
                    "created": "2021-03-04T02:24:40.703824194Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-04T02:24:41.667200507Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-04T02:24:42.725632854Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-04T02:24:42.927713926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:34.874940495Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:35.188447185Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:36.198036897Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:37.203729221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:38.237155441Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:39.207634063Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:40.649704271Z",
                    "created_by": "/bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-03-24T04:18:41.620423456Z",
                    "created_by": "/bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-03-24T04:18:42.203358006Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:46.996340945Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:bd4b532c5e8cdf374004f48495f9db5118df17f399bb779e463ddb6430428a2f in /opt/intel "
                },
                {
                    "created": "2021-03-24T04:18:55.993731036Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-03-24T04:18:56.269737884Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:57.252005456Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:58.27404269Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:18:59.263036333Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:00.26489422Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:19:26.585139899Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends dpkg-dev &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:28:28.805614279Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:28:39.415265753Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:28:41.161989741Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:28:42.473017832Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:28:47.12949196Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-03-24T04:28:48.64764687Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:01.667897314Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-03-24T04:29:12.682137239Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends python3-gi-cairo &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:29:14.135192509Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:15.591173204Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:17.025973785Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:31.345261459Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:29:34.444992477Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:35.88275235Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:47.992465725Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:29:49.927210393Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:8cfaa05175e5137a816c2e11cced526a1032db555073a8545f362df146b02577 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-03-24T04:29:51.643008467Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:53.578982674Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-03-24T04:29:55.055289263Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:29:56.970468879Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-03-24T04:29:58.459034004Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:30:16.450255699Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-03-24T04:30:22.202194402Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-03-24T04:30:30.352906228Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y dpkg-dev gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-24T04:30:32.34365612Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:30:34.351043436Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-24T04:30:36.357414256Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aeb3f02e937406fb402a926ce5cebc7da79b14dbcb4f85a5ce0e3855623cec80",
                    "sha256:db978cae6a05486620211667eea3a3174eed3afe6e2a21a1d00e3f05c459a72e",
                    "sha256:c20d459170d8e39bbf5b9ef390136ffbe894caac7823116466008c02d38836ac",
                    "sha256:57f6121826c959033fbaed4ddce180a6ca811a13a6e64814ebb3260e2645a15b",
                    "sha256:dd4d6397f9e764d03ccc99f1fab61c142dab9c241aac3bfcf10242ebf1a720e2",
                    "sha256:5ff012cbb89678f376bba525d81e2ec423c8a16e73c69beb43a46045849087b8",
                    "sha256:c0c39e2e8086be0997e7303ad41bcb80caef3dfde8c2b48a2d60eabceb336ea5",
                    "sha256:1ad56a0613a9866fa183964988de3d7304573efe06d5ad254f9cf6a5ca6f336f",
                    "sha256:e5630227f25f8b76464b3dc2047699a50dc2919427af5a4bd00e3d0b75bda12d",
                    "sha256:c3c1a841a1c94213e69ec929ae0ce02c3565b4a13704a4cc5d824e6603e921df",
                    "sha256:e37a164af3df478e54ec22009f82cfe7cac4997a8d17cddd813b4983e4e04b47",
                    "sha256:1b546c1e5b8ecb67e18592ebadcd4dab563c120dac2eb51b2a8760facd724438",
                    "sha256:5dc98fefd15acd106c85bb26eea4bd9af025a406ef37cac92e7aeaf6f57b4f77",
                    "sha256:3abb473b35df538c20e59ecbc5d601a7036043c3965b7c6f8c98c265b9db24f2",
                    "sha256:76c3cd7530db08ddfcee0858621d0080774b927f75f067d7f8137e30ffa99748",
                    "sha256:bf7d1bd8d4c3e57684b17d76974e6a1ff3dec427c213946122e5787e913d7eb5",
                    "sha256:854a20c76b75c59cc3ace1f427565bf2ad5fbf6cea6bf17d796d6fdd3417186f",
                    "sha256:1fc2482f92e00d2637cb847bcf8b3128418991a94dcba8a1555f5d48e22462f3",
                    "sha256:7c842691701fa3339da5a5530ca4c7d1e9d427c6713b0a4d0818becc728e848b",
                    "sha256:d085b9b65193b2cf34667f45500da12276c33190e64ba7332d5ae5a4136b1b5c"
                ]
            }
        },
        "2021.3_vaapi_fix": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:2c28ed82a618341388d09c01ca6fc9738c2a10c7a691e5acfdf21e4769680a51",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "040b4a990fb08c6860d3f3d0be810e7dd1ac2a0426ac6fad788cac360905f461",
            "container_config": {
                "Hostname": "040b4a990fb0",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:2c28ed82a618341388d09c01ca6fc9738c2a10c7a691e5acfdf21e4769680a51",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-03-29T13:23:04.882958666Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-25T22:33:08.47044879Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a8d2f02fbaddf8cec8e4da320cd03c06435f395e9d454f69954efe422eb6e1ba in / "
                },
                {
                    "created": "2021-03-25T22:33:09.647074773Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-25T22:33:10.687176019Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-25T22:33:11.676447588Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-25T22:33:11.868234702Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:20.495872859Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:20.902160255Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:21.434937097Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:21.952462265Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:22.376767281Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:22.799731601Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:24.670823166Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-03-29T13:09:26.736925833Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-03-29T13:09:27.476463337Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:32.971092598Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:948ee027ab1104e4ec563af1b54e2a976cf04c19c22dfded0c01e87f8c013e4f in /opt/intel "
                },
                {
                    "created": "2021-03-29T13:09:34.693444041Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-03-29T13:09:36.487810488Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:38.494339877Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:38.981059602Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:39.333660192Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:09:39.685640603Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:11:48.101506227Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends dpkg-dev &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:18:11.084341945Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:18:23.97459135Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:18:26.183760579Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-03-29T13:18:27.604983114Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:18:45.764857995Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-03-29T13:18:48.151485972Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:20:40.420514958Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-03-29T13:21:14.015482052Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends python3-gi-cairo &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:21:14.373959276Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:21:14.773851329Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:21:15.384231113Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:13.794966993Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:22:14.747803243Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:15.58611623Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:25.382591072Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:22:26.019570797Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:ea9de611266844414b5e61d9df8dd9a94a0f040250f71c0d9866486a595c3844 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-03-29T13:22:26.482457238Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:27.793242519Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-03-29T13:22:28.137746818Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:29.430708121Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-03-29T13:22:29.756454606Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:22:50.066619985Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-03-29T13:22:54.44297666Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-03-29T13:23:03.903108855Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y dpkg-dev gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-29T13:23:04.24130173Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:23:04.583049873Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-29T13:23:04.882958666Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0c78fac124da333b91fb282abf77d9421973e4a3289666bd439df08cbedfb9d6",
                    "sha256:cba97cc5811c5dbdc575384d01210ab6ba3c0ff972eea20a8b7546c5767c4edb",
                    "sha256:d4dfaa212623040dfb425924a30450e168a626c98b74fa2eeac360e0ceb89be1",
                    "sha256:b428861feed43cbca4430f43a0ae8bdbb9a8dfbbf37e958786aa6137497121c1",
                    "sha256:8e7d1c814a04e8ca4964b7a37aaad6c28b4ba7ac9b2b1e71f05573929bdcbf82",
                    "sha256:ff2e0c4acbc926ca8932e7f50b551eedf885a17225714d8eeff5a44d04672903",
                    "sha256:d4ec0b28829cbb1af53e72f0069fe2f042504432e7de30753e21a50560588b52",
                    "sha256:2d7b3d52dbc88ebd1046ffb19bb0d18a3c6a8bc2434952e2840b8adedc8df016",
                    "sha256:856bb14ef0d2e5d3c45df32304564a18d2125c02b9e0e2f3bf031fc6b35b3845",
                    "sha256:e44706dbb828194e854223ba3d3237b793c7f033f5dcc8459e209db68136adcc",
                    "sha256:d691af674bbd8be5f536683469ced388210c8e97a8f440d100222935b3bb9651",
                    "sha256:026c0e2368fa787807dc53707cf7fe9b025cc22557863f522d3485f138f047bc",
                    "sha256:02787a9b17241fe161989b3ea3bced88e786bb1aa3c643a86aa8a107a5fa4ef2",
                    "sha256:7832108c63462a7c49b5147d6a7c56a01d4c21ead4047fbe40dfbe09fa79f673",
                    "sha256:989f794a06a5b1ff735e06f0e15d5f167a67189b5bb989ee65e48ae0379f9a17",
                    "sha256:41e7dcc88bb276c12dda6281861e0c5efabc7557444a9926c5c94476736d516d",
                    "sha256:7113d75c0b321353e26a0e0d86853e076061ab35e97db4717bb3838f390efef8",
                    "sha256:cf421d8ebd4c943f07c1817fce348d51169281eb82376dc4c0d3ee6a2253ff19",
                    "sha256:f0bc0878f1167c7e1d622332fc48ddac1b1e24f2bcaf77427027695e967235fc",
                    "sha256:0f0f38f2eb3a719b972414409161e3b7dc9b8469cff834b5e09631586e8a17f3",
                    "sha256:39590952703a6b622f2fc1ff7b4f0b7972dbed12f48bda398f1535abc42705c8"
                ]
            }
        },
        "2021.3_vaapi_fix_sec": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:df909a496f1ab5033fa046cb5f3106331c2bfcf7925a58b930ef498b0816bc2f",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "dfcd543a997f44e7a9cdf89f285a52d09aee83145c834b0832cbfbd15d3f30ac",
            "container_config": {
                "Hostname": "dfcd543a997f",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:df909a496f1ab5033fa046cb5f3106331c2bfcf7925a58b930ef498b0816bc2f",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-05-21T09:27:11.830652591Z",
            "docker_version": "20.10.3",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:46.368706082Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:47.279321787Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:48.063337944Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:48.973688447Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:49.81662948Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:50.868525225Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:54.397702537Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-05-21T09:21:56.078615337Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-05-21T09:21:56.198097184Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:21:58.746715982Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:0e82907a369724b83c1d294414fcc16d7df436cc4b549430eb34083cbd38e20c in /opt/intel "
                },
                {
                    "created": "2021-05-21T09:22:03.261438522Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-05-21T09:22:04.004373652Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:22:04.818136638Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:22:05.502773282Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:22:06.218575338Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:22:06.975677375Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:22:56.92001388Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends dpkg-dev &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:24:46.640230035Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:24:58.069322629Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:25:00.086872406Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-05-21T09:25:00.783725869Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:25:08.028705423Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-05-21T09:25:09.125657354Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:25:36.457649579Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-05-21T09:25:44.671609638Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends python3-gi-cairo &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:25:44.808851828Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:25:44.896598003Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:25:44.975890343Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:09.352424824Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:26:11.1770614Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:11.902827459Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:24.841243169Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:26:26.007937663Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:7b4a3196b36cda8ef2cda261f8b3ef4892b5b481fb6a15244f55d34da373c4e0 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-05-21T09:26:27.376207245Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:29.02607337Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-05-21T09:26:29.176771249Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:30.152112738Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-05-21T09:26:30.281522815Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:26:50.396027402Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-05-21T09:26:55.798333166Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-05-21T09:27:08.194238057Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y dpkg-dev gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-21T09:27:09.111917295Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:27:10.034739014Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:27:10.884223794Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T09:27:11.830652591Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:3f8bcdcfcb415a47289e9a3ad1268140e7b8f5f8621b1dbf05130bd2f1634e23",
                    "sha256:3b0f7950f70eaa8cb3b9f77c3443555203248d2e4c84685c16e866fd6d96921c",
                    "sha256:0303d9bcbf69a22b821c46d13e743e150c468d774e44cc3a93ff5d7eaa4cb5cf",
                    "sha256:221433984805f231e0f3a1ade462a0b5d37e0e365c3243d23003c77c6bf16f81",
                    "sha256:d3273432f3790ea543d12d38de39eaea098bc384c442fb2adea40c61b795af7e",
                    "sha256:4f23d1f4cb3738a2b58ee2b79e1dace2955eef999ce2c0fdc4f8a3980b08e4bf",
                    "sha256:1c54d3c560a562e2baa2c6d8512069d82a259ff9cb46aa6be9fecdabafb209ce",
                    "sha256:17d5e58e67328a97ef31d3727b8f449317b91c2cbce68168a71c9300089f3126",
                    "sha256:56799219557a342e53203572c87f5f1d81544054ca55c3971171c0fad649baee",
                    "sha256:9aaf7763aae07ecf418c58aee3ca417b3330812cc9d1c1835f58bfe1f782c2f2",
                    "sha256:78bae57141c5203d2a447cb38070bebca7bfa5f502b0dad8f5a76ab3614682ff",
                    "sha256:bafb13e545fc7b580b0d006a2753cdfdbe4f8d9f968b4ec9a22dc0b760ae2b79",
                    "sha256:2caecab144cf64fa3d4ac6f30f531cf20ce1365d92993cab7ab1c2fea4b96a92",
                    "sha256:a8b4879e65082403bcb0edf88a70d04d6e0f3920d1068ea29ee1ef15394528e5",
                    "sha256:92f9627d9f9e3a48606fa30e570b0a6b1c1821f5a5d1884d609f6ddb39be840e",
                    "sha256:70530c2057f91b1be4e879b696d4b27e0310c30bda79ab3eb9b1804ff0adb54c",
                    "sha256:eabd80f03462ec559736f5fc3aa3d0edab9dbd0557da19c147bd73f00e6d7689",
                    "sha256:d4c4e8523b2e66225cf0fea1a297680f0720034a929af55242960bc0ffbbce90"
                ]
            }
        },
        "2021.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7d5d8021841f0b01a66dca9fce8a6b50d944216aa15119738d131413d7dbd950",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "7edb2f6d417236527a9e64ff3d4e11fbf59cc50c00621656717050938660e67e",
            "container_config": {
                "Hostname": "7edb2f6d4172",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7d5d8021841f0b01a66dca9fce8a6b50d944216aa15119738d131413d7dbd950",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-07-19T08:33:28.16733346Z",
            "docker_version": "18.09.8",
            "history": [
                {
                    "created": "2021-07-13T22:29:34.335247052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c3d9d2597e01d1cee8513ff0e1344e7791e6f582be2cbd1d5777dd204780f1c in / "
                },
                {
                    "created": "2021-07-13T22:29:34.750851774Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:33.919238995Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:34.26876213Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:34.600471456Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:34.910810211Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:35.22921902Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:35.523888851Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:36.88529422Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-07-19T08:28:37.948905563Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-07-19T08:28:38.240546518Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:42.300934137Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:562fce07ba0092083e38d5a5800c56295837129e0b161bb0997c29e5732fd074 in /opt/intel "
                },
                {
                    "created": "2021-07-19T08:28:44.813401686Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-07-19T08:28:45.124049254Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:45.429394Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:45.778526969Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:46.104791886Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:28:46.382253244Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:29:15.833394291Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:30:58.601182984Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:30:59.316946688Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:00.377569172Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-07-19T08:31:00.681982456Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:05.48016166Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-07-19T08:31:05.900813886Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:48.591791267Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-07-19T08:31:50.365254013Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-07-19T08:31:50.689523866Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:51.000045081Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b9034bd2e596dc2f3a83b67f03e7833e44d1d01ef799122449f07bad23488103 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-07-19T08:31:51.302692538Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:51.612231762Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:31:51.948169777Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:25.842625721Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:32:28.93836891Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:29.26916967Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:39.410224896Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:32:39.899471269Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:e5da086deadcf915928aac71e805a504f6d0414fe818f7779185944055eb5fd5 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-07-19T08:32:40.522806309Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:45.317742789Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-07-19T08:32:45.657526891Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:46.864614572Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-07-19T08:32:47.242549488Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:04.182689814Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-07-19T08:33:08.909896867Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-07-19T08:33:16.98777734Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:33:23.136648473Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:24.29029438Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:26.491056573Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:28.16733346Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a70daca533d02f0886624703e70526b9ce8969b8cb87ff1eac163441fe071aa3",
                    "sha256:9c6421276b92a4ba0e0cd6204dee6837b96c334673d413aa554c859a61ab0c00",
                    "sha256:cbec8d3ce45202472b22139fe1ba0f0e87babb6ec1df147797946103546baa94",
                    "sha256:74d2ea0eefa9f27a61b0205f5219accc894baa0357288355685e5b151f83729b",
                    "sha256:602753d2d02c6c293e2afef69f80bf1b4b7df99f075e24690998ffab07457892",
                    "sha256:4692e69b6b2d154cdec7173743eb4c871ff893fefa019efd992cd585fb1581f0",
                    "sha256:e2539ac8f25f726a1b940f64624635135200a68310c16662a55c0c486ba6e5aa",
                    "sha256:dd095ed34f150f5d9bfe3eefdefc64338d3799994f73b0a6df0155fc06427d35",
                    "sha256:44f9c33de38c7e4eca3ed319fdd673cf6e71ae2e4542bd553e19e21eff9411fd",
                    "sha256:9605d7267f5f2e5fba9075590626abdec4ec0dd5df1139a720a7684a9bc8b467",
                    "sha256:87b8f96fcf92fe230446ac04fc085c60da29c31077dd0843f1de2c5c2994de3e",
                    "sha256:d8ffd39ef50caae4c35fe44f43206fac67dd21ad7446cd5a108aaad14d4f42b7",
                    "sha256:c6fa168ecffed325d6a4b5f8fb98583f5db778eb322afde5239ada0ea855f524",
                    "sha256:7c083712cb18400b2ab9ac699d1c167f4099a02bafcc9ce6aa198bdb77325462",
                    "sha256:120a33d5d3f915ed9463b47a9e15cf53a91e2e1075e3f78ee41505834d8793a2",
                    "sha256:50efd54a41f3c0f5ff7522dd9920841bd06a61532726671ee193db34b6ea9c1c",
                    "sha256:7ba6e686de7e704e183a218d64b42be8365eee24f07c3e5679c329960e465818",
                    "sha256:20b7ead86bb79ab73dddf554a885a6e83b60f624e2cc38fc2ca741f5c7c84ba1",
                    "sha256:7f0fb4b9d0d566258418158ecddd839a1567e0b247fbdf0118dfbae3db0e0a13",
                    "sha256:c2dcbeb8aed8bc50c40c15ac7909b334fdbc6073be1608a1174e507567ee43fb"
                ]
            }
        },
        "2021.4.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:60524ba678984e725985d9134dc28fa674ec86fa7b1b6098cb541f31ad82519c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "8d7d882f17a5d064bfd48d6f977e0c3714c4eac6d2b8606c51aa7baf276206c2",
            "container_config": {
                "Hostname": "8d7d882f17a5",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:60524ba678984e725985d9134dc28fa674ec86fa7b1b6098cb541f31ad82519c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-09-09T01:07:12.667956951Z",
            "docker_version": "20.10.8",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.765147334Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.838440049Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.907528838Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.982355961Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.059344152Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.128540341Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.761974577Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-09-09T01:00:47.273229404Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-09-09T01:00:47.343365195Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:54.654084832Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:98c57f85dab86b25cb630178fa1f7eff3480325fa9563cf5724c173deab37d88 in /opt/intel "
                },
                {
                    "created": "2021-09-09T01:00:54.8385307Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-09-09T01:00:54.905856781Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:54.977053768Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.048493339Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.12151211Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.188210325Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:01:48.847765708Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:04:14.656324255Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:04:15.176494545Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:04:15.938026387Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-09-09T01:04:16.045179433Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:04:21.412686499Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-09-09T01:04:21.465057672Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:05.267926628Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-09-09T01:05:06.084831814Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-09-09T01:05:06.136141305Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.206748142Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b0fcb4f2e8b6c131ef636e78349524b6afe7f2a3d765be76b4bfae4581621334 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:05:06.283460434Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:cbab1dff79eb6337df86a248bcaff48536eb3b34bbd64933d605397de64a880b in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:05:06.328266186Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.379090815Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.445130801Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:17.728896246Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:06:17.803230415Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:17.861942287Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:30.954721555Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:06:31.189134231Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:955b1bdd07c00a31b4040cadd604963c6671e6ee63263180b800fb1e78a1cc0e in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-09-09T01:06:31.266459729Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:31.82286119Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-09-09T01:06:31.874942358Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:32.410510054Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-09-09T01:06:32.497017159Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:58.063678693Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-09-09T01:06:58.837688965Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-09-09T01:07:12.321421249Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:07:12.422958521Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.514227324Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.597333874Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.667956951Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:73261969f302c3057f57ddffb4db5a17a6a119f1263b5c022a3b3358890218f8",
                    "sha256:30eee53798027b86c6a4f053d75f55a01b6cae30c4e232e0e5379f81cb7a2a45",
                    "sha256:8ea7b6330632d7b67a07d0d3e600bfa05e84cadc44e9dfe7b689072129199f2d",
                    "sha256:dfe244069f5c83e34eebd78678ea658aeb6b43cf46a8e6c6bd975b1011401d31",
                    "sha256:191bcb374dea9d3c28bd2f5020d92feb1bd4abc11e2120bd2752b21f206c110a",
                    "sha256:bf2662bd395246c66d12c4821e6d88ace39946b3d6b8bbd15eb4a00921653cb6",
                    "sha256:64c67aea50775b119999895cf463f4b0a6efcd796924cc3860ac110b706deb84",
                    "sha256:5e19d4adf1523a520b6c9c52b5681bf87316aaaea70d07bbad7676bd860755ec",
                    "sha256:9697c3e4ec4ed41f725aeae49b1e83e8003c28cd2cb9daf2a8d5a59b9a2b6a73",
                    "sha256:8cf2ff4dc72a9b4f85031251fe472f577e9fc1e82aea5dfb5931cdf8c5054c2b",
                    "sha256:f77e4fc9281787906729412802a54928cc582941d38885768c8ff1b4e0b02b6a",
                    "sha256:261338b5c202b89e07cd3571243ac9b808b5dedbf46c6f9a18dafa2165ca5f75",
                    "sha256:c261df44bd7e50a85b9341cb24a487f538601e97ec9e3393b68537f374d30ac2",
                    "sha256:a5c0faac5631e9f9bcd1de5d9bd1641777089b9f8e2f9dc0ad7f45996ee8e7c9",
                    "sha256:1fbd7376a151a94d4e43c96320ca8f4e519d4b32108122815e97ba3cecdc0b56",
                    "sha256:f81dbf9c9e562ba81b91353315eb4c92a3dee90c8b98ec2356a0722e61fcf83c",
                    "sha256:8a84a3098be295ef225508c73ab411ef0c8562f30e220d7f13b6de73dc76321d",
                    "sha256:acfc9102ecacb5085d0242eca463add09482d2e8094d2acbceaeb953922d4a8e",
                    "sha256:f3b168b2ce78f4adbc7e97929063e8392474e6d579b639b7b0cd7f8dbb5efe59",
                    "sha256:f4dc32c4f7fcc02d44dfd8e2158608ec147301e29be3d397b156adc504c977b2"
                ]
            }
        },
        "2021.4.1_20210416": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:60524ba678984e725985d9134dc28fa674ec86fa7b1b6098cb541f31ad82519c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "8d7d882f17a5d064bfd48d6f977e0c3714c4eac6d2b8606c51aa7baf276206c2",
            "container_config": {
                "Hostname": "8d7d882f17a5",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:60524ba678984e725985d9134dc28fa674ec86fa7b1b6098cb541f31ad82519c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-09-09T01:07:12.667956951Z",
            "docker_version": "20.10.8",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.765147334Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.838440049Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.907528838Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:45.982355961Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.059344152Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.128540341Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:46.761974577Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-09-09T01:00:47.273229404Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-09-09T01:00:47.343365195Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:54.654084832Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:98c57f85dab86b25cb630178fa1f7eff3480325fa9563cf5724c173deab37d88 in /opt/intel "
                },
                {
                    "created": "2021-09-09T01:00:54.8385307Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-09-09T01:00:54.905856781Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:54.977053768Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.048493339Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.12151211Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:00:55.188210325Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:01:48.847765708Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:04:14.656324255Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:04:15.176494545Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:04:15.938026387Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-09-09T01:04:16.045179433Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:04:21.412686499Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-09-09T01:04:21.465057672Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:05.267926628Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-09-09T01:05:06.084831814Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-09-09T01:05:06.136141305Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.206748142Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b0fcb4f2e8b6c131ef636e78349524b6afe7f2a3d765be76b4bfae4581621334 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:05:06.283460434Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:cbab1dff79eb6337df86a248bcaff48536eb3b34bbd64933d605397de64a880b in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:05:06.328266186Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.379090815Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:05:06.445130801Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:17.728896246Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:06:17.803230415Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:17.861942287Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:30.954721555Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:06:31.189134231Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:955b1bdd07c00a31b4040cadd604963c6671e6ee63263180b800fb1e78a1cc0e in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-09-09T01:06:31.266459729Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:31.82286119Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-09-09T01:06:31.874942358Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:32.410510054Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-09-09T01:06:32.497017159Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:06:58.063678693Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-09-09T01:06:58.837688965Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-09-09T01:07:12.321421249Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:07:12.422958521Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.514227324Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.597333874Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:07:12.667956951Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:73261969f302c3057f57ddffb4db5a17a6a119f1263b5c022a3b3358890218f8",
                    "sha256:30eee53798027b86c6a4f053d75f55a01b6cae30c4e232e0e5379f81cb7a2a45",
                    "sha256:8ea7b6330632d7b67a07d0d3e600bfa05e84cadc44e9dfe7b689072129199f2d",
                    "sha256:dfe244069f5c83e34eebd78678ea658aeb6b43cf46a8e6c6bd975b1011401d31",
                    "sha256:191bcb374dea9d3c28bd2f5020d92feb1bd4abc11e2120bd2752b21f206c110a",
                    "sha256:bf2662bd395246c66d12c4821e6d88ace39946b3d6b8bbd15eb4a00921653cb6",
                    "sha256:64c67aea50775b119999895cf463f4b0a6efcd796924cc3860ac110b706deb84",
                    "sha256:5e19d4adf1523a520b6c9c52b5681bf87316aaaea70d07bbad7676bd860755ec",
                    "sha256:9697c3e4ec4ed41f725aeae49b1e83e8003c28cd2cb9daf2a8d5a59b9a2b6a73",
                    "sha256:8cf2ff4dc72a9b4f85031251fe472f577e9fc1e82aea5dfb5931cdf8c5054c2b",
                    "sha256:f77e4fc9281787906729412802a54928cc582941d38885768c8ff1b4e0b02b6a",
                    "sha256:261338b5c202b89e07cd3571243ac9b808b5dedbf46c6f9a18dafa2165ca5f75",
                    "sha256:c261df44bd7e50a85b9341cb24a487f538601e97ec9e3393b68537f374d30ac2",
                    "sha256:a5c0faac5631e9f9bcd1de5d9bd1641777089b9f8e2f9dc0ad7f45996ee8e7c9",
                    "sha256:1fbd7376a151a94d4e43c96320ca8f4e519d4b32108122815e97ba3cecdc0b56",
                    "sha256:f81dbf9c9e562ba81b91353315eb4c92a3dee90c8b98ec2356a0722e61fcf83c",
                    "sha256:8a84a3098be295ef225508c73ab411ef0c8562f30e220d7f13b6de73dc76321d",
                    "sha256:acfc9102ecacb5085d0242eca463add09482d2e8094d2acbceaeb953922d4a8e",
                    "sha256:f3b168b2ce78f4adbc7e97929063e8392474e6d579b639b7b0cd7f8dbb5efe59",
                    "sha256:f4dc32c4f7fcc02d44dfd8e2158608ec147301e29be3d397b156adc504c977b2"
                ]
            }
        },
        "2021.4.1_src": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f154962137bba3229baf973e9f87a7e767cdb8d22d3bea4cd6450035a5d4f39",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "5eaf8891548dbbbbdd219ab57a9fd4ced56051bbd955ac5566c8e8ae1d4ee1a4",
            "container_config": {
                "Hostname": "5eaf8891548d",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f154962137bba3229baf973e9f87a7e767cdb8d22d3bea4cd6450035a5d4f39",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-09-09T01:11:43.016308778Z",
            "docker_version": "18.09.8",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:17.16278024Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:17.557071788Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:17.900059106Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:18.233517005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:18.546345379Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:18.899374963Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:20.539882311Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-09-09T00:57:21.542259302Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-09-09T00:57:21.78266243Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:25.60817179Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:98c57f85dab86b25cb630178fa1f7eff3480325fa9563cf5724c173deab37d88 in /opt/intel "
                },
                {
                    "created": "2021-09-09T00:57:26.412158706Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-09-09T00:57:26.72274648Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:26.955186427Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:27.21405267Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:27.490963848Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:57:27.718766499Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T00:58:07.905562006Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:08:25.007642354Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:08:31.035553494Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:08:32.2564327Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:08:32.568045467Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:08:37.630446786Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-09-09T01:08:38.116909301Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:09:29.112812051Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-09-09T01:09:31.3530319Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-09-09T01:09:31.707522338Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:09:31.99267019Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b9034bd2e596dc2f3a83b67f03e7833e44d1d01ef799122449f07bad23488103 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:09:32.268919299Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:6bfba99554120bf69fb37329819c452a6c9be9a321a495fc3f152c12ed2607cb in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-09-09T01:09:32.511298552Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:09:32.829166071Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:09:33.185207431Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:10:52.18101572Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:10:53.524347186Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:10:53.908160864Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:06.809083757Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:11:07.535726884Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:1ebcb7dae169cba055c2c9c0c7f34ea7aa2624e723f53cd4a9626702169d594b in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-09-09T01:11:07.920775866Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:09.224938106Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-09-09T01:11:09.603716771Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:10.852743311Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-09-09T01:11:11.194989622Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:31.779942709Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-09-09T01:11:33.897066231Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-09-09T01:11:41.758571628Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-09T01:11:42.003433253Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:42.380494172Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:42.700249726Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T01:11:43.016308778Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:0c229fb870b57a78fe0afba565f0f0738c44dbd56933d026daa11833e9d1f139",
                    "sha256:49fc9742629d287e621017e632e118454efcc53d9764dc3ef1d38ec0fc8755cf",
                    "sha256:9f01eb944bbdf6c7603a61c445ca936080827c49c6f899b95ece7920c8a3dc27",
                    "sha256:0b2e55af6cfcb4a9c9ca5fdc071ace63f5a60d3f079138b14aabf8841ba16f26",
                    "sha256:3fbce8caf347411a573f8ffbb79916bdabb4d4ec1fd1b602958d9d04047a5fc1",
                    "sha256:0b1305b9cedce8289b2fe75b24ec3dface370248f6e4c5d4dd6d2a62e470c31b",
                    "sha256:c72dcd5adc7a46d5a5d231669bc4c8cd4609eb21f760b71e06a0127dfd103c84",
                    "sha256:d0357c33b8d86b679d2f43b6a2e8a102868f7e0ddfdd241b612b7d8ebb9c49bb",
                    "sha256:c3c6fa524de4ab6bb8785b3f4621ce82272934217bb51a9db7d45f416616fc6c",
                    "sha256:000cd619b3db57718b4ee39e1a3104e338ba7b6eb4956887c2b5e568648e9f4b",
                    "sha256:3fad143dbdc62fcee9ead68ad294689cfb4937fd05a5d4e691f9ede0636cf416",
                    "sha256:3e223415c2591b7a56b8bc4477072b33aabb8944e66ffa70556d28234e921e52",
                    "sha256:35f91bc52671e306a8679144912b1205e05dc261efc60181f6de53afc36d2a57",
                    "sha256:2e0d14a204e8e6e80dc181be901d0ae06471a9598a0b3c15a747dcc800c577bb",
                    "sha256:f9fd363a343b412c796cffdc4d5c6187c6746559fd86b3648d69ce18d625093b",
                    "sha256:9d2839d1c7102c7afd2ea32f01116423346b327a4059ff50270c7674cbf4e5f2",
                    "sha256:991ae16ae114397c83ac624ad47beb9913943753d786ccff61066057f0c55461",
                    "sha256:e4fa27a4f58305979769e38206fdd3970143407a0978360dded0f05f18799560",
                    "sha256:f63585739070bc0e04ceddd4ebcdaf5a638f479e882631d7ee82f1c306bc2eaf"
                ]
            }
        },
        "2021.4.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "3d7d2cd66f873ceeead229b925129dbdec8c60ba25eb5b3ca6a05e2c795433e8",
            "container_config": {
                "Hostname": "3d7d2cd66f87",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-11-12T12:54:56.827183682Z",
            "docker_version": "18.09.8",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:40.841659144Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.182769887Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.567098542Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.959425695Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.278817314Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.657353886Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:44.2596357Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-11-12T12:47:45.699796496Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-11-12T12:47:46.077277357Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:52.614161894Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:ab7d97446b5e37b010369972c36933396917df75bc47c18afc7afa65a7c0488e in /opt/intel "
                },
                {
                    "created": "2021-11-12T12:47:53.262568607Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-11-12T12:47:53.724635615Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.205422877Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.54932291Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.944313548Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:55.308937174Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:48:40.317507639Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:14.963931172Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm /usr/lib/python3.*/lib-dynload/readline.cpython-3*-gnu.so && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:17.924106611Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:19.050910812Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-11-12T12:51:19.287305736Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:24.364730286Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-11-12T12:51:24.803469533Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:15.06386776Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-11-12T12:52:17.581168248Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-11-12T12:52:17.983759974Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:18.290790036Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b9034bd2e596dc2f3a83b67f03e7833e44d1d01ef799122449f07bad23488103 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.575232681Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:6bfba99554120bf69fb37329819c452a6c9be9a321a495fc3f152c12ed2607cb in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.838724573Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.086813105Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.37491136Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:11.121174795Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:12.458698989Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:12.748645664Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:20.385065682Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:20.821579891Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:3501b90ed5299c972312d2071c35efbb40c08319bd4964d863ab94a800a7a599 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-11-12T12:54:21.191585708Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:22.561471429Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-11-12T12:54:23.03860715Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:24.060215367Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-11-12T12:54:24.3729473Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:40.78240892Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-11-12T12:54:42.140170856Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-11-12T12:54:55.491289322Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:55.780909255Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.154455658Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.453774288Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.827183682Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:8835bc30c076db821bc39cc120cb7fb17cc7f4615862ce0bf33a3d66b085bdff",
                    "sha256:77103c0fd8d44bd26f3dc9c93ae77edf61c643ca05b4a3befd61e9d8c3015f94",
                    "sha256:0a5e986dccf552a05120d23f82bf2fb9346e31c2ee81dd290b7031c01a84b0e4",
                    "sha256:757901a4e71954bf55fcdb4199eace309f383546a0def935182cb28ec2ac3f9e",
                    "sha256:7710bba9cac6852efae1e4242179210dfd611d1eb37ddf2fe8eb8807b3ad51e8",
                    "sha256:502ba31f52bd4fa981406bd4edef2a982fe775aa5322048fdd542ce16c669042",
                    "sha256:63093c39cf6baea00ac73a0571537f1540445df043498e95e99eea49a3eb310b",
                    "sha256:c75605d92b7dca7a05ac46fe7730ce45e2d28f8b9629f650f90cab3011523d7e",
                    "sha256:3f82f30e8f99b66b567b47dbdaef862226fb86e06732b13d46a9d145651ce735",
                    "sha256:21342198ed2976f480008f9254f620a05df4308c82ad3ba397f977ad63fef752",
                    "sha256:6c80ce4940f1dc6fa671f76975bf5a664363567945166c0302481fdd59bbb318",
                    "sha256:3f11db03f8e85e04aa7e95232828d78e4700395b3022ee13e4404958450f9cc7",
                    "sha256:472f16bdbfb15ed066aecca0f6ba23cf14af2a2e37cffc3dd2235c20f0b0fc7a",
                    "sha256:2a94eabb57744ff9d2271c651b6be27d6a4f3a3ea5cab68c8b1af5b726ae05fc",
                    "sha256:07d66befc77a2eea8d7b978481e6fc622d6aaf6e6544e22a9264659806d30b7a",
                    "sha256:2eb80f5a841235fa8db095c18d334f7212b768d7089b9be3fef575430e6442d3",
                    "sha256:91d32964e5eed301b108773f9fd9b2737862302a5dd88cb6c2f9be2dc169127a",
                    "sha256:94699b9e56985b0ce1e204d4b165d8124b3bb37c9e69b97ac6bb49474ff33e00",
                    "sha256:4a9207d330ad224d6779f140898cbdbbf7c3731e794165c81d116bbc673a2c7a",
                    "sha256:e4890be4542edb6f0417187ae4abaff17e984cd6c0d4cd21e742b9d42e86d17b"
                ]
            }
        },
        "2021.4.2_20210416": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "3d7d2cd66f873ceeead229b925129dbdec8c60ba25eb5b3ca6a05e2c795433e8",
            "container_config": {
                "Hostname": "3d7d2cd66f87",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-11-12T12:54:56.827183682Z",
            "docker_version": "18.09.8",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:40.841659144Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.182769887Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.567098542Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.959425695Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.278817314Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.657353886Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:44.2596357Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-11-12T12:47:45.699796496Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-11-12T12:47:46.077277357Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:52.614161894Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:ab7d97446b5e37b010369972c36933396917df75bc47c18afc7afa65a7c0488e in /opt/intel "
                },
                {
                    "created": "2021-11-12T12:47:53.262568607Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-11-12T12:47:53.724635615Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.205422877Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.54932291Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.944313548Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:55.308937174Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:48:40.317507639Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:14.963931172Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm /usr/lib/python3.*/lib-dynload/readline.cpython-3*-gnu.so && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:17.924106611Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:19.050910812Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-11-12T12:51:19.287305736Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:24.364730286Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-11-12T12:51:24.803469533Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:15.06386776Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-11-12T12:52:17.581168248Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-11-12T12:52:17.983759974Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:18.290790036Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b9034bd2e596dc2f3a83b67f03e7833e44d1d01ef799122449f07bad23488103 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.575232681Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:6bfba99554120bf69fb37329819c452a6c9be9a321a495fc3f152c12ed2607cb in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.838724573Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.086813105Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.37491136Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:11.121174795Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:12.458698989Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:12.748645664Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:20.385065682Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:20.821579891Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:3501b90ed5299c972312d2071c35efbb40c08319bd4964d863ab94a800a7a599 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-11-12T12:54:21.191585708Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:22.561471429Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-11-12T12:54:23.03860715Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:24.060215367Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-11-12T12:54:24.3729473Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:40.78240892Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-11-12T12:54:42.140170856Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-11-12T12:54:55.491289322Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:55.780909255Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.154455658Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.453774288Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.827183682Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:8835bc30c076db821bc39cc120cb7fb17cc7f4615862ce0bf33a3d66b085bdff",
                    "sha256:77103c0fd8d44bd26f3dc9c93ae77edf61c643ca05b4a3befd61e9d8c3015f94",
                    "sha256:0a5e986dccf552a05120d23f82bf2fb9346e31c2ee81dd290b7031c01a84b0e4",
                    "sha256:757901a4e71954bf55fcdb4199eace309f383546a0def935182cb28ec2ac3f9e",
                    "sha256:7710bba9cac6852efae1e4242179210dfd611d1eb37ddf2fe8eb8807b3ad51e8",
                    "sha256:502ba31f52bd4fa981406bd4edef2a982fe775aa5322048fdd542ce16c669042",
                    "sha256:63093c39cf6baea00ac73a0571537f1540445df043498e95e99eea49a3eb310b",
                    "sha256:c75605d92b7dca7a05ac46fe7730ce45e2d28f8b9629f650f90cab3011523d7e",
                    "sha256:3f82f30e8f99b66b567b47dbdaef862226fb86e06732b13d46a9d145651ce735",
                    "sha256:21342198ed2976f480008f9254f620a05df4308c82ad3ba397f977ad63fef752",
                    "sha256:6c80ce4940f1dc6fa671f76975bf5a664363567945166c0302481fdd59bbb318",
                    "sha256:3f11db03f8e85e04aa7e95232828d78e4700395b3022ee13e4404958450f9cc7",
                    "sha256:472f16bdbfb15ed066aecca0f6ba23cf14af2a2e37cffc3dd2235c20f0b0fc7a",
                    "sha256:2a94eabb57744ff9d2271c651b6be27d6a4f3a3ea5cab68c8b1af5b726ae05fc",
                    "sha256:07d66befc77a2eea8d7b978481e6fc622d6aaf6e6544e22a9264659806d30b7a",
                    "sha256:2eb80f5a841235fa8db095c18d334f7212b768d7089b9be3fef575430e6442d3",
                    "sha256:91d32964e5eed301b108773f9fd9b2737862302a5dd88cb6c2f9be2dc169127a",
                    "sha256:94699b9e56985b0ce1e204d4b165d8124b3bb37c9e69b97ac6bb49474ff33e00",
                    "sha256:4a9207d330ad224d6779f140898cbdbbf7c3731e794165c81d116bbc673a2c7a",
                    "sha256:e4890be4542edb6f0417187ae4abaff17e984cd6c0d4cd21e742b9d42e86d17b"
                ]
            }
        },
        "2021.4.2_src": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b7d307e44271e82bb9c54c509a993be0cfebbd8fb49096bbb46b1252bef5c50c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "69566327e01dacbc4ca63fa800d6b5d19887ebce4965736640585aa5789919e3",
            "container_config": {
                "Hostname": "69566327e01d",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:b7d307e44271e82bb9c54c509a993be0cfebbd8fb49096bbb46b1252bef5c50c",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-11-12T13:31:25.297668639Z",
            "docker_version": "20.10.3",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:44.224482094Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:44.463019281Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:44.779942567Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:53.406973847Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:56.148752519Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:56.44784491Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:56:57.861323305Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-11-12T12:56:58.879149281Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-11-12T12:56:59.028664853Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:57:11.616866779Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:ab7d97446b5e37b010369972c36933396917df75bc47c18afc7afa65a7c0488e in /opt/intel "
                },
                {
                    "created": "2021-11-12T12:58:17.786375264Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-11-12T12:58:18.033832219Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:58:18.232343254Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:58:18.495184002Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:58:18.82593246Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:58:19.188503639Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:00:44.545040042Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T13:19:51.232523127Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm /usr/lib/python3.*/lib-dynload/readline.cpython-3*-gnu.so && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T13:19:52.14016877Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:19:54.933099313Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:19:57.901239134Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:20:12.586150235Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-11-12T13:20:12.825461027Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:22:13.620492065Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-11-12T13:22:24.839523535Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-11-12T13:22:25.05786632Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:22:25.243982686Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:88f1fb636fef87cbae40301cbd3ab00f57cc7070265aaaa908d1b01299d7b436 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T13:22:25.570105117Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:75e5d92eabd17792726da20e441bd873b0dc5f552c3511f7bbd99bb891fa9bbc in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T13:22:52.265150582Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:22:52.501163081Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:22:52.715796118Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:26:59.31480811Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T13:28:00.741880444Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:28:01.376532864Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:29:14.855149477Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T13:29:22.591827399Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:9ea3e01e526e7bb898373e1328537b09d0061916b6c03f5ffa5f200476fd0942 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-11-12T13:29:26.975144644Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:29:35.884801491Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-11-12T13:29:42.200650828Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:29:50.357422652Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-11-12T13:29:54.194348058Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:30:44.503926378Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-11-12T13:31:12.11946368Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-11-12T13:31:23.451006452Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T13:31:24.387778089Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:31:24.688038263Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:31:24.95272112Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T13:31:25.297668639Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:7268d307e7d0bf8c107c0867cfa359775e2637d4413213ef89c30e43f88942dc",
                    "sha256:8bc9e4ec066b50873ee2b1ec5263a7684583b8a1d9861b2998e0a176eb68e8bd",
                    "sha256:aeb665fc09754679e985383d9052ecf078689cd9c65d64327798db781a122310",
                    "sha256:3fc27fc0db5c7d8da2e4e27db2c892830d084b58e8526199f9daa69bb0ef1784",
                    "sha256:70048a57c6f19b17a90cc48be692f3b0566b95202595b995f3972eb36879cfec",
                    "sha256:97237aa36f315a1909da0d8e9a27375157d01b54afcde17c91d4ffa4349141a0",
                    "sha256:e4889be7773ab1bbf6c346566056a40c102aa4003f2313f8a61493ed145190f5",
                    "sha256:1da088d65e76129a13ca2ccf9eb7c83801e25cdbe0d83c8fa7546393ae190bd5",
                    "sha256:2625f44ccb7d43c9c39fa7a1e0315d3a7888098debd8d51e65bba8903ec19a8d",
                    "sha256:1aa1e4d3900bbdd122ea93ed0bf3c35ec3ec0123e277b3333a0fafc8170969ee",
                    "sha256:5ae42f6ba57cf50fcb6acaa27f6bdcf67abc85a4044e0d2c6472f74725df7aa5",
                    "sha256:c1df340370d2f7760053593dbeba526c06ce44a2f9fba2d870eae15f0c1a00ab",
                    "sha256:afe34b010d4a990e875c5b90b7be507eec4d239bd8ec5f15536b4cf1cc949895",
                    "sha256:c994e9f5a52900346a1687f661776c192896d1b9eb754a66f7b3762f602e2fec",
                    "sha256:416f78791d3e6ad1db075baae0278f9777a6f68e8c8ec70a678c505ccb0c6547",
                    "sha256:c3cb27c88e4e584da322f287be0076a36f6335d563379a33e7a2a281283687a3",
                    "sha256:a7d7e952b1be406d9e8d7b4eb48615f1a479871ba678c729e6873bc26975dd45",
                    "sha256:0d4d9608aad548fdfb11f613c725e4dac8eb9443f97bffb6dac6a60ad3150ddc",
                    "sha256:40b4e2a55aa5ea5561c4b385d2379e081fbecfd62a8b21d2d1a49e0b5449f21b"
                ]
            }
        },
        "2021.4_src": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:472b3ca83d7b7d7d39da27b78a7ee82fda1d5f21ffa4710f300521e0e05df588",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "dd5048b3d294a1374f0b0668fab37362ef1799804d1bb15dc6f47128fcd79ffb",
            "container_config": {
                "Hostname": "dd5048b3d294",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:472b3ca83d7b7d7d39da27b78a7ee82fda1d5f21ffa4710f300521e0e05df588",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-07-19T08:55:48.569837256Z",
            "docker_version": "20.10.3",
            "history": [
                {
                    "created": "2021-07-13T22:29:34.335247052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c3d9d2597e01d1cee8513ff0e1344e7791e6f582be2cbd1d5777dd204780f1c in / "
                },
                {
                    "created": "2021-07-13T22:29:34.750851774Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:39.150658992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:40.626317333Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:42.685527622Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:43.127801554Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:43.438167309Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:43.794330137Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:32:45.747972869Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-07-19T08:32:47.309479288Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-07-19T08:32:47.539106252Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:05.866752485Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:562fce07ba0092083e38d5a5800c56295837129e0b161bb0997c29e5732fd074 in /opt/intel "
                },
                {
                    "created": "2021-07-19T08:33:11.522501625Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-07-19T08:33:11.994362847Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:12.507993889Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:12.893199982Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:13.271492176Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:13.613417264Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:34:21.780444473Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:52:20.149262385Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:52:24.235604671Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:52:26.386938887Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:52:26.755936651Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:52:35.873883153Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-07-19T08:52:36.258400702Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:53:29.734085251Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-07-19T08:53:42.064553449Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-07-19T08:53:42.503829538Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:53:42.894420057Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:88f1fb636fef87cbae40301cbd3ab00f57cc7070265aaaa908d1b01299d7b436 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-07-19T08:53:43.486096887Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:53:43.837318919Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:53:44.20171318Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:54:33.03209475Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:54:33.9599441Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:54:34.631717668Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:54:49.491463845Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:54:49.856796916Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:1500402e351e3fa38e7268a6ecc0411ebd271e4ffa3fed3dd28c7c7e7776104b in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-07-19T08:54:50.004612565Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:54:50.69547041Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-07-19T08:54:50.79757801Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:54:51.436325616Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-07-19T08:54:51.539585714Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:55:16.471406842Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-07-19T08:55:26.154298948Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-07-19T08:55:46.614222021Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=yes INTEL_OPENCL=19.41.14441 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:55:47.646970015Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:55:47.947560652Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:55:48.236350764Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:55:48.569837256Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a70daca533d02f0886624703e70526b9ce8969b8cb87ff1eac163441fe071aa3",
                    "sha256:bcd4f89f73dce864d482df3108df7cf220e5d59fa6595747b0d38ed39cfe55cb",
                    "sha256:de3e9892eef75cfc5d218363e501bf072d9a4886a12e4f72b282df7e86108fe9",
                    "sha256:217dad52d70155ac974edc591e9d6e8d345fc60da46c29a579a3314c33f34708",
                    "sha256:e18321d7e828e0aafa37c17ff860a2a6ea955fbc7d43d8de411960a47d22cbad",
                    "sha256:fdc1db3fd1da3a57d51d1d1d8deb9515df179d72a55c9761978e433663fa41d2",
                    "sha256:245b6f805d34274f5e6bbcd6e0d94d9e6ab8a67cdf3aa4fd7e669aa80c0aa196",
                    "sha256:2cddee2f3878f5d937c72f3eeef42bd80420df169cd3608b60ba337b5c1f201b",
                    "sha256:c23e0962c9e5d1a3990d8ac465898d4b68041f2aed37e2380370c546f08f13aa",
                    "sha256:7b94a5744db0028caaf1ab881097d7f8cc553b8b714ca5f0240e190f5042171b",
                    "sha256:0563c45061f9f21491f458b92627335e96cf4506bb70a3df64d97975bbb458a1",
                    "sha256:e93332bfa8757f6d7501b8aae9758dcac173cdf57b15bf11035fce267406f768",
                    "sha256:3498f2aee4d89c3f85bad4ff61bf4370696ce3ae8d67978e9b2763f15e02e95f",
                    "sha256:bf95100b6f3c89241917380893c0b7f7ce77d14573f46f3d514be8ae6af6312f",
                    "sha256:655254154d0bad5192a3f4dc9a51a589744e8f14fc5d06616f94bfdfe9614767",
                    "sha256:dbe21e90ab3e93b25fcf839df9ab41111b5c2a40a3aca0fb6f0cdf0ad1a48a53",
                    "sha256:34e27af0f38b6ecdf908fdd31cf2dea952533c6ac5b967688dc24fdb292142ec",
                    "sha256:8a70d145bc03d02ec3da36cf8dcc9cf956f5099c96d8c2fbc4127a5d3f22208f",
                    "sha256:2cd5e3e2167c7972f182b455ed65f93e7d14401682569ea8af54702bd4f90043"
                ]
            }
        },
        "2021.4_tgl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:6cddc562c2838667b4bc332df75fd18ec40fb92d1ef31c90d4947e9c725835fd",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "5a16be92880ec5fa6a10ebe4af1a373495dce2f39899452aa1f81a71d2a442e4",
            "container_config": {
                "Hostname": "5a16be92880e",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "Image": "sha256:6cddc562c2838667b4bc332df75fd18ec40fb92d1ef31c90d4947e9c725835fd",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "Vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-07-19T08:42:52.466681819Z",
            "docker_version": "20.10.3",
            "history": [
                {
                    "created": "2021-07-13T22:29:34.335247052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c3d9d2597e01d1cee8513ff0e1344e7791e6f582be2cbd1d5777dd204780f1c in / "
                },
                {
                    "created": "2021-07-13T22:29:34.750851774Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:15.572036855Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:15.856196008Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:16.23681217Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:16.563076663Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:16.922443416Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:17.172222156Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:19.477595871Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-07-19T08:33:21.233763854Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-07-19T08:33:21.595696628Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:38.315052411Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:562fce07ba0092083e38d5a5800c56295837129e0b161bb0997c29e5732fd074 in /opt/intel "
                },
                {
                    "created": "2021-07-19T08:33:49.330901102Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-07-19T08:33:49.844102572Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:50.305400282Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:50.773380014Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:51.270514237Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:33:51.70895628Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:35:16.870434047Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:39:12.50873739Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:39:17.514708859Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:39:19.908911555Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-07-19T08:39:20.318342123Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:39:33.415206877Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-07-19T08:39:34.035276486Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:40:24.637654208Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-07-19T08:40:27.780794808Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-07-19T08:40:28.295652237Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:40:29.015859523Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:88f1fb636fef87cbae40301cbd3ab00f57cc7070265aaaa908d1b01299d7b436 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-07-19T08:40:29.422084412Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:40:29.708393722Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:40:30.173617736Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:41:35.428635868Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:41:37.116675561Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:41:37.450757782Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:41:56.14609369Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=`echo $line`; \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for `ls | wc -l` third-party packages: `du -sh`\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:41:57.889043643Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:b31ae8933cc162bd895f24437ed39fcc785b7e30df2bac619766d825f4254b59 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-07-19T08:41:58.418681538Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:00.722097531Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-07-19T08:42:01.141237323Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:03.22721276Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-07-19T08:42:03.600821345Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:35.796586746Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-07-19T08:42:39.328841182Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-07-19T08:42:50.970556334Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=20.35.17767 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-19T08:42:51.362060229Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:51.74146564Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:52.016778412Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-19T08:42:52.466681819Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a70daca533d02f0886624703e70526b9ce8969b8cb87ff1eac163441fe071aa3",
                    "sha256:1e79bfba7dde2d72e1083e6ba8469448f658736716e6f911ee0e8d364938b2e5",
                    "sha256:1c8d7ef3e1a29c7478d9bc57e2c164574ecc267780c1fa04a2da3d7cdf57e7c6",
                    "sha256:0b51f9db46bf39e11baef41e7bdb5ae22dc0438066b3503ae3ff7039feb1c2f6",
                    "sha256:f203d5b2cf7214c2d5378a324dff5c0998679ae3be3296a632f0d8e115240c12",
                    "sha256:3d437ae35026e8033c0b58e1f0da9ae906b5d16a008618d7c55420db1bf7142c",
                    "sha256:1b0e7c087d1cbd57c5559f5fa3bfad93bfdc010906a0c78ad6a690446825881b",
                    "sha256:37716feb359422dcd0d65a8bed2db8cec7207be6575526f327b39e21c455945a",
                    "sha256:ab79941f4eff959e33728cf4ae9ac7d2108b4811fb8430ee0ce294e026459d26",
                    "sha256:851a6cb609e053d5837c649c570ca940898f0254073f530ddaf0267acecd0651",
                    "sha256:d875729b012039858dc406e931909f9a1f57da4d11b9ffec284c0c27b97bcfaa",
                    "sha256:c1885bd321039d72b3d5ca20881fa1d6a98f25d4a484b3d3af02895d9b535aac",
                    "sha256:6e7b3ce8deddbe081eae08c4042f9ab8a87dfa7652607cc06e8d20a9816a654a",
                    "sha256:fa87b4ad8a15ff356f809f6986daf626d4da57122096bf990b36e93bb1f88041",
                    "sha256:b9fd4b84f29b2523f1434c0be8235ad43f3bafc90b79559e6764a130787a40c9",
                    "sha256:9933d0d46b511f220133c3e91aef3261709064758420ded2daa2e32a917fad7a",
                    "sha256:e6bcf456dcd871283f9df4f6d9be490b9096fc6b3e4a51f5223da2f9eed390a2",
                    "sha256:deaef4179836fbab2c7928378856417765fdce65111e9f5e69c317534b6b3b4b",
                    "sha256:71bf9ab11128c1183b1150c9965aff6f39068fe98b0a2770dbaf52bb4540ea49",
                    "sha256:db749d82c772011a0b1b13e3ff51861be99f6e4865c49860cdab8fcc6f06f724"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "container": "3d7d2cd66f873ceeead229b925129dbdec8c60ba25eb5b3ca6a05e2c795433e8",
            "container_config": {
                "Hostname": "3d7d2cd66f87",
                "Domainname": "",
                "User": "openvino",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "PYTHON_VER=python3.8"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/bin/bash\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:446f4191d5502eed810567e923a803e31dea899d62ee281029975d991fd2a80e",
                "Volumes": null,
                "WorkingDir": "/opt/intel/openvino",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "description": "This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "vendor": "Intel Corporation"
                },
                "Shell": [
                    "/bin/bash",
                    "-xo",
                    "pipefail",
                    "-c"
                ]
            },
            "created": "2021-11-12T12:54:56.827183682Z",
            "docker_version": "18.09.8",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:40.841659144Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL description=This is the data_runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.182769887Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL vendor=Intel Corporation",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.567098542Z",
                    "created_by": "/bin/sh -c #(nop)  USER root",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:41.959425695Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.278817314Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:42.657353886Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:44.2596357Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino &&     chown openvino -R /home/openvino"
                },
                {
                    "created": "2021-11-12T12:47:45.699796496Z",
                    "created_by": "|0 /bin/bash -xo pipefail -c mkdir /opt/intel"
                },
                {
                    "created": "2021-11-12T12:47:46.077277357Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:52.614161894Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:ab7d97446b5e37b010369972c36933396917df75bc47c18afc7afa65a7c0488e in /opt/intel "
                },
                {
                    "created": "2021-11-12T12:47:53.262568607Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"
                },
                {
                    "created": "2021-11-12T12:47:53.724635615Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.205422877Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.54932291Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:54.944313548Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=g++                gcc                libc6-dev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:47:55.308937174Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:48:40.317507639Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     apt-get install -y --no-install-recommends ${DEPS} &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:14.963931172Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > all_packages.txt && \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm /usr/lib/python3.*/lib-dynload/readline.cpython-3*-gnu.so && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:51:17.924106611Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:19.050910812Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources.\" > DockerImage_readme.txt ;     fi"
                },
                {
                    "created": "2021-11-12T12:51:19.287305736Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:51:24.364730286Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"
                },
                {
                    "created": "2021-11-12T12:51:24.803469533Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:15.06386776Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt &&     if [ -f ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt ]; then         ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/data_processing/dl_streamer/requirements.txt;     fi"
                },
                {
                    "created": "2021-11-12T12:52:17.581168248Z",
                    "created_by": "|4 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no LGPL_DEPS=g++                gcc                libc6-dev /bin/bash -xo pipefail -c pip uninstall -y opencv-python"
                },
                {
                    "created": "2021-11-12T12:52:17.983759974Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:18.290790036Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:b9034bd2e596dc2f3a83b67f03e7833e44d1d01ef799122449f07bad23488103 in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.575232681Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY file:6bfba99554120bf69fb37329819c452a6c9be9a321a495fc3f152c12ed2607cb in /opt/intel/openvino/licensing "
                },
                {
                    "created": "2021-11-12T12:52:18.838724573Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.086813105Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:52:19.37491136Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:11.121174795Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=g++                gcc                libc6-dev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} &&     apt-get autoremove -y software-properties-common &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:12.458698989Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:12.748645664Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:20.385065682Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     dpkg --get-selections | grep -v deinstall | awk '{print $1}' > no_vpu_packages.txt &&     apt-get install -y --no-install-recommends ${LGPL_DEPS} &&     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list &&       apt-get update && \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' > vpu_packages.txt && \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done &&       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:20.821579891Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) COPY dir:3501b90ed5299c972312d2071c35efbb40c08319bd4964d863ab94a800a7a599 in /opt/libusb-1.0.22 "
                },
                {
                    "created": "2021-11-12T12:54:21.191585708Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:22.561471429Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig'"
                },
                {
                    "created": "2021-11-12T12:54:23.03860715Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:24.060215367Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ &&     ldconfig"
                },
                {
                    "created": "2021-11-12T12:54:24.3729473Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:40.78240892Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem-dev         libboost-thread-dev         libjson-c4         libxxf86vm-dev &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*"
                },
                {
                    "created": "2021-11-12T12:54:42.140170856Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" >> /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" >> /root/.bashrc;     else         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri \\nexport GST_VAAPI_ALL_DRIVERS=1\\n\" >> /root/.bashrc;     fi;"
                },
                {
                    "created": "2021-11-12T12:54:55.491289322Z",
                    "created_by": "|6 DEPS=tzdata           curl            intel-media-va-driver-non-free            libva-dev INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler -c=opencv_opt -c=dlstreamer INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update &&     apt-get autoremove -y gfortran &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-11-12T12:54:55.780909255Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  USER openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.154455658Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.453774288Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T12:54:56.827183682Z",
                    "created_by": "/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:8835bc30c076db821bc39cc120cb7fb17cc7f4615862ce0bf33a3d66b085bdff",
                    "sha256:77103c0fd8d44bd26f3dc9c93ae77edf61c643ca05b4a3befd61e9d8c3015f94",
                    "sha256:0a5e986dccf552a05120d23f82bf2fb9346e31c2ee81dd290b7031c01a84b0e4",
                    "sha256:757901a4e71954bf55fcdb4199eace309f383546a0def935182cb28ec2ac3f9e",
                    "sha256:7710bba9cac6852efae1e4242179210dfd611d1eb37ddf2fe8eb8807b3ad51e8",
                    "sha256:502ba31f52bd4fa981406bd4edef2a982fe775aa5322048fdd542ce16c669042",
                    "sha256:63093c39cf6baea00ac73a0571537f1540445df043498e95e99eea49a3eb310b",
                    "sha256:c75605d92b7dca7a05ac46fe7730ce45e2d28f8b9629f650f90cab3011523d7e",
                    "sha256:3f82f30e8f99b66b567b47dbdaef862226fb86e06732b13d46a9d145651ce735",
                    "sha256:21342198ed2976f480008f9254f620a05df4308c82ad3ba397f977ad63fef752",
                    "sha256:6c80ce4940f1dc6fa671f76975bf5a664363567945166c0302481fdd59bbb318",
                    "sha256:3f11db03f8e85e04aa7e95232828d78e4700395b3022ee13e4404958450f9cc7",
                    "sha256:472f16bdbfb15ed066aecca0f6ba23cf14af2a2e37cffc3dd2235c20f0b0fc7a",
                    "sha256:2a94eabb57744ff9d2271c651b6be27d6a4f3a3ea5cab68c8b1af5b726ae05fc",
                    "sha256:07d66befc77a2eea8d7b978481e6fc622d6aaf6e6544e22a9264659806d30b7a",
                    "sha256:2eb80f5a841235fa8db095c18d334f7212b768d7089b9be3fef575430e6442d3",
                    "sha256:91d32964e5eed301b108773f9fd9b2737862302a5dd88cb6c2f9be2dc169127a",
                    "sha256:94699b9e56985b0ce1e204d4b165d8124b3bb37c9e69b97ac6bb49474ff33e00",
                    "sha256:4a9207d330ad224d6779f140898cbdbbf7c3731e794165c81d116bbc673a2c7a",
                    "sha256:e4890be4542edb6f0417187ae4abaff17e984cd6c0d4cd21e742b9d42e86d17b"
                ]
            }
        }
    }
}