{
    "manifests": {
        "alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9594,
                "digest": "sha256:52d3c1535ec50837b211db16f76ed25f3d342d3607153a0d8938862bea64d232"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2206931,
                    "digest": "sha256:4fe2ade4980c2dda4fc95858ebb981489baec8c1e4bd282ab1c3560be8ff9bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5529532,
                    "digest": "sha256:c3f09dfaf47d2b8a43bf07cec8fee65d1bfc7dac8728559296695fd12ca6e36a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:83283d0e9bb9c36bc3eefb4875714de28d13f7bff8ea5b031a6a12775ce72574"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 625,
                    "digest": "sha256:e2e530da95386bd27ba290f0b8f0a8ef0aa9c89c0bbfad9bc9e570185c86f79b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:ed39413434d5575895157f6ee821353df57cd3716319d515b988b3d54815ca58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:d97827148f5e482917346696d3ef05f4073f86914005593ca9701854a73b6564"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 685,
                    "digest": "sha256:cd9a5eead8444666525220281426bab905225bcfd794ea58d46b9896260ca013"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:31b13aae6aaa112b3e0d9d9fd7cdcefac40f327b785ca04574e288f2c2fba8c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 549,
                    "digest": "sha256:a48ad0975e2140f792ec30d65d1a0f91c64479999eaba96b7aa835f6503d8ec0"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7034,
                "digest": "sha256:906bad53bcf34990b87a4fd784564ed006ba6967fe7734793547c1db400871ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22486039,
                    "digest": "sha256:f17d81b4b692f7e0d6c1176c86b81d9f2cb5ac5349703adca51c61debcfe413c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22183750,
                    "digest": "sha256:d5c237920c394bda8bf1ef31b00bbde458f6978c159303e00d712a95c3f32a40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:a381f92f36de52ade5b5610ef1b354713f21902b2ef32abf8f5101daf686e6b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:03305842b82a0b7963b5f3db23959e2320f5d2919c7f82f552c4e25f4c1e1206"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 687,
                    "digest": "sha256:9be0b472010808949b2762cd63a5690ef89157c3b974e9a54fee1f338881a825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:2960cd7ce65dd02904b11792e0fa2af93d72faa53226e1db400e58b6ddbf937f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 662,
                    "digest": "sha256:407b6f7b9a2fcf6cbbcdf1bd8ab2615b6bf2bce813b6dc899ec83a581311503c"
                }
            ]
        },
        "mainline": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7034,
                "digest": "sha256:eb9704d8dff7eab36db459d7ba1b4aee125b80413b60473d915287a80a5a07f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22486039,
                    "digest": "sha256:f17d81b4b692f7e0d6c1176c86b81d9f2cb5ac5349703adca51c61debcfe413c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22183750,
                    "digest": "sha256:d5c237920c394bda8bf1ef31b00bbde458f6978c159303e00d712a95c3f32a40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:a381f92f36de52ade5b5610ef1b354713f21902b2ef32abf8f5101daf686e6b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:03305842b82a0b7963b5f3db23959e2320f5d2919c7f82f552c4e25f4c1e1206"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 687,
                    "digest": "sha256:9be0b472010808949b2762cd63a5690ef89157c3b974e9a54fee1f338881a825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:2960cd7ce65dd02904b11792e0fa2af93d72faa53226e1db400e58b6ddbf937f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 662,
                    "digest": "sha256:407b6f7b9a2fcf6cbbcdf1bd8ab2615b6bf2bce813b6dc899ec83a581311503c"
                }
            ]
        },
        "mainline-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9591,
                "digest": "sha256:0c79f858a3a82f5830adc74974110f506b20c85bb5d1d08674364a529a34bb7c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2206931,
                    "digest": "sha256:4fe2ade4980c2dda4fc95858ebb981489baec8c1e4bd282ab1c3560be8ff9bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5529532,
                    "digest": "sha256:c3f09dfaf47d2b8a43bf07cec8fee65d1bfc7dac8728559296695fd12ca6e36a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:83283d0e9bb9c36bc3eefb4875714de28d13f7bff8ea5b031a6a12775ce72574"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 625,
                    "digest": "sha256:e2e530da95386bd27ba290f0b8f0a8ef0aa9c89c0bbfad9bc9e570185c86f79b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:ed39413434d5575895157f6ee821353df57cd3716319d515b988b3d54815ca58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:d97827148f5e482917346696d3ef05f4073f86914005593ca9701854a73b6564"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 685,
                    "digest": "sha256:58587aa34fede1ccc7b0476f0fb85af1ecfc4c32f76b89a268d3d90522d7679d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:31b13aae6aaa112b3e0d9d9fd7cdcefac40f327b785ca04574e288f2c2fba8c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 549,
                    "digest": "sha256:a48ad0975e2140f792ec30d65d1a0f91c64479999eaba96b7aa835f6503d8ec0"
                }
            ]
        },
        "stable": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7017,
                "digest": "sha256:4786608c56595137da6ae0ab6365c550c40ab1204394492fc57ac2197a6fb842"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22486039,
                    "digest": "sha256:f17d81b4b692f7e0d6c1176c86b81d9f2cb5ac5349703adca51c61debcfe413c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22110537,
                    "digest": "sha256:3df1ab0a17501475a551e081246db28a2a604cc986377d76506302100c9ce2ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:576b56a453df3802f5c6f0f83da37810e7bbf789bce9d9a15dbcd6ae16e69f80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:3bf3028c70d5449085795131e02d67671ab6f4416411541f81ebe74652d2cbf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 690,
                    "digest": "sha256:6fa76647bcd6bc0e22b64e27038a7fa11508e46d62aa387364968deb5bde6962"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 530,
                    "digest": "sha256:ef299a0b023ced556f5e7138ae5b022a8a58be9eaeea394ef4b2e440846d0680"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 663,
                    "digest": "sha256:22753d429c6a6f57d7ae7cb940e2e87004f57f4a6d37263668c2a301f5371cbb"
                }
            ]
        },
        "stable-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9591,
                "digest": "sha256:f2e4f3ad581a1bcc24859660b18cf39c7a102527e2581562d72d2bb54a95eea0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2107175,
                    "digest": "sha256:c67f3896b22c1378881cbbb9c9d1edfe881fd07f713371835ef46d93c649684d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5454352,
                    "digest": "sha256:428de5b8d58a2547bec1c51d249f7c99dd0eadc454a44205def2e5e826992896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488,
                    "digest": "sha256:7efd417f3e288119f4aea8cf4b4f804ffecef91559fe683ceada620a09bf9407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 626,
                    "digest": "sha256:61a56b170416bea473afcb041812027f39024d5e890e5874c971e32380d9f32b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196,
                    "digest": "sha256:7a3ebe8302e76e057ab2785f216bc40d7f2e8e0203344f2f32afa2b5cd41478c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145,
                    "digest": "sha256:0a968c399bdba52615d62ac51ce57e8876da232a888aea04d2c456db2f706220"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 685,
                    "digest": "sha256:4d9169c35a107cc307fa045842dae3873cd650a5107ba0014fa90850b0b33703"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:97acc99cff12cffeef993d6ca27dd25878b358efb09605ecb0a925d735b2c223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 546,
                    "digest": "sha256:8aeeb22739bfc338673840a8182bb5c934e7ab25937640c40e3fead4cb69c80e"
                }
            ]
        }
    },
    "tags": [
        "alpine",
        "latest",
        "mainline",
        "mainline-alpine",
        "stable",
        "stable-alpine"
    ],
    "configs": {
        "alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8bc6f712e45afa722da677f4c68d4867ddecf6285bca3b93d149381753dd5b0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "65a5b43e16d3483adb298616a913017a978be2721c1cd45a5d6b4211762144cf",
            "container_config": {
                "Hostname": "65a5b43e16d3",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8bc6f712e45afa722da677f4c68d4867ddecf6285bca3b93d149381753dd5b0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:56:39.246031892Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-25T17:22:12.727145375Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:20:44.006834517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:38.990734771Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg1 \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-10-02T19:21:39.286068042Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-10-02T19:21:39.561858668Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-10-02T19:21:39.754145566Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:39.950488886Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:40.138428551Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:30.794958468Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:56:32.830701296Z",
                    "created_by": "/bin/sh -c chgrp -R root /var/cache/nginx"
                },
                {
                    "created": "2018-11-02T11:56:34.710505781Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:56:35.105581389Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:37.060678113Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:56:38.921034422Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:56:39.246031892Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:39e8483b9882aa8e95fb00c14e1c5dbdf32e836af4aff4bf862608e0a35bc914",
                    "sha256:431a5c7929dd5848b9734d84d5cc5be237dd84e9e5ab1cb84ad6975bdc171c0c",
                    "sha256:a83dbde6ba05e8112bd2732375ffbd350d9872d9c9e7e088ba5127118cd6d99e",
                    "sha256:ec5f411bed16c2f5289da8aead6c2bb5dc589bde9dafe41852076356fdc49898",
                    "sha256:4361a32f591a7f26e6fafebf8392569932c9f15d298875ad58546aa25627a859",
                    "sha256:fb2ce809b17230d1662fe75a7ebea68486dece330520170514b001d35b909201",
                    "sha256:94c5163f102abef541f70f261946c1722ff007d964be80ce39e670758b426787",
                    "sha256:048e2c812b27ebd1a56e63a664a2c68d3daaa06b417454182384ab04947eb8d3"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5-1~stretch",
                    "NJS_VERSION=1.15.5.0.2.4-1~stretch"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d52d4c9323ace89b09f29558df99e42b16c9ff2d4cd45fa574dc8ba1898e80b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "33e7946d4ec65abebbb123cd11eec10f04fe55032f8060f44b82eb03f7fcdf0c",
            "container_config": {
                "Hostname": "33e7946d4ec6",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5-1~stretch",
                    "NJS_VERSION=1.15.5.0.2.4-1~stretch"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d52d4c9323ace89b09f29558df99e42b16c9ff2d4cd45fa574dc8ba1898e80b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:59:10.058151494Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-10-15T23:24:48.687158423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8f26d117bc4a9289b7cd7447ca36e1a70b11701c63d949ef35ff9c16e190e50 in / "
                },
                {
                    "created": "2018-10-15T23:24:48.958320811Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.147455623Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.390261689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.15.5-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.598905992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=1.15.5.0.2.4-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:53.556966075Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\" \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION} \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION} \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386) \t\t\techo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*) \t\t\techo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp -d)\" \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&& ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&& ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package: ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
                },
                {
                    "created": "2018-10-16T06:07:54.255081832Z",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-10-16T06:07:54.455825198Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:54.655491833Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:54.87940824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:59:03.273143118Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:59:05.128427961Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:59:05.535710014Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:59:07.629734699Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:59:09.673762492Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:59:10.058151494Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:237472299760d6726d376385edd9e79c310fe91d794bc9870d038417d448c2d5",
                    "sha256:bc5b41ec0cfa1171299c2b433f23caf3ca07ee275dfd187858882caad6723dd9",
                    "sha256:86df2a1b653b072715d7e0f712ef3204341a241258cf33960f650df2b904dd44",
                    "sha256:87d7a2f14c413c2f7083596cb8a07aff9106426d5db02b9d37b6fc31f9be1869",
                    "sha256:913280087b5f9810edfb551bc223225b4ff64ea77799100df38b5a02573da2b9",
                    "sha256:3f4038659c21e9a37a4f58096d61e0e3cc122d9f784459c4cb1c02a0bc7625d4",
                    "sha256:43b13385a964d38b5492fdd835fd858c933e20fac3f60431f8ae9db9b1ac5118"
                ]
            }
        },
        "mainline": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5-1~stretch",
                    "NJS_VERSION=1.15.5.0.2.4-1~stretch"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:82dec6a15a0beb8121d78a8b2f123863ff283137ca20c35d51c09423d5641d37",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "d0d17a0446da9a6d8cb172e0e985337d4b1b0289fe582a4729401ea9982e3d00",
            "container_config": {
                "Hostname": "d0d17a0446da",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5-1~stretch",
                    "NJS_VERSION=1.15.5.0.2.4-1~stretch"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:82dec6a15a0beb8121d78a8b2f123863ff283137ca20c35d51c09423d5641d37",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:59:10.002119342Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-10-15T23:24:48.687158423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8f26d117bc4a9289b7cd7447ca36e1a70b11701c63d949ef35ff9c16e190e50 in / "
                },
                {
                    "created": "2018-10-15T23:24:48.958320811Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.147455623Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.390261689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.15.5-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.598905992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=1.15.5.0.2.4-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:53.556966075Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\" \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION} \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION} \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386) \t\t\techo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*) \t\t\techo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp -d)\" \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&& ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&& ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package: ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
                },
                {
                    "created": "2018-10-16T06:07:54.255081832Z",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-10-16T06:07:54.455825198Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:54.655491833Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:54.87940824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:59:03.204289114Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:59:05.327110765Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:59:05.667266196Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:59:07.669579988Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:59:09.635036592Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:59:10.002119342Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:237472299760d6726d376385edd9e79c310fe91d794bc9870d038417d448c2d5",
                    "sha256:bc5b41ec0cfa1171299c2b433f23caf3ca07ee275dfd187858882caad6723dd9",
                    "sha256:86df2a1b653b072715d7e0f712ef3204341a241258cf33960f650df2b904dd44",
                    "sha256:87d7a2f14c413c2f7083596cb8a07aff9106426d5db02b9d37b6fc31f9be1869",
                    "sha256:913280087b5f9810edfb551bc223225b4ff64ea77799100df38b5a02573da2b9",
                    "sha256:3f4038659c21e9a37a4f58096d61e0e3cc122d9f784459c4cb1c02a0bc7625d4",
                    "sha256:43b13385a964d38b5492fdd835fd858c933e20fac3f60431f8ae9db9b1ac5118"
                ]
            }
        },
        "mainline-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:291ad6890364f64beb683abfd74fcb61dfc599c3f49674a5e5867b60529fd8c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "a15fbff10447d5f5a1d39d4910c077fb24f005832a903f27fec3c0eb2fa764b7",
            "container_config": {
                "Hostname": "a15fbff10447",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.15.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:291ad6890364f64beb683abfd74fcb61dfc599c3f49674a5e5867b60529fd8c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:56:39.81300521Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-25T17:22:12.727145375Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:20:44.006834517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:38.990734771Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg1 \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-10-02T19:21:39.286068042Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-10-02T19:21:39.561858668Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-10-02T19:21:39.754145566Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:39.950488886Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T19:21:40.138428551Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:31.437281054Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:56:33.361189906Z",
                    "created_by": "/bin/sh -c chgrp -R root /var/cache/nginx"
                },
                {
                    "created": "2018-11-02T11:56:35.34212555Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:56:35.666723588Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:37.728179834Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:56:39.510220978Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:56:39.81300521Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:39e8483b9882aa8e95fb00c14e1c5dbdf32e836af4aff4bf862608e0a35bc914",
                    "sha256:431a5c7929dd5848b9734d84d5cc5be237dd84e9e5ab1cb84ad6975bdc171c0c",
                    "sha256:a83dbde6ba05e8112bd2732375ffbd350d9872d9c9e7e088ba5127118cd6d99e",
                    "sha256:ec5f411bed16c2f5289da8aead6c2bb5dc589bde9dafe41852076356fdc49898",
                    "sha256:4361a32f591a7f26e6fafebf8392569932c9f15d298875ad58546aa25627a859",
                    "sha256:91b5482b5ea992dc82fe302374773662ee350b495306da1cc5d8e9904b78e682",
                    "sha256:94c5163f102abef541f70f261946c1722ff007d964be80ce39e670758b426787",
                    "sha256:048e2c812b27ebd1a56e63a664a2c68d3daaa06b417454182384ab04947eb8d3"
                ]
            }
        },
        "stable": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.14.0-1~stretch",
                    "NJS_VERSION=1.14.0.0.2.0-1~stretch"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c9c663a766fa5c3725129839b6c4c8d7845113739fba36fd7b56b24b44f11f2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "1c56c22da817925e32e06652cb057de3eb8cdb52c87dd13f429c40e2679d7d7e",
            "container_config": {
                "Hostname": "1c56c22da817",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.14.0-1~stretch",
                    "NJS_VERSION=1.14.0.0.2.0-1~stretch"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c9c663a766fa5c3725129839b6c4c8d7845113739fba36fd7b56b24b44f11f2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:56:55.016489984Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-10-15T23:24:48.687158423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f8f26d117bc4a9289b7cd7447ca36e1a70b11701c63d949ef35ff9c16e190e50 in / "
                },
                {
                    "created": "2018-10-15T23:24:48.958320811Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:07:26.147455623Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:09:05.249498501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.14.0-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:09:05.547724565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=1.14.0.0.2.0-1~stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:09:37.656912184Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\" \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION} \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION} \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386) \t\t\techo \"deb https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*) \t\t\techo \"deb-src https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp -d)\" \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&& ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&& ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package: ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
                },
                {
                    "created": "2018-10-16T06:09:38.362993791Z",
                    "created_by": "/bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-10-16T06:09:38.570623335Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:09:38.778762768Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T06:09:38.970435285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:48.575733832Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:56:50.585821999Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:56:50.885579105Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:52.837732368Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:56:54.706402838Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:56:55.016489984Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:237472299760d6726d376385edd9e79c310fe91d794bc9870d038417d448c2d5",
                    "sha256:f4a5f8f59caa886d9cccbe5b1382917db9ec57693ebaa9c307a616ceaef123ed",
                    "sha256:19c605f267f4b1571a3057e28ffb148f1efde306690f950ce398b77230046ba9",
                    "sha256:8bb40dfefde0fcc350dd09d707c6d959eb77e02cf677dac9a553c83f3e98b836",
                    "sha256:d3491c2ebf683c34343583d3f3b47744d37a2696fec6e20038a4304615a587e4",
                    "sha256:4a731b1b5dd72528dab895c5263ba9a94f3f0d238c3f2959e2e0ce942a7625f8",
                    "sha256:3782bc48b231d586f3a6fc8c5b92bad6ea4f9e3c446e17e4f2e8af72c2a56caa"
                ]
            }
        },
        "stable-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.14.0"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:df04b19d04e46460a9cd08594e3d671deb7702d719bc79190618e37708081db7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container": "fa6df60460cdfa71459b2a902ca89b263295bf8ae1564824c17306b4fe9930e8",
            "container_config": {
                "Hostname": "fa6df60460cd",
                "Domainname": "",
                "User": "nginx",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {},
                    "8081/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.14.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "USER nginx"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:df04b19d04e46460a9cd08594e3d671deb7702d719bc79190618e37708081db7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2018-11-02T11:56:45.327946914Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T00:00:45.942890216Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T00:03:28.758656727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T00:04:32.61032139Z",
                    "created_by": "/bin/sh -c GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
                },
                {
                    "created": "2018-09-12T00:04:32.956104643Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:af94db45bb7e4b8ff4e699f1ff6f41c348f9876073ad91d6e803070415f8d9ce in /etc/nginx/nginx.conf "
                },
                {
                    "created": "2018-09-12T00:04:33.339753001Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1d1ac3b9a14c94a709efa20da1c4268a931f1a234e782801ce5912fdcf53a7af in /etc/nginx/conf.d/default.conf "
                },
                {
                    "created": "2018-09-12T00:04:33.599070679Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T00:04:33.847331909Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGTERM]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T00:04:34.140263737Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:36.954564041Z",
                    "created_by": "/bin/sh -c chmod g+rwx /var/cache/nginx /var/run /var/log/nginx"
                },
                {
                    "created": "2018-11-02T11:56:38.788708653Z",
                    "created_by": "/bin/sh -c chgrp -R root /var/cache/nginx"
                },
                {
                    "created": "2018-11-02T11:56:40.780604118Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/listen\\(.*\\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf"
                },
                {
                    "created": "2018-11-02T11:56:41.158405411Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8081",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T11:56:43.007288693Z",
                    "created_by": "/bin/sh -c sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf"
                },
                {
                    "created": "2018-11-02T11:56:45.038032608Z",
                    "created_by": "/bin/sh -c addgroup nginx root"
                },
                {
                    "created": "2018-11-02T11:56:45.327946914Z",
                    "created_by": "/bin/sh -c #(nop)  USER nginx",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:95bb4e754f2d427423399d5e5f48f0d56b87d2e179bb005c36a82f1b4e307049",
                    "sha256:955e7d7f7300563bef29ea38ca743f226390879b8959d2638a60234c0c69005e",
                    "sha256:9a07ffbe3d7db6494c64945a35d460230fccc596998884a0f4b6d2503ce2cb88",
                    "sha256:4973c9c6a5532a12277b154eb2998a9a6d3280714f6200f03f51716253fc37f6",
                    "sha256:a396c792b08dd671851d093164e03507bf1e606a036b17b8d16ce48a4d4c6321",
                    "sha256:5e3d301b75ac12d9cd48f772fa0ce517bb8fddcdc7088306434c589242c6d9dd",
                    "sha256:1faad34229ce38e5b00ae1cba394db1d3fd3d2559b7c09426cda72a4c0bd088d",
                    "sha256:d4f8d37951027b9ca1f48fe18524f8a5af0cff07ff1031da283e50454e3015a6"
                ]
            }
        }
    }
}