{
    "manifests": {
        "22.03.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50889,
                "digest": "sha256:97fc8407bc474828eb6df2a296c01322ac5250fc06261992ed93f050961ed3aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28564099,
                    "digest": "sha256:08c01a0ec47e82ebe2bec112f373d160983a6d1e9e66627f66a3322bc403221b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80178761,
                    "digest": "sha256:5eedfe82c26bed8fecac4aaa7c523aa4ca798a20990be27049515b312619bf89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91165059,
                    "digest": "sha256:0bd41856d1bc57ed3949274d1a7426889a9c450b110a85be793045200830862b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182041,
                    "digest": "sha256:2514f64065e851fc5c822d7685066e9274427659f26b061afedeea2b5dde62fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2217305671,
                    "digest": "sha256:2c5671971cd1694ba669a433c537839062d715dc59c0db9bb930fe0aeb0a8fce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11541,
                    "digest": "sha256:0627d99a5c7eb670f87ef2e617f1e0dc01eda1e6e2f3f7311fa7b8bdb027d29c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:ec1508216c1812aada150132df3871cac7630c0b32b54c610664af82eb45dcb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5022,
                    "digest": "sha256:749074f382f7bb20b098c9e06e33bb6211020dffba6de8063d62ce55c13af2ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135309,
                    "digest": "sha256:a7e6794ed569654facf19afd2e5792b5f5c5585304d5fa964cfe95a0ce6eafdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40742408,
                    "digest": "sha256:4f1ad9e2a1543eb6c16a99288a8d091f3c903d67f349e60e883d0f0ebd7e516b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89186724,
                    "digest": "sha256:09cd2bfa6cba106ba07789ca29da71e983e6f70117ca8a754a465cbc5714bd33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:9da140dedb4f1445d2991b90b2ab1dca7879755d8e9aefe5b04394af49977a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 334406513,
                    "digest": "sha256:2935286a91f6321af2fd140b740d294572463b4aa28ba4e0818b008d521d2852"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181497,
                    "digest": "sha256:bbfa774d9c33ffbc0339944e425eb90f7d12180622796934ddeea59d2989c336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 559279672,
                    "digest": "sha256:d9fed1f0d6d2ef54fe59a66fbde9ea845e3ba644f037ffe87ebe47eb0461a980"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1155473,
                    "digest": "sha256:161384dfd7e2b725700f0651dc1cbefb83d685560fd6afe3e28f5b9cf082c324"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27246,
                    "digest": "sha256:fa135d42d7100d1ff35d83e264455cde6779444595cf95556ba17170625956ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 297,
                    "digest": "sha256:9f76bb74090df4decf305cfa959a1fc2ad2da14616ebcefc86ff63248c7b8396"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199361241,
                    "digest": "sha256:0d17f11b04d9fafea5198f98a12036fa4144beafa54c89d523f540bd48434e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12494722,
                    "digest": "sha256:8c7b7cbaa7a673dcb6b474be0214cc6a9696cd7870e9cd10ad03e67d2063c5d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74720593,
                    "digest": "sha256:6e1b51ea158838bb99c1d21c8c059f0820bf9840dad300a2744b780cee7a171c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17782145,
                    "digest": "sha256:9e7251bf3f27dbf932fdc86305dd219acf943c9ac7e5e12287ac76a6fd58d4d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8128,
                    "digest": "sha256:7902d9cce5a894b625d58df2f81786ecc1a62f116d42dd29120acbb696b29afb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67787558,
                    "digest": "sha256:234bb135d1bb0d976a36b1f003fbcf6590fd9e8d9abe03bb6a2b196d2ad77d78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:ae9213b589bc21776802ee63db269df9f9926960549cd58f6f152f9a5238c281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147928399,
                    "digest": "sha256:308df40bd31e818ff2b46143e40eb6bd93e7e446b4660a6885f3d40eeaf8c3b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30347871,
                    "digest": "sha256:13262b743dbf6116c583592687704cf7c4c7251bc01a760510ad65440a312569"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10210,
                    "digest": "sha256:a84140bfd422e1a616e48cdab4fcc21a49a663124b76568cdd63c5b4849a3166"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 759832421,
                    "digest": "sha256:89591a33d72763311a1e4fa88ca5da9c743bad9f2ceae42dc3ef5310ba53735a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 741896734,
                    "digest": "sha256:c3be00ff0a39c8ea9964c1ed2800927794ec9d09548c10ecf1ac0e74877aa76e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4987071,
                    "digest": "sha256:4985610e9cfd617200ecfbca704b4396df8534dd1e35d1d632f3f5e1c9bf254f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136,
                    "digest": "sha256:6d5e037e8978a5df3270b657f379efedd0fb853aa9012b612b2a3a1f2027576d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73443106,
                    "digest": "sha256:f28b179fc3376fcb75886be101d5c33d7a1100741cf2f4f5126547f9f0756fa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1646277,
                    "digest": "sha256:fa04e79595c6738b76116f720bd97dd219c7ee2dbe933c9bedec168fbbeda165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1262347483,
                    "digest": "sha256:2a574f2cf9f87bb4b34e3eb74645c9ec13f0eb52d4168c35817ba09cdef8aa42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:e8300c620a796b3d67b008f3867fbfce7c5c13f3f8186af88e3b3ca7877c3812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:bf4ace12a165ed80b8808226f59dad407853cc4a0bd79151c44d96c485e9930d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765004,
                    "digest": "sha256:c477393048cca212d4069ab885c4a613f77c228a7b097415a3ef5c417cde97d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129585,
                    "digest": "sha256:4fa3d9479be670ea8576cef3cc53ae3f3ec0d53fe425a9bb682dccac953ab81c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37030903,
                    "digest": "sha256:3b3babe57f3a796dd3b5607574f8a0c96a36d754f195c0636fcf6790ba081411"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107442,
                    "digest": "sha256:38af9591fd491839b6f06a73a56441d407a0222cc794f23c17291c503e894079"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4660553,
                    "digest": "sha256:762e791d06772b3e8e21577d4f8669f4cefeca5094a603e5b470c9b9c36a21bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29815107,
                    "digest": "sha256:d844309549f664b7ca0957aa8906570d1fe27c89feae46d153f14d81e388176d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11532207,
                    "digest": "sha256:a4d777b3c51080451b201ed39e59936355f2ee2b0e20625156f4dc769e78edf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13040,
                    "digest": "sha256:ebd2a1f5ec8e78093c4bf14ac911c32aeced9a491f06b7792881a8680ed2317a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 511,
                    "digest": "sha256:b17570b8db9c498b58637773168c494aa645fabe78ae4b13fdd4e3559924f320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96082630,
                    "digest": "sha256:da6333f7da03e8d9812cec5e3c3ee670ab40537c2663c6da17c098fc0c5bd20c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 395,
                    "digest": "sha256:686b27c92947fd4f4b0c531a9eee5fac0588a19fef8c93e090696d6e578efc4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255201459,
                    "digest": "sha256:77c27fffb30703e99d11518990c4d100ad248ca6ef2dcd4ff9bbe48e856d226c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111853921,
                    "digest": "sha256:6729a3eb35368be06aeb93b3a4db705c0fa27efe65dc1f1f84e73afa1048bcf5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28909310,
                    "digest": "sha256:cee5ec063a88c9e3e57c0e50472c96ba3ed916bdc772213dd15b740bd10cd4ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84139549,
                    "digest": "sha256:7b1b5fc71daae4668a6fad10e87f997e34974b4adf7707ceee6ec7895809b803"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6186149,
                    "digest": "sha256:e9988fd80c1cdbb1e27edbb5306fd22e3bd25e22071fc334e79c435c36b40ac2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1721961,
                    "digest": "sha256:2b62cca7930594253bda9a9be8537497042f1f974ad57098fdbe5771cd6c358c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 948311,
                    "digest": "sha256:fd3143d251280289eacd8719f3e8f23e2c0642cf671509b05accccaca8339738"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:4070dbd73a8069c350b46bd03dd7d420ac8cdee9a6738ef89539a8918b8ecfbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344574,
                    "digest": "sha256:58e462b9351caf915ba8673497a5dd483471359648fdb450b7c9fa067586bea1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 330,
                    "digest": "sha256:210148b043583e0d4ee39794804b5ff4c7cbec4f63d4cbeb2943a4083f970270"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:fa36ba54a039a8e6ebd3d5014bc5ea9721314721375742500efc8416e23fb32c"
                }
            ]
        },
        "22.07": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52305,
                "digest": "sha256:c3e6e5db96a51d8cd8d9dc154c403a6ea6826c5d9a6c970ba2f71f81daddd9b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566230,
                    "digest": "sha256:d5fd17ec1767521cf97f61568096bfc9a7cd9c2d149576a7b43930c5a97062b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108952796,
                    "digest": "sha256:06e980b25883b3eff986fe2e17f9de24192f96783825c3a210f1e87672b3eda9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116066158,
                    "digest": "sha256:d989318274553a6db0227b14cb0b105aa5b78e908c3536b27943988abeb0a6bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182115,
                    "digest": "sha256:3cc9550cd86aefaaa634438c13f5b0e6b3470903d73da26c304fe4555790371d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2208413881,
                    "digest": "sha256:c03552cc2849bb6a92fa992c96ee43eda4b7c3360efa54d0f9062502171c3afb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11548,
                    "digest": "sha256:a50cc00269e8dcc08e356d434e93ef7d2c0a2473c0ef1306648182f62a074a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:3d84b6f8180948a72d01de2a0b4eeaa4232847e4dee7047f4f0090733b9ac369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5111,
                    "digest": "sha256:4ecbefd7921a224f6fa3a8f5452c22a7e4d28d769d343b55ba0b917c8bc1ed84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135310,
                    "digest": "sha256:fffa258a7fcf0881eb186e127968f5d8161616f1c3f60b0ac805ebf696c11067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40735264,
                    "digest": "sha256:927a6e4d269aa3ca7a3956e4ee9c981e7597944c7ac7a3610c86589709555613"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89187092,
                    "digest": "sha256:c4ace063e89c78b1ffdd90ebc935d8b2c889158187566bef183609017fb4eb7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:c15f7417808e7e5eb260b5e42699fe330716e98e49de5678c27c3847c39c3adf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344020542,
                    "digest": "sha256:ab690c8f4d73d506e2babd5d64648dcd8eab393cc8155aa6de9b1d1b65c8ec4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181845,
                    "digest": "sha256:1b09cf07ddb08c20a2da9d685b56225478051417516c870d530accd812a108d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 543711110,
                    "digest": "sha256:e9d2ba4e38a58d41df8d2c20aeba899d59553f3f08ea1607f08798922fe6be50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162919,
                    "digest": "sha256:e146b957980ed1c6ca2952383f5f83637d2161900c5b7eac7272993b7071878e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228540,
                    "digest": "sha256:7ee51fbaddfebbdbee2b12820f1419159e66369e72577da1d2f9b9a77451e76d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 305979235,
                    "digest": "sha256:0e37aa477dee25de1dc4c404e7d1c7c1178e4936952fcd909f69f8cf83c14ccb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12500019,
                    "digest": "sha256:64c360f034e25f89ac5557ad29b24faab0bbc4de921a251e000e8668bade4f91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75045763,
                    "digest": "sha256:c5d4ad524b2f3739a87e27ebad7dde82ef7bcb5e40524941fb371b1fabb82be6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18097068,
                    "digest": "sha256:0c8ab9153e0b6a8f1fca2cb2de0f943c15378661ce7e3d835985677e7249a5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:aa7c55cba55041a103956fb4f2a0f0d2cc6cb538da7d07fea31ab343533b3473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68120772,
                    "digest": "sha256:5988f6065a39bfedec0f0f5f7e2a7a0d9a89b7d65876e37d0786f7640f746b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:7ceb6ed9943bc20028b7a9fce7168a59d43db561e64fcd76a0499a8e70e08048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130209907,
                    "digest": "sha256:9888ae33bccd7c009531a80c0edd980679c7e8b4f0a0856b123cd7ec11d90484"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30337562,
                    "digest": "sha256:80ba0803c815ac06deb8ce7ec28f0d13079dca74ad01255b0a23bd4ec5682611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 645750845,
                    "digest": "sha256:cb5eca4c89ad74227931dbe36407d0259e56284ba92f8c8a48dd431d8ba8945a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 316952797,
                    "digest": "sha256:8b5feddcfded9d1048e131e453b05ebca5f0903dcb8899f4659973e3a71aa979"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3176624,
                    "digest": "sha256:a17c208aadcd9e78685cd6d2f2f8de0fbdc4687fc8f1ed1b9589c27199593354"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136,
                    "digest": "sha256:1c8f104115adb51a99c9181e1e08cdccf91d7999e627b963c225e8084227e6a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68481481,
                    "digest": "sha256:9db775429ad5488ad3ab919098f08730675b13caf56d43ca4be556131cebe356"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758683,
                    "digest": "sha256:618c64051de843eb8ca8ba83deb608c52bdd11de19ed9a08c2734d6c20a168a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1550652194,
                    "digest": "sha256:b3d83c7b35db4731ac22217a2eb8ce0d76ecc498f109121c116f314ccf2cf6cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1141,
                    "digest": "sha256:ad4483ce037021a819d61861c415c457ceb9f0879c5f99a3df41c99eed4e0f5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:de894ea2e3c41f4da7d5e36761d5ae91cf7ba1da0078f7416be1db16ab1ab47c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765068,
                    "digest": "sha256:4969876c8e5456ef0adb46f04779b7770b3c92251e8e5ddeac596da6b181e7d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129834,
                    "digest": "sha256:38ac99992f9245bc69fc069bdc811f682c399963f10804df719bea02602f8bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37031054,
                    "digest": "sha256:a40c9cc1c42bc82d8f1ce16aaf7aa05feb2fddc1f6d6fcf8753ffc41dce0b1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107471,
                    "digest": "sha256:d1685070ebe02ac98b6e0805a2f3f9020594e8d1722371056fbc5dd08c102709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4662029,
                    "digest": "sha256:4827f0e8e627b3f5367a219a246b8ed84a5f72fdfb67979f7679d7f9168b69c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30344799,
                    "digest": "sha256:3364ef9b7be4201c64a24017e4d987f8875b4e031039d5e70fe9b8a2ac561a04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2355871,
                    "digest": "sha256:94174e7bf8d575301d5efe149580b23c59018a5b1dae7f14efdf7447bd18dbb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12986,
                    "digest": "sha256:0d3fddaed5f66cb46e5e54473be8a3b20277cb44fdc38ad39799fdf1ce89dd31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 511,
                    "digest": "sha256:c49f8f3af0ecf6ea911243bebde476767816565f1b2bdc56aba41be56961387a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97375041,
                    "digest": "sha256:7200f0d5811f1b09e6b16423fe1daf6820c6e75e5579c18c4c07314e5cfaa7dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12883883,
                    "digest": "sha256:fcf0f8cae7dccad83ef12d07bf3431b001b5b49882c6db250929f0aeece73eb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:85ec9d9e0ec11a940ee85425321e7bd1557c9157d95cc928a3236fdab0fdc508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58666,
                    "digest": "sha256:3403a2f4e9d68fab6311f831dace22633c217e4efc6fceb4ad280a5b935d748b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137265300,
                    "digest": "sha256:ada487d0790027337432b58d7628a5b46b76c7fe08616835ad758b172d3d1ef5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28926935,
                    "digest": "sha256:93b33a1a503274b5d5b8548070ef36324e16396c5e13dee39469583394d9956a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84156625,
                    "digest": "sha256:89de5eccdc4795f25c50c91ed9f9134121d714a2d3f2cb97933ed735a917ed08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6256868,
                    "digest": "sha256:7c7534ea69b194d3c8d859bffe8676b8f8338595edbc7ff5474fceade2fd8a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482571,
                    "digest": "sha256:6cc7d27896b3845aef425c70a5046f6d90d39c913565a72e8cc9be8d07dd6dad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15473332,
                    "digest": "sha256:0214948832c8fbac5180f99c2928fbab9d3574a84ae4b67c77d2ef20ede6aa44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 585826713,
                    "digest": "sha256:73fa1223c83906f3366d54ec60789fa716d7529b580878eb938cf763070ad4a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16684,
                    "digest": "sha256:5c762c89ade725a360026d9e6e53787bc4807047a0c656d2fa116a6fa68629e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99797,
                    "digest": "sha256:ca1ba9ca06b922c981a0743fafff8d4a1dc229366df6c4b9d622ee987cf7a283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16945,
                    "digest": "sha256:d7fafa2310181ef0cc901e9013dc422eb001ec23161ef2f828433d5ce5843312"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16669,
                    "digest": "sha256:371cd50d6fbe601a1a2e92b0cb0a49f4c3730cf2cd38f2a16528993b6ecf4420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:caa11ea8ab292a6883171e2ade4627cf8b9be5b7fdb3f2fcbeb1585ec38f5daa"
                }
            ]
        },
        "22.09": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52212,
                "digest": "sha256:3043d21ce86d444fd16d1ea61746f568e38eb7cdaefca17b19d78ce9cd9c7d31"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110227632,
                    "digest": "sha256:fd80d866e8b2ff78a68c620497903eb44081012e30e3239c61de1e2c6b748ac1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116111346,
                    "digest": "sha256:a364ca75fd6d4ad75fe074251b9ac69c7521ff74b860cdecfc2401587f09ee4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182117,
                    "digest": "sha256:3d4731d036239d51c0c1a77b6bff6e6242fe552ef601719bd1cacb8740bf698f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2138483120,
                    "digest": "sha256:53a5c2e0251f34ce84043000bfa7ea77c6baa942935d5a80580388d3e46838c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11544,
                    "digest": "sha256:b00ff40d02d99db4fce69d33e9fd0ace6bcd2292c03907826c7e38b025882da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:3036e9b94123509fbf81b52235cb6e21d5d714933dbaab6fc58e6e51b9a4dd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5107,
                    "digest": "sha256:453fdcdda78825ff232cbce7f4bd0ae25dfa3f756c2869e3169b2a120640a440"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139297,
                    "digest": "sha256:35e12ec5e515230cc02bf7040ca566e6b0e4f5e3fd32e01511bf506189fdc3e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40751482,
                    "digest": "sha256:11f61a475a23754fa279f9f84a669f19415933b841978b4868d02b91a1a43176"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89187513,
                    "digest": "sha256:24280cf31c9a111673f8394349433e7904a49ae048bacf0380374dac071e8a6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:79007799e2ed7d584e6296ffffafc3dbae96db80df886f6845664fcd3112b013"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343550579,
                    "digest": "sha256:03eb76abf1e52325e71eed4462c1391c1cdde9dd1b75bd78add84242a520939d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30182751,
                    "digest": "sha256:b35cd2ffed7fd0b2651f07fb5e78fd89dc16ffb01211cba25973a07a85a4c6f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564340391,
                    "digest": "sha256:cad1ddbdf3295d7380e05baa7d7341ee469f8618d5270cc15e35ada1e7ae7057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1164740,
                    "digest": "sha256:a6a9a66448224f53aeef200b942c109a00e83e5cbbd92f0b51db37cad197a9f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27953,
                    "digest": "sha256:6d2159745bc6c96d107f3dfd5c19f3ac8c9897e4c0d0cb12ef08152c61dd2e21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162670,
                    "digest": "sha256:16c820b31f0cd270e76fa414d5cf142873cac77ae1cade984bf93d2d769f2bba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291433043,
                    "digest": "sha256:393dce0c06475392bff3538e2a718b6eb39f06df3995df662a2d2359265650c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12499993,
                    "digest": "sha256:54a8dbce997d6fd18be4bb597a47bebb9e909174cd6c9c7ee79556f80db4d4b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73431293,
                    "digest": "sha256:a82362f4ff019491cdf5901b08e594c8cf5f7ec396da326ef69f6daf2d243800"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19375764,
                    "digest": "sha256:06708ff71fddf98a82dcfbb1433072f68ece1ab9ce1835ce7b0223b811de7854"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8555,
                    "digest": "sha256:b0b879f3c073f0803dcccd86ba425a7f73f6470ec89c50f5a229dffbb7c6b618"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67865782,
                    "digest": "sha256:6e5d78beb27c53de33de1857df62f90f7d8472e11c345cda4b08c108f0400730"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:d71376208bab2a0c9fee381621873060bbb059df33cb8ea34825aa01c3db400d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130320955,
                    "digest": "sha256:24f514f7f50178d948fcc588e1c57792ecf51997294a76a201a000711c59dcca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37906038,
                    "digest": "sha256:d8ae32214ced1d27b3bc3b9701d19815558070b6ab3cd8a9ee3faca22e018d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10202,
                    "digest": "sha256:a03f96c08202d41e21bd54e6784d509a1c698f68d1acb41774b7439e752aaeb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 656375531,
                    "digest": "sha256:3cf5f2a145cd382cff685ad13eaffcff2d8166ac73b54a0d9863fc813c55d78f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 318432439,
                    "digest": "sha256:e2b13828337572dae6bf8d91905282d62e4d30d47c08abcfc2c939223620a3b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190137,
                    "digest": "sha256:4bd4ec3d41eaa042721fd9b7f0856843c1c8db494116006360be8ce8ede7fcbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:d60e7de2d0021c19e7dd3fe8be4f2a937e9b64f70109fe851553a22cfddc2e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73273311,
                    "digest": "sha256:70e9ae99b5b525d595ff996020736c8b2688d9781268586c85f5ff51acbb3850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758770,
                    "digest": "sha256:6613fbf79c8d77cfc192b15ad4df627ef3c51424cfd46d80977b504a5d3f7d18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1687448303,
                    "digest": "sha256:4f6e69da8c380f0c9e4f49d5c0543261d856937b5bc341c6f0aa3d41a2ec51de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:97202eeae640443034043bb6bbec38b6c5ec19bc965695c75b0d09e5f25f23cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:05ec51fac3bfb07919e0b1bd5f7a04543d2bd3c69497aa8afcafbbfaef922af1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765055,
                    "digest": "sha256:7a750e00ea5672ff014852128c64f0237917143f3736fc69775e8f4642829c68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129779,
                    "digest": "sha256:78bff220edd355dabaee9f3a0fbe1412ce72c2288be63425ec83c0a2a3c18d77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036018,
                    "digest": "sha256:97c451224901439ff0aa97eb2f8613ad81f936dc6a262f2fe585e2f236fd9fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1153057,
                    "digest": "sha256:9794a42b9979e72e29322c08c8a20a8700974e1593dbd1fc2c35f0b40c2128d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4662096,
                    "digest": "sha256:39764506fa0c86d96ba8fb8e8087176670f6465b487669ced681f5258d6ac56b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37646748,
                    "digest": "sha256:760cc94414cdb5930b96457ae6f1168f2c131f988f5f7f27aef7133663fa3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2588089,
                    "digest": "sha256:d16a8be704b0785e76e6afbb2e4a346693b55b507002ad375b6f1dcc2b7b1e7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13288,
                    "digest": "sha256:3c5d01fe62d8881495ac70551eed8886c0a79f354dacb7952f7e1018f7ab0b92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:614853be683c9848e2fcb6b3dcb68de4cde2206083d8335373ed40fcb8a299ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98066981,
                    "digest": "sha256:956638d2faca2ad53638ae75088571ab2f611ffeccfc8173b04c52244716a44c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13047526,
                    "digest": "sha256:cb9dc2254f9bdfe9e6e22079a6abc3d35903645a90e436098c03074a2848316e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 876,
                    "digest": "sha256:9442e7b8430dee84a0a3fdfb20ebb9901675959c9f511abeff848151d7d37290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137504394,
                    "digest": "sha256:36f752c1302024ddbe20e6c7cc6a4f0cefa42fb55c5342102399a3de6b9e3549"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28929700,
                    "digest": "sha256:63ec878358e7f33060c63ada7c923c62292dddcd94201d36d0aff409d78c791d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94754995,
                    "digest": "sha256:147122953d4bdce7c0995cad92234e0a1e9b186e96b503df5ee7c28eb52a3493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6231482,
                    "digest": "sha256:e6da3bf12d02d4483a19bd1cd3ad4689e70efc1ea614606bbbaee5a85968baa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 490224,
                    "digest": "sha256:13075669876854e0cbba882f9507d2f5fcdc54970079e259441ab2fecf0cd067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15167947,
                    "digest": "sha256:56b7e1fd8d23f3a5996e8665561c417574ccee323577a506d6ec4a1e2ab49d93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1148258,
                    "digest": "sha256:3fe4185c3685aee8c396c0415dabb1962aa53146b874866e862440115a5f78f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 981245888,
                    "digest": "sha256:be2389b2d462a3871199cc2d51817811c07b8adc2e655c9d90df7bf948fab3f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19126,
                    "digest": "sha256:9455e6e405402457bc5c80a2d381a3e91eaef71113934f10a4e7496be35ed413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102967,
                    "digest": "sha256:fbb6ae3b065fa7ae88b4ba2ea21efa1ae1ca1eb55f5a890ab5a4668ddf251557"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19397,
                    "digest": "sha256:0e4109eeca656236238b9df2eb651ab5ce5127b81bfc3900a5dc321d6938bbdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19124,
                    "digest": "sha256:3f5ab565c29e95030725558f30d1e8de41eecfc5a5099143e78ac89465388dd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:d4d428cdcf6e5b259d5ded8ca22f5f64c604ade2b0ea88eb7b0bbf76a8f393a7"
                }
            ]
        },
        "23.05": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 54998,
                "digest": "sha256:854b0dad879dded56d7b1e1899b96180d1ce6a1a508e104c638615c2807a3ab8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112098293,
                    "digest": "sha256:61b1f751e984653e3c193315bde06cadd027d730544d5248080049a0d7084cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143011743,
                    "digest": "sha256:dd65b807c6371c7ad01ed47b27c5002bd5c617553a4658f9c24450ff99b718de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182133,
                    "digest": "sha256:04712991e3930806bdab874321f261a66205f6886759991295d7d9e41ff931dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2774747167,
                    "digest": "sha256:a0e57127409620ffbd134fed398941297a33e6ac6666f11a8112b9912fa9c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11547,
                    "digest": "sha256:03a691138ef8873ae8f244bfae84a8f425d6d970d9eb9e02025f09cf3e6ff73e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:9684ed3c71177bfaf2b3dd14a7f4f396e574be10c175a8eaafeddf71db897ca6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5100,
                    "digest": "sha256:c79b46181ee684152af9c05fbf145fd65a879155efe3656904c6782f738ce5a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139298,
                    "digest": "sha256:91b6a7918caa109af3526868ecd34dd58368c1612f97b09c87d547fc550670c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40765386,
                    "digest": "sha256:d3ed2fbe7c334026828edfa722cc573ae82bf47aa8f3796d048a4e45c0021743"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96182115,
                    "digest": "sha256:79a28dd493566ad8f77a68bdb8827f450b8e08f6e8cbc0a97fd07b0d9f3e5f59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:02148fc97997080a40525c593dd6412858d7daf2ebc3fcfd31d113f3c2ce9fff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 456462665,
                    "digest": "sha256:6471a4765a47fc71de42baa86e1da4c9c6cfbd2cd60d683175b12602ae342061"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54811754,
                    "digest": "sha256:824e6993c2a6f049af207439226b8f6cea693d6ef5f8751e52dcff31997451c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9303829,
                    "digest": "sha256:bcd2dfdccd094718505d87d069d9c0682d8d6285ba39bc5ab7b72a1281d63075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26899746,
                    "digest": "sha256:499d104c2b1eb9e3bf33835377ec125a657b5f55e42f0ea88d25a92426dff428"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337219,
                    "digest": "sha256:2105a5e6a3755dc81484fa8fe0341a2c19efe3af23e0564b6507b8b7b82b6065"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 312398538,
                    "digest": "sha256:5550e985500c192ad3032296aba24defb04ce3a4e18afb8b1c9dde4b08f9b251"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 917230495,
                    "digest": "sha256:2850b7199f2c3891cac9f36f96c03bf791f9e31ed3c6d2e717a168f7554a9061"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52420430,
                    "digest": "sha256:5a30dc6e60f7aaf9e019cc520e67cfcef58a02e9e04e276e749917bfc15576ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8442,
                    "digest": "sha256:38acfe94dbe9780e087ee1ab39408e2995af898a57035b057020cb3d8c2eb34e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67917121,
                    "digest": "sha256:e4afdb54f01075983a5668ecd5a88026c3304118a4462338d6e42d1b40ce057a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:65bc4e90123e87e336d0d4536014e59d964ffaae8cc3a16da6e13aad20d5d255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954452,
                    "digest": "sha256:120b49f1101804a473e4de8ce2d3e794fa458e5c65f3d749b7bf7b4a5b096881"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147850110,
                    "digest": "sha256:29ed91f2bc74af23b484bd5c7256a9def2ebece4afe4b7b208d053310929d70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 767333725,
                    "digest": "sha256:e175a7d4c536680a5adc4b2a151fc9fdd64529b5208ab835359e195ccd0ac532"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 449528882,
                    "digest": "sha256:06d1766c07ef0f6689b1ac5b5c3594f2a27833885996bb67f9dd00644197ae25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20972098,
                    "digest": "sha256:ede52db3297f9c3e92ed0c6160ed6db31827c0a8e8cd93275cdb84c340b2d608"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:09a8bd0521b81c29af569e067de08f690d968d1d5935d13b7e41f5e80870e1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90426918,
                    "digest": "sha256:856030010aab64cd002e6f1b47b414f54bfc32c707cf61f4c823429fea18da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11487,
                    "digest": "sha256:9f4b7d58d41b339f5b7106129aa54887218a0830f07e7524e0f4ede9e373194e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465497,
                    "digest": "sha256:7275c2240c04e9c507c7d55c3495a2c41d2fa7691c2a1fab9aebfc8b03afc3d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1778358619,
                    "digest": "sha256:3650c6aa1ac1923b4d7ecb4f8ff47946967ff43dd46ec16ff9697208497489d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:597a6c358afc5a2115173cbe119820ee422e7ddeae5f6a095bbed8019936d95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:8bb9583747a242aa775cac8a5ba0c8cde7d72ed527769c7d66004abe7e294fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765065,
                    "digest": "sha256:13e96fedcb8d1beb4ee9962bf5e5c54e34ccfbb5364d9bab591aa0d327e99169"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129869,
                    "digest": "sha256:d9ed1e887990918854a429d592561eb9abee16b6d7ffb0728bd3c0733b1e2e14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036010,
                    "digest": "sha256:66059ebf13c6cc61a4d91d44886fcbbde9f8f85cf6b6d5e92693ef12ba6256d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1235529,
                    "digest": "sha256:96c54e0e4c1a642a61932c6164f3352305cfa81848fcccf74d7552755d6940cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4746213,
                    "digest": "sha256:d04d0713d15840beb755ce096503afb3ab2ebb0b6c59fc0c12a02ff76eecf682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329244,
                    "digest": "sha256:5bdc3a280b31868241ed3e1558ef1742d97d7d42a77912134d77d3897a06cf70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14654675,
                    "digest": "sha256:d9c77bc172c0003cdbbc277c766e76b913b02798f407d9d523bc554460bb9b8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54924216,
                    "digest": "sha256:f0d07955f406a98d2a3ef5cd3cb1c559339dc6cbbbe209914ad33ad7141df159"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15706,
                    "digest": "sha256:63edc579ff7da32c44f2ecbb8cebdb8c0bc75afea5c55bfc40ca0faa1f25b971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:8abf5ec0bb1316cac46570b2bc2d49b8628ce20f17ca13f7e77b260e5fc3da6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5388884,
                    "digest": "sha256:69a34b856630f9c6b7e5ebee4adfc6c14d484006abbb32d9b37b8952f98127b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268096574,
                    "digest": "sha256:9c727ada0e020b233d0355e48adb5dde03b0e8ac54dea75b317a96f54270777d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79756,
                    "digest": "sha256:79860e8d7046b45a248e8e1c71c17e70656e7f86114338de712f14cdc73248b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115928888,
                    "digest": "sha256:2850eb76095732fc6c384e3a4e3dc400fc55a12e587239bcf90074fcf9187452"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142621285,
                    "digest": "sha256:ca92a8c57f99e80d103de9e5cd280ed40125149d35e34ea7b2becf9b5b492ce4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16235,
                    "digest": "sha256:bab90dc55597144e7fe605d749f8901833d17195aa1e078cd8dbf707d933cc58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1181471,
                    "digest": "sha256:98ab49e25c68bc612592826b00fba6d9a25f125a282774473321d46a77c64e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115928888,
                    "digest": "sha256:e941342a530ba166aa3a3cf5766fcd4829feaa70b428f12bf3cdfcc67c938bae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11969677,
                    "digest": "sha256:0fb47806484f20709d5911b6184f9b67521a8e03f2db002225f1bea4d5a27942"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16237,
                    "digest": "sha256:6bddc6b656d3a9ae4280096920257005314a2be4b01f927b4121acab3b9fd842"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16232,
                    "digest": "sha256:cd65cb982aeb8762bf886f0679f6af0e918331f8067a360f129dcb6bec795784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5529561,
                    "digest": "sha256:d1e555982316588fb31b4e82d39c64d5ce86a1385bff856a0a4c49742aaf1c72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50921425,
                    "digest": "sha256:0067e12e54fb3f2ea6367a0b66f508fc47e973c87984bfcd052b29dfed5a0740"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16239,
                    "digest": "sha256:936126ac64ec7a236e4ffb2c45115ee11b6e19d1d4ed8b7bcb2bc74d02aac997"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16234,
                    "digest": "sha256:9118f912239eece0e3209d0d24413b58fe469b9b48a1fc0a058c31c1ba725f1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101144270,
                    "digest": "sha256:0e30f0079ac8e80007e494097f68ddaaa5da3e75142714dedf21cc00066e1693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19214133,
                    "digest": "sha256:e9e87d71efe5d71183c226458bac46c8a0f60f583e0c2a293aa6d768b91dcaa8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211110845,
                    "digest": "sha256:26ab5eebb92ef39f451a6e35593d089bebf4973baedce86f250b6cf8233ba560"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229292960,
                    "digest": "sha256:3f2cf3488f44e289192f9d47b2877f10c9c09f3b1b7bcd300064c4314fd806bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18668,
                    "digest": "sha256:168ebd5bd74754ca7ff1c739a0c0144b3c4ad51e76392de0d4307e110d4bd940"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28912499,
                    "digest": "sha256:6e7b6b5dad6cae93ed6871c856ac82c98ec12245849377b3c12b09fe74ea9df3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28929722,
                    "digest": "sha256:e56a81de0ad9217068e053acb513261cdc1a04c96db0a19ccfd73e2963bad4da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94754868,
                    "digest": "sha256:786049a9b4e1e26f9912158714e85c753276006656db26e86a2c06a5d9cac27d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21122420,
                    "digest": "sha256:9b70a628d68e1e233cc5057f7c7f6c13b159bc95f6ecc795a1d7b6dfb76eab2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9114501,
                    "digest": "sha256:826d3faa550a188a8e8870f546c3ef8fc29590242db2edf64b67fcf0a1ebeddd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20876,
                    "digest": "sha256:d2cb970954949deea5d0686389809e02c41303951bfde5ce957cb0a770bcd3df"
                }
            ]
        },
        "23.08": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 57080,
                "digest": "sha256:a960a51738e03158653ff5d18dce3b96243cddcd8149739a949245cecf467892"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29533050,
                    "digest": "sha256:6b851dcae6ca1461dde247915abc5048061f34332929ca8fb37d9dc18f2e2f44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128350364,
                    "digest": "sha256:8719e9b2cc01fdc4b095eddb255ae0161f92cbc22fdd066a5360d7c31e83f73f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145512856,
                    "digest": "sha256:0c05d0c38245e1ef7babb1a68576b5f81cae853973b07d06aaa297b1324192ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15102,
                    "digest": "sha256:d948c55effc889da7891cba6a4c9bddc1c69acca6d8de0bf8af9ea3b8f93a5a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3039503253,
                    "digest": "sha256:e017cdf4a85939a9292987a620c8737d9dcc898875168241d1ae12d496a2612f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11529,
                    "digest": "sha256:b83f40e94eb6d25dcd5a4b556ca38b101f72ef2c7c7a8809299254d295f45af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181,
                    "digest": "sha256:0c76b157a3dd4d8ecb38fb475f00b8752d385210286d26569132f683cfb798c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5720,
                    "digest": "sha256:80c3573986ca9d2113a47cc1ec460a04e2d3bec83fd5a7fba72cd2e014fc9450"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139293,
                    "digest": "sha256:e317cbf4e138ea7f958db9297ee14dab9815cec0792f12c1d22d60940259492e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31347034,
                    "digest": "sha256:54c6343ba9f287165ca54c36ed2f9ff29df5ba4dfc509ef36ebedbe089fcca24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87012048,
                    "digest": "sha256:2de88a5e16d58df710cfd33927601e69ca6ccec18a342975fadaa89f1d5e41e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:858ee3f6c9803a1cd071fa2bea168b996b73e32866df5ef675f0f7c49f4dc7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 454623229,
                    "digest": "sha256:662bcb3357cb7c461b826cdff11e06c202255b9a070656931a12446e893fc909"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64449950,
                    "digest": "sha256:17dba187f13d26a13e8d7913472b64ed4996b89419ae913a97db948aba06f155"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8358239,
                    "digest": "sha256:9e0a74ee0332c125fe67d22eb83e9a563fea0e2dba2ae61a4ea02b19fd88fd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27565400,
                    "digest": "sha256:1d79cf5d7c1d944ae355b1da9e2d6b41180c2fab04f7c98a4740e128a3f69147"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12358717,
                    "digest": "sha256:297a6e079fb2b45ceef0eb8483f06fec829cc2ec66efeffb8d561e13a83aca40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:fde8394cc9aa91e4f79809ee9df6bb34c5c064ac83d2f2c545bb5ca152df4383"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497436014,
                    "digest": "sha256:4e33ad748cb4becb5f4eb5af0a949c9c50009650a8508c5e67bfa60edd9facbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 931757956,
                    "digest": "sha256:37bfb9315dc24d76a30f558cb9f45d58e8dfc5855e2bbee4773e353789e6ad4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53288553,
                    "digest": "sha256:05154722fc968ba34496c2f1c2868e9ed574cfb82b7e588fa7d92552ab539003"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8421,
                    "digest": "sha256:f916827cb9b51a7254c1050a5cda8b70fd3171532d4940d8a2a52d94d4fb1394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69150375,
                    "digest": "sha256:212b10a1c645f9071737f3cf098834f95e4f291af0c8a60cec45be7c4170e9c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:5d60b9208e580c37ae5f458e778abe75ffa2118b864eb492c50fc70169e1fd8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15078031,
                    "digest": "sha256:864ed5b53a2dc3408ebb45a40d8ae39755c90e7ca97d2db73c3ae52effea1e03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146639158,
                    "digest": "sha256:93ed8dcde8fbbbfc4d066caca50f21465806b9082a2eb6baf1c6f4aeda43de71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 815799664,
                    "digest": "sha256:a6f36aac2ad3f2f7c4dc2aa231600e721deabb5f99acb9d6b40f7d67f47c09f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17842599,
                    "digest": "sha256:c1caf56356e9d673a0413ded977b41510432ff51932c9d807831a7fb62e4e60e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83652178,
                    "digest": "sha256:bb2b3238237c7b17d36bc7d6ec1916a903a3df61fd1634545960cdfba7c21182"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293309295,
                    "digest": "sha256:e7a7b75250c71b418127ecf3e5a6feaa88959a7062bb109f8e547d28bb2189ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27101971,
                    "digest": "sha256:a81a845f3099e335a8304bc4fb32cf2d64c33d3409f3399380692b54293e31ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:5270b2f7f1e470a230b9f1af932b4ac72ef67aa3d02d5058c1e7dc8374093ebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60462709,
                    "digest": "sha256:0967e8409f813be8020c2cfdc2635fda873f7ffcf272af7aeedadc7a2fed6539"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1322122,
                    "digest": "sha256:998adac79073b0d82167383ff30723ca7c63a749ae742c930017ecea6eac02ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61711,
                    "digest": "sha256:27bcbf63d2175678089a197159d95b6750ba31f89deb7fabd6098a5fbcab1a37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1853146051,
                    "digest": "sha256:ae8fb89a6a57890d4ac959ff7203258201bfd682ff72b982facbf94e4c7353a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1121,
                    "digest": "sha256:15cf804d2c1ca4e4c967eee8ef1c9bfca668ae698c489fa070d6e6da1a921508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1025,
                    "digest": "sha256:12660d5ca4451c1dea14e2cfe2e91140fc732fc3d81fbc9358499283e9729389"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764859,
                    "digest": "sha256:3b7a4fcd3ba5cb67c5a07f5a6530f2ae5dd3a007b1d56396902bc75609e05811"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128416,
                    "digest": "sha256:438e6e236632ccc883b2414df74175026ec6690463ac7bcf3a2b727013311732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033404,
                    "digest": "sha256:a3d5e204aa86f833908ac04d6e2d783d9352cb9ef069e19167f130cf873d5a68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1566976,
                    "digest": "sha256:e4d6369088eedf718bce5a35b21996cb29c982c2620e9e1d397162f95cd1078b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3658300,
                    "digest": "sha256:f8dc86a7048acce52210a7bfba04c746d2e2fac1e70074e3f307972291931280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56687835,
                    "digest": "sha256:8a84aa6273d98bce8598f0770a527cf7c7abe14bfd928308d2b8b343acb9d3c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14814901,
                    "digest": "sha256:ecabb7348d02916189c8c9987ba19540ef0f5112b0b22c1c633716144551258c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172140844,
                    "digest": "sha256:32f66a2d3640102c6d37720638ecc6712543eb79d45f0f06e3560cf997412886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14684,
                    "digest": "sha256:f9168afca1721bb2304a2ffca07273123982fc4dc0ac30d5085bf8cedf347920"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 504,
                    "digest": "sha256:581656619a920f1d657a3a6800583b16061293ef5fe1c6f026ed636016ee5787"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5244755,
                    "digest": "sha256:6c285d03eb519b63bc1738cb700bd4df250fff3704942ec1f8d5a42f64420ad8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113622252,
                    "digest": "sha256:97346e87b9a96f18a98395ebe98c0f32668782eb9bd477d48703848bae200775"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9198,
                    "digest": "sha256:cd4f01db4d0556f603651bd9b4dd81104722e5f94ae6e52f254941b306855b7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31486,
                    "digest": "sha256:fe8eba9fba6008f5555f4e300e0bba95cd40886c99d9aa96208737ae6f38205e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83697534,
                    "digest": "sha256:8748c6b648aa33896bd1903273dd6cefcd829bcd7c5aaa4008d96165c380fe79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 763626700,
                    "digest": "sha256:e067ff91b9a9f76138a92cd9a9f89c904cb108acacd5bc44e4ebcb939fe90a2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159464824,
                    "digest": "sha256:efd0c059bf84d475e6c9ae4c0d3c417e8c2bd0d8c14ab3b0f4bc720509f60285"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194765733,
                    "digest": "sha256:3693e40e39e53e1d2c5f6136e91c84f6b86f4760bd41d7b52f9ebbc9da97e433"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:5719b3dbb31135dfd0e0b0537bd36da2037639bd3d9fd832d777e2286b68e3f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1201254,
                    "digest": "sha256:7c36966f8b6240fc81f19f522557f4da23199ecf279022762e8f859f175be317"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159464812,
                    "digest": "sha256:8dc974128f0d9bfd60274497ce8209e1b9d48958e8dc9ca9865dc4bf03543213"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528201413,
                    "digest": "sha256:8780a9178812eed2e58fbc8307b1d0f8e1d7b851c703ba23fda41af800a849d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:88f3413ce15f8613ec1430633bbb567d47e310639e2585d950b36d0e4dbe93ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3723470,
                    "digest": "sha256:7f7bc623ad1914575032f941e1df0deaa3e103259bc525c3c4202aa22577f0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58285815,
                    "digest": "sha256:60c6c6edb33fea26714c843b92ee2962ecb297d0345d285ea85ef208d1030c79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60414024,
                    "digest": "sha256:380ac6dbdc2a74d9daaab69ffe3498b64952fe96daa416697046ba4a409b7a79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104,
                    "digest": "sha256:1622937344e61f5ed1ff0448483e83a784d10d179d5dd7f330f77590344f5735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:49978c69792c1692be4214857360810b52b31ba045b41cdeb68cda05f066072a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6940261,
                    "digest": "sha256:628dee4c5e74e92b38f4a7a8a81303d2c3aea1abab9508b136686d31c5b16d9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160411769,
                    "digest": "sha256:d348abe48452846c66afcf07bc2047b1df19494b3af30045084daf44446201b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28912500,
                    "digest": "sha256:dfade9323992b8156633b71d23f981d5f83f74f9ae4519b87412a43a292eb271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28909310,
                    "digest": "sha256:97b9508e5def20220fcb1f490de511bdfb6abe81cd608eeb1c54e7a2eff6efd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94744764,
                    "digest": "sha256:9bff0fd9f71df7d53c2de2182d0913be0e8c85aee49cb0356f66089d04de8d06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21124746,
                    "digest": "sha256:d3b76e5298c8d9589b0e0bed75bc831d50017f002449e278c693befd366ef9a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8719904,
                    "digest": "sha256:4df4f75f1fef94219e45630068715e1a8fd4c6d396f255c149901aa48b4cd19d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 210989550,
                    "digest": "sha256:eb2e9021c93e58292670e525bade9fd1d7f6a74801536d3c9ab7e3e0196e2b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161548743,
                    "digest": "sha256:8f5159876e688e6a6310f13015f6deb3e17aaf04de12bec2264e1dd1e1a1d7e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101,
                    "digest": "sha256:fa6f88dcda7807d1cb7075166259861c8966fc037dcaf175839f159866578e82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231377,
                    "digest": "sha256:b24729731ce2b6d33a0c12d2d1c8f65fd7ba8434bf0c7d36b4963182b1d5ec14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20771,
                    "digest": "sha256:d6b8176b12d385357cd6f5169a8603840cfdede94962afa902aea2c7c82cf2d3"
                }
            ]
        },
        "23.09": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 60998,
                "digest": "sha256:2540553484a3109e5c7f34df7e3b0c422dcf7903a516e7a255ad0b6f921d860d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29533422,
                    "digest": "sha256:3153aa388d026c26a2235e1ed0163e350e451f41a8a313e1804d7e1afb857ab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128730015,
                    "digest": "sha256:0ec682bf99715a9f88631226f3749e2271b8b9f254528ef61f65ed829984821c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145512870,
                    "digest": "sha256:fc352d4365162454deabd1191f9720efaddcad1032583dfe006cc8e1baeb1212"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15105,
                    "digest": "sha256:7ff23bf3e430ac5473a6f569f9d55e3237836f9a35983d51a13c51de281b2048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3044397942,
                    "digest": "sha256:d712aa2b15a1659d3104a2f1a9994e7c4ab4907d94bcb09776325b62d7e25ef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11531,
                    "digest": "sha256:aa26fd3db842eba1c08e73e03cbc0135a00701e73990bf87fa3e07a5dad76134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:feb985f52580b629a9247f7fed7790aa9f8050b727b333988f74a7362e2429ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:825d7dbedf983398777d1abdc8dcfd968b78a91c6a818566ae2a722bbc492341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:2d073644ef459edf2d180de58dd27af118bb43c84fe8ca1bdf4b3eecb8586826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31347063,
                    "digest": "sha256:ff1ec9a981578ac2ea8046d433820f94d4f1085a1a8090a9e9c89b7cf1e607d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87011962,
                    "digest": "sha256:3afe3e7ea5d1a35a8a48443831c4727f52c7c358c5cc0f6dcbb5ca7d6a8feef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:4c86910bd2d25d75cf475235f77e92347a562884c745ff44430c8163dc4bcc80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 454623240,
                    "digest": "sha256:669f793ef83e095b882e6488899c5ae4dda4ce27d2bd957794fe7c5e55d5a785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64449022,
                    "digest": "sha256:6729aa7d46a112de53e21575334950a1588c8497891998f6f419b7b018bc21c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8358266,
                    "digest": "sha256:b686227ee22425ce3fa8686f6561cae79b8ddaf011178ee544fcba6cbe992a91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23336070,
                    "digest": "sha256:f5266f3438c125bdeba5331ea1e340d0863f2dae55098e760b92d69d37e39725"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12720768,
                    "digest": "sha256:57ee82f24075f0b146782f5077b48fabc3a6b231855a0d3ebf26d6e26f4aac1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:6101d0feebb91d2b03dec35bc68193976a183c27c7181f190759dedc78b777e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501490821,
                    "digest": "sha256:f68765dd96fff903dc40e5de668793fe0d0f6c4f9033c6db4fce465697e61fcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 932150524,
                    "digest": "sha256:42ce6b4e762a5a9b06f56843946d69398afb26bf8d74f134a8f0d10602309cc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54410556,
                    "digest": "sha256:d773d84ef80e816d653d00dc1e9dfbf3f2bde5700912d074983dac21599f5a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8421,
                    "digest": "sha256:facdd656a395135c5c67722414b803fc329b4473dc2ea1193a8ab554433e6f41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69162589,
                    "digest": "sha256:53be5e2b47de47042f30dfd816a1262590f9306a34a4cc85f27f670262525146"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:ee18d9838264bfe06fe0429730d6065cdb154a5badd8f9c48dffbfc9e30544a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15749312,
                    "digest": "sha256:c80e2149bc3bcba470fb08b9f8818c55431cc421faae2f29a7e75ca6743a614a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146638949,
                    "digest": "sha256:4db831ae49f338f66bc37b36adea972fcb9eb1bdabcc69795eba085e589e77c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 866982716,
                    "digest": "sha256:eb78bea6bcb03bc5084360d8480e1d0645c5d6c540930672c6dd01c65c4e783a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17842634,
                    "digest": "sha256:497d05604961d528812428390d462871437174cbc25782dc1a559f36688af146"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85485914,
                    "digest": "sha256:93a7a99ef43c80124985d7fd1048751fe2a8b14ae917cbaea5b3851180d48625"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294540561,
                    "digest": "sha256:3b0abac48a58a15342d180974065b413ebf65bef63665e4e420126b4f45a29de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27104929,
                    "digest": "sha256:1190b7dc5ec302c15299d4880986612fb8e4f6170bb9459582730626926afda3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:9feb20e7f03ca328938b0bcf7f4ace2b92462d845b518c134cb45b8ba6cd5307"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170358976,
                    "digest": "sha256:d29acb4e06e5fa808b1597e07bfb84bb83a3ac898c5d56d1ca08def4fb23d2d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1322049,
                    "digest": "sha256:561cc5baa208e22342a4e9077356a979fb1f0cff1a2d5d49b0f254436b8e9d74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61713,
                    "digest": "sha256:2484848f5209acfd1c804a060b4403e390fda65de1801649dd6c377686c61d30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1601551564,
                    "digest": "sha256:edc1ca17772d112620d6c6905730b38b2a0a120097560be7429fd12320aa6c09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:381adedcc2323683c6c0e176a00f9fa8c0d5c50e60df8750fa02787a08097b4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1026,
                    "digest": "sha256:c5a64eee964a6e1a9f404ac3e3dac22b456c743c4110d097650b41bac6113508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764860,
                    "digest": "sha256:fe051ae5516ccdc332534f6cc00f893ba8edf7cc98f62bad5e393ae2c96c8763"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128393,
                    "digest": "sha256:56d8720b2c85f489d85fea44bbd7d5ab434a9e38e0765d9e21ee7e87d25267e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033381,
                    "digest": "sha256:8b289a0e627308ad17401265d3bbae8e12350d84404e5ff4275d89caba9ab31e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567244,
                    "digest": "sha256:ec6f4c6280ebc996cd7cd823273724e478ba2c44ac8a7a0a0b82b4e65039b51c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3659229,
                    "digest": "sha256:14a87d94b6f4bd359a43ed5ef4e5bc1ab21d5557ba4a5ba9b5397151ec611801"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58808875,
                    "digest": "sha256:e1ba3bbb208a089089d78e5bf19e8c3fcd5ab4e499d354a51af27b4e46d93e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14843646,
                    "digest": "sha256:024f8ff3b0f8f463230fd3beeadb994e39fd8d9ee9790ec3874548f5561799d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 179407190,
                    "digest": "sha256:5200d60cf8eb0f7e4dbc11edff454af42abd210f6aebcb0eb258cfb43ecc6831"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14546,
                    "digest": "sha256:ee3f0ae6e80fe40d68b290008e5cd183211d454f95bd4e89981be40a5a13c8de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:d4528227b5b8edb5e0de275f2db2dd88352d8d9a398c78e77235c0178f913d46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5252709,
                    "digest": "sha256:d194f29ec93e8ebb14584f814185e6bcf40919a32fbb9765be9175a98d3e183c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115836264,
                    "digest": "sha256:6591e863ebc8efe24320649f81fab1bebb2020768d2b6b5a8b40415816a6028e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15388849,
                    "digest": "sha256:afab4ddeb86b1d61ed586bab7b2361ce0001bd6905c6a67f3ef8250e065b11c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9193,
                    "digest": "sha256:9fff3af4cd024f8989df5a902d787eb8c8cb7174b226446a7878d08ff6241c9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31473,
                    "digest": "sha256:f4958a9936ec515fffa23391d8a09f1b6744df2266546da19a99eeb09a98d120"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497688,
                    "digest": "sha256:d97dfa490e28b97db76c17b434de9aedc0be16bdc6827ef7e1d568299ce6ec0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 322105086,
                    "digest": "sha256:56c53e529a5d8b470ef39e1465635fa3454045f1f5e183d9096630ec5671b83f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83184667,
                    "digest": "sha256:a25df01d931d6f7e45122892ba063df9305233764990dcde60c75f0214e4bd44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 778966566,
                    "digest": "sha256:76f80e4244627be2f11fd8e96e8c95fac8db4d9898e46589ab755d600ee88ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:c7c5e5d2f3c685cdf26012b5553f75d79829688a8f03bc89829c83c1253fe6d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194708686,
                    "digest": "sha256:67c10817493d2a99ea3558acb8a611e769b61912ff1c0d4da7a55ffc7d30e1b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:e0439e3890d2f69417ce0d5253d875591bb21d658394569a4ce3e05a928a659d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 322105063,
                    "digest": "sha256:92183a07eafc2f22e8b40560bf1552457ecff11f82afbf8102e755d61e6ec3e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 537049186,
                    "digest": "sha256:bb9a69f18d0ed4effdd42fc62e6b041df2841fc4088a935b3c94539d5ed6234e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1201608,
                    "digest": "sha256:cd8a19ce58a229689d2ec6431f16f0d3fe94eaefa4cbbd2d8b48cf9463fa0155"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97,
                    "digest": "sha256:4f9a399df44d4cc122d013aa02b6981c78979eadeb2da090071713b660bc6ed8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:acf344bbc24b5f1cbe0684f2793a1ba439249d011711ae46e75386531c5ca7e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118186679,
                    "digest": "sha256:6350d26aac29b647ebff6cdd5ac58e846a089a46c1bb7bc1e761c83e9a3d005a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61600251,
                    "digest": "sha256:fb67f5c2f00d477f7c609897aa009c914739e72c20518bc82612aa9918e02f54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102,
                    "digest": "sha256:8ac25b6bbdba5f5d972d842123de37a36b517d7a0695c298f53be26adfe3d274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:3a9c9b0918530abe6e4ad71f04a276cf6fb41848e94e831bb7deb1667cce3e3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3091237,
                    "digest": "sha256:450f38da60ec922e0aed5ef2ab20b1cf277c054d7ce32632dcced1ca20dfb121"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160410640,
                    "digest": "sha256:5cfd00551953ea3b8ba3e39a9daa9bb657affeb0467cfb2c76298bb7702765b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28912509,
                    "digest": "sha256:f0481024c077ba03885c86bf8aa5c5ac7f709d3c20915d11fb868aebb981c585"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28909310,
                    "digest": "sha256:1e7f93a29db044a10dc1dd8b0a85f06b91f2e0670df8ce752df6ebb7e9ab33e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94744765,
                    "digest": "sha256:c232af2e39b465e3f295d75628d3abfea73721b9e79ee2617dac0603e0fb2dbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21134567,
                    "digest": "sha256:effed971444ae7e23f579537af022c9a113cb31d5b33f40a1da1b4bbd2edb8a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8719283,
                    "digest": "sha256:be6147ed6c5ba93c62fd342d60f2eb4b6cf7c04840606eca7d284fb2f161ac98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 646511424,
                    "digest": "sha256:99f8a166c1db3ef9f655b707b2c1803a78ff1662e8ca622a51b0e5e2ecf253da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161558591,
                    "digest": "sha256:ede31a5f9f8021a6adab115c159c2f5b81817655a9f5fa795576d73bd1d5578c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101,
                    "digest": "sha256:b18a5775fca37af854e2b8566f8cd56cbacae4fada5e73dc8cc2f6def9236302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230356,
                    "digest": "sha256:b9ab2428eef1bc4440b3cc4b9540c2696af4dcf5eca0feba20fada56570f561d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20858,
                    "digest": "sha256:0dbdb4a7835c6a9e7a4c20d8b13275bfbdb06acd7f3315a20bf8e5686975cff5"
                }
            ]
        },
        "23.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:f49f46ca42e162746d277dd1c6af66a386ea13ec747b6588f7895ce996f56419",
                    "size": 17084,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:9ddfd3bd48141e533808ae6bd2395925cae512337f20e0a2a67a1ed573db29bc",
                    "size": 16892,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "24.01.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:496051fad784d2ebb80e845d02bb774aef9e850e12495677df352e8b670c4797",
                    "size": 16688,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1b977b10ecfbec5547fcd43cc8ebc9397611698cdaec96ac72c469a71b146354",
                    "size": 16494,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "24.01": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:496051fad784d2ebb80e845d02bb774aef9e850e12495677df352e8b670c4797",
                    "size": 16688,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:1b977b10ecfbec5547fcd43cc8ebc9397611698cdaec96ac72c469a71b146354",
                    "size": 16494,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "24.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:c0cfb808a194f0e7e324c06bea48d722733081da29d82e6d4c79eace159aa1a6",
                    "size": 16693,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "digest": "sha256:faaa7e6ec453ded38cdd422c907448c98fb4c09827cb5aeeb6f8ebbe5160569b",
                    "size": 16695,
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        }
    },
    "tags": [
        "22.03.1",
        "22.07",
        "22.09",
        "23.05",
        "23.08",
        "23.09",
        "23.11",
        "24.01.4",
        "24.01",
        "24.04",
        "sha256-0d3a8da4bf57e6dd93e64b6b039b38bfb40d8053ca7dace84cf154f021e0ef56.sig",
        "sha256-32136c43821b7eff8e840df2673c074db32ed2d3723dd21feafb840db6be82d7.sig",
        "sha256-3ae7a5230429b373182dee3d37aaa6d6a1035b80d876e2308d2ba33437c4439e.sig",
        "sha256-3cba22f5a026285939009c47d238a53258adc7acddb289181bdaf04d145e65b0.sig",
        "sha256-4d8eaee81dac1aa0d52a0481fb80c4ed47ddb15fb318f12d9f1975c35a7ef7d0.sig",
        "sha256-788fa47f82238ac372665c204c21ef5c2c3dca217fa19f0101e3d2d6e54eec0b.sig",
        "sha256-af535d2abed00472526ad688347ffff4845b56e20ad3f70c27e1f1088254c5b0.sig",
        "sha256-c7d3625f49bda6fa8eafc3102899b2b24251443f59a294c7089cde71af6e2963.sig"
    ],
    "configs": {
        "22.03.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.6.0.021",
                    "CUDA_DRIVER_VERSION=510.39.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.11.4",
                    "CUBLAS_VERSION=11.8.1.74",
                    "CUFFT_VERSION=10.7.0.55",
                    "CURAND_VERSION=10.2.9.55",
                    "CUSPARSE_VERSION=11.7.1.55",
                    "CUSOLVER_VERSION=11.3.2.55",
                    "CUTENSOR_VERSION=1.4.0.6",
                    "NPP_VERSION=11.6.0.55",
                    "NVJPEG_VERSION=11.6.0.55",
                    "CUDNN_VERSION=8.3.2.44+cuda11.5",
                    "TRT_VERSION=8.2.3.0+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.02",
                    "NSIGHT_SYSTEMS_VERSION=2021.5.2.53",
                    "NSIGHT_COMPUTE_VERSION=2022.1.0.12",
                    "DALI_VERSION=1.10.0",
                    "DALI_BUILD=3728186",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.11.0a0+17540c5",
                    "PYTORCH_VERSION=1.11.0a0+17540c5",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.02",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=32255746",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": null,
                "Image": "sha256:e70d3e68c1b404460e3c582e280e7a75703d16deee7621b9f3a5f677ac703110",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "32255746",
                    "com.nvidia.build.ref": "4d8627c88c6c27b7325b1b5c9c2e605ab4c5a646",
                    "com.nvidia.cublas.version": "11.8.1.74",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.3.2.44+cuda11.5",
                    "com.nvidia.cufft.version": "10.7.0.55",
                    "com.nvidia.curand.version": "10.2.9.55",
                    "com.nvidia.cusolver.version": "11.3.2.55",
                    "com.nvidia.cusparse.version": "11.7.1.55",
                    "com.nvidia.cutensor.version": "1.4.0.6",
                    "com.nvidia.nccl.version": "2.11.4",
                    "com.nvidia.npp.version": "11.6.0.55",
                    "com.nvidia.nsightcompute.version": "2022.1.0.12",
                    "com.nvidia.nsightsystems.version": "2021.5.2.53",
                    "com.nvidia.nvjpeg.version": "11.6.0.55",
                    "com.nvidia.pytorch.version": "1.11.0a0+17540c5",
                    "com.nvidia.tensorrt.version": "8.2.3.0+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.02",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "container": "092ed8e3c83a0c0e512fe8e7fb964a856ada6300f27d283620d3520e4ebef110",
            "container_config": {
                "Hostname": "092ed8e3c83a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.6.0.021",
                    "CUDA_DRIVER_VERSION=510.39.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.11.4",
                    "CUBLAS_VERSION=11.8.1.74",
                    "CUFFT_VERSION=10.7.0.55",
                    "CURAND_VERSION=10.2.9.55",
                    "CUSPARSE_VERSION=11.7.1.55",
                    "CUSOLVER_VERSION=11.3.2.55",
                    "CUTENSOR_VERSION=1.4.0.6",
                    "NPP_VERSION=11.6.0.55",
                    "NVJPEG_VERSION=11.6.0.55",
                    "CUDNN_VERSION=8.3.2.44+cuda11.5",
                    "TRT_VERSION=8.2.3.0+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.02",
                    "NSIGHT_SYSTEMS_VERSION=2021.5.2.53",
                    "NSIGHT_COMPUTE_VERSION=2022.1.0.12",
                    "DALI_VERSION=1.10.0",
                    "DALI_BUILD=3728186",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.11.0a0+17540c5",
                    "PYTORCH_VERSION=1.11.0a0+17540c5",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.02",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=32255746",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-cu",
                    "#(nop) WORKDIR /examples"
                ],
                "Image": "sha256:e70d3e68c1b404460e3c582e280e7a75703d16deee7621b9f3a5f677ac703110",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "32255746",
                    "com.nvidia.build.ref": "4d8627c88c6c27b7325b1b5c9c2e605ab4c5a646",
                    "com.nvidia.cublas.version": "11.8.1.74",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.3.2.44+cuda11.5",
                    "com.nvidia.cufft.version": "10.7.0.55",
                    "com.nvidia.curand.version": "10.2.9.55",
                    "com.nvidia.cusolver.version": "11.3.2.55",
                    "com.nvidia.cusparse.version": "11.7.1.55",
                    "com.nvidia.cutensor.version": "1.4.0.6",
                    "com.nvidia.nccl.version": "2.11.4",
                    "com.nvidia.npp.version": "11.6.0.55",
                    "com.nvidia.nsightcompute.version": "2022.1.0.12",
                    "com.nvidia.nsightsystems.version": "2021.5.2.53",
                    "com.nvidia.nvjpeg.version": "11.6.0.55",
                    "com.nvidia.pytorch.version": "1.11.0a0+17540c5",
                    "com.nvidia.tensorrt.version": "8.2.3.0+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.02",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "created": "2022-04-25T19:42:17.944144418Z",
            "docker_version": "19.03.14",
            "history": [
                {
                    "created": "2022-02-02T02:14:45.667699167Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ccf747d646089ed7fbb43c40c45dd43e86f0674115f856efada93c7e4a63624 in / "
                },
                {
                    "created": "2022-02-02T02:14:46.177066251Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:05.305950826Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:56:19.718384499Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:19.718384499Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:19.718384499Z",
                    "created_by": "ENV CUDA_VERSION=11.6.0.021 CUDA_DRIVER_VERSION=510.39.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:19.718384499Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.0.021 CUDA_DRIVER_VERSION=510.39.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.0.021 CUDA_DRIVER_VERSION=510.39.01 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:56:20.073498315Z",
                    "created_by": "ENV NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.02 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.6.0.021 CUDA_DRIVER_VERSION=510.39.01 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.02 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.11.4 com.nvidia.cublas.version=11.8.1.74 com.nvidia.cufft.version=10.7.0.55 com.nvidia.curand.version=10.2.9.55 com.nvidia.cusparse.version=11.7.1.55 com.nvidia.cusolver.version=11.3.2.55 com.nvidia.cutensor.version=1.4.0.6 com.nvidia.npp.version=11.6.0.55 com.nvidia.nvjpeg.version=11.6.0.55 com.nvidia.cudnn.version=8.3.2.44+cuda11.5 com.nvidia.tensorrt.version=8.2.3.0+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.02 com.nvidia.nsightsystems.version=2021.5.2.53 com.nvidia.nsightcompute.version=2022.1.0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.372182458Z",
                    "created_by": "ENV DALI_VERSION=1.10.0 DALI_BUILD=3728186 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:00.718699196Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:59:00.986813934Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.6.0.021 CUDA_DRIVER_VERSION=510.39.01 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.02 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12 DALI_VERSION=1.10.0 DALI_BUILD=3728186 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:59:00.986813934Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:01.306274182Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T18:59:01.306274182Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:01.306274182Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T18:59:01.634216602Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T19:13:44.474038462Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.345388619Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:13:47.619572441Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T19:18:16.937231851Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T19:18:16.937231851Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T19:18:16.937231851Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 PYTORCH_VERSION=1.11.0a0+17540c5 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.11.0a0+17540c5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T20:16:15.791408539Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:22:36.52282118Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T20:22:36.52282118Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-09T20:22:45.662646202Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T20:22:47.909610531Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T20:22:48.828193802Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c CONDA_VERSION=$(conda --version | grep -oE \"[0-9]+\\.[0-9]+\\.[0-9]+$\") &&     rm -r /opt/conda/pkgs/conda-${CONDA_VERSION}*/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-09T20:22:48.828193802Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:16:37.40627002Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:20:20.535679998Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:20:59.035331445Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:21:06.115599247Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:21:06.684906992Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:21:06.684906992Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:24:41.792740578Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:24:42.065581581Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:24:42.065581581Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:24:42.065581581Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:24:42.065581581Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:24:42.065581581Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:31.341612111Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:41:31.341612111Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:33.39126295Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:41:41.255899275Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T07:41:41.255899275Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:41.255899275Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:41.255899275Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:41.255899275Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T07:41:43.664101531Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T08:45:04.540174359Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T08:45:04.540174359Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T08:45:27.307871199Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T08:45:58.074339804Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T08:45:58.269736763Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--permutation_search\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:31:10.107601276Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:31:45.461514695Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/xgboost-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:31:45.461514695Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:31:45.461514695Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:32:29.548809495Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:29.872169682Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:30.058330162Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:30.333580807Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:30.782847434Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:31.866236697Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:32:31.866236697Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:33:08.897911566Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.02 PYTORCH_BUILD_VERSION=1.11.0a0+17540c5 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:33:22.700332505Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:33:22.700332505Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:33:23.94589968Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:33:23.94589968Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:33:23.94589968Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:39:12.377767857Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=32255746",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "LABEL com.nvidia.build.id=32255746",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-15T09:39:12.619894216Z",
                    "created_by": "LABEL com.nvidia.build.ref=4d8627c88c6c27b7325b1b5c9c2e605ab4c5a646",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T00:42:35.569032348Z",
                    "created_by": "/bin/bash -cu #(nop)  SHELL [/bin/bash -cu]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T00:42:57.926182436Z",
                    "created_by": "/bin/bash -cu apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2022-04-25T19:39:51.524925787Z",
                    "created_by": "/bin/bash -cu #(nop) COPY file:ffb9f6cf5d3528ac0380de82a694f31191e548284310caacc9e1c563dbde0f27 in requirements.txt "
                },
                {
                    "created": "2022-04-25T19:40:59.66633951Z",
                    "created_by": "/bin/bash -cu pip install -r requirements.txt"
                },
                {
                    "created": "2022-04-25T19:41:03.515456412Z",
                    "created_by": "/bin/bash -cu #(nop) COPY dir:f6863665ca20cd303bf762daf18d93bea26bf60ab093bcf4b9bdd32490ad0db7 in /modulus/ "
                },
                {
                    "created": "2022-04-25T19:41:07.438743638Z",
                    "created_by": "/bin/bash -cu cd /modulus && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root"
                },
                {
                    "created": "2022-04-25T19:41:16.287353168Z",
                    "created_by": "/bin/bash -cu cd /root &&     wget https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz &&     tar xvfz cmake-3.18.2-Linux-x86_64.tar.gz"
                },
                {
                    "created": "2022-04-25T19:41:56.57879791Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/pysdf/build &&     cd /modulus/external/pysdf/build &&     /root/cmake-3.18.2-Linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" &&     make -j &&     mkdir /modulus/external/lib &&     cp libsdf.so /modulus/external/lib/"
                },
                {
                    "created": "2022-04-25T19:41:57.03335808Z",
                    "created_by": "/bin/bash -cu #(nop)  ENV LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-25T19:42:07.390543639Z",
                    "created_by": "/bin/bash -cu cd /modulus/external/pysdf && python setup.py install"
                },
                {
                    "created": "2022-04-25T19:42:11.427247064Z",
                    "created_by": "/bin/bash -cu cd /modulus && python setup.py install"
                },
                {
                    "created": "2022-04-25T19:42:13.438952906Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/eggs"
                },
                {
                    "created": "2022-04-25T19:42:15.542372935Z",
                    "created_by": "/bin/bash -cu cp -r /modulus/external/pysdf/dist/pysdf-0.1-py3.8-linux-x86_64.egg /modulus/external/eggs"
                },
                {
                    "created": "2022-04-25T19:42:17.811543356Z",
                    "created_by": "/bin/bash -cu rm -rf /root/NVIDIA-OptiX-SDK-7.0.0-linux64 /root/cmake-3.18.2-Linux-x86_64 /modulus/external/pysdf  /modulus/.git*"
                },
                {
                    "created": "2022-04-25T19:42:17.944144418Z",
                    "created_by": "/bin/bash -cu #(nop) WORKDIR /examples"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                    "sha256:66152280eee72586e5c27f671305512f82b91e3a4d09c44e3417f2286bef7084",
                    "sha256:a6403136dede3b12eddbf5652c1ae39ff32e1e0a40e62c46667fc7579de541c1",
                    "sha256:4aa8eb468a2ec54f321ef1a5f1a6f52d10ffb880d9dc1d1660e80cdbeea1921f",
                    "sha256:1922454e1b905a5146455d9fd14b85ac5fe7bb3acfa74e7a8429a28f3f0544a8",
                    "sha256:331d8f086817d0d1f0ed800bfee5b483c341a82ddb0c310d332b28d344a5a67e",
                    "sha256:864a599fdcb359714c9e5ad97d4843992ff2422cac0197dc567d03a34be16060",
                    "sha256:2bd100e3575c9dae57aee0995496e6b53ac4f134ecd03d37441f942a750c45cb",
                    "sha256:e177e740a84c152264922b1a05fb83c08ecca9e3da44eab881e970a65e40fe65",
                    "sha256:1fdd715cf49ee3d5134af4a3f0730c803d7467ece7682ca7bf3dd55793b3d396",
                    "sha256:0335010f57cd4e060e0a629b425d2729f7b554fd0c4ccf0ee78378be07c84479",
                    "sha256:b829509d1746e9e7ada1b7302551e279daee21674e11ce42e544de36d4486568",
                    "sha256:0a618df2a54e05e390432dc1eb47609deee8c094f1789bd02fdf1a0dda1d9654",
                    "sha256:0140afb2b31231c7701911aaf1d19de5b7a2c6c0d73e447802ed2f610b9fd72f",
                    "sha256:ba3564209f0c6985e72aa5c8b9b1489bec0608ee1370cc71d22e66af2fc9a094",
                    "sha256:879949c097162787c3b95c43815ed4d5da961499b9334ea992bff1c79e735954",
                    "sha256:5f9387a3a4a7a72b8cb84146d58b5864a5dc48e33b0e3d832682bbe450b74b6f",
                    "sha256:5ff3d17f1dd80c03b9a918bbb649e9a548dd7103d086d466bcfa3265928b0c09",
                    "sha256:b2e9681d5fbaea4c64ae0b1f897bf1edfc73f093f01a9c26e40bc8267ff62b68",
                    "sha256:f605b2ef6a4d2c83bdaa4d8cdd28caca11e8cf410b12bdb3fd2fd8b4caa76c5f",
                    "sha256:9d5ba497c20d03310ac7c18f190e39953da211b5e6823973b464af63445addd2",
                    "sha256:7b47c0867e23e7fc15d79ba651aedf0e1e65507a19ce0e5501423f96d4f27ae1",
                    "sha256:1e3bcff4b7341518e9792c8cd24d4c9995a95b10eb5637e79cfd24a38b2ce86c",
                    "sha256:4f43f32d6f6838bd5d75794f92bdc52fa210f3fc8976449373640d84373e6640",
                    "sha256:31adb225afcc11f64a99b66cacd640e84b42b66a579cbf061524330954ffe6b6",
                    "sha256:60435e6684a8434b2bfacec3ef37a5cc9302cc1dc357c0df3bed0eef85c462c3",
                    "sha256:1357ad2cff4bb96f2417fd97f46c8dd560d6f67d673624d638e8a1340af2c783",
                    "sha256:aacfdada7c1d74554d21185026c9b15c99326af0288ccf608f783aab3247508c",
                    "sha256:568671cb9ad6ad39251d33551215239b296b069a24b77b12c780199215fa00e6",
                    "sha256:c67b921a6a50b63b504d37f1ae156b3cffe0e7661d1dc8893264f95bcdbbc46a",
                    "sha256:ad816a0bf952b97b64b451adcd61963ed00f3b0376d09e9f8987d61576d686cd",
                    "sha256:a128fe41b04f16575e45df11c2a2079611098f5d68f27f29240fe3dd1da3105e",
                    "sha256:5218530df56f28aa67b6a1f0c28e92ebbddde4a9d79c3b388d9fd05a7845cd8f",
                    "sha256:42d272c25ad6af9426fb5c49fdccc4d8c8e0d75709c08e30f04328dd6bebc3fc",
                    "sha256:102df6763bb48cdfa9c449928700b996f2dc21920450787b6d55286a38bf6e02",
                    "sha256:f4079e0c6dd052e74bcbaf94b7799d90d7e1dbb89a0ec3244a12a51621d6b6f9",
                    "sha256:e6b0e6d7d61e54aea8b4ea839e8a3139954eb82f17e782f5405bec4b948779cb",
                    "sha256:a71ba0affd8d00309954ac8c7a8394e3ce39d758c7906635e96aaa1ad57e3586",
                    "sha256:25d640114f7b98bde507065c615c8a6435af3ddc5c998316df7e97b7681dc6c9",
                    "sha256:e1ceb46168974a70b981b4a22a9e47a7454943f0da0d1d03cb6442e000a1a2ec",
                    "sha256:71f4106450256f6336d17d7cc7c3642023eaaab0c116315b2157eb8013e50811",
                    "sha256:bda638f79d07f74cb586c976644393fe878e86e007956815b8c647b93f375a22",
                    "sha256:251b336ca8a807e17c44950dfb9f0656339a098bfd9b92bef3e9d61c687dae35",
                    "sha256:420f2c9d66795e7a79df8d2d49b129cb25f5576842e2dd454add4179b0bbfb8d",
                    "sha256:f44ce63f41b69616cba51ef0b4c277812bdc21a9a2511eaf7ce15c9e2b3be63f",
                    "sha256:0cd38caead4ae475117cf64796cce17e2f0404bb1fd45365fe05c27f4be58694",
                    "sha256:b6be2b2b3a12b38b9a98efd2ec02942dfb353d53496a313560e6ad933dd13852",
                    "sha256:dfff32a7da3793fbb0a6df0dca9730fca4b768c2ec81da954c7138c4d4124945",
                    "sha256:53d160528fd4f68197fd5c3b8227a21e3ffc77d9b67a5f1e09654a9d08cfa47b",
                    "sha256:5d0549715281a31f37cb296bc4180d5da525f7f7a0bd6d1b2651317b622d50fa",
                    "sha256:48065b7a6969f62d0673571318eb9369c317866619f6a3ed28f55a5c13ea5f55",
                    "sha256:4edbde7014cf12352bb50c91685b7a4cf31c27d0c495473be1e8c484d14e2165",
                    "sha256:66d7bf8713cf00dc5d8b19c9cf05e8c2dccbf83567e00a61d3e3645b91e2ef54",
                    "sha256:4f5dd19b6912814d2df93ad26a31257839c39a90d1c634dcad1d17d3317d9a4f",
                    "sha256:339c12274defd66a6815cdf3a4dc26b3d9f0d7248b583a6723c4d86f26c8c061",
                    "sha256:3f7075d5d3d05c2bb1058cd2079f58f0c05c30bf963164c5c0754f3e746cae38",
                    "sha256:f004297ccfc254af5689bd7c4238b4adda5e2aa3c0effc4f98b709267f24640f",
                    "sha256:ae77d06b5ce9601cd9f0a03eb0db865ee871d60d4b13f82b3bde64c6702b438f",
                    "sha256:d34e8cff948ee705963d7e819c646192c5e2ca6cd37457a14a2f702585931fb1"
                ]
            }
        },
        "22.07": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.0.022",
                    "CUDA_DRIVER_VERSION=515.43.04",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.10+cuda11.6",
                    "CUBLAS_VERSION=11.10.1.25",
                    "CUFFT_VERSION=10.7.2.50",
                    "CURAND_VERSION=10.2.10.50",
                    "CUSPARSE_VERSION=11.7.3.50",
                    "CUSOLVER_VERSION=11.3.5.50",
                    "CUTENSOR_VERSION=1.5.0.3",
                    "NPP_VERSION=11.7.3.21",
                    "NVJPEG_VERSION=11.7.2.34",
                    "CUDNN_VERSION=8.4.0.27+cuda11.6",
                    "TRT_VERSION=8.2.5.1+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.05",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.3",
                    "NSIGHT_COMPUTE_VERSION=2022.2.0.13",
                    "DALI_VERSION=1.13.0",
                    "DALI_BUILD=4481327",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.05",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=37432893",
                    "POETRY_VERSION=1.1.13",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": null,
                "Image": "sha256:c90523a54cc2fe3e6c58787d48d30c5b6806a7b1ecc93f3cca6197c0d6b03ce5",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "37432893",
                    "com.nvidia.build.ref": "724a0e76963d7c0d323d6e0b6020cbd06ac72400",
                    "com.nvidia.cublas.version": "11.10.1.25",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.4.0.27+cuda11.6",
                    "com.nvidia.cufft.version": "10.7.2.50",
                    "com.nvidia.curand.version": "10.2.10.50",
                    "com.nvidia.cusolver.version": "11.3.5.50",
                    "com.nvidia.cusparse.version": "11.7.3.50",
                    "com.nvidia.cutensor.version": "1.5.0.3",
                    "com.nvidia.nccl.version": "2.12.10+cuda11.6",
                    "com.nvidia.npp.version": "11.7.3.21",
                    "com.nvidia.nsightcompute.version": "2022.2.0.13",
                    "com.nvidia.nsightsystems.version": "2022.1.3.3",
                    "com.nvidia.nvjpeg.version": "11.7.2.34",
                    "com.nvidia.pytorch.version": "1.12.0a0+8a1a93a",
                    "com.nvidia.tensorrt.version": "8.2.5.1+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.05",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "container": "e948c039d34de1290067dfc7a561123c186a565943ed3fc82c0713a10e13eff6",
            "container_config": {
                "Hostname": "e948c039d34d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.0.022",
                    "CUDA_DRIVER_VERSION=515.43.04",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.10+cuda11.6",
                    "CUBLAS_VERSION=11.10.1.25",
                    "CUFFT_VERSION=10.7.2.50",
                    "CURAND_VERSION=10.2.10.50",
                    "CUSPARSE_VERSION=11.7.3.50",
                    "CUSOLVER_VERSION=11.3.5.50",
                    "CUTENSOR_VERSION=1.5.0.3",
                    "NPP_VERSION=11.7.3.21",
                    "NVJPEG_VERSION=11.7.2.34",
                    "CUDNN_VERSION=8.4.0.27+cuda11.6",
                    "TRT_VERSION=8.2.5.1+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.05",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.3",
                    "NSIGHT_COMPUTE_VERSION=2022.2.0.13",
                    "DALI_VERSION=1.13.0",
                    "DALI_BUILD=4481327",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.05",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=37432893",
                    "POETRY_VERSION=1.1.13",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-cu",
                    "#(nop) WORKDIR /examples"
                ],
                "Image": "sha256:c90523a54cc2fe3e6c58787d48d30c5b6806a7b1ecc93f3cca6197c0d6b03ce5",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "37432893",
                    "com.nvidia.build.ref": "724a0e76963d7c0d323d6e0b6020cbd06ac72400",
                    "com.nvidia.cublas.version": "11.10.1.25",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.4.0.27+cuda11.6",
                    "com.nvidia.cufft.version": "10.7.2.50",
                    "com.nvidia.curand.version": "10.2.10.50",
                    "com.nvidia.cusolver.version": "11.3.5.50",
                    "com.nvidia.cusparse.version": "11.7.3.50",
                    "com.nvidia.cutensor.version": "1.5.0.3",
                    "com.nvidia.nccl.version": "2.12.10+cuda11.6",
                    "com.nvidia.npp.version": "11.7.3.21",
                    "com.nvidia.nsightcompute.version": "2022.2.0.13",
                    "com.nvidia.nsightsystems.version": "2022.1.3.3",
                    "com.nvidia.nvjpeg.version": "11.7.2.34",
                    "com.nvidia.pytorch.version": "1.12.0a0+8a1a93a",
                    "com.nvidia.tensorrt.version": "8.2.5.1+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.05",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "created": "2022-07-06T19:55:40.406767502Z",
            "docker_version": "19.03.14",
            "history": [
                {
                    "created": "2022-04-29T23:20:59.079732432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7009ad0ee0bbe5ed7f381792e07347e260e6896aeee0d80597808065120fa96b in / "
                },
                {
                    "created": "2022-04-29T23:20:59.430653302Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-02T16:04:50.681970565Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ENV CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ENV NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.10+cuda11.6 com.nvidia.cublas.version=11.10.1.25 com.nvidia.cufft.version=10.7.2.50 com.nvidia.curand.version=10.2.10.50 com.nvidia.cusparse.version=11.7.3.50 com.nvidia.cusolver.version=11.3.5.50 com.nvidia.cutensor.version=1.5.0.3 com.nvidia.npp.version=11.7.3.21 com.nvidia.nvjpeg.version=11.7.2.34 com.nvidia.cudnn.version=8.4.0.27+cuda11.6 com.nvidia.tensorrt.version=8.2.5.1+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.05 com.nvidia.nsightsystems.version=2022.1.3.3 com.nvidia.nsightcompute.version=2022.2.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ENV DALI_VERSION=1.13.0 DALI_BUILD=4481327 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.453988814Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.760879468Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13 DALI_VERSION=1.13.0 DALI_BUILD=4481327 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.760879468Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.475243541Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:21.073242374Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.869477081Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:22:45.010957185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:22:45.010957185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:22:45.314246756Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a PYTORCH_VERSION=1.12.0a0+8a1a93a PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.05",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.12.0a0+8a1a93a",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:21.875768185Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:21.875768185Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:26.778179967Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:28.670401922Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:28.670401922Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:38.216546313Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:07:24.72065486Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:19.351548456Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.009307353Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.740651194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.740651194Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.264508934Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/string-width        && npm install ansi-regex@^3.0.1 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/cli-table3        && npm install ansi-regex@^5.0.1 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:34.103346799Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:37.028138181Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:47.192635812Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2,<0.9.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T02:26:39.311711778Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:26:55.086027172Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:26:55.086027172Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T02:27:19.597431931Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:27:20.056498613Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:11:57.162804878Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:13:32.157672907Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:15:05.81208576Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:06.170569673Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:07.316268337Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:09.386316097Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:11.169947671Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:50.154565985Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:50.154565985Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:16:07.210402499Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:16:12.461576178Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:16:12.461576178Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.746749658Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=37432893",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "LABEL com.nvidia.build.id=37432893",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "LABEL com.nvidia.build.ref=724a0e76963d7c0d323d6e0b6020cbd06ac72400",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T19:23:03.457115329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POETRY_VERSION=1.1.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T19:23:03.544442185Z",
                    "created_by": "/bin/bash -cu #(nop)  SHELL [/bin/bash -cu]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T19:23:27.604208788Z",
                    "created_by": "/bin/bash -cu apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2022-07-05T19:23:37.024911357Z",
                    "created_by": "/bin/bash -cu pip install \"poetry==$POETRY_VERSION\""
                },
                {
                    "created": "2022-07-06T19:49:07.747436774Z",
                    "created_by": "/bin/bash -cu #(nop) COPY file:1b15c565e6da32fea3827638ac1d093d3f0d3e197ec1f33ecd0ef19074aa8df4 in ./ "
                },
                {
                    "created": "2022-07-06T19:49:09.526124553Z",
                    "created_by": "/bin/bash -cu #(nop) COPY file:8a7ee1ee3253d2dcf9eea70ff406761105d990805a6fe9b55a7b3b3ec2304728 in ./ "
                },
                {
                    "created": "2022-07-06T19:49:14.46599468Z",
                    "created_by": "/bin/bash -cu #(nop) COPY dir:5206aa4a24fefceabdf794228b65ce385381cad66ef15e5234373d81def241ab in /modulus/ "
                },
                {
                    "created": "2022-07-06T19:49:17.758828002Z",
                    "created_by": "/bin/bash -cu cd /modulus && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root"
                },
                {
                    "created": "2022-07-06T19:49:26.819118727Z",
                    "created_by": "/bin/bash -cu cd /root &&     wget https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz &&     tar xvfz cmake-3.18.2-Linux-x86_64.tar.gz"
                },
                {
                    "created": "2022-07-06T19:50:07.179809841Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/pysdf/build &&     cd /modulus/external/pysdf/build &&     /root/cmake-3.18.2-Linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" &&     make -j &&     mkdir /modulus/external/lib &&     cp libpysdf.so /modulus/external/lib/"
                },
                {
                    "created": "2022-07-06T19:50:08.536306358Z",
                    "created_by": "/bin/bash -cu #(nop)  ENV LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-06T19:50:14.865682202Z",
                    "created_by": "/bin/bash -cu cd /modulus/external/pysdf && python setup.py install"
                },
                {
                    "created": "2022-07-06T19:54:18.904258132Z",
                    "created_by": "/bin/bash -cu pip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch"
                },
                {
                    "created": "2022-07-06T19:55:32.926733771Z",
                    "created_by": "/bin/bash -cu cd /modulus && poetry config virtualenvs.create false     && poetry install --no-interaction"
                },
                {
                    "created": "2022-07-06T19:55:36.738331856Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/eggs"
                },
                {
                    "created": "2022-07-06T19:55:37.891556216Z",
                    "created_by": "/bin/bash -cu cp -r /modulus/external/pysdf/dist/pysdf-0.1-py3.8-linux-x86_64.egg /modulus/external/eggs"
                },
                {
                    "created": "2022-07-06T19:55:39.192136887Z",
                    "created_by": "/bin/bash -cu rm -rf /root/NVIDIA-OptiX-SDK-7.0.0-linux64 /root/cmake-3.18.2-Linux-x86_64 /modulus/external/pysdf  /modulus/.git*"
                },
                {
                    "created": "2022-07-06T19:55:40.312246847Z",
                    "created_by": "/bin/bash -cu rm -fv /modulus/setup.py /modulus/setup.cfg /modulus/MANIFEST.in"
                },
                {
                    "created": "2022-07-06T19:55:40.406767502Z",
                    "created_by": "/bin/bash -cu #(nop) WORKDIR /examples"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf8cedc62fb3ef98ad0dff2be56ca451dd3ea69abd0031ad3e0fe5d9f9e4dfff",
                    "sha256:979009f82e6f6944472ab9c6c57b939862c01f3de0a5b3aff4c3038768904e9c",
                    "sha256:2f18d4805d63283df4a489a49f5d7e8977c1e760ea28f01d650aed39378734fc",
                    "sha256:149d62157aac1900d0c963ed8236792d1a44e7a4c02e9c2263cc01a550e09c42",
                    "sha256:bee10d69b7dd5ab345c2e57d614704ae6fe1e4192b4b083227aa0ea17537a7d2",
                    "sha256:1034036385ff796d6513debbaee01a0b39aa1841b0948274d8df49d4e6efd874",
                    "sha256:7c230966ecdffd80165205b4328634d1596c854bdcfb2a4594e01e6b91f5ac4c",
                    "sha256:647065511ca3ec6cf8c2c8f2e4b8d465e8bd18b3419fbed4b86b87ffbbbbdccb",
                    "sha256:170bec34566b21f2582ec01189f661990d8b3b9f4cc2f3057b00affdd33e0931",
                    "sha256:8368cb2987aedad498dff5caab2d6601b49cf9e1424ed0ed99721f81493f4880",
                    "sha256:e5d229e3d42976f1a061aaad92a60c0df93603871ff22dc2740e66da4ba3c88f",
                    "sha256:8a19beacae1a52dc44d63751fe9e779e5b584e45e9f1b36840ea2144907080b5",
                    "sha256:58c0c8f4179db9caa80affa0ea90e9b96c3c9941671fc47cb2950718fc648345",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b8ee891c1c546483fd1d16d0f142fc654e832a8a75b8ff5c105168de77581b1",
                    "sha256:35a84e382741d11a8079f1382dae1b31f415a67a1eb9312bced4c5e0ba052945",
                    "sha256:95321926e07470573a27f59ecd837fdbda41173321254cb1451bc1d492211c84",
                    "sha256:49e879ccc355ddd0dbcc8486666a958bdaec84b5e7d9e097b8570df7c7104f81",
                    "sha256:69fa15adee333693885ec663494279484dabd5addfd3d8a907d5d233d8e46473",
                    "sha256:f0535f9fa71adad8190911cb3537a07c1c59415672ce4e0d48e4efd72ec3996e",
                    "sha256:87a329e8aed5ea87a09cd67fa3ce3b21f86cdbf4db7376329602b005fab877b0",
                    "sha256:f94ad05329b3f0486a26d45c155668e321248da568d90b7e867e9b3ab3a24ef1",
                    "sha256:4e6bd8acdd132438862a388ca932a04ee1755aabf3841e5126d0f50b9c8289e9",
                    "sha256:4f66b25354b0eea759f635f0d3b4ee500f522ce929f33f084b4d0b929aa6f595",
                    "sha256:59646d833c52033a0e24a3f297f4ab3c6ef2134d52c67e22ba014710c3b83e39",
                    "sha256:ab30aad1c66fcef62f26404e6c35ece848da9eb76d6e5cfac81140e9fe546e37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bfee3ec9224c5acfec6dbd8fa8b960e08e24ed6543c58ebc9f92da75cf3fbd1b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f3983a403fca1982534118a4d0027977571d7e5ed038d9dcb60fc17959ac724",
                    "sha256:5f20207b08f75ec27865ff79c4948677ca2dc19e86acb5a6cc78912f51c0ee13",
                    "sha256:60a90d02e246cf467d9384f9ece8076708e9a644467c16d05f410be264a74b2c",
                    "sha256:80dd3bd52322b95387df076f09980f64243fb55ebe9fd55b089e175e5beee935",
                    "sha256:77e471f99bea0ecb219b904ce8aed1a06a9151b200e2d89be1b7376632588418",
                    "sha256:5c0fa889e3b3506e3fa18465d3024329b377e5ee0ea82b51cb524c883b222de4",
                    "sha256:2bcabc8199021ba5817f1924ff350d134e73dd911251d8f7b3498ff1701efcbf",
                    "sha256:f649d8c4f6635395b410f86d79cb361e834fda7385ca89709e8425037dceb795",
                    "sha256:92c32bb7e0f4d4434709bc1beeaf17802bea2b53c3a83fcce98f949a7dbcbbc4",
                    "sha256:4bb38d21c9a5e42bfdc4f9576a0770037fbcca1ddaee9abb36ec87d8c66f02eb",
                    "sha256:8781623460d5f0aa56668945d07773ddf373d1dde0a94e34b0598a3601f21f71",
                    "sha256:770252d6231899fd7f4616194f2b7e61fc4ac906ba0990dee7f19efa968043ed",
                    "sha256:806a4f82008f08716b9686add46af14d965fb87c99b1e074fc884bbc620ce5ea",
                    "sha256:7f3c1f95832c68e8d1a6b137bd37cb3c4f9db63e77d724c0c93a0a01bcbf7d97",
                    "sha256:74db918f96738c951571b8a492b3dc47cb0285693ce5d5b9c200b68f41ccfa54",
                    "sha256:4f898e91ad93c0c3450fba63752c833869b31f21e1467dfe14865bbe422879d5",
                    "sha256:682c8d50284bdfc30011d3b42a5fce8a49ae1ad9f6812d823abb30eae5b8cd81",
                    "sha256:070b0b612187e8d411095ab681f67fe4136df8654522e12ec91458be1c431c64",
                    "sha256:12e52252ec19509dc64c9f66559f0c5b3a1bced3f4bcdfeec8b49f41f88c9aff",
                    "sha256:eeb6e4ef138c55991535040792f89810b44e13ca6a1fec2b07f29c876f3fe859",
                    "sha256:c8986178300db4ad2a4271fd2f04bc39e4fe22ddfbf6ac5923e7be2e9882778c",
                    "sha256:a0445e457df3c6f75464b5501d67a53dbaa0111543f8639268f725852224024f",
                    "sha256:159d198ceb3916bece78409c8512c16672e2e6f7597194bf6dd1a2eab2e9f216",
                    "sha256:808d040d8168f34bb997b5144120331b0c7d65fa66431d39783dd10247682a3e",
                    "sha256:c2f7eb6d6f231b9c6b9fc3804eec555b929f87918f90bcfcd26c220d69dd2058",
                    "sha256:1d2ffd3154b337cee2ea229fe5812a9c9a0bc912d6dabcdcaa8cd683da8410f0",
                    "sha256:9234064b381202b41cec95998a8b27dc7461a678c0de2636143656c7d4b9e9bf",
                    "sha256:f418e12f95b320033d6d4573cb709c2388687b6fc6aa1cce14e10472c9399bfb",
                    "sha256:d18da1baceb9f1f0717753f3eda59190ece765b2605d0c4d1e17f01e351be39a",
                    "sha256:a90cffda6094749819ef89765d02a50055c2c012f01148e2b37eb4d088cf42c5",
                    "sha256:b5cc53485115401a6a4fdab5cd4cfdda648ae3697ada7943f29c20d55bef58eb",
                    "sha256:a31bd3cf4797e402942625a5536b3a6649146b694be3a0f04a1b78d7dd672a4a",
                    "sha256:d33ca6ecc6a6c6c04a4f9ab4fa67b4fed8ee5cbac717ca583c88f7514416a553",
                    "sha256:5946dd000f1be32146e0f935b163da9c0aa3887ec9890b6a0ad25017fe781157"
                ]
            }
        },
        "22.09": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.1.017",
                    "CUDA_DRIVER_VERSION=515.65.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.12",
                    "CUBLAS_VERSION=11.10.3.66",
                    "CUFFT_VERSION=10.7.2.91",
                    "CURAND_VERSION=10.2.10.91",
                    "CUSPARSE_VERSION=11.7.4.91",
                    "CUSOLVER_VERSION=11.4.0.1",
                    "CUTENSOR_VERSION=1.6.0.2",
                    "NPP_VERSION=11.7.4.75",
                    "NVJPEG_VERSION=11.8.0.2",
                    "CUDNN_VERSION=8.5.0.96",
                    "TRT_VERSION=8.4.2.4+cuda11.6.2.010",
                    "TRTOSS_VERSION=22.08",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.18",
                    "NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "DALI_VERSION=1.16.0",
                    "DALI_BUILD=5322998",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.08",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "TORCH_CUDNN_V8_API_ENABLED=0",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=42105213",
                    "POETRY_VERSION=1.2",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": null,
                "Image": "sha256:a9f04aeced61455e5879213c4a6367b096033280d500c2139afe3bae8212a6ef",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "42105213",
                    "com.nvidia.build.ref": "77ddbc1eeb37f30914b0f15067f584147275477b",
                    "com.nvidia.cublas.version": "11.10.3.66",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.5.0.96",
                    "com.nvidia.cufft.version": "10.7.2.91",
                    "com.nvidia.curand.version": "10.2.10.91",
                    "com.nvidia.cusolver.version": "11.4.0.1",
                    "com.nvidia.cusparse.version": "11.7.4.91",
                    "com.nvidia.cutensor.version": "1.6.0.2",
                    "com.nvidia.nccl.version": "2.12.12",
                    "com.nvidia.npp.version": "11.7.4.75",
                    "com.nvidia.nsightcompute.version": "2022.2.1.3",
                    "com.nvidia.nsightsystems.version": "2022.1.3.18",
                    "com.nvidia.nvjpeg.version": "11.8.0.2",
                    "com.nvidia.pytorch.version": "1.13.0a0+d321be6",
                    "com.nvidia.tensorrt.version": "8.4.2.4+cuda11.6.2.010",
                    "com.nvidia.tensorrtoss.version": "22.08",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "container": "7f197d02f2f9b8b01dfa55bd12f4aaa04a585b42a37dc16721106b25835fc0d6",
            "container_config": {
                "Hostname": "7f197d02f2f9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.1.017",
                    "CUDA_DRIVER_VERSION=515.65.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.12",
                    "CUBLAS_VERSION=11.10.3.66",
                    "CUFFT_VERSION=10.7.2.91",
                    "CURAND_VERSION=10.2.10.91",
                    "CUSPARSE_VERSION=11.7.4.91",
                    "CUSOLVER_VERSION=11.4.0.1",
                    "CUTENSOR_VERSION=1.6.0.2",
                    "NPP_VERSION=11.7.4.75",
                    "NVJPEG_VERSION=11.8.0.2",
                    "CUDNN_VERSION=8.5.0.96",
                    "TRT_VERSION=8.4.2.4+cuda11.6.2.010",
                    "TRTOSS_VERSION=22.08",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.18",
                    "NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "DALI_VERSION=1.16.0",
                    "DALI_BUILD=5322998",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.08",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "TORCH_CUDNN_V8_API_ENABLED=0",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=42105213",
                    "POETRY_VERSION=1.2",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": [
                    "/bin/bash",
                    "-cu",
                    "#(nop) WORKDIR /examples"
                ],
                "Image": "sha256:a9f04aeced61455e5879213c4a6367b096033280d500c2139afe3bae8212a6ef",
                "Volumes": null,
                "WorkingDir": "/examples",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "42105213",
                    "com.nvidia.build.ref": "77ddbc1eeb37f30914b0f15067f584147275477b",
                    "com.nvidia.cublas.version": "11.10.3.66",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.5.0.96",
                    "com.nvidia.cufft.version": "10.7.2.91",
                    "com.nvidia.curand.version": "10.2.10.91",
                    "com.nvidia.cusolver.version": "11.4.0.1",
                    "com.nvidia.cusparse.version": "11.7.4.91",
                    "com.nvidia.cutensor.version": "1.6.0.2",
                    "com.nvidia.nccl.version": "2.12.12",
                    "com.nvidia.npp.version": "11.7.4.75",
                    "com.nvidia.nsightcompute.version": "2022.2.1.3",
                    "com.nvidia.nsightsystems.version": "2022.1.3.18",
                    "com.nvidia.nvjpeg.version": "11.8.0.2",
                    "com.nvidia.pytorch.version": "1.13.0a0+d321be6",
                    "com.nvidia.tensorrt.version": "8.4.2.4+cuda11.6.2.010",
                    "com.nvidia.tensorrtoss.version": "22.08",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "Shell": [
                    "/bin/bash",
                    "-cu"
                ]
            },
            "created": "2022-09-13T21:57:04.167479612Z",
            "docker_version": "20.10.18",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:21.186335149Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ENV CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ENV NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.12 com.nvidia.cublas.version=11.10.3.66 com.nvidia.cufft.version=10.7.2.91 com.nvidia.curand.version=10.2.10.91 com.nvidia.cusparse.version=11.7.4.91 com.nvidia.cusolver.version=11.4.0.1 com.nvidia.cutensor.version=1.6.0.2 com.nvidia.npp.version=11.7.4.75 com.nvidia.nvjpeg.version=11.8.0.2 com.nvidia.cudnn.version=8.5.0.96 com.nvidia.tensorrt.version=8.4.2.4+cuda11.6.2.010 com.nvidia.tensorrtoss.version=22.08 com.nvidia.nsightsystems.version=2022.1.3.18 com.nvidia.nsightcompute.version=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ENV DALI_VERSION=1.16.0 DALI_BUILD=5322998 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:15.531435331Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:15.874235571Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3 DALI_VERSION=1.16.0 DALI_BUILD=5322998 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:15.874235571Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:17.763368974Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:24:57.42158022Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:03.298551278Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:28:14.230845156Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:28:14.230845156Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:28:14.534672218Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 PYTORCH_VERSION=1.13.0a0+d321be6 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.13.0a0+d321be6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:22:43.831216048Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy==1.22.4 pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl==2020.4 mkl-include==2020.4 ; fi &&      if [[ $TARGETARCH = \"amd64\" ]] ; then export LIBRARY_PATH=/opt/conda/lib:$LIBRARY_PATH ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:43.831216048Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:22:48.343918852Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:50.216797932Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:53.030059519Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir protobuf==3.20.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:53.030059519Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:23:02.484033338Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:26:50.489996866Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:48.058294581Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:57.707882835Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:58.469269835Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:58.469269835Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.038189009Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:42:47.670285415Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:42:50.489384725Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:00.453863338Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T06:40:41.260307749Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:01.320407804Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:01.320407804Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T06:41:26.75251741Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:27.145559594Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:35:41.926183459Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:36:18.268835436Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir --ignore-installed llvmlite  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:38:08.929464037Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:09.286724609Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:10.29874269Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:11.322066459Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:13.437145508Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:53.976231797Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:53.976231797Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:39:09.810731729Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:39:12.95634325Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:39:12.95634325Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.540044086Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=42105213",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "LABEL com.nvidia.build.id=42105213",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "LABEL com.nvidia.build.ref=77ddbc1eeb37f30914b0f15067f584147275477b",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T18:23:30.911200327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POETRY_VERSION=1.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T18:23:31.015680996Z",
                    "created_by": "/bin/bash -cu #(nop)  SHELL [/bin/bash -cu]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T18:23:54.600191018Z",
                    "created_by": "/bin/bash -cu apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2022-09-12T18:24:08.070932451Z",
                    "created_by": "/bin/bash -cu pip install \"poetry==$POETRY_VERSION\""
                },
                {
                    "created": "2022-09-13T03:36:55.823867758Z",
                    "created_by": "/bin/bash -cu #(nop) COPY file:d55c2572589290ba3e298c98188c13617f504af9f1fd3879584ca154d81919ae in ./ "
                },
                {
                    "created": "2022-09-13T21:49:57.769439495Z",
                    "created_by": "/bin/bash -cu #(nop) COPY dir:5ed38d593501fc0322140f7068875e35cd3cef8faf228f7b8b47b149759c570f in /modulus/ "
                },
                {
                    "created": "2022-09-13T21:50:01.016632327Z",
                    "created_by": "/bin/bash -cu cd /modulus && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root"
                },
                {
                    "created": "2022-09-13T21:50:07.92765994Z",
                    "created_by": "/bin/bash -cu cd /root &&     wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz &&     tar xvfz cmake-3.24.1-linux-x86_64.tar.gz"
                },
                {
                    "created": "2022-09-13T21:50:40.849426314Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/pysdf/build &&     cd /modulus/external/pysdf/build &&     /root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" &&     make -j &&     mkdir /modulus/external/lib &&     cp libpysdf.so /modulus/external/lib/"
                },
                {
                    "created": "2022-09-13T21:50:41.123941274Z",
                    "created_by": "/bin/bash -cu #(nop)  ENV LD_LIBRARY_PATH=/modulus/external/lib:/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T21:50:47.553405747Z",
                    "created_by": "/bin/bash -cu cd /modulus/external/pysdf && python setup.py install"
                },
                {
                    "created": "2022-09-13T21:55:07.072157609Z",
                    "created_by": "/bin/bash -cu pip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch"
                },
                {
                    "created": "2022-09-13T21:55:50.224584307Z",
                    "created_by": "/bin/bash -cu pip install git+https://github.com/pytorch/functorch.git@8a5465a72330a2d82df577e7211d57b3cfde664e"
                },
                {
                    "created": "2022-09-13T21:56:53.886648871Z",
                    "created_by": "/bin/bash -cu cd /modulus &&      poetry config virtualenvs.create false &&      poetry install --no-interaction"
                },
                {
                    "created": "2022-09-13T21:56:58.319436058Z",
                    "created_by": "/bin/bash -cu mkdir /modulus/external/eggs"
                },
                {
                    "created": "2022-09-13T21:57:00.042920907Z",
                    "created_by": "/bin/bash -cu cp -r /modulus/external/pysdf/dist/pysdf-0.1-py3.8-linux-x86_64.egg /modulus/external/eggs"
                },
                {
                    "created": "2022-09-13T21:57:02.112130775Z",
                    "created_by": "/bin/bash -cu rm -rf /root/NVIDIA-OptiX-SDK-7.0.0-linux64 /root/cmake-3.24.1-linux-x86_64 /modulus/external/pysdf  /modulus/.git*"
                },
                {
                    "created": "2022-09-13T21:57:03.892733163Z",
                    "created_by": "/bin/bash -cu rm -fv /modulus/setup.py /modulus/setup.cfg /modulus/MANIFEST.in"
                },
                {
                    "created": "2022-09-13T21:57:04.167479612Z",
                    "created_by": "/bin/bash -cu #(nop) WORKDIR /examples"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:c5b9544e7743500701cf6a8aead7ae283a55a658d7b76aac1d8ad3bf48b1e2b6",
                    "sha256:57f574ab1503092af7b3d1f188993218c91459b2eaf966cdb133bba722b103ff",
                    "sha256:4cf9aed48cdac8ea9c94be60b1aebea60304e26d67f5d6dc8f41d791bfd0f6cb",
                    "sha256:9af2b05f2c3b7eb06f34baa4850cf264d8e8eeccf309fe1a8911a269d246dbe1",
                    "sha256:b470f3b3096aa4544b77b02d70a20a51172d68be52592aef8dab5e01f8278ee2",
                    "sha256:8fd21a588646dea1b311c4f4c8348fe8a7ccd58641d0b959540169a0d428c2a9",
                    "sha256:d1cc4baf7a9399e6dc4890deb4ea95b346011451e9371ce328fc805657554a44",
                    "sha256:ae5c80704277e9e72db51835af44d47244d0e161879dfd448be2c5a30e11c3d3",
                    "sha256:aa57b43dc9e03c2a58fc4245cfeb08698311e9ec6925a0b0ed9641a18932f706",
                    "sha256:54beb86c2dbe9e6e91790a0fa353a7cde6a5afaadb0371c28865b96b56849036",
                    "sha256:06f02804b89d4bb11540ae7f1614964799a27dd8a9219891aba203a663a08201",
                    "sha256:913f47d5362df52af57265ff5dd85f951c4e0003ca9963ace873c0ed7ff77aaf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a2f69efab07f6db4ba72d153cd7d22f9070b589a0cab4460c773dbfb1e605d98",
                    "sha256:7c848cf812b2d4e11c9fed26886d4d150a87ce7f987fb01f8103fdc1a5729800",
                    "sha256:82ca3ce3f76956c986723663873aca9e337a91b84fb785bf52097672730d8ef9",
                    "sha256:e75795dab160daf9777f255193e9fe7f1727d6108b954d025a05fb4d913a97c2",
                    "sha256:4ac5f43e33015ee5c67a19ac57c5eecaf8deeb57b5d1b01224c237f69db4e670",
                    "sha256:ad6d4de2ce8ddad87ceab7484790f40d11a499560808b907cef1c41451a73b5f",
                    "sha256:cb2bc8909cf388775801f4d581927240586147685269390cc388eed8293a4311",
                    "sha256:d720726c2ec3b0945bd27832b888f7c49dc3d5bc85ec3768fadd7fb60a2e32ac",
                    "sha256:34a96c5f1f09f92800b94064f952441ce6fba3859f84a986eb7f5ef12c9655fb",
                    "sha256:8a0c9edf9f21447c8c5f73bfeace1bb9907b6be52849990f9488c73126fd93de",
                    "sha256:f8b9a809bfdd624d52b6c74362c60260bb1a25abdc460320aded36975264a5d0",
                    "sha256:e658091bb048944d857d6fffce9af08030466cfd01a20dfe03d4f8e3c7fbda1a",
                    "sha256:e4c02d57641d3fa6ce8ab5f4bdd44708fe6d55225083ab4289c2dc34edf69eb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c98724c51fc542364a409971babc0027183fd3641d2d5f6b772706772cfee745",
                    "sha256:6fe363652823f083fcffd9bd325ba4dff667021c41b82647bf3b71d55af59366",
                    "sha256:7a56e33272d27f5016ebe9159fbeb960f596376dd7bff9a8bdfb980e2c2ed6db",
                    "sha256:b392832ee6051fb7beefec386612fe3fae144c8954b5c1f4fb131f7639248848",
                    "sha256:42472d8935f44473f51dc3f14ea2dcbd63065f773a57e94db9e979de61027333",
                    "sha256:bd38dcdcce419f412adeb6c0bf574b573f0a1b7421c7e8d6d80b1a487b1f1825",
                    "sha256:3c87651d118f5a130fd52ae9cedfd839a961ec0a1665ac9912302983f33ea26c",
                    "sha256:f878dddd44577ca03c603ce3e41d840bdf4eb98ccb5609b1566e96ca05b5e013",
                    "sha256:b6e87bf9a6d2713278b0c456fdfb427da160bfdd9838da2db48a1798eaa818eb",
                    "sha256:e2480d66c78208c399c0e41e9bd69834845be31d72bf687372007e846938d588",
                    "sha256:af6b8515305b977b6bb302b333db273a13fa8810e2eb07b3cbdd67730b314f62",
                    "sha256:5ded7848bc9abe6cae70d81b75d92a5aa169eabfb2d1431bb19ed0f760453c4e",
                    "sha256:c54d4f5fc674bb427c86fd005cc82f0bc0ace319a2417e3f629134e02ac0d2fd",
                    "sha256:156bc65c35fc71b9f41acb57d5776d7789aad064e8cc7a1a9b27bc2d8a839f1d",
                    "sha256:096c86f3dd9f3f596161bd701cb28b53563a0c0bf381bc0ddbb1d1ecd6a2ee74",
                    "sha256:433e78384da748dee2789829bd36bf6b051e18e95991e15316136a0e5c3877e8",
                    "sha256:55b9d0373575539755f4efac09fba7e538605b90647f52e846f2e4751e962fee",
                    "sha256:18f3b93fdbf44925fd00a457cff526dd58b97cc11af18ad7384233888ee40ca3",
                    "sha256:04c0de02f552913546050d0af9024a47e177ed682d42c56c3e5dfc3ba68bf296",
                    "sha256:a4f2c837a9adab9e546a98133631aea94475f04e3d50d22443cbb447bc25025e",
                    "sha256:52acf4d6e98856246f522182bc183c405b9eb7465752012dd108249390ee7ee3",
                    "sha256:d6cecb05509e4f6dfb08c8af85e01294d2d416942221fc7b782908004d20b656",
                    "sha256:55b39b812343a30b157e9090b68ef5aa063567f38533c85091fa63ee5b0baa64",
                    "sha256:c9356b434a560f017308a8d100791f4b3e66ef6d5d55371071ceaafce3314379",
                    "sha256:d6c45a05b72db4ec0223fc86e72e02913287f05bfab3131982c506c77975185e",
                    "sha256:679bbe67ff1f8ae7967752ada8935100d14ae7a981cac41da654202d01ee2b9a",
                    "sha256:8e838852b24b87ab268484bd49ea562a216b5b9cb4c8da73f5a40b029431dd7f",
                    "sha256:ddd0bdaff952593a63642054ae052d4482fc95868fd0442a4e822c8b77e77162",
                    "sha256:c80906b3dcaffb7d872c6a9511ba30e2c408c626740e20d35fdfb7ba2a93a2b0",
                    "sha256:f28722a52152c8f9c4d5044f42609d67559237df3aa00f066a2c4ae6d801da51",
                    "sha256:028d40b6e6742213e9e9f55b53fd3eb20d78d1adc88db5b2a6740cd4148f533b",
                    "sha256:0b20eac046d7faab34afc957992f3a11bde4b0e45ce904605452935195a6f29d",
                    "sha256:787fd917b3931f98bc544a4dbd4138ade40a201c57d25555fe5868032151f642",
                    "sha256:8f6e7d354f4bb3bcf1a7b7fedaac060760436be8593559dacf2f7a14d4bab789",
                    "sha256:f78ffd551abd68b40da7ab01acba8755898038047f19fb50c41b1ff2a43c84f7",
                    "sha256:71226c3b3904ffaa65eec939c311b080a63b7de4a0a5d872ab6455828f4690c7"
                ]
            }
        },
        "23.05": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5f3409c9bade",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.8.0.065",
                    "CUDA_DRIVER_VERSION=520.61.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.15.5",
                    "CUBLAS_VERSION=11.11.3.6",
                    "CUFFT_VERSION=10.9.0.58",
                    "CURAND_VERSION=10.3.0.86",
                    "CUSPARSE_VERSION=11.7.5.86",
                    "CUSOLVER_VERSION=11.4.1.48",
                    "CUTENSOR_VERSION=1.6.1.5",
                    "NPP_VERSION=11.8.0.86",
                    "NVJPEG_VERSION=11.9.0.86",
                    "CUDNN_VERSION=8.7.0.84",
                    "TRT_VERSION=8.5.1.7",
                    "TRTOSS_VERSION=22.12",
                    "NSIGHT_SYSTEMS_VERSION=2022.4.2.1",
                    "NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "DALI_VERSION=1.20.0",
                    "DALI_BUILD=6562491",
                    "POLYGRAPHY_VERSION=0.43.1",
                    "TRANSFORMER_ENGINE_VERSION=0.3",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.12",
                    "PYVER=3.8",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=49968248",
                    "DGLBACKEND=pytorch",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.05",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "49968248",
                    "com.nvidia.build.ref": "a58f3f606e2d7f2b5a9a59e7b305e0966e5e3d34",
                    "com.nvidia.cublas.version": "11.11.3.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.84",
                    "com.nvidia.cufft.version": "10.9.0.58",
                    "com.nvidia.curand.version": "10.3.0.86",
                    "com.nvidia.cusolver.version": "11.4.1.48",
                    "com.nvidia.cusparse.version": "11.7.5.86",
                    "com.nvidia.cutensor.version": "1.6.1.5",
                    "com.nvidia.nccl.version": "2.15.5",
                    "com.nvidia.npp.version": "11.8.0.86",
                    "com.nvidia.nsightcompute.version": "2022.3.0.22",
                    "com.nvidia.nsightsystems.version": "2022.4.2.1",
                    "com.nvidia.nvjpeg.version": "11.9.0.86",
                    "com.nvidia.pytorch.version": "1.14.0a0+410ce96",
                    "com.nvidia.tensorrt.version": "8.5.1.7",
                    "com.nvidia.tensorrtoss.version": "22.12",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "container": "5f3409c9bade951e070d51f80a1dce9ce244d664fdd8836eefcce7549864e42e",
            "container_config": {
                "Hostname": "5f3409c9bade",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.8.0.065",
                    "CUDA_DRIVER_VERSION=520.61.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.15.5",
                    "CUBLAS_VERSION=11.11.3.6",
                    "CUFFT_VERSION=10.9.0.58",
                    "CURAND_VERSION=10.3.0.86",
                    "CUSPARSE_VERSION=11.7.5.86",
                    "CUSOLVER_VERSION=11.4.1.48",
                    "CUTENSOR_VERSION=1.6.1.5",
                    "NPP_VERSION=11.8.0.86",
                    "NVJPEG_VERSION=11.9.0.86",
                    "CUDNN_VERSION=8.7.0.84",
                    "TRT_VERSION=8.5.1.7",
                    "TRTOSS_VERSION=22.12",
                    "NSIGHT_SYSTEMS_VERSION=2022.4.2.1",
                    "NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "DALI_VERSION=1.20.0",
                    "DALI_BUILD=6562491",
                    "POLYGRAPHY_VERSION=0.43.1",
                    "TRANSFORMER_ENGINE_VERSION=0.3",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.12",
                    "PYVER=3.8",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=49968248",
                    "DGLBACKEND=pytorch",
                    "_CUDA_COMPAT_TIMEOUT=90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.05",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "49968248",
                    "com.nvidia.build.ref": "a58f3f606e2d7f2b5a9a59e7b305e0966e5e3d34",
                    "com.nvidia.cublas.version": "11.11.3.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.84",
                    "com.nvidia.cufft.version": "10.9.0.58",
                    "com.nvidia.curand.version": "10.3.0.86",
                    "com.nvidia.cusolver.version": "11.4.1.48",
                    "com.nvidia.cusparse.version": "11.7.5.86",
                    "com.nvidia.cutensor.version": "1.6.1.5",
                    "com.nvidia.nccl.version": "2.15.5",
                    "com.nvidia.npp.version": "11.8.0.86",
                    "com.nvidia.nsightcompute.version": "2022.3.0.22",
                    "com.nvidia.nsightsystems.version": "2022.4.2.1",
                    "com.nvidia.nvjpeg.version": "11.9.0.86",
                    "com.nvidia.pytorch.version": "1.14.0a0+410ce96",
                    "com.nvidia.tensorrt.version": "8.5.1.7",
                    "com.nvidia.tensorrtoss.version": "22.12",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "created": "2023-10-03T00:10:30.406749052Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-12T21:08:57.997787381Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ENV CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ENV NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "RUN |17 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.15.5 com.nvidia.cublas.version=11.11.3.6 com.nvidia.cufft.version=10.9.0.58 com.nvidia.curand.version=10.3.0.86 com.nvidia.cusparse.version=11.7.5.86 com.nvidia.cusolver.version=11.4.1.48 com.nvidia.cutensor.version=1.6.1.5 com.nvidia.npp.version=11.8.0.86 com.nvidia.nvjpeg.version=11.9.0.86 com.nvidia.cudnn.version=8.7.0.84 com.nvidia.tensorrt.version=8.5.1.7 com.nvidia.tensorrtoss.version=22.12 com.nvidia.nsightsystems.version=2022.4.2.1 com.nvidia.nsightcompute.version=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ENV DALI_VERSION=1.20.0 DALI_BUILD=6562491 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.707490483Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.973028669Z",
                    "created_by": "RUN |21 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 DALI_VERSION=1.20.0 DALI_BUILD=6562491 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.973028669Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.107426701Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:27.253333752Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.755455377Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:49:05.645380886Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:49:05.645380886Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:49:06.220038569Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 PYTORCH_VERSION=1.14.0a0+410ce96 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.14.0a0+410ce96",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:39.671098802Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==59.5.0 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:42.484749012Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:53:42.484749012Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:55:27.22941292Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:55:59.45244931Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:56:00.244104718Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:56:00.244104718Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.440413686Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:05:07.566046638Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T01:54:25.243216915Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:54:46.725301767Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:54:46.725301767Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T01:55:24.516855036Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:55:24.993465068Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:05.238360536Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:05.848158773Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c patch -d / -p1 < /opt/pytorch/mpmath_CVE-2021-29063.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:46.015996375Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:13.268573904Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /usr --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/pylibraft-*.whl         /rapids/raft_dask-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3 && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:13.268573904Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T02:54:13.865550502Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:14.211415251Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:15.390010343Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:18.124237543Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:19.920543666Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:15.740070765Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:15.740070765Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T02:55:33.743409882Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:48.57974205Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:48.57974205Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --upgrade git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.191931661Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=49968248",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "LABEL com.nvidia.build.id=49968248",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "LABEL com.nvidia.build.ref=a58f3f606e2d7f2b5a9a59e7b305e0966e5e3d34",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T01:46:36.075345465Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip setuptools"
                },
                {
                    "created": "2023-05-02T02:18:00.104471583Z",
                    "created_by": "/bin/sh -c pip install --no-deps --pre dgl -f https://data.dgl.ai/wheels/cu117/repo.html"
                },
                {
                    "created": "2023-05-02T02:18:06.30176983Z",
                    "created_by": "/bin/sh -c pip install --no-deps --pre dglgo -f https://data.dgl.ai/wheels-test/repo.html"
                },
                {
                    "created": "2023-05-02T02:18:06.404468612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DGLBACKEND=pytorch",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T02:18:06.498748913Z",
                    "created_by": "/bin/sh -c #(nop)  ENV _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T20:30:18.782366028Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:7c4c8ac005a86203f841d58ba749197071a688906995b5f7a09a6c20c117f76d in /modulus/ "
                },
                {
                    "created": "2023-05-02T20:30:47.578656798Z",
                    "created_by": "/bin/sh -c if [ -e \"/modulus/deps/onnxruntime_gpu-1.14.0-cp38-cp38-linux_x86_64.whl\" ]; then \techo \"Custom wheel exists, installing!\" && \tpip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.14.0-cp38-cp38-linux_x86_64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install numpy==1.22.4;     fi"
                },
                {
                    "created": "2023-05-02T20:30:50.653347206Z",
                    "created_by": "/bin/sh -c rm -rf /modulus/"
                },
                {
                    "created": "2023-05-02T20:34:11.225072582Z",
                    "created_by": "/bin/sh -c pip install protobuf==3.20.0"
                },
                {
                    "created": "2023-05-02T20:34:12.905156435Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:7c4c8ac005a86203f841d58ba749197071a688906995b5f7a09a6c20c117f76d in /modulus/ "
                },
                {
                    "created": "2023-05-02T20:34:27.691734568Z",
                    "created_by": "/bin/sh -c cd /modulus/ && pip install ."
                },
                {
                    "created": "2023-05-02T20:34:29.31509385Z",
                    "created_by": "/bin/sh -c rm -rf /modulus/"
                },
                {
                    "created": "2023-05-02T20:34:33.894608907Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip"
                },
                {
                    "created": "2023-05-02T20:35:12.61750432Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:547d54fe65e1c81251beae2f7b382e513d33f9a7c9b9236f6f229f455ce8d377 in /modulus-launch/ "
                },
                {
                    "created": "2023-05-02T20:35:43.117687224Z",
                    "created_by": "/bin/sh -c cd /modulus-launch/ && pip install ."
                },
                {
                    "created": "2023-05-02T20:35:45.355051013Z",
                    "created_by": "/bin/sh -c rm -rf /modulus-launch/"
                },
                {
                    "created": "2023-05-02T20:35:53.396324409Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip setuptools"
                },
                {
                    "created": "2023-05-02T20:36:56.812374484Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2023-05-02T20:41:59.212566976Z",
                    "created_by": "/bin/sh -c pip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch"
                },
                {
                    "created": "2023-05-02T20:42:02.126193686Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:3d88aa0db6c004443b24e9b0b2f5b01433cd0fadf15f169b60a228e8a0e43d1b in /modulus-sym/ "
                },
                {
                    "created": "2023-05-02T20:43:10.072904603Z",
                    "created_by": "/bin/sh -c cd /modulus-sym/ && pip install ."
                },
                {
                    "created": "2023-05-02T20:43:13.574914874Z",
                    "created_by": "/bin/sh -c rm -rf /modulus-sym/"
                },
                {
                    "created": "2023-05-02T20:43:14.016941576Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5e536b07c50006c521eea47afb782a5449c929f3bb2650d04f48c33797f0d17b in /modulus-sym/ "
                },
                {
                    "created": "2023-05-02T20:43:16.476097551Z",
                    "created_by": "/bin/sh -c cd /modulus-sym && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root"
                },
                {
                    "created": "2023-05-02T20:43:48.112903565Z",
                    "created_by": "/bin/sh -c cd /root &&      wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz &&      tar xvfz cmake-3.24.1-linux-x86_64.tar.gz"
                },
                {
                    "created": "2023-05-02T20:43:49.359903934Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:4cf8a489f1b4074d8abec65696c2bf539e1df69e87f210682a5b81060f1bb710 in /external/ "
                },
                {
                    "created": "2023-05-02T20:44:32.03303586Z",
                    "created_by": "/bin/sh -c mkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install ."
                },
                {
                    "created": "2023-05-02T20:44:32.355280326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-03T00:10:30.406749052Z",
                    "created_by": "bash"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:f1133182f9176f808836a1da986d49a743ffef123c3e043665c969641d476a0e",
                    "sha256:5315510b97a53b3798577a5d3ab016711a172e6592dcb62eb9a379334ff8137e",
                    "sha256:1aa2a552b9cc22f74b5bd4f845d814cf8f98179353c589c9524f5fd14066893f",
                    "sha256:60e5365b20887bea5ff0d4943c1e7d3cabc5fc88895460d747f9715bb89374c3",
                    "sha256:99d243a0c0a688b2d656423b7ee3534278d8b24b13e9ae07b6c69dc3d0d061ae",
                    "sha256:c0df662a799d1c11c3db86f201628479dbd362e85286be0a17af3e0d4318a62d",
                    "sha256:0aded1f539825c359320b67eeed512e7b63f43284f4272969918ef4cbf335e64",
                    "sha256:eb8680c17196ae075b20a67d17900bceff407d2363ff0fec238a63040868fbed",
                    "sha256:20c3eb845057dde8d4428f0d7a5d8b07d5896b5b881f43442d20c76cc3d962e1",
                    "sha256:c9bece9394f22680edac326b1716e23c2ef1c2b57b68bf294643b6b6f6ab9f86",
                    "sha256:e09071e1a97b0c1a459e8a831c4ec0e7aba4b220ecd3e39af0e378e27c86538a",
                    "sha256:5214ca09c8e0e4c898f0a9ac9156f3e080d5e81bf165bd89c7ea35c8bd1ffb97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd5625d2f8409414a9082c66100bfff983d84bd36a787c010b5f1e08bb142390",
                    "sha256:ed96c3c53e36c1f8cb4c1362499d66f1169120731f5b6387f7bdf69596441a4c",
                    "sha256:901b71b0662a9fc22cf430ccd0175b5c5dfd69bc1530ac7ae991a8fd2dd1678a",
                    "sha256:f50313ca0c0bd298b3db3124a246e6c08589f4403eed6446688e4e6f10bbf70d",
                    "sha256:d327540e93865e9e825442bbbc9dcd4b17782fa6d180c8f421ba2b482eddd877",
                    "sha256:e5f37ea3d917ebdb12a9de78204d7a9da4c2e2c1b04a5a26c2112e3eac36226e",
                    "sha256:02ce4d51c110a5dc5f6009ae3c7f768ae802772a08b822cdfa855a4884d95295",
                    "sha256:2edff6e4cab3981a51786d466d4af38ff09c151e073c1c2677b1c7393e1b94b1",
                    "sha256:eae1300110042e085812909f3eb5037d302e6bf8c0fce7c1490389c640f475b4",
                    "sha256:a2c6c716ed3bf2b4dd00866be4af19cc5eb2a3200fb7ad75501125d6ea394f10",
                    "sha256:4b16fb61733360c531798ef9ea99aa0c747ae38ce80529d1812617101bcd4924",
                    "sha256:fa1fc8b7150052a4fdc9174e88e3414b2d3c94db496105be284f06a577c6097c",
                    "sha256:e89aad2361bf121544dc7da90d442e7fad09e0c5cac312eafacec5288a38e61b",
                    "sha256:e7be312f6e13a31a699d9dc0d5396c176e33cf4454080a5432e70895714aff7a",
                    "sha256:9e544d93ef10cd8963043cee21fdc614e555f43961dede079bdce1e53938ae69",
                    "sha256:b87ee2fa7b50ad522fa436e4271b997efab0ed5c92589499c84d046aa4a87c13",
                    "sha256:81a9971d8b2626131cffa59a9d5c16cedf28243c44fdab5acdb9b20776dfa264",
                    "sha256:dea8fc6e344f9bc66cc52528f76157fd4b04204f0ee4a4e77c7c85a83fa0ab15",
                    "sha256:4f7cff6d0b9e9c822df9265b192d87ba97e39bb1201aa76b54823a9929a21236",
                    "sha256:0d039a1c00f5677d39b577baa40dbab5df740f19bf46411be41e37d0d94c8b6a",
                    "sha256:96ae5b28f07b44be70f0e55583463aa6ad3eee5154aa7c13e6b9bc2548ac2a3c",
                    "sha256:27ec88ad156e5a34ff43f14bd59170c749a3e924de94833337d98f3a899b8147",
                    "sha256:06c65eb82432b863d004fc5096ac936226af20587aa75e3f4270c5a7f5604412",
                    "sha256:97173a335f970508f231b446806b97448ff53591bbefd1157ed371fe8cdeee77",
                    "sha256:954357da279eab43aceeaa9b8bd273ff4b3daab954f8c27485cab548a4aa291e",
                    "sha256:3c6d62ed2fbc71bd5de1717a723c437946c68cae19ae02f3db903f19057092dd",
                    "sha256:4a6809e5848f3729ca91288971fbd390325300d62d1b0844de29af34fe269acf",
                    "sha256:2de28d50f2f77cc8278511ba38a45d2697d5db23ac0956244e7e6cc784c643f2",
                    "sha256:0302cc7580cbad186638c419bee741e0b50ae583950ad1fd62d532ec3b4343d3",
                    "sha256:9bb630953851670edd82c1316e3954d46751d6a171dfd15613bd6c111d54166a",
                    "sha256:06c816cfff3c24241ecedc83a050c816716e4a5b43bda4721052ef08192d2d2b",
                    "sha256:1cbf51f838e88f69e3c376033a34aea5871e576296e2a5ef9245c33f4e648712",
                    "sha256:42fdb8d0786a095b4094ad2813a29e03724ab29e4486c8652e28cd7408bcf6fb",
                    "sha256:493d33ebe949ef44a5a57409564dde7fac52fc4d698f7552ef32bd3c79315ef0",
                    "sha256:27efb158d38cad67fae1a71efe05934ece84f882f1568ecf2031308e8216363e",
                    "sha256:783e534773dcd6fe78ad07ef89209d9361d989e0520faa1dd738b4257662fbcc",
                    "sha256:8f2dfd887983814575d79419b504230dd414287f0bcb2e7aa64b412719ac9ea9",
                    "sha256:7de2fa037915073128b6155abfc927e33aef6d0c60cc9155e840a55f18955e70",
                    "sha256:64687b8cdec098fbb4b3fbc75864d34960e8cf74f82708fe942f0c2909cf1653",
                    "sha256:4acd524dfe1bbc4711e2c15811363d4da05c1cff18dab31ca5a8960bd2c84c38",
                    "sha256:b7d17d67f9224cef2dcec2dfc52b24ae6a24cbd14246a769b7a18b571174b574",
                    "sha256:5a9be189d405c8f395fc7b0cffc2d28495896ad988a1999f644398aa294e8836",
                    "sha256:3994622b68102987a222d135b681f473e07f5c13ff380caf3555ceb2a64fbb63",
                    "sha256:9a7558d88e58e5fc073ad5eb273d648a78ab8051d2a3700c694b9536d4f8d057",
                    "sha256:4f6e5c4cbdbfa678ccab8198a949b7b7ce5e38a0c0d979c2b72ef5e051f03a2e",
                    "sha256:3fea2d028acd3ecfd51b9d47d0e38b6316e98aa6ea3c3dc5500c6f5f321bb3ca",
                    "sha256:af66ac18bfa748af769c33ba0b71cbdf6386a2508a7deb6224cef61489c96d13",
                    "sha256:82ec3122b0cc57b5f0614881eab6b85df7d202da43240a5be6298eb4fdf9f743",
                    "sha256:d799b659c9bbeab5cd7f8f411cad6112d0ff5c7753ec513084ca6fd499d8f537",
                    "sha256:3206d470d6ba7199d9f763e8f1ed9d844bc88d0267ee4bcc562f53d7744ec4a7",
                    "sha256:a75dbd026e79e21d4e9dea624891dcd745c2ee958ebad8f2fb29cfdd01a6dbcd",
                    "sha256:6c71c30aaf4257da5d4d13d54164d2c0aa9a70608e68062383b9fe49d89d90d0",
                    "sha256:d01607b44ac9e0a9050f47c10a891829fb4104f3e7e150796022c2b8788587a6",
                    "sha256:5a34bbee7729f6591f43c9e857579b3ff4583f75735c33bf6252a3bde3c1d0bf",
                    "sha256:6234f3e9960d7ae866f5448cce7d9ebe27f0107304e12f594d41c6bb8e4b2294",
                    "sha256:50690ee916a975785718ea6090888d8fd9c833826fdcb1f1ae8afefd8fd6056a",
                    "sha256:b29c78d7ae1bbfd8aa00d1f23dcb4038a9aed04d5c71dd172729ae193f574255",
                    "sha256:19268dc0e66df4b07e94c3b42fc43d11924b22ff501ab617d21a8b5a5a72d543"
                ]
            }
        },
        "23.08": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f0a76a433572",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.1.009",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.1",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.54",
                    "CURAND_VERSION=10.3.2.106",
                    "CUSPARSE_VERSION=12.1.0.106",
                    "CUSOLVER_VERSION=11.4.5.107",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.1.0.40",
                    "NVJPEG_VERSION=12.2.0.2",
                    "CUDNN_VERSION=8.9.2.26",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.06",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2",
                    "NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "DALI_VERSION=1.26.0",
                    "DALI_BUILD=8269288",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.9",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+4136153",
                    "PYTORCH_VERSION=2.1.0a0+4136153",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.06",
                    "PYVER=3.10",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=63009835",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.08",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "63009835",
                    "com.nvidia.build.ref": "4a0aebfab10905f515249ff90b28a1986d15f735",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.2.26",
                    "com.nvidia.cufft.version": "11.0.2.54",
                    "com.nvidia.curand.version": "10.3.2.106",
                    "com.nvidia.cusolver.version": "11.4.5.107",
                    "com.nvidia.cusparse.version": "12.1.0.106",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.1",
                    "com.nvidia.npp.version": "12.1.0.40",
                    "com.nvidia.nsightcompute.version": "2023.1.1.4",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001+cuda12.2",
                    "com.nvidia.nvjpeg.version": "12.2.0.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+4136153",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.06",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "f0a76a433572f143e2c19f11bb8bc0c12b18571a94e9b65536fc1947b6b6b030",
            "container_config": {
                "Hostname": "f0a76a433572",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.1.009",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.1",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.54",
                    "CURAND_VERSION=10.3.2.106",
                    "CUSPARSE_VERSION=12.1.0.106",
                    "CUSOLVER_VERSION=11.4.5.107",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.1.0.40",
                    "NVJPEG_VERSION=12.2.0.2",
                    "CUDNN_VERSION=8.9.2.26",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.06",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2",
                    "NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "DALI_VERSION=1.26.0",
                    "DALI_BUILD=8269288",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.9",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+4136153",
                    "PYTORCH_VERSION=2.1.0a0+4136153",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.06",
                    "PYVER=3.10",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=63009835",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.08",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "63009835",
                    "com.nvidia.build.ref": "4a0aebfab10905f515249ff90b28a1986d15f735",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.2.26",
                    "com.nvidia.cufft.version": "11.0.2.54",
                    "com.nvidia.curand.version": "10.3.2.106",
                    "com.nvidia.cusolver.version": "11.4.5.107",
                    "com.nvidia.cusparse.version": "12.1.0.106",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.1",
                    "com.nvidia.npp.version": "12.1.0.40",
                    "com.nvidia.nsightcompute.version": "2023.1.1.4",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001+cuda12.2",
                    "com.nvidia.nvjpeg.version": "12.2.0.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+4136153",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.06",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2023-10-03T00:00:48.623771495Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2023-06-05T17:00:37.587967605Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.631302347Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.67809659Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.722501654Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:39.16987586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ad2ee2cfb186802f49c9bf4148674d1c6fc201f83478ec01ffaa7086d491323 in / "
                },
                {
                    "created": "2023-06-05T17:00:39.361599721Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:24.500479593Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ENV CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ENV NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.18.1 com.nvidia.cublas.version=12.1.3.1 com.nvidia.cufft.version=11.0.2.54 com.nvidia.curand.version=10.3.2.106 com.nvidia.cusparse.version=12.1.0.106 com.nvidia.cusolver.version=11.4.5.107 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.1.0.40 com.nvidia.nvjpeg.version=12.2.0.2 com.nvidia.cudnn.version=8.9.2.26 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.06 com.nvidia.nsightsystems.version=2023.2.3.1001+cuda12.2 com.nvidia.nsightcompute.version=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ENV DALI_VERSION=1.26.0 DALI_BUILD=8269288 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.550598994Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 DALI_VERSION=1.26.0 DALI_BUILD=8269288 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.9 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.644163492Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:04.729773252Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.511793295Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:32:07.414023032Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:32:07.414023032Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+4136153 PYTORCH_VERSION=2.1.0a0+4136153 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+4136153",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:22:00.693732502Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.080699431Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.216205675Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.216205675Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:23:57.261917711Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:23:57.468764307Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:25:53.99480952Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:26.485433432Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:27.112313477Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:27.112313477Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:53.765336771Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:35:20.29607509Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T02:07:54.4528144Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     USE_SYSTEM_NCCL=1     USE_UCC=1     USE_SYSTEM_UCC=1     UCC_HOME=\"/opt/hpcx/ucc\"     UCC_DIR=\"/opt/hpcx/ucc/lib/cmake/ucc\"     UCX_HOME=\"/opt/hpcx/ucx\"     UCX_DIR=\"/opt/hpcx/ucx/lib/cmake/ucx\"     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:08:22.783704863Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:17.187324577Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:31.833226272Z",
                    "created_by": "RUN /bin/sh -c export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"  && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:31.833226272Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T02:13:01.943644053Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:13:02.063595471Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:54:40.643700192Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:55:12.271021361Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:55:14.913616002Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.3893907Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.683823672Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.800048117Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.946225624Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:24.757865253Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:31.204452825Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:33.419485912Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:58:45.911918693Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:58:45.911918693Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T03:59:04.873597717Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:59:28.902048391Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:59:28.902048391Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.694366186Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=63009835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "LABEL com.nvidia.build.id=63009835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "LABEL com.nvidia.build.ref=4a0aebfab10905f515249ff90b28a1986d15f735",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-19T18:52:53.288146762Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip setuptools"
                },
                {
                    "created": "2023-07-19T18:53:18.597495625Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2023-07-19T18:53:19.46282639Z",
                    "created_by": "/bin/sh -c #(nop)  ENV _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-19T18:53:24.741297976Z",
                    "created_by": "/bin/sh -c pip install git+https://github.com/romerojosh/benchy.git"
                },
                {
                    "created": "2023-07-19T18:53:30.430808039Z",
                    "created_by": "/bin/sh -c pip install https://github.com/NVIDIA/torch-harmonics/archive/8826246cacf6c37b600cdd63fde210815ba238fd.tar.gz"
                },
                {
                    "created": "2023-07-20T22:56:13.000221957Z",
                    "created_by": "/bin/sh -c pip install \"tensorly>=0.8.1\" \"vtk>=9.2.6\" \"pyvista>=0.40.1\" https://github.com/tensorly/torch/archive/715a0daa7ae0cbdb443d06780a785ae223108903.tar.gz"
                },
                {
                    "created": "2023-07-20T22:56:13.875888547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DGL_BACKEND=pytorch",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-20T22:56:13.961320113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DGL_BACKEND=pytorch",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-20T22:56:14.045284111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DGLBACKEND=pytorch",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T02:04:17.947556586Z",
                    "created_by": "/bin/sh -c git clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/1.1.1 && git submodule update --init --recursive && \tDGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g && \tcd python && \tpython setup.py install && \tpython setup.py build_ext --inplace"
                },
                {
                    "created": "2023-08-08T04:30:09.667041504Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:ae6983ccda2aca11e2e85d6f6a17b8bbb0d7635d8a9dd310a4ab16b0790961c7 in /modulus/ "
                },
                {
                    "created": "2023-08-08T04:30:38.375933854Z",
                    "created_by": "/bin/sh -c if [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl\" ]; then \techo \"Custom wheel exists, installing!\" && \tpip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install \"numpy==1.22.4\";     fi"
                },
                {
                    "created": "2023-08-08T04:30:40.596280056Z",
                    "created_by": "/bin/sh -c rm -rf /modulus/"
                },
                {
                    "created": "2023-08-08T04:35:58.724211346Z",
                    "created_by": "/bin/sh -c pip install \"protobuf==3.20.0\""
                },
                {
                    "created": "2023-08-08T04:36:01.065928758Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:ae6983ccda2aca11e2e85d6f6a17b8bbb0d7635d8a9dd310a4ab16b0790961c7 in /modulus/ "
                },
                {
                    "created": "2023-08-08T04:38:00.645449243Z",
                    "created_by": "/bin/sh -c cd /modulus/ && pip install ."
                },
                {
                    "created": "2023-08-08T04:38:03.172838321Z",
                    "created_by": "/bin/sh -c rm -rf /modulus/"
                },
                {
                    "created": "2023-08-08T04:40:51.314829224Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip"
                },
                {
                    "created": "2023-08-08T04:41:54.338297792Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:4a19e45f7ab5b528fd8e7adc24dd77c2bbb7ea13db833877b2c781ad06475d5a in /modulus-launch/ "
                },
                {
                    "created": "2023-08-08T04:42:40.715605313Z",
                    "created_by": "/bin/sh -c cd /modulus-launch/ && pip install ."
                },
                {
                    "created": "2023-08-08T04:42:42.116735806Z",
                    "created_by": "/bin/sh -c rm -rf /modulus-launch/"
                },
                {
                    "created": "2023-08-08T04:42:49.535602362Z",
                    "created_by": "/bin/sh -c pip install --upgrade pip setuptools"
                },
                {
                    "created": "2023-08-08T04:42:53.925633339Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install"
                },
                {
                    "created": "2023-08-08T04:42:54.03508099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T05:21:04.812087005Z",
                    "created_by": "/bin/sh -c pip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch"
                },
                {
                    "created": "2023-08-08T05:21:06.162877202Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5e536b07c50006c521eea47afb782a5449c929f3bb2650d04f48c33797f0d17b in /modulus-sym/ "
                },
                {
                    "created": "2023-08-08T05:21:07.83784302Z",
                    "created_by": "/bin/sh -c cd /modulus-sym && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root"
                },
                {
                    "created": "2023-08-08T05:21:15.894174965Z",
                    "created_by": "/bin/sh -c cd /root &&      wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz &&      tar xvfz cmake-3.24.1-linux-x86_64.tar.gz"
                },
                {
                    "created": "2023-08-08T05:21:17.095806743Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:ba07c7381136572198e277ae8bff287725ef1024a925aeb569f9648dae2a9021 in /external/ "
                },
                {
                    "created": "2023-08-08T05:21:57.856723163Z",
                    "created_by": "/bin/sh -c mkdir /external/pysdf/build/ &&         cd /external/pysdf/build &&         /root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" &&         make -j &&         mkdir /external/lib &&         cp libpysdf.so /external/lib/ &&         cd /external/pysdf && pip install ."
                },
                {
                    "created": "2023-08-08T05:21:58.186844353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T05:25:18.269010449Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:d46ca0da8acbf2c3fc54565503d7538f020a93c2cdc4be7ad694b0ff90d3df1e in /modulus-sym/ "
                },
                {
                    "created": "2023-08-08T05:26:51.336459399Z",
                    "created_by": "/bin/sh -c cd /modulus-sym/ && pip install ."
                },
                {
                    "created": "2023-08-08T05:26:53.780452389Z",
                    "created_by": "/bin/sh -c rm -rf /modulus-sym/"
                },
                {
                    "created": "2023-08-08T05:27:06.670630695Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:6ddf54c7ff8068548c9c9c7e979714e483b810fc811c49e9a52e20f22046d62c in NVIDIA_Modulus_accompanying_licenses "
                },
                {
                    "created": "2023-10-03T00:00:48.623771495Z",
                    "created_by": "bash"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cdd7c73923174e45ea648d66996665c288e1b17a0f45efdbeca860f6dafdf731",
                    "sha256:1a18bf3b0d62b53eab2c1f508219c41aa809926b2d19f2a7a74953ff8fc0c138",
                    "sha256:db56a16becb50d2f4644a0bdf7948ab2ce80cd8cf553fb51c8c66dd98bad2ca9",
                    "sha256:792cf8b3f47768ef9892f733fa698cb4fdb6e1fbf85d81bc5df532204e592cc4",
                    "sha256:b72f7d78c549ccbf8e6cdf89c466c2522a1385b86ce90676f9a49afedcc05f37",
                    "sha256:bddd82d5de7b3dbc2e577bb9b6001262bdb12784976429e8460bfb716c9bf417",
                    "sha256:751c50d7854e31b176dd27ba9eaddb626886f51802f890530d9f3eb5c8c803a9",
                    "sha256:765b93603198fef8a9600b2ee7859ef1e016f5b117d89ebe9005e06ed2bfab8e",
                    "sha256:fd77e729e122c0222667f07315357d83e9da75259ad5fe1d11983d169867f1a8",
                    "sha256:9b44084c3ce678fd3bc5be4dd9a1fc3a7004690473a043ae19018cc05c702211",
                    "sha256:4309c17f43834f9515b6629ac04ef182a09ba191ff2d2048f2f51e7984e915e7",
                    "sha256:b5036c04ac63b5fde65af988a523a66510673f2d5ffefaae4562dec30168cb57",
                    "sha256:ad91a6a9f1068180c2b93580c4a91ae142541e5a70d7ee682fb93ac8c701a3f4",
                    "sha256:54351a58a2ece00ccbb4794e8735edd7769e92e80c8eaadc48c8748aeeccce17",
                    "sha256:12ba3cf24c7ecf48115a52d834e8bb7f807da6135622a34562e4dce9e1629335",
                    "sha256:06830fc3ff543996161deb86b6d1257a5e40855117f707704912534317a476d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa5c6ce809d37f60e11f0a022197f67db95d061d6a430da1f8ee431ba0184937",
                    "sha256:d1766ed4d04dc5177947420d580c14439c3d24560771fe9693dfb819b708d554",
                    "sha256:d7ee4fe09d8fb28e27e63cdb703063b1f91796beecb4c5461e08c11ff071efe2",
                    "sha256:a123452adff47964c35dab28db7519cb92606c2418ba688a31da9033812c69d1",
                    "sha256:ca04e64d15f3ff487c9f1e95945ec7c114c83695caa41017dbb1f8f3540fc9ed",
                    "sha256:ea6a780775768ec122f27a37e9872f6f6242a5ec48832c347df928cbbb7d2a23",
                    "sha256:abad777b7433deab6395c98cc673936d525c8471b2803ca3e2ce02a20476dacb",
                    "sha256:ed9e1d1b0f660ab3aeb1841aaabfa920df474ba2d8a493b52c52e6a9b7879ecf",
                    "sha256:6429d2ec2f706f87fc2ca84a6405d8fd94495e9ef3f26c0cb5d96b7b2c1b01dc",
                    "sha256:69e9d95100923fd5de7b9ec5c19f6b52497e45f2088d8a330edc2a815cf29e16",
                    "sha256:6a9840e30fcab911e3b49f814f6a44577f234b47c11053cfa69a96d39d1ac92c",
                    "sha256:9a3d182ac6df0095788f4ec27e4db3e26a3139251772a00ee564df37cad2d7b1",
                    "sha256:ab22076a51db4b96b5eedb332d828fccd1ca5222817bb9157e3dd3e57ce13b63",
                    "sha256:4931545bd7b62aed3ecd0b31bb0e615fe71ccd4d98b46c0d252db1853ebbc754",
                    "sha256:534e91568a4ae54d2090f6e9efa6e887b6dbedbac1152291d8d1bbb7e7be596c",
                    "sha256:06dd2c0c4d3c61ccbc5edceee7f9e164ba41920249e84da2f060e35bdf5f379f",
                    "sha256:b7f4e03f3e32bc6d06cfb755799a501927c029e02336dc21d6a0e54b2c12e4fc",
                    "sha256:e0607b7bd91e8f408d73cb2dc9783400182ccb78b723b2fc4a7af724a9803ba0",
                    "sha256:7967ef5ce9906d3d927d1492485b48f49a797fbcd82ea359b480ebf5ac0b6890",
                    "sha256:4fa76d81ae406c04554c6ba90627c1cec674d790e643b1e2cd6e1c6ec6dce4bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:496832ee61b715b9c0ba5eaa810425c46275752a0b55a4862d48cfed7dd654de",
                    "sha256:0e7aaa53861f9723e1113c9d8ed65aace33366faf80171ca92cb382a2eddfd81",
                    "sha256:0fe263c7c42c4cf4753442642388e4b4782ceef98bfd85fb4172baa1e0a5753d",
                    "sha256:6cdfe740b82025a471f0108ba311a5e55fbaa72c6750136ef3d77a119efc3131",
                    "sha256:15397fad5c65c191abfb629aa869a1ce2d34093e06ec55858c57babef3bd2958",
                    "sha256:f53b8856dea8b061708c75bb15edd2b900f26343727694cdeeaa7079833111b0",
                    "sha256:af8d4022c12980bc09e26e85feac800cb2d5ac24607c4c72d8fb5a2ff38e5de8",
                    "sha256:a4d896d18ca7e9f9adb57f758b051c912df92d4f6d759aa7a6ea006f88c3418e",
                    "sha256:afb33cec2a4e5c70b564e3abef359e5dd0a58a6c302de729597c24de17f93c67",
                    "sha256:2905a4cf531760fd47728bbca45f0db9af977e130ed991c406dd956a7e85f589",
                    "sha256:3c9b58d7f71156c3b944facecd4102147ac716a25ab62442e67beb7fdb7d5633",
                    "sha256:639b50b5cf37cc13c851cd9eb4a27e748994677c6f8c34b055b272fd28aefe82",
                    "sha256:1fcb75f39bfaa70d6a4e34f0885faaeb11e9ee01ec248b13fca755e22ea35f0b",
                    "sha256:1d821d126e9de1b0155aa0fbf95ca4f383f4f0045a456a3f4ac120b39c255936",
                    "sha256:7d9b5bd0347b7af31c3876f94d6240aaa5f9ad93b55d054e66280de1eb7ef30d",
                    "sha256:2269ff5c07ce642422e6c74ed8317acc08122bd0b70b3b06d329835d721497ba",
                    "sha256:218b874c25e7ed5ef5af6ea8e12f675030be6af45bcad2005b2fb847eed78f0d",
                    "sha256:51a339406d0453e0ac52e9dfc9f75096ba59bf88723d43b10ab4d0b9cb69dfa9",
                    "sha256:bf7b1ec7399c451341bdc124a8cc0e21887f4cd821a0fcbd1af261b10e3c4c3e",
                    "sha256:b495b160aa762a50e45607c3dc9bcdc6c41be4809e1512b30abd56f4a96ccf93",
                    "sha256:dd075fe38d02961babedc688ddc921fbd3c876d3364bc2376aa48d106a743016",
                    "sha256:970b4ca93a14d88dd5054bfc032de7419703c9c2a7dc5fd0095fa271eb79ed21",
                    "sha256:a87a44625e18db4768c82d78f41d50367adb7f6e82f266185558f73ec573923e",
                    "sha256:772cec84534f62371fcc61bcb20fb422da622b29a0df10e7dde05244f2393537",
                    "sha256:e81d83342475ece9c5eaf9b1ea385527297d4f97e0da77e9043a0f8a129500ac",
                    "sha256:bbf91f0c456901f106a3b7d9b04cad9643e1c0237e5326c7751bb173d39bbd88",
                    "sha256:6ac88446402960c54dc390f35d8fee49da8a27da78a6bf8257b574da9796b2f1",
                    "sha256:f4edf826faced8e2d5d317055435adb10260913725533708a21a74c0fa36d6d1",
                    "sha256:6a1e9e09cac7fa9d0b2113f25d38c7b4891e2f3d092fea3c306d545becc821ab",
                    "sha256:e5c97771a319e8a04e4d95431996853a22aa99a52e35b2110168da2b134fe891",
                    "sha256:0cb52102ead87c7d3300966917feb1192997b5d0fdea64cbc85c063861968f4b",
                    "sha256:38dfebc504bdc8bc9f17c4ae4650e0af2706c672613b432062f6511fca4ab16b",
                    "sha256:1149bb0d18a938373f3be0c72201ffa4f7d1f8fb6a806a91b3537812c4ca1fb7",
                    "sha256:006e9254a8eab62592a7155def294afeab5020724931307ab2bad2272781651e",
                    "sha256:3b09ae2d064e939d7765560a8be588d1d560e78d61484c54c8084be853a96b9d",
                    "sha256:1bbfcc8f3da936ea1bcae23176492bfd3ad53ba0a9b17c34351f0e440944bbfd",
                    "sha256:12f976a5e3bda089c4943b77c45a84e0f773391ca19ee3c4044ba180da71434b",
                    "sha256:b4bac22867701e6129ca36559c7ba659dff21fa017ce5b2b286d2001b0813aea",
                    "sha256:995e9294b3067fbab22ad0a7a9362e3999e9d477e1cf6261f8cbfac700844c0b",
                    "sha256:6332816b2f183e69d7cc7b5f1e35621ffb178ca0618513a6300040967538d0f7",
                    "sha256:86d6d2bfb697253abb85ff7bd4e86ce182ec688f1703aa6a36330a17480267f2",
                    "sha256:41e121a7cef67f0dc2e505aa4588913037daae7b83a81974b5ed21c42dd2025f"
                ]
            }
        },
        "23.09": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2ec2f818a61b",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.1.009",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.3",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.54",
                    "CURAND_VERSION=10.3.2.106",
                    "CUSPARSE_VERSION=12.1.0.106",
                    "CUSOLVER_VERSION=11.4.5.107",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.1.0.40",
                    "NVJPEG_VERSION=12.2.0.2",
                    "CUDNN_VERSION=8.9.3.28",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.07",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2",
                    "NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "DALI_VERSION=1.27.0",
                    "DALI_BUILD=8625314",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.10",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba",
                    "PYTORCH_VERSION=2.1.0a0+b5021ba",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.07",
                    "PYVER=3.10",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=63867923",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.09",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "63867923",
                    "com.nvidia.build.ref": "07f1d41648d252bb7f5e24f86db99bb3147307c7",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.3.28",
                    "com.nvidia.cufft.version": "11.0.2.54",
                    "com.nvidia.curand.version": "10.3.2.106",
                    "com.nvidia.cusolver.version": "11.4.5.107",
                    "com.nvidia.cusparse.version": "12.1.0.106",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.3",
                    "com.nvidia.npp.version": "12.1.0.40",
                    "com.nvidia.nsightcompute.version": "2023.1.1.4",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001+cuda12.2",
                    "com.nvidia.nvjpeg.version": "12.2.0.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+b5021ba",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.07",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "2ec2f818a61b2eb828e9d5db0e4d5d2f692daa63e5b485cf68cc166180a41fe6",
            "container_config": {
                "Hostname": "2ec2f818a61b",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.1.009",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.3",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.54",
                    "CURAND_VERSION=10.3.2.106",
                    "CUSPARSE_VERSION=12.1.0.106",
                    "CUSOLVER_VERSION=11.4.5.107",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.1.0.40",
                    "NVJPEG_VERSION=12.2.0.2",
                    "CUDNN_VERSION=8.9.3.28",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.07",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2",
                    "NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "DALI_VERSION=1.27.0",
                    "DALI_BUILD=8625314",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.10",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba",
                    "PYTORCH_VERSION=2.1.0a0+b5021ba",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.07",
                    "PYVER=3.10",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=63867923",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "nvcr.io/nvidia/modulus/modulus:23.09",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "63867923",
                    "com.nvidia.build.ref": "07f1d41648d252bb7f5e24f86db99bb3147307c7",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.3.28",
                    "com.nvidia.cufft.version": "11.0.2.54",
                    "com.nvidia.curand.version": "10.3.2.106",
                    "com.nvidia.cusolver.version": "11.4.5.107",
                    "com.nvidia.cusparse.version": "12.1.0.106",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.3",
                    "com.nvidia.npp.version": "12.1.0.40",
                    "com.nvidia.nsightcompute.version": "2023.1.1.4",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001+cuda12.2",
                    "com.nvidia.nvjpeg.version": "12.2.0.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+b5021ba",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.07",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2023-10-02T23:50:49.390536999Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2023-06-28T08:37:40.107416121Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.172787047Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.235648065Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.292202878Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:42.055763636Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:140fb5108b4a2861b5718ad03b4a5174bba03589ea8d4c053e6a0b282f439ff3 in / "
                },
                {
                    "created": "2023-06-28T08:37:42.319109064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T14:59:37.27537528Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:05:14.0213182Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.0213182Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.0213182Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.0213182Z",
                    "created_by": "ENV CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.0213182Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:05:14.10456437Z",
                    "created_by": "ENV NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.3.28 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.07 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.3.28 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.07 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.18.3 com.nvidia.cublas.version=12.1.3.1 com.nvidia.cufft.version=11.0.2.54 com.nvidia.curand.version=10.3.2.106 com.nvidia.cusparse.version=12.1.0.106 com.nvidia.cusolver.version=11.4.5.107 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.1.0.40 com.nvidia.nvjpeg.version=12.2.0.2 com.nvidia.cudnn.version=8.9.3.28 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.07 com.nvidia.nsightsystems.version=2023.2.3.1001+cuda12.2 com.nvidia.nsightcompute.version=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.944855789Z",
                    "created_by": "ENV DALI_VERSION=1.27.0 DALI_BUILD=8625314 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:57.970016147Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:07:58.067447621Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.3.28 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.07 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 DALI_VERSION=1.27.0 DALI_BUILD=8625314 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.10 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:07:58.067447621Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:58.067447621Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:58.072813267Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:07:58.072813267Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:58.072813267Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:07:58.07748323Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:21:05.423582548Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.275368836Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T18:21:12.292507129Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:25:56.586055248Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T18:25:56.586055248Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba PYTORCH_VERSION=2.1.0a0+b5021ba PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.07",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+b5021ba",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ENV PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:45:22.431645399Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:45:26.739678711Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:45:29.382760596Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir pip setuptools &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:45:29.400755311Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:45:29.400755311Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.23",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:46:27.237736097Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:46:27.245287564Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:46:43.218123416Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:46:43.218123416Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:46:43.218123416Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:46:43.218123416Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:47:56.432784192Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:48:13.175722586Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:48:13.502791478Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:48:13.502791478Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:50:06.300951939Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:50:06.332735839Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:50:06.332735839Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:50:06.332735839Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:50:06.332735839Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:50:06.332735839Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:52:48.502993729Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T19:56:39.023559823Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T20:29:14.288817236Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     USE_SYSTEM_NCCL=1     USE_UCC=1     USE_SYSTEM_UCC=1     UCC_HOME=\"/opt/hpcx/ucc\"     UCC_DIR=\"/opt/hpcx/ucc/lib/cmake/ucc\"     UCX_HOME=\"/opt/hpcx/ucx\"     UCX_DIR=\"/opt/hpcx/ucx/lib/cmake/ucx\"     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T20:29:21.800794246Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.07 PYTORCH_BUILD_VERSION=2.1.0a0+b5021ba TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T20:32:51.357385564Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T20:33:15.334010982Z",
                    "created_by": "RUN /bin/sh -c export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"  && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T20:33:15.334010982Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T20:33:36.337554389Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T20:33:36.353530262Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:54:32.439803491Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:54:55.288347935Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:54:57.224528042Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.032215215Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.13703169Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.143571422Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.149777081Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.192894653Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.307014501Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:55:47.555887072Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:56:28.08057737Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:56:28.08057737Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T21:56:44.637365418Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:56:45.342543617Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:56:45.342543617Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T21:59:50.891313671Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T21:59:50.891313671Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T21:59:50.891313671Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.569455864Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T22:07:32.569455864Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.569455864Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.715276714Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=63867923",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "LABEL com.nvidia.build.id=63867923",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-06T22:07:32.721474747Z",
                    "created_by": "LABEL com.nvidia.build.ref=07f1d41648d252bb7f5e24f86db99bb3147307c7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T20:45:03.919897428Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T20:45:03.919897428Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --upgrade pip setuptools # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-20T20:45:19.463336303Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-20T20:45:19.463336303Z",
                    "created_by": "ENV _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T00:26:22.388327505Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"h5py>=3.7.0\" \"mpi4py>=3.1.4\" \"netcdf4>=1.6.3\" \"ruamel.yaml>=0.17.22\" \"scikit-learn>=1.0.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T00:26:27.349539624Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install git+https://github.com/romerojosh/benchy.git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T00:26:32.754323521Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install https://github.com/NVIDIA/torch-harmonics/archive/8826246cacf6c37b600cdd63fde210815ba238fd.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T00:26:43.749255974Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"tensorly>=0.8.1\" https://github.com/tensorly/torch/archive/715a0daa7ae0cbdb443d06780a785ae223108903.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:14:11.916259806Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:14:21.725919942Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \techo \"Installing vtk and pyvista for: $TARGETPLATFORM\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk && \tpip install \"pyvista>=0.40.1\";     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk and pyvista for: $TARGETPLATFORM\" && \tpip install \"vtk>=9.2.6\" \"pyvista>=0.40.1\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:14:21.725919942Z",
                    "created_by": "ARG DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T03:14:21.725919942Z",
                    "created_by": "ENV DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T03:14:21.725919942Z",
                    "created_by": "ENV DGLBACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T03:38:39.125196536Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl;     else         echo \"No DGL wheel present, building from source\" && \tgit clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/1.1.2 && git submodule update --init --recursive && \tDGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g && \tcd python && \tpython setup.py install && \tpython setup.py build_ext --inplace;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:38:39.947618381Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -r /workspace/dgl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:02.807825067Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install \"numpy==1.22.4\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:03.375427778Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:04.693194668Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:48.838773387Z",
                    "created_by": "RUN /bin/sh -c cd /modulus/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:53.519727616Z",
                    "created_by": "RUN /bin/sh -c pip install \"protobuf==3.20.3\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:39:53.978961587Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:40:08.237155335Z",
                    "created_by": "RUN /bin/sh -c pip install --upgrade pip # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:40:14.300468307Z",
                    "created_by": "COPY . /modulus-launch/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:40:47.848880388Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-launch/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:40:48.298549708Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-launch/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:40:57.939227888Z",
                    "created_by": "RUN /bin/sh -c pip install --upgrade pip setuptools # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T03:41:02.185881277Z",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:18:25.805471016Z",
                    "created_by": "ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:18:25.805471016Z",
                    "created_by": "RUN /bin/sh -c pip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:18:25.944627757Z",
                    "created_by": "COPY ./deps/NVIDIA-OptiX-SDK-7.0.0-linux64.sh /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:18:26.90743631Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym && ./NVIDIA-OptiX-SDK-7.0.0-linux64.sh --skip-license --include-subdir --prefix=/root # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:18:30.563049112Z",
                    "created_by": "RUN /bin/sh -c cd /root &&      wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz &&      tar xvfz cmake-3.24.1-linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:18:31.212665472Z",
                    "created_by": "COPY ./deps/external /external/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:19:11.50207796Z",
                    "created_by": "RUN /bin/sh -c mkdir /external/pysdf/build/ &&         cd /external/pysdf/build &&         /root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.0.0-linux64 -DCUDA_CUDA_LIBRARY=\"\" &&         make -j &&         mkdir /external/lib &&         cp libpysdf.so /external/lib/ &&         cd /external/pysdf && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:19:11.50207796Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:19:15.13090751Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:20:13.789581948Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:20:14.351669101Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-21T04:20:17.725930841Z",
                    "created_by": "COPY accompanying_licenses/ NVIDIA_Modulus_accompanying_licenses # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-02T23:50:49.390536999Z",
                    "created_by": "bash"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:59c56aee1fb4dbaeb334aef06088b49902105d1ea0c15a9e5a2a9ce560fa4c5d",
                    "sha256:5595c1d1841261f97f8d0402c3fb98582bb66b017525f47bdef04cb8a5b4a07f",
                    "sha256:4473b3515be36dc8efdf7c52742e5aa52208da1f80d7777407cac337632d17fd",
                    "sha256:18e762b1594c86a81f75dcef1510944d02db3313e6132a65b48543549eb9a80b",
                    "sha256:553b6c4c785ed26f2388a5a838292bcacc92cee88599197d483b980287427a3e",
                    "sha256:2eca9eeb709d1c3d362ef5a957b42af753e517830661532b3095b71b6b260302",
                    "sha256:76f79c98944fa5e0712859c5e8017ed31c7e0b48a00ac84590975f8b67958ed6",
                    "sha256:8407d88f223e8d7cde6a8fde8466458531f5a7d94d7282a67b53fa4e18ee4bef",
                    "sha256:bfdbbb25f22e6f35d95cea9272e971bf42fa6cdba8830c43bc0e4b9741ef39c3",
                    "sha256:0c0524869e9736b6d62b11f1ec83840317265294399aaf8d6b84dd469d14e93b",
                    "sha256:2649c510d26509b805a21cc60ba395873ef1630aecb1e3319e2fd6d18ca6424c",
                    "sha256:e16e1ee9da31205feb5eb73f6072420616e24a398136270b4168d97618783ec6",
                    "sha256:bb7031e8544efe9337c000c25762dfd14b2f9445a3e95423fec9db2e2ff26ea3",
                    "sha256:b3d00bb99d835e2009c68207f264b4a6375c843b710ee65b3f3dff440996b981",
                    "sha256:ff3c026986bfce107e016570d047afe2aaf5dbb00624fd1f9886f59e387d33fb",
                    "sha256:0fffce2de95597133f087872ba5b460f479dea562cb724bd759b9be2a9644ff9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25b7e1e30cdcffc1adff88c4d5468f2df553627665e0cfd52ce4b690d1936621",
                    "sha256:132218125a6609b0530f548801968982e66ec1799d97d1dbb5c0ea28be4d91ae",
                    "sha256:21985f63578b6f5fcb2f87939765f2928147b22da7634e3b7dc73afe63a53d2b",
                    "sha256:6620750f906089b9056443e2d1756a1a22ec82cc5bf6197dd08e55e5c8d8219c",
                    "sha256:4805c03c960494608fe751e91cb992cee389ba806a3ea371f2961f08798fbf02",
                    "sha256:f420bdd8647041efb63d902a4c44c6076f566059b00efaadd128838f04bca263",
                    "sha256:010fb3d4612e3ba348cc06bda3d09cfca58c9d3a788a46a953a3da7355a61110",
                    "sha256:981bef24125c69a4e44f4a2e7e0f67c2eb4c80efec88f7d34516396bda15636d",
                    "sha256:bcd59521289e5fe8d8a40af2b59feb6b7add9549808cee5cc257707e9be1f805",
                    "sha256:7d16279a3c76182618a959fea52b83129d99bd1f32bc316467b6c36f4b399166",
                    "sha256:dc48c8002142a6ae106ec3eed950b59e159dd01d40c615e0a78a52f0444c457a",
                    "sha256:750115b627d3bd9179e439b9d6e2a30d183201a4beb598ae194f47c9c7858514",
                    "sha256:a72ddb05bbbbc7dc022eac741899d24285e0538b8156da2dffa58fb91ed6edb3",
                    "sha256:699b371eb2938f0907afeace3fe29beaa6d5de008c69e016358cd176330bca0a",
                    "sha256:a44e188555f3220d088a231c48ddea9709cf191a408de8b3e5c342218ed905a1",
                    "sha256:d310f2385a6ab87c6fb20860f4c22f6bc623b2765f7ab77b261836c3dbb50165",
                    "sha256:205824650b32b532b066d91726de06bf04779c96561a9e046c3c759c867c4bb2",
                    "sha256:03f682ddd7d9a677ec7dd53b0752339ef55bb84fdf186274e01c41ae15874ca6",
                    "sha256:dde3dc494ce11d5d58538cf326fd4772c5456b56d200dad6b54dabf25939b15b",
                    "sha256:c70dfc325b8e5cd203aaa7dea663802683fd550e1e1a2e9cbdc79977240176b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dc1f7269f5f8bf9754222a68bfdc9dc2d8126dea539cac75f0f34b4575690013",
                    "sha256:f0704df7187a1c3cca3b5238bd4daaa2da25477cc6920363d92875177b32b8c0",
                    "sha256:7341cff9f20c58db4fdc31acad20878030ad5535f118a60089a4de75d3bfd18f",
                    "sha256:1e69ccaf4e15db35846c71e50e4a07c247145df691f19a3fd2161b5f185591d9",
                    "sha256:5783fc7b8c0bea5a412601b7f38155e15e2233bb80eec49eafd4ec05a703133f",
                    "sha256:b3e4291b73c04b902abbe69cebde517c6ea36b0f60eb266956236a584def6f00",
                    "sha256:920cedefb8a6ff08fd108063140997871d9ff5234cd2965d94c76f186e75178d",
                    "sha256:636b61f252d27fe1e836aa3a5bb795eacee5e7c451613d089d1360d4572d6efb",
                    "sha256:b65ae4ab8dc72397fd2422d83c7a985b6bde34b37d29063abd1374a97995563f",
                    "sha256:178548f8a426d983b059abdc9227c889f3716f210a3df3086b94def7480e7892",
                    "sha256:30c7394624c28f20eade4c6767054ba2efdf2fb3665cfcdcc867eb323b7276c9",
                    "sha256:d1e7a8c4e760cc3e47a046e9a6345326650aa235e931cba02e0967149a708cdf",
                    "sha256:8721bcda649fedda82b3e57f3598176a1b00287d23f22e7469be02196d76ea93",
                    "sha256:11385c9f61219bee16f5203b9f85a8fe6ec50acd2ba5d0ddfb2fb19163ccfdee",
                    "sha256:bd3f74b72fbc0dd2fd4daafbc1c1dd871c633c0c3af452618edde9e716351380",
                    "sha256:63af34199ddd4c6d2823d78f9e7e07175a8820efd9bd8bb5bce8de9a60f1e276",
                    "sha256:46e2d96028cc5eeacd164a79d1e3fc6b9d87fd6fd41c2f04f0b933292ef9b23d",
                    "sha256:d5e683e9936c0e6b6e720c4dc4c6118e0c3ad2a2860515d12c99ffa4777cacb5",
                    "sha256:63072de1af16012cfa3243df30d070f91f835c7c778df044c5de68175278c503",
                    "sha256:a7638f4de416b8421695dbef3c54bb5c96455cb9783f92954044e218de0c3a8a",
                    "sha256:3795d211b536bc21d3fad65a0bf7dfc0b38eacff93a9cfe8eaa1a8253e274d1b",
                    "sha256:87eaddf26fdd06dd67777e5ac8239cdb7c7b52fa03cf7b99d8b37c712faf0486",
                    "sha256:6e5c2ee8dda7fed126dc9a7ee905afc896fd619adee806acc19e78f8802161e4",
                    "sha256:6aef82dde18526f7d17f100973711e9f94c08fcb77544581aef905353633d54d",
                    "sha256:bdc20f096e87549299638c1761de1e53de3c837c47c6a88d06651340caff2dfd",
                    "sha256:5e1f923d36d04a1a68a900a09db51d916d7d62c6a864383985cba44d64603596",
                    "sha256:3b1a399aaa2abb8960daf830b06b0bab5159ac5f3ca92ad6637902391c19fc9b",
                    "sha256:935f4df6dfa8b48d7bf1596b87b620177caaa34b13cc9a35d100e69a325d6b25",
                    "sha256:252dc4d55e539f4ab96dc0920e28616dec22eb46f7e5691eef467bb493221cc3",
                    "sha256:1bfbb332c45566102138f876712f5e848640d6d0b944c449253a65447c2bf3fc",
                    "sha256:ca60fef13fca6312c3fbb12160aa9ddd0c221435a81357553e45a8d77165d081",
                    "sha256:0fa167f4156e1b074524bee5b4605e7c68c2dbaed434af0f8510d82c2dc185dd",
                    "sha256:3b4f403d0089c5c4ca4186519b23890cff8638801aed20f6108e101b40221314",
                    "sha256:a98f5e407fc91f4c3648792d36c51f16b8ed1dcb492ed9e207d352375b6e46c7",
                    "sha256:0cf3a89f3e402df956e94a95e93c0f2a65f5551ac6c36f73423551b54cfa4758",
                    "sha256:8630f3b5bb6d211faeb8cdb826ff5ea23d7656eeb757b5f333be599b83ce0b48",
                    "sha256:2e934e6944bf8c56c29d1793790af512fdd17fe62cd51a8d83eb3a88948ec008",
                    "sha256:098517e420018f44e6862e8a3c6b1e7c17452f5edd1ad15a6cd601d987fd199b",
                    "sha256:02e743496ec3692e6c633660d96e92415affd4dd33cc42757fcf849d4a1492cb",
                    "sha256:34b3709c84cc7d471f2cef2a7238f3dcca51e773b9b37c2f21ce3d83214d4600",
                    "sha256:91bef4c1f56d8976711e2be9e3fe08d51081b9e9134ca20fe5ce814731b03350",
                    "sha256:32b4ce1a0b63b7d3d4a5614d92bd17e5ffabd5fbf5ac2fb43efe705481ed6f7d",
                    "sha256:a445c7c3c285f0a2b19d55d2b2ed7bfce88314ca34a7a98dbeb320249bae7f3d",
                    "sha256:6490ed3df29c0d88b90ac6ac965df4d54ead3eb97658b01254cf99dbe0f3c2e7",
                    "sha256:984bfde56cd3c2d03a959530fab4b8d30fa8bcbd34e7a51a9778ff41dc887d4c"
                ]
            }
        },
        "23.11": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.2.2.009",
                    "CUDA_DRIVER_VERSION=535.104.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.2.5.6",
                    "CUFFT_VERSION=11.0.8.103",
                    "CURAND_VERSION=10.3.3.141",
                    "CUSPARSE_VERSION=12.1.2.141",
                    "CUSOLVER_VERSION=11.5.2.141",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.1.4",
                    "NVJPEG_VERSION=12.2.2.4",
                    "CUDNN_VERSION=8.9.5.29",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.10",
                    "NSIGHT_SYSTEMS_VERSION=2023.3.1.92",
                    "NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "DALI_VERSION=1.30.0",
                    "DALI_BUILD=9783408",
                    "POLYGRAPHY_VERSION=0.49.0",
                    "TRANSFORMER_ENGINE_VERSION=0.12",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.10",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=71422337",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.build.id": "71422337",
                    "com.nvidia.build.ref": "798008b068e6dbd0088bab08098b0fce963b87b3",
                    "com.nvidia.cublas.version": "12.2.5.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.5.29",
                    "com.nvidia.cufft.version": "11.0.8.103",
                    "com.nvidia.curand.version": "10.3.3.141",
                    "com.nvidia.cusolver.version": "11.5.2.141",
                    "com.nvidia.cusparse.version": "12.1.2.141",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.1.4",
                    "com.nvidia.nsightcompute.version": "2023.2.2.3",
                    "com.nvidia.nsightsystems.version": "2023.3.1.92",
                    "com.nvidia.nvjpeg.version": "12.2.2.4",
                    "com.nvidia.pytorch.version": "2.1.0a0+32f93b1",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-11-20T01:51:36.108571999Z",
            "history": [
                {
                    "created": "2023-09-25T10:17:05.810142316Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.868115844Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.920084198Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.975064283Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:07.772475208Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:194c886b88876c1804cc5f80719669653c16a388b664147b7f22402105f533c4 in / "
                },
                {
                    "created": "2023-09-25T10:17:08.017400804Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:43.100806147Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ENV CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.3 com.nvidia.cublas.version=12.2.5.6 com.nvidia.cufft.version=11.0.8.103 com.nvidia.curand.version=10.3.3.141 com.nvidia.cusparse.version=12.1.2.141 com.nvidia.cusolver.version=11.5.2.141 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.1.4 com.nvidia.nvjpeg.version=12.2.2.4 com.nvidia.cudnn.version=8.9.5.29 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.10 com.nvidia.nsightsystems.version=2023.3.1.92 com.nvidia.nsightcompute.version=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ENV DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.218161852Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.310091701Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:44.735711429Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.067678599Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 PYTORCH_VERSION=2.1.0a0+32f93b1 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+32f93b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:23:01.336086947Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:23:04.248995601Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.23",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:24:01.456330072Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:24:01.463661997Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:21:28.299504227Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:28.502242374Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c find /usr/local/lib -type f -name \"libtbb*\" ! -regex '.*/libtbb.*\\.so\\.[0-9]*' -exec rm {} \\; # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.664175008Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.707382743Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:26:19.703570295Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:05:36.846675969Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:05:38.932765229Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:27.423140271Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:09:58.817203431Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:58.83347144Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:46:42.347455733Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:03.50961186Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:05.45210649Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.067843263Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.175074804Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.181389413Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.188953497Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.241091974Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.360581762Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.659240998Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:48:53.688676617Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:09:31.434716141Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.557103877Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.id=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.ref=798008b068e6dbd0088bab08098b0fce963b87b3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:47:32.331001902Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:47:32.331001902Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --upgrade pip setuptools # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:47:59.289234794Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:47:59.289234794Z",
                    "created_by": "ENV _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:49:28.541933135Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"h5py>=3.7.0\" \"mpi4py>=3.1.4\" \"netcdf4>=1.6.3\" \"ruamel.yaml>=0.17.22\" \"scikit-learn>=1.0.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:13.768256315Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"wandb>=0.13.7\" \"mlflow>=2.1.1\" \"pydantic>=1.10.2\" \"imageio>=2.28.1\" \"moviepy>=1.0.3\" \"tqdm>=4.60.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:24.158638634Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install git+https://github.com/romerojosh/benchy.git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:30.835566984Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install https://github.com/NVIDIA/torch-harmonics/archive/8826246cacf6c37b600cdd63fde210815ba238fd.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:37.285957676Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"tensorly>=0.8.1\" https://github.com/tensorly/torch/archive/715a0daa7ae0cbdb443d06780a785ae223108903.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:47.684902602Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:50:52.204172813Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Pip install for numcodecs for $TARGETPLATFORM exists, installing!\" &&         pip install numcodecs;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Numcodecs wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl;     else         echo \"Numcodecs wheel for $TARGETPLATFORM is not present, attempting to build from pip, but might fail\" && \tpip install numcodecs;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:01.271218919Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install /modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:05.856813552Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pyvista>=0.40.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:05.856813552Z",
                    "created_by": "ARG DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:51:05.856813552Z",
                    "created_by": "ENV DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:51:05.856813552Z",
                    "created_by": "ENV DGLBACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T00:51:25.87548456Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl;     else         echo \"No DGL wheel present, building from source\" && \tgit clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/1.1.2 && git submodule update --init --recursive && \tDGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g && \tcd python && \tpython setup.py install && \tpython setup.py build_ext --inplace;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:26.200059917Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /workspace/dgl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:48.500732986Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install \"numpy==1.22.4\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:48.719203906Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:51:55.89694174Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:52:38.612162839Z",
                    "created_by": "RUN /bin/sh -c cd /modulus/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:52:43.868450841Z",
                    "created_by": "RUN /bin/sh -c pip install \"protobuf==3.20.3\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T00:52:44.028283628Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:31:05.960819583Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T01:31:05.960819583Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --upgrade pip setuptools # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:31:12.629434436Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:31:23.721287379Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:31:28.081743164Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install /modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:32:03.83003892Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"chaospy>=4.3.7\" \"Cython==0.29.28\" \"numpy-stl==2.16.3\" \"opencv-python==4.5.5.64\"     \"scikit-learn==1.0.2\" \"symengine>=0.10.0\" \"sympy==1.12\" \"timm==0.5.4\" \"torch-optimizer==0.3.0\" \"transforms3d==0.3.1\"     \"typing==3.7.4.3\" \"pillow==10.0.1\" \"notebook==6.4.12\" \"mistune==2.0.3\" \"pint==0.19.2\" \"tensorboard>=2.8.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:32:03.83003892Z",
                    "created_by": "ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T01:32:20.525754793Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl;     else         echo \"No Tiny CUDA NN wheel present, building from source\" && \tpip install git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:32:20.525754793Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T01:32:35.825477194Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:33:23.616356943Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget  https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-aarch64.tar.gz && \ttar xvfz cmake-3.24.1-linux-aarch64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-aarch64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz && \ttar xvfz cmake-3.24.1-linux-x86_64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:33:24.002145032Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c rm -rf /root/NVIDIA-OptiX-SDK* /root/cmake* /external/pysdf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:33:24.002145032Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-20T01:33:37.292693973Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:33:52.653170868Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym/ && pip install . --no-deps # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:33:52.897210848Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:51:31.840667126Z",
                    "created_by": "COPY accompanying_licenses/ NVIDIA_Modulus_accompanying_licenses # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-20T01:51:36.108571999Z",
                    "created_by": "RUN /bin/sh -c pip install \"Pillow==10.0.1\" \"Werkzeug==3.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:01d4e4b4f381ac5a9964a14a650d7c074a2aa6e0789985d843f8eb3070b58f7d",
                    "sha256:28dedf274dd82e720c1e5c651c5fdbcafff8f9687d4a3d95af147e0e3caa8bb2",
                    "sha256:d12750ac86fb921cdc38acb4d5154a52de2e4e70f42330837f01bc421194ba6c",
                    "sha256:f12ed123586ee818842e5bd0db946e04f39d8d679c18b275df913498feb4281c",
                    "sha256:13b41d13cbee5b050a1d526c2ee6b2643ad86b4998e69a5348dc43819f3fb8e0",
                    "sha256:dddc962cd9c168b2b79181f7c266e35ff0cc87701ab6d9fb676f9bf6561513b0",
                    "sha256:5f8dc6c4d9ac310ba9c68b79b12a46409e112490eeae38019187ac4a83ea6199",
                    "sha256:f70bf143e96789fb387d63da983c432d2717de7f2df20c90cfe0c66aeedb3041",
                    "sha256:f7f51f3bc96eea52cf5019d3cce2900b02797f48e7ce3ac947b74e9662ea9dd6",
                    "sha256:0161fdcfae36218edd6eed2c11675216b65bb5d2d0a0aef3b8c51a626ecb60c1",
                    "sha256:54788d2d82c90da0d14e3aa9852003bc801d68836f19b9f64d4386b8c14b2349",
                    "sha256:6bcd3616240bb782802144d3b62423cf7f40dedf28772113620fa294887b4ec0",
                    "sha256:09e624be0b72bb2a021c9d78329d9715881af55036a1cef08dd2f0a2ba5c3410",
                    "sha256:c74bdcb9211d5d6f64afa325c6bf7468b457bf8f064fa3f8b55b21607cc859f3",
                    "sha256:21d954e6a416ec564cefa136556bcc8e741e5c6c4af825d1f6c999ea0b328f00",
                    "sha256:5b174f38560e3ecd84f4b94bf8cc003dec1ff45b0e4c9413c35d66503bfd258e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2806eb140016b5c0f986a4a3ced4ff16cba198545ac56a13f8876414285c45e1",
                    "sha256:d60d383e7163d1179d3a85bc2f5ce3ab53baff78c19e3b4b7787876cd9553440",
                    "sha256:ec6270dc409b411770b67b1a5be03e32791927ca3e63394819cc973ff490c240",
                    "sha256:1415db51731869bce000ca968badb595cb8198643c3a40b1cd870c607fbd6a46",
                    "sha256:68cf19ca728a8f0435b89dcfebda4648b71fe881adc7b3eaa301213265f06161",
                    "sha256:27fe47ebfc798292f3981c21d50cb3c67434633876b2c1766c4c1f1ec552a702",
                    "sha256:e2e83aa51a9106cea78ea3ec6b221535cf2d0f27ee4bb67f27e145550b59dee2",
                    "sha256:2ab813b215c89a908c64837a4c281f2db8ac27628fc83e13d09e9e7aed242949",
                    "sha256:faa34acefe1561de24aff89c42a9f92fdd2e5586a5916dbc6b1d3d2cdd7f0422",
                    "sha256:3d79c6d56fdfcdf551b7555aa59e29da3e4808a9ae79b8bfe4a620d8b2363749",
                    "sha256:6c351f5b1c8dec870099447272d85ddb05cb6e97c495ab668110614a60f4e560",
                    "sha256:e6184c0bb5cdb54c07f1da7144c82f450415663661c04f767d4e0cace772f5df",
                    "sha256:b2d49ce2bc6bec3d92a49e56323fd03173ef4165999c5eb117ace229e018a469",
                    "sha256:f85461e92ddc1499dbebef464ccab92326dbeca3c9d90d6876223966fa46b472",
                    "sha256:e4cd3f907933bd4cc80236d4099c960b426c5c3c382c9f38ad3ee6f3181612f5",
                    "sha256:bb5484601a829325272b258ec293ad68935739919cbe5a9c1c4b7e4325f0ed8b",
                    "sha256:139cd575257e409ee64bdb2125600869caf48c659cd7d02b8636b82a2c012eda",
                    "sha256:b7f1dcbdab2fcc4dbf6e6a07250b3944ffbd03591d09e0ccddf4861a9c1a702d",
                    "sha256:eb553ef7d25b4dc386d5e8a499df8dd14429cb107fd5946ca8555e691371497d",
                    "sha256:155c721b6284ca37e6ce51b8122c951aff2fa21d35379ca3a017b469b83ab9c8",
                    "sha256:ed5e1251541be38423dfc127231b7b9c7d77186442d4aeeb0efb1bd936114c44",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1711928b4f53420b7e5d91d0dedc354eea13fc64572beddc925339fce80c55cf",
                    "sha256:4c014f82d47fe7ef9c4bf96ccf842d3fe55b551f4d8d971d9027553fc6db259a",
                    "sha256:836e7db4f5ff5aef1c3f8db31a69af2d42cef7c6c30b6af951d48f8d2af9dbaa",
                    "sha256:f524f1e212a81161f416857ed9fa11c5b134c8d0d2ab933fb6ba7d49f162bccd",
                    "sha256:433de353acb295d85ea21656516e7edd0d061d25d97317e37b307fa4ef85cd87",
                    "sha256:bea9a8167b730df6b4224ac1eb15a6476ec39208e0ae16da0d026eed8a4c04f5",
                    "sha256:7c6347f52da7635eebfcbd847ed213060260359de7f55b9334605a38f59561ca",
                    "sha256:4269ab33beb0e3722f1880b55007c4d9e5696bd69e71373fc120bc4d03241559",
                    "sha256:228df752ad7db22f10ff9709a81e7e3a1baae859cfa3da87731ba91fa1198e5d",
                    "sha256:94aebe567cd6eca7c4a6bdb0b7f904dfd16aec8257783180cb3b477d0a48d2b5",
                    "sha256:7427246c0dd1957efb82ecc60abeac392b157b3fb93c975e7676e31e54cc3507",
                    "sha256:fd8ae1be7f409addedaff2d609f3e1a4d90ade33945c4475fba8536115d181eb",
                    "sha256:277c8286248292885e8224f6ae3bb70c7947c84415524dfc3acd31025809faa5",
                    "sha256:e84a7fbe8549ba057619d4fc7d23dfa0975f4764ae82abfc71acd790b7533d3d",
                    "sha256:d9712f97a35e89e30091e1d29cd2fe2bbf69127906f9dd196ffdc1a4522af06b",
                    "sha256:2bf661206172cbf5091ab6fc45429c9ae29ee4a87e38753fe1cd24b45f6f8d76",
                    "sha256:b476cd00d4f1f18eb9b91acdf199a59fde4c9cdafbbc61ec9b83d186a2df07cd",
                    "sha256:6ade707b68fd82c517507222372899949597ee970dd8acdac1b27fddccb28476",
                    "sha256:616b863804fabe13136aac32798b76e26f95cb6dc701702f6d60468b5e850032",
                    "sha256:38e5d6ce3ecd0c39716cca489f63008c13ce6da018543cc516123e3a2f1b6776",
                    "sha256:08fc8d294ed4d37263c20f772e120e17bc8a0bb1b930dcc7cf36a90a3ddb3df3",
                    "sha256:f6289233322543a642d4029e1537df3678c67a26253cdee0022ac1cf8e7e32d9",
                    "sha256:4bddc8fd427bb80795af09f27dc172a3c68eb2674eedef28b69aa98c8f4fe881",
                    "sha256:86a23e6ef39eccdf74a92c7946124eea03796da0e0b063321f0d308674c77940",
                    "sha256:4ee2e2a28a6e45009262f91ea464aacbd1dd9425d68b1a65f68be2a6cb097d6a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b3acc318a40f655ecef1a9072d100d2350b89b4a6736625b9e277c9afb025053",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:08fc8d294ed4d37263c20f772e120e17bc8a0bb1b930dcc7cf36a90a3ddb3df3",
                    "sha256:cc385142922516d04eef8a074ea6a36b9765d33f947795f22beb6ce1363b53d4",
                    "sha256:d2be0fa96f93c4d118b71c57fa2f8eecf5710b848e1aeeaf896913727653bbd7",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebed3e80db937b10464f5b61b08d7c92e7e064adfd57ba8f7acc5439ab9fa625",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80106755f36d3c9801946403cbe306467407bfa3fa8437e3bf760a526b3e93b8",
                    "sha256:a4f3686e0a8fd0e8c83f531f6bdaad5c77df660b7bef6706dde428485ef04b55",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ce67526ff71cbd947d78c3247a1f11d66b769e3b60350542e7eee8c455e98bb7",
                    "sha256:f7c85628c0cc6064b8703ddf09582106fe88e6163b4654c06dca755f6eef1719",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80d1cc7a45765eefc8f96cab00a062825d0346a09b6a38dd3fdb0989e76677d6",
                    "sha256:63fc85126dfb9a215cac9a973d86eb30fda6dfffe6a6b96f63266ca025124c9a",
                    "sha256:acaeb91ffbfcbf9950b56ff2d8475c21ee72ebe0b0582bd310be8cd1de33539a",
                    "sha256:ec390d1a8c983fb00f92b79602a488c0b699a71928e2656941fcec8846cbee99"
                ]
            }
        },
        "24.01.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.32.0",
                    "DALI_BUILD=10610166",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.1",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.12",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=12287551",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "MODULUS_GIT_HASH=85c10f9",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "MODULUS_SYM_GIT_HASH=bd51285",
                    "NVIDIA_MODULUS_VERSION=24.01"
                ],
                "Entrypoint": [
                    "/opt/nvidia/modulus_env.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.build.id": "76438008",
                    "com.nvidia.build.ref": "b3f725706edbd7cc21a22384237d38b257704796",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-23T20:26:43.811453129Z",
            "history": [
                {
                    "created": "2023-12-01T07:49:48.303109678Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.361266157Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.422844867Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.47184759Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:50.128319304Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:36d444e2cede3abe58191dcf28890b874c0908f5259bf7e8855338555701c4c5 in / "
                },
                {
                    "created": "2023-12-01T07:49:50.47166003Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.882755851Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.824624672Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ENV NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ENV DALI_VERSION=1.32.0 DALI_BUILD=10610166 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.374899763Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.32.0 DALI_BUILD=10610166 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.1 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.480150605Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:47.60033498Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.759472786Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:51:50.119732688Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:51:50.119732688Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:33.793723021Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:38.513706184Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:39.273503786Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:39.307831754Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:25:49.352753801Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.528280353Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.860487212Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.860487212Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.932474029Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:31:10.925738195Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:31:13.308562062Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:20.592497695Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:29.700258341Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:29.700258341Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:36:51.769810404Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:51.785966774Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:09:43.886646867Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:10:12.197744496Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:10:14.199098079Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.21794717Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.327649414Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.334661215Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.340987431Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.389512602Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.496183437Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.750058236Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:52.372103424Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:52.372103424Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:12:07.517238819Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:12:08.348154206Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:12:08.348154206Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:32:09.377040698Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.534759317Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=76438008",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "LABEL com.nvidia.build.id=76438008",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "LABEL com.nvidia.build.ref=b3f725706edbd7cc21a22384237d38b257704796",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:05.346540732Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:05.346540732Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:21.163349382Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:21.163349382Z",
                    "created_by": "ENV _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:27.077559096Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"h5py>=3.7.0\" \"netcdf4>=1.6.3\" \"ruamel.yaml>=0.17.22\" \"scikit-learn>=1.0.2\" \"cftime>=1.6.2\" \"einops>=0.7.0\" \"pyspng>=0.1.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:47.197683998Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"wandb>=0.13.7\" \"mlflow>=2.1.1\" \"pydantic>=1.10.2\" \"imageio>=2.28.1\" \"moviepy>=1.0.3\" \"tqdm>=4.60.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:57.723832791Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:02.865349536Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Pip install for numcodecs for $TARGETPLATFORM exists, installing!\" &&         pip install --no-cache-dir numcodecs;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Numcodecs wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl;     else         echo \"Numcodecs wheel for $TARGETPLATFORM is not present, attempting to build from pip, but might fail\" && \tpip install --no-cache-dir numcodecs;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:11.803859184Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --no-cache-dir /modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install --no-cache-dir \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"pyvista>=0.40.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ARG DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ENV DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ENV DGLBACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:36.857108734Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl;     else         echo \"No DGL wheel present, building from source\" && \tgit clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/1.1.2 && git submodule update --init --recursive && \tDGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g && \tcd python && \tpython setup.py install && \tpython setup.py build_ext --inplace;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:37.084178669Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /workspace/dgl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:59.090189727Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install --no-cache-dir \"numpy==1.22.4\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:59.348412359Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:08.552495857Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:49.593540502Z",
                    "created_by": "RUN /bin/sh -c cd /modulus/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir \"protobuf==3.20.3\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "ARG MODULUS_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "ENV MODULUS_GIT_HASH=85c10f9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:36:54.799517629Z",
                    "created_by": "RUN |1 MODULUS_GIT_HASH=85c10f9 /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:05:48.685963812Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:05:48.685963812Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:05:57.466937501Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:10.80202186Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:14.712566846Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --no-cache-dir /modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install --no-cache-dir \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:48.940044837Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"chaospy>=4.3.7\" \"Cython==0.29.28\" \"numpy-stl==2.16.3\" \"opencv-python==4.5.5.64\"     \"scikit-learn==1.0.2\" \"symengine>=0.10.0\" \"sympy==1.12\" \"timm==0.5.4\" \"torch-optimizer==0.3.0\" \"transforms3d==0.3.1\"     \"typing==3.7.4.3\" \"pillow==10.0.1\" \"notebook==6.4.12\" \"mistune==2.0.3\" \"pint==0.19.2\" \"tensorboard>=2.8.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:48.940044837Z",
                    "created_by": "ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:07:05.081323583Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl;     else         echo \"No Tiny CUDA NN wheel present, building from source\" && \tpip install --no-cache-dir git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:07:05.081323583Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:07:20.182290743Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:10.815619339Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget  https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-aarch64.tar.gz && \ttar xvfz cmake-3.24.1-linux-aarch64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-aarch64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz && \ttar xvfz cmake-3.24.1-linux-x86_64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:11.210548656Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c rm -rf /root/NVIDIA-OptiX-SDK* /root/cmake* /external/pysdf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:11.210548656Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:08:24.577380813Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:40.883086875Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym/ && pip install --no-cache-dir . --no-deps # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "ARG MODULUS_SYM_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "ENV MODULUS_SYM_GIT_HASH=bd51285",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:32.284595534Z",
                    "created_by": "COPY accompanying_licenses/ NVIDIA_Modulus_accompanying_licenses # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:36.289717544Z",
                    "created_by": "RUN /bin/sh -c pip install \"Pillow==10.0.1\" \"Werkzeug==3.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.763935102Z",
                    "created_by": "RUN /bin/sh -c pip install \"pyarrow>=14.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "ENV NVIDIA_MODULUS_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "COPY 13-modulus-versions.sh /opt/nvidia/entrypoint.d/13-modulus-versions.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "COPY modulus_env.sh /opt/nvidia/modulus_env.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ARG NVIDIA_MODULUS_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=12287551",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/modulus_env.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ceb9643fb36a8ac65882c07e7b2fff9fd117673d6784221a83d3ad076a9733e",
                    "sha256:b5724c8b6acf9860372dcfe573550e21990ba7de807a7810a02d49349e684556",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c5c5573a8f787f8b6f71ee8845a1b1635ebb8c5e0d968bb16f3797b5420850d3",
                    "sha256:81548b127d5e34a2dff0311f92ca3788f20d2a5a65255c40183fcde64d4db7d6",
                    "sha256:bb668f86ed90962ce0481ddd48bb907dd86da79b705c81f0e649f47c0d85a35e",
                    "sha256:2a1ce8564d505cdbfeabe384dd9c6ed5bbd086937aa5e12944effa3aa9bab731",
                    "sha256:46cab564457586fdf6c2a599499edb00f6a3d004dcced4e5f4db0e4199252ff3",
                    "sha256:4eae81cdb8a08f1be18623cb3ea8e2a8b4c1cdd2ece62d5c632d46bc44b27a64",
                    "sha256:9a1417c6f900b15d700e7040ad6a0056178e9ae829dfef9d216d14e213d0c52a",
                    "sha256:920806e544250cf4c73ea295b4e4863b03cc7aa29d3cdfbd4ae36f258960d081",
                    "sha256:f34599c4bdc911393f8e5ea8662e7239f748b85d473411875ddebe82126cc9fd",
                    "sha256:fcdd798da1a0aa670cd96e8889c77f9fbe0921575ed4b3f0f50e58c1288fd7f0",
                    "sha256:b53d2f12a1c2553a60558da0e0584a48d833a9110ff45831d215df6dbbcf4b05",
                    "sha256:b1ebb1d479d5e049d2063bb089f3075fc33fd16ccf59928512e404d09cd50b1b",
                    "sha256:b3e939e6c8e0c554109a8b81f14685f20eac82433be2cfc75855fc18f9299716",
                    "sha256:9eda4edc1633cefc50303bf839b47708c2c9cb3f9480e7d4a4729b6de26d8557",
                    "sha256:61bde7459fb89998702bcab0c86c9bc64eb7bbdbd8a857b05e1f9d4ae4a8378f",
                    "sha256:7a857f78ec6679aae5a02c36667c48147dc7987ba68efbae791cf134dfd574b8",
                    "sha256:dad4a256c52f5c7e1a0752df9dba3b247d217e22f7583516c4e882b15226405d",
                    "sha256:cba65eb74a107d904b9263de5c76799b1a5fa775c8090a74349d3c1cc65b1534",
                    "sha256:c946ecdb71868a52be2dcaf53b5ff7d0c57ccbdf0dad264871375b55ceb48a0a",
                    "sha256:ca21ce5ec5421cdc570246290a4dfa64c775e80812fea82590aefa1b646aea9f",
                    "sha256:052c1bbe21365e691e416b4f718cf50895e81f0c15e303ff12172b1ca8bb6933",
                    "sha256:269ce350b6879e341ab7bda6bae27b27e2d24c84423438787c7f66907a310b45",
                    "sha256:5bc31c9110dcdf29304ec43e0b67cec6e61b561bf1acbde5038843d099200854",
                    "sha256:cab94ce2e4f8477cf0619edd6179e3e04599904b17fb8cddd9597b5eb60ce811",
                    "sha256:3a1441d4132289f8019b09d5919a8dc93507350a33e49b5925b4e808385a2aaf",
                    "sha256:de619441e172cf81b3c4370608d995203cf5e13d291326e80d54c0dacc91a544",
                    "sha256:9f52ed62cb9b6a7766e1635ed24de2372afde55843adff5af602e460f1c71cb6",
                    "sha256:e6bb64dae3b9971b4d78452b7a3bc50aa92ace7dffad69eeddc4162d0339dc33",
                    "sha256:6a31a6e8e18ef831414737af70ed695c15f9347a5b4eefcf60552e2177928008",
                    "sha256:3b318b0ad8c5bc017fc73cff571b57e92018e22a9634e70d341031ca560bd3a3",
                    "sha256:9b157dc3182264aaac8150c04813a8257ea4ceb3e83b16df999c45378d5f93ae",
                    "sha256:b335cd9dc845754c7dbdf2e035105cae785eaedff09e02b9e8197542919e92d4",
                    "sha256:6a8771b4858c731a39c6ff61ce39571cd24f592fd82b493a550c053fc71e65f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db01a0126c98f54ce69513925b864ce1d2aeb57e57a51c847e3058063d24fe1b",
                    "sha256:5b45d2b43e5a20625bb1c05dc128b11931bb6f588361324b88ca7e15d8a2bb24",
                    "sha256:a7e3db49e47c4e14dfb6c335cb57c9fc2d42317d8a7857b4e0de3dbdea127ad6",
                    "sha256:10fda3f573fd63f1b34ef69c688db11e4a3247a12ec81c23e9d72478bf2f8199",
                    "sha256:d9284b5c60d02e27aeadf242398d705fe1bd5ea89d4010629d24623fa20ca5e1",
                    "sha256:14ff54f6d038c0350b3fcf9a1c605c6b38337b22392bd86b850dfbde78795b5d",
                    "sha256:ac52388647674b38379bcbc0784a26f052c5ed4fab671cd7dfdcf8ac71e847cf",
                    "sha256:51d9d41b5bf75dbc949348ae2208cb6dca464f39f20a67ec799b4ca8686bd54d",
                    "sha256:56516890015ad16d053d6e1e5c55d9d7b7b92fdf1fd4e6f7aa91809a52b0a069",
                    "sha256:517a3a512c868f98b18ea8ddc1b3c398d83189ba78ee080af5de57b36353a925",
                    "sha256:78d3220ff6263a38eb18e43c4d358b00c316bf4f4733d52e22ee4fda8906f630",
                    "sha256:78d74b1505f673f12508a48841cc02a94d1cf20eae04f69a54c8155da2a0dd1b",
                    "sha256:b3dc47f57c3222ef22e4ac57121c592e884b22becfdd09f60679426eda9cab27",
                    "sha256:85ba48420bdba97cb23f7cd2f935322b534918e9a7ba0b232e884a7fdd065123",
                    "sha256:8cf197163f90b7157796cd21f8b8f5adc3f74dc55c0563839fe38dcdb05f341c",
                    "sha256:1947e91603ceb25b2e1381e8a945bccb5efc3d9f9b9fbdbd94be4ebb1ebccda0",
                    "sha256:8632908bf705cb429e78b9b450e28444dbb33b7e69451cb683b39365625bfc23",
                    "sha256:c196b6558d90b10bf7da975147df32830d9d37396f185cba97c3fae6f4548bfd",
                    "sha256:5e48a19df171a2755629a4bd84b7f30388be071f27d1fc541b9b21926b67edbe",
                    "sha256:b0848570c9ec1692ccc5f3e79a9226d38db48d858c21191958dded827c2f6dbc",
                    "sha256:016dab59bafe93a5f6f247b709c985c6e8d096cbc9036ddd7f37c6b098719a80",
                    "sha256:cde7ecea96560f094feee34d4217ea9c0e20b8666854c4e341a86dace9094478",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebfa4a4164ee01dbf4864c615e7e4e061a4f32d28790152341d51079025065db",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:c196b6558d90b10bf7da975147df32830d9d37396f185cba97c3fae6f4548bfd",
                    "sha256:d2bd84e2f636cec9c12add0afb8f3bda43db37916206e740c515e8267e4d3be0",
                    "sha256:550cbddf987e24b03530f1f306c74c91c184e295f54871ae6cf36e0920d4f5cf",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d5af259af39f6c1c20d63de52a4adaff2aabe226da248404a6db6c55ec7a5dbd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c83aa54807ef116841496a6040b87a0738bf0f67929bf441eea56817ad3edce",
                    "sha256:a98742e1d43fba0d6e3e1b6adc9f69a0c21d43e5286f0a5d1d0fc6bf826414f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:58f43a48c4f1e1a707088941d9c4dfe5da785f90c2200bcd9c75aa9e91dd5420",
                    "sha256:9683836c141940df2d62250ee4a41146d112578487dab26be311553c74b1b38f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:92284c478743bde3fdf04940c8d2a035da6743f716a23bbe32252c15d148394c",
                    "sha256:63fc85126dfb9a215cac9a973d86eb30fda6dfffe6a6b96f63266ca025124c9a",
                    "sha256:a7d2a2a9ee29fdbde9620a323c9b5ff1a6910ef176a96dcfd9cfe147a4e56f1a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ea9811c773a1da8d0e575957634977395e1469c91d837264c6a536771927e1ee",
                    "sha256:641ae96371541c6996e4b5300245f2cef895020c35eca37aa66a857b74831520",
                    "sha256:af1bae2c4f3ab6d7d75e700a90ebfeeb21a23159f1d29e2b176c8f3746de7f91"
                ]
            }
        },
        "24.01": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.32.0",
                    "DALI_BUILD=10610166",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.1",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.12",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=12287551",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "MODULUS_GIT_HASH=85c10f9",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "MODULUS_SYM_GIT_HASH=bd51285",
                    "NVIDIA_MODULUS_VERSION=24.01"
                ],
                "Entrypoint": [
                    "/opt/nvidia/modulus_env.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.build.id": "76438008",
                    "com.nvidia.build.ref": "b3f725706edbd7cc21a22384237d38b257704796",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-23T20:26:43.811453129Z",
            "history": [
                {
                    "created": "2023-12-01T07:49:48.303109678Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.361266157Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.422844867Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:48.47184759Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T07:49:50.128319304Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:36d444e2cede3abe58191dcf28890b874c0908f5259bf7e8855338555701c4c5 in / "
                },
                {
                    "created": "2023-12-01T07:49:50.47166003Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.882755851Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:09.986331547Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.824624672Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:28:23.914769931Z",
                    "created_by": "ENV NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.324809685Z",
                    "created_by": "ENV DALI_VERSION=1.32.0 DALI_BUILD=10610166 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.374899763Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.32.0 DALI_BUILD=10610166 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.1 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.47019634Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.475456849Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:31:05.480150605Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:47.60033498Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.739650739Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:54.759472786Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:51:50.119732688Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T20:51:50.119732688Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:29.307515957Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:33.793723021Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:38.513706184Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:39.273503786Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:39.307831754Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:24:58.16501397Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:25:49.352753801Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.528280353Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.860487212Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:26:11.860487212Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.932474029Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:28:06.966295074Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:30:42.119944575Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:31:10.925738195Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:31:13.308562062Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.12 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:20.592497695Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:29.700258341Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:29.700258341Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T21:36:51.769810404Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T21:36:51.785966774Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:09:43.886646867Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:10:12.197744496Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:10:14.199098079Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.21794717Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.327649414Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.334661215Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.340987431Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.389512602Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.496183437Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:08.750058236Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:52.372103424Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:11:52.372103424Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:12:07.517238819Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:12:08.348154206Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:12:08.348154206Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:15:08.4213577Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:32:09.377040698Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.376741667Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.534759317Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=76438008",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "LABEL com.nvidia.build.id=76438008",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T22:36:59.542074522Z",
                    "created_by": "LABEL com.nvidia.build.ref=b3f725706edbd7cc21a22384237d38b257704796",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:05.346540732Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:05.346540732Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:21.163349382Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:21.163349382Z",
                    "created_by": "ENV _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:34:27.077559096Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"h5py>=3.7.0\" \"netcdf4>=1.6.3\" \"ruamel.yaml>=0.17.22\" \"scikit-learn>=1.0.2\" \"cftime>=1.6.2\" \"einops>=0.7.0\" \"pyspng>=0.1.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:47.197683998Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"wandb>=0.13.7\" \"mlflow>=2.1.1\" \"pydantic>=1.10.2\" \"imageio>=2.28.1\" \"moviepy>=1.0.3\" \"tqdm>=4.60.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:34:57.723832791Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:02.865349536Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Pip install for numcodecs for $TARGETPLATFORM exists, installing!\" &&         pip install --no-cache-dir numcodecs;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Numcodecs wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl;     else         echo \"Numcodecs wheel for $TARGETPLATFORM is not present, attempting to build from pip, but might fail\" && \tpip install --no-cache-dir numcodecs;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:11.803859184Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --no-cache-dir /modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install --no-cache-dir \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"pyvista>=0.40.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ARG DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ENV DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:16.701489688Z",
                    "created_by": "ENV DGLBACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:35:36.857108734Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/dgl-1.1.2-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/dgl-1.1.2-cp310-cp310-linux_aarch64.whl;     else         echo \"No DGL wheel present, building from source\" && \tgit clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/1.1.2 && git submodule update --init --recursive && \tDGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g && \tcd python && \tpython setup.py install && \tpython setup.py build_ext --inplace;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:37.084178669Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /workspace/dgl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:59.090189727Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.15.1-cp310-cp310-linux_aarch64.whl;     else \techo \"No custom wheel present, skipping\" && \tpip install --no-cache-dir \"numpy==1.22.4\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:35:59.348412359Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:08.552495857Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:49.593540502Z",
                    "created_by": "RUN /bin/sh -c cd /modulus/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir \"protobuf==3.20.3\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "ARG MODULUS_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:36:54.650703754Z",
                    "created_by": "ENV MODULUS_GIT_HASH=85c10f9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T19:36:54.799517629Z",
                    "created_by": "RUN |1 MODULUS_GIT_HASH=85c10f9 /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:05:48.685963812Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:05:48.685963812Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:05:57.466937501Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:10.80202186Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:14.712566846Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --no-cache-dir /modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install --no-cache-dir \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:48.940044837Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"chaospy>=4.3.7\" \"Cython==0.29.28\" \"numpy-stl==2.16.3\" \"opencv-python==4.5.5.64\"     \"scikit-learn==1.0.2\" \"symengine>=0.10.0\" \"sympy==1.12\" \"timm==0.5.4\" \"torch-optimizer==0.3.0\" \"transforms3d==0.3.1\"     \"typing==3.7.4.3\" \"pillow==10.0.1\" \"notebook==6.4.12\" \"mistune==2.0.3\" \"pint==0.19.2\" \"tensorboard>=2.8.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:06:48.940044837Z",
                    "created_by": "ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:07:05.081323583Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl;     else         echo \"No Tiny CUDA NN wheel present, building from source\" && \tpip install --no-cache-dir git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:07:05.081323583Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:07:20.182290743Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:10.815619339Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget  https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-aarch64.tar.gz && \ttar xvfz cmake-3.24.1-linux-aarch64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-aarch64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz && \ttar xvfz cmake-3.24.1-linux-x86_64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:11.210548656Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c rm -rf /root/NVIDIA-OptiX-SDK* /root/cmake* /external/pysdf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:11.210548656Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:08:24.577380813Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:40.883086875Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym/ && pip install --no-cache-dir . --no-deps # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "ARG MODULUS_SYM_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:08:41.129426427Z",
                    "created_by": "ENV MODULUS_SYM_GIT_HASH=bd51285",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:32.284595534Z",
                    "created_by": "COPY accompanying_licenses/ NVIDIA_Modulus_accompanying_licenses # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:36.289717544Z",
                    "created_by": "RUN /bin/sh -c pip install \"Pillow==10.0.1\" \"Werkzeug==3.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.763935102Z",
                    "created_by": "RUN /bin/sh -c pip install \"pyarrow>=14.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "ENV NVIDIA_MODULUS_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.794364688Z",
                    "created_by": "COPY 13-modulus-versions.sh /opt/nvidia/entrypoint.d/13-modulus-versions.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "COPY modulus_env.sh /opt/nvidia/modulus_env.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ARG NVIDIA_MODULUS_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=12287551",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T20:26:43.811453129Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/modulus_env.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ceb9643fb36a8ac65882c07e7b2fff9fd117673d6784221a83d3ad076a9733e",
                    "sha256:b5724c8b6acf9860372dcfe573550e21990ba7de807a7810a02d49349e684556",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c5c5573a8f787f8b6f71ee8845a1b1635ebb8c5e0d968bb16f3797b5420850d3",
                    "sha256:81548b127d5e34a2dff0311f92ca3788f20d2a5a65255c40183fcde64d4db7d6",
                    "sha256:bb668f86ed90962ce0481ddd48bb907dd86da79b705c81f0e649f47c0d85a35e",
                    "sha256:2a1ce8564d505cdbfeabe384dd9c6ed5bbd086937aa5e12944effa3aa9bab731",
                    "sha256:46cab564457586fdf6c2a599499edb00f6a3d004dcced4e5f4db0e4199252ff3",
                    "sha256:4eae81cdb8a08f1be18623cb3ea8e2a8b4c1cdd2ece62d5c632d46bc44b27a64",
                    "sha256:9a1417c6f900b15d700e7040ad6a0056178e9ae829dfef9d216d14e213d0c52a",
                    "sha256:920806e544250cf4c73ea295b4e4863b03cc7aa29d3cdfbd4ae36f258960d081",
                    "sha256:f34599c4bdc911393f8e5ea8662e7239f748b85d473411875ddebe82126cc9fd",
                    "sha256:fcdd798da1a0aa670cd96e8889c77f9fbe0921575ed4b3f0f50e58c1288fd7f0",
                    "sha256:b53d2f12a1c2553a60558da0e0584a48d833a9110ff45831d215df6dbbcf4b05",
                    "sha256:b1ebb1d479d5e049d2063bb089f3075fc33fd16ccf59928512e404d09cd50b1b",
                    "sha256:b3e939e6c8e0c554109a8b81f14685f20eac82433be2cfc75855fc18f9299716",
                    "sha256:9eda4edc1633cefc50303bf839b47708c2c9cb3f9480e7d4a4729b6de26d8557",
                    "sha256:61bde7459fb89998702bcab0c86c9bc64eb7bbdbd8a857b05e1f9d4ae4a8378f",
                    "sha256:7a857f78ec6679aae5a02c36667c48147dc7987ba68efbae791cf134dfd574b8",
                    "sha256:dad4a256c52f5c7e1a0752df9dba3b247d217e22f7583516c4e882b15226405d",
                    "sha256:cba65eb74a107d904b9263de5c76799b1a5fa775c8090a74349d3c1cc65b1534",
                    "sha256:c946ecdb71868a52be2dcaf53b5ff7d0c57ccbdf0dad264871375b55ceb48a0a",
                    "sha256:ca21ce5ec5421cdc570246290a4dfa64c775e80812fea82590aefa1b646aea9f",
                    "sha256:052c1bbe21365e691e416b4f718cf50895e81f0c15e303ff12172b1ca8bb6933",
                    "sha256:269ce350b6879e341ab7bda6bae27b27e2d24c84423438787c7f66907a310b45",
                    "sha256:5bc31c9110dcdf29304ec43e0b67cec6e61b561bf1acbde5038843d099200854",
                    "sha256:cab94ce2e4f8477cf0619edd6179e3e04599904b17fb8cddd9597b5eb60ce811",
                    "sha256:3a1441d4132289f8019b09d5919a8dc93507350a33e49b5925b4e808385a2aaf",
                    "sha256:de619441e172cf81b3c4370608d995203cf5e13d291326e80d54c0dacc91a544",
                    "sha256:9f52ed62cb9b6a7766e1635ed24de2372afde55843adff5af602e460f1c71cb6",
                    "sha256:e6bb64dae3b9971b4d78452b7a3bc50aa92ace7dffad69eeddc4162d0339dc33",
                    "sha256:6a31a6e8e18ef831414737af70ed695c15f9347a5b4eefcf60552e2177928008",
                    "sha256:3b318b0ad8c5bc017fc73cff571b57e92018e22a9634e70d341031ca560bd3a3",
                    "sha256:9b157dc3182264aaac8150c04813a8257ea4ceb3e83b16df999c45378d5f93ae",
                    "sha256:b335cd9dc845754c7dbdf2e035105cae785eaedff09e02b9e8197542919e92d4",
                    "sha256:6a8771b4858c731a39c6ff61ce39571cd24f592fd82b493a550c053fc71e65f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db01a0126c98f54ce69513925b864ce1d2aeb57e57a51c847e3058063d24fe1b",
                    "sha256:5b45d2b43e5a20625bb1c05dc128b11931bb6f588361324b88ca7e15d8a2bb24",
                    "sha256:a7e3db49e47c4e14dfb6c335cb57c9fc2d42317d8a7857b4e0de3dbdea127ad6",
                    "sha256:10fda3f573fd63f1b34ef69c688db11e4a3247a12ec81c23e9d72478bf2f8199",
                    "sha256:d9284b5c60d02e27aeadf242398d705fe1bd5ea89d4010629d24623fa20ca5e1",
                    "sha256:14ff54f6d038c0350b3fcf9a1c605c6b38337b22392bd86b850dfbde78795b5d",
                    "sha256:ac52388647674b38379bcbc0784a26f052c5ed4fab671cd7dfdcf8ac71e847cf",
                    "sha256:51d9d41b5bf75dbc949348ae2208cb6dca464f39f20a67ec799b4ca8686bd54d",
                    "sha256:56516890015ad16d053d6e1e5c55d9d7b7b92fdf1fd4e6f7aa91809a52b0a069",
                    "sha256:517a3a512c868f98b18ea8ddc1b3c398d83189ba78ee080af5de57b36353a925",
                    "sha256:78d3220ff6263a38eb18e43c4d358b00c316bf4f4733d52e22ee4fda8906f630",
                    "sha256:78d74b1505f673f12508a48841cc02a94d1cf20eae04f69a54c8155da2a0dd1b",
                    "sha256:b3dc47f57c3222ef22e4ac57121c592e884b22becfdd09f60679426eda9cab27",
                    "sha256:85ba48420bdba97cb23f7cd2f935322b534918e9a7ba0b232e884a7fdd065123",
                    "sha256:8cf197163f90b7157796cd21f8b8f5adc3f74dc55c0563839fe38dcdb05f341c",
                    "sha256:1947e91603ceb25b2e1381e8a945bccb5efc3d9f9b9fbdbd94be4ebb1ebccda0",
                    "sha256:8632908bf705cb429e78b9b450e28444dbb33b7e69451cb683b39365625bfc23",
                    "sha256:c196b6558d90b10bf7da975147df32830d9d37396f185cba97c3fae6f4548bfd",
                    "sha256:5e48a19df171a2755629a4bd84b7f30388be071f27d1fc541b9b21926b67edbe",
                    "sha256:b0848570c9ec1692ccc5f3e79a9226d38db48d858c21191958dded827c2f6dbc",
                    "sha256:016dab59bafe93a5f6f247b709c985c6e8d096cbc9036ddd7f37c6b098719a80",
                    "sha256:cde7ecea96560f094feee34d4217ea9c0e20b8666854c4e341a86dace9094478",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ebfa4a4164ee01dbf4864c615e7e4e061a4f32d28790152341d51079025065db",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:c196b6558d90b10bf7da975147df32830d9d37396f185cba97c3fae6f4548bfd",
                    "sha256:d2bd84e2f636cec9c12add0afb8f3bda43db37916206e740c515e8267e4d3be0",
                    "sha256:550cbddf987e24b03530f1f306c74c91c184e295f54871ae6cf36e0920d4f5cf",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d5af259af39f6c1c20d63de52a4adaff2aabe226da248404a6db6c55ec7a5dbd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c83aa54807ef116841496a6040b87a0738bf0f67929bf441eea56817ad3edce",
                    "sha256:a98742e1d43fba0d6e3e1b6adc9f69a0c21d43e5286f0a5d1d0fc6bf826414f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:58f43a48c4f1e1a707088941d9c4dfe5da785f90c2200bcd9c75aa9e91dd5420",
                    "sha256:9683836c141940df2d62250ee4a41146d112578487dab26be311553c74b1b38f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:92284c478743bde3fdf04940c8d2a035da6743f716a23bbe32252c15d148394c",
                    "sha256:63fc85126dfb9a215cac9a973d86eb30fda6dfffe6a6b96f63266ca025124c9a",
                    "sha256:a7d2a2a9ee29fdbde9620a323c9b5ff1a6910ef176a96dcfd9cfe147a4e56f1a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ea9811c773a1da8d0e575957634977395e1469c91d837264c6a536771927e1ee",
                    "sha256:641ae96371541c6996e4b5300245f2cef895020c35eca37aa66a857b74831520",
                    "sha256:af1bae2c4f3ab6d7d75e700a90ebfeeb21a23159f1d29e2b176c8f3746de7f91"
                ]
            }
        },
        "24.04": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.4.0.041",
                    "CUDA_DRIVER_VERSION=550.54.14",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.20.5",
                    "CUBLAS_VERSION=12.4.2.65",
                    "CUFFT_VERSION=11.2.0.44",
                    "CURAND_VERSION=10.3.5.119",
                    "CUSPARSE_VERSION=12.3.0.142",
                    "CUSOLVER_VERSION=11.6.0.99",
                    "CUTENSOR_VERSION=2.0.1.2",
                    "NPP_VERSION=12.2.5.2",
                    "NVJPEG_VERSION=12.3.1.89",
                    "CUDNN_VERSION=9.0.0.306+cuda12.3",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2024.2.1.38",
                    "NSIGHT_COMPUTE_VERSION=2024.1.0.13",
                    "DALI_VERSION=1.35.0",
                    "DALI_BUILD=12768324",
                    "POLYGRAPHY_VERSION=0.49.7",
                    "TRANSFORMER_ENGINE_VERSION=1.4",
                    "LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "GDRCOPY_VERSION=2.3.1-1",
                    "HPCX_VERSION=2.18",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.16.0",
                    "OPENMPI_VERSION=4.1.7",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58",
                    "PYTORCH_VERSION=2.3.0a0+40ec155e58",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.03",
                    "NVFUSER_BUILD_VERSION=f73ff1bc6a",
                    "NVFUSER_VERSION=f73ff1bc6a",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "NCCL_WORK_FIFO_DEPTH=4194304",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=14160669",
                    "_CUDA_COMPAT_TIMEOUT=90",
                    "DGL_BACKEND=pytorch",
                    "DGLBACKEND=pytorch",
                    "MODULUS_GIT_HASH=eff54e6",
                    "TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "MODULUS_SYM_GIT_HASH=cab5b30",
                    "NVIDIA_MODULUS_VERSION=24.04"
                ],
                "Entrypoint": [
                    "/opt/nvidia/modulus_env.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.build.id": "85286408",
                    "com.nvidia.build.ref": "154032c431742c7fde97a2fdad674917592306e5",
                    "com.nvidia.cublas.version": "12.4.2.65",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306+cuda12.3",
                    "com.nvidia.cufft.version": "11.2.0.44",
                    "com.nvidia.curand.version": "10.3.5.119",
                    "com.nvidia.cusolver.version": "11.6.0.99",
                    "com.nvidia.cusparse.version": "12.3.0.142",
                    "com.nvidia.cutensor.version": "2.0.1.2",
                    "com.nvidia.nccl.version": "2.20.5",
                    "com.nvidia.npp.version": "12.2.5.2",
                    "com.nvidia.nsightcompute.version": "2024.1.0.13",
                    "com.nvidia.nsightsystems.version": "2024.2.1.38",
                    "com.nvidia.nvjpeg.version": "12.3.1.89",
                    "com.nvidia.pytorch.version": "2.3.0a0+40ec155e58",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-04-11T07:40:14.371519224Z",
            "history": [
                {
                    "created": "2024-02-27T18:52:57.011931013Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:52:57.033105379Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:52:57.056007352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:52:57.070227736Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T18:52:58.867932393Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21c2e8d95909bec6f4acdaf4aed55b44ee13603681f93b152e423e3e6a4a207b in / "
                },
                {
                    "created": "2024-02-27T18:52:59.070788584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:16.410111284Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:24:16.513413067Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:16.513413067Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:16.513413067Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:16.513413067Z",
                    "created_by": "ENV CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:16.513413067Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:24:37.49809756Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:24:37.567616397Z",
                    "created_by": "ENV NCCL_VERSION=2.20.5 CUBLAS_VERSION=12.4.2.65 CUFFT_VERSION=11.2.0.44 CURAND_VERSION=10.3.5.119 CUSPARSE_VERSION=12.3.0.142 CUSOLVER_VERSION=11.6.0.99 CUTENSOR_VERSION=2.0.1.2 NPP_VERSION=12.2.5.2 NVJPEG_VERSION=12.3.1.89 CUDNN_VERSION=9.0.0.306+cuda12.3 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2024.2.1.38 NSIGHT_COMPUTE_VERSION=2024.1.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.20.5 CUBLAS_VERSION=12.4.2.65 CUFFT_VERSION=11.2.0.44 CURAND_VERSION=10.3.5.119 CUSPARSE_VERSION=12.3.0.142 CUSOLVER_VERSION=11.6.0.99 CUTENSOR_VERSION=2.0.1.2 NPP_VERSION=12.2.5.2 NVJPEG_VERSION=12.3.1.89 CUDNN_VERSION=9.0.0.306+cuda12.3 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2024.2.1.38 NSIGHT_COMPUTE_VERSION=2024.1.0.13 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.20.5 com.nvidia.cublas.version=12.4.2.65 com.nvidia.cufft.version=11.2.0.44 com.nvidia.curand.version=10.3.5.119 com.nvidia.cusparse.version=12.3.0.142 com.nvidia.cusolver.version=11.6.0.99 com.nvidia.cutensor.version=2.0.1.2 com.nvidia.npp.version=12.2.5.2 com.nvidia.nvjpeg.version=12.3.1.89 com.nvidia.cudnn.version=9.0.0.306+cuda12.3 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2024.2.1.38 com.nvidia.nsightcompute.version=2024.1.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.305236916Z",
                    "created_by": "ENV DALI_VERSION=1.35.0 DALI_BUILD=12768324 POLYGRAPHY_VERSION=0.49.7 TRANSFORMER_ENGINE_VERSION=1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.315751393Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:27:23.401231789Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.4.0.041 CUDA_DRIVER_VERSION=550.54.14 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.20.5 CUBLAS_VERSION=12.4.2.65 CUFFT_VERSION=11.2.0.44 CURAND_VERSION=10.3.5.119 CUSPARSE_VERSION=12.3.0.142 CUSOLVER_VERSION=11.6.0.99 CUTENSOR_VERSION=2.0.1.2 NPP_VERSION=12.2.5.2 NVJPEG_VERSION=12.3.1.89 CUDNN_VERSION=9.0.0.306+cuda12.3 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2024.2.1.38 NSIGHT_COMPUTE_VERSION=2024.1.0.13 DALI_VERSION=1.35.0 DALI_BUILD=12768324 POLYGRAPHY_VERSION=0.49.7 TRANSFORMER_ENGINE_VERSION=1.4 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:27:23.401231789Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.401231789Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.410711785Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:27:23.410711785Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.410711785Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:27:23.416540295Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:42:48.646441528Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3.1-1 HPCX_VERSION=2.18 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.16.0 OPENMPI_VERSION=4.1.7 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3.1-1 HPCX_VERSION=2.18 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.16.0 OPENMPI_VERSION=4.1.7 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.731675712Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T00:42:56.751464411Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:47:10.01479893Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3.1-1 HPCX_VERSION=2.18 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.16.0 OPENMPI_VERSION=4.1.7 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T00:47:10.01479893Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 PYTORCH_VERSION=2.3.0a0+40ec155e58 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.03",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=f73ff1bc6a NVFUSER_VERSION=f73ff1bc6a",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+40ec155e58",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T02:59:52.034753894Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T02:59:57.970119428Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:00:03.084376798Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:00:03.999778568Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:00:04.027345394Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:00:56.905972849Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:00:56.905972849Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:00:56.905972849Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:00:56.905972849Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:01:43.752602402Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:01:59.80557915Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:02:00.124667377Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:02:00.124667377Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:03:56.936167374Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:03:56.991473417Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:03:56.991473417Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:03:56.991473417Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:03:56.991473417Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:03:56.991473417Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:06:36.110892386Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:07:04.164283812Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install /opt/transfer/torch*.whl      && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:07:06.613534492Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.03 PYTORCH_BUILD_VERSION=2.3.0a0+40ec155e58 NVFUSER_BUILD_VERSION=f73ff1bc6a TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:07:12.008952843Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:07:21.42495014Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:07:21.42495014Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:07:43.83122739Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:07:43.847949501Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:41:30.861913677Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && export PYTORCH_VERSION=$(python -c \"import torch; print(torch.__version__)\") && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . && rm -rf build )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/cudnn_frontend && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . && rm -rf build )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:41:35.11746056Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:41:56.715277334Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:41:58.782566014Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.334443685Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.460526808Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.468393574Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.474804384Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.532076226Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.664426033Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:42:51.893112808Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:43:30.762712376Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:43:30.762712376Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:43:45.532119329Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:43:46.461191825Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:43:46.461191825Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:47:04.297835649Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T03:47:04.297835649Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T03:47:04.297835649Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:25:50.679361231Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T04:30:40.640352859Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T04:30:40.640352859Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.640352859Z",
                    "created_by": "ENV NCCL_WORK_FIFO_DEPTH=4194304",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.640352859Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.778015408Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=85286408",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "LABEL com.nvidia.build.id=85286408",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-09T04:30:40.785750489Z",
                    "created_by": "LABEL com.nvidia.build.ref=154032c431742c7fde97a2fdad674917592306e5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:13:41.244383897Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:13:41.244383897Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:13:56.686219483Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:13:56.686219483Z",
                    "created_by": "ENV _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:14:03.583220753Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"h5py>=3.7.0\" \"netcdf4>=1.6.3\" \"ruamel.yaml>=0.17.22\" \"scikit-learn>=1.0.2\" \"cftime>=1.6.2\" \"einops>=0.7.0\" \"pyspng>=0.1.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:14:29.9030916Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"wandb>=0.13.7\" \"mlflow>=2.1.1\" \"pydantic>=1.10.2\" \"imageio>=2.28.1\" \"moviepy>=1.0.3\" \"tqdm>=4.60.0\" \"gcsfs==2024.2.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:19:22.635716519Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:19:28.751838394Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Pip install for numcodecs for $TARGETPLATFORM exists, installing!\" &&         pip install --no-cache-dir numcodecs;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Numcodecs wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/numcodecs-0.11.0-cp310-cp310-linux_aarch64.whl;     else         echo \"Numcodecs wheel for $TARGETPLATFORM is not present, attempting to build from pip, but might fail\" &&         pip install --no-cache-dir numcodecs;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:19:39.632233167Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"VTK wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --no-cache-dir /modulus/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Installing vtk for: $TARGETPLATFORM\" &&         pip install --no-cache-dir \"vtk>=9.2.6\";     else         echo \"Installing vtk for: $TARGETPLATFORM from source\" &&         apt-get update && apt-get install -y libgl1-mesa-dev &&         git clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive &&         mkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja &&         python setup.py bdist_wheel &&         pip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl &&         cd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:19:45.293034595Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"pyvista>=0.40.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:19:45.293034595Z",
                    "created_by": "ARG DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:19:45.293034595Z",
                    "created_by": "ENV DGL_BACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:19:45.293034595Z",
                    "created_by": "ENV DGLBACKEND=pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:20:22.661933504Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/dgl-2.0.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"DGL wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --no-cache-dir --no-deps /modulus/deps/dgl-2.0.0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then         echo \"Installing DGL for: $TARGETPLATFORM\" &&         pip install --no-cache-dir --no-deps dgl==2.0.0 -f https://data.dgl.ai/wheels/cu121/repo.html;     else         echo \"Installing DGL for: $TARGETPLATFORM from source\" &&         git clone https://github.com/dmlc/dgl.git && cd dgl/ && git checkout tags/v2.0.0 && git submodule update --init --recursive &&         DGL_HOME=\"/workspace/dgl\" bash script/build_dgl.sh -g &&         cd python &&         python setup.py install &&         python setup.py build_ext --inplace &&         cd ../../ && rm -r /workspace/dgl;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:20:53.557028051Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.18.0-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.18.0-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus/deps/onnxruntime_gpu-1.18.0-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Custom onnx wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus/deps/onnxruntime_gpu-1.18.0-cp310-cp310-linux_aarch64.whl;     else         echo \"No custom wheel present, skipping\" &&         pip install --no-cache-dir \"numpy==1.22.4\";     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:20:54.223110552Z",
                    "created_by": "RUN |2 TARGETPLATFORM=linux/amd64 DGL_BACKEND=pytorch /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:21:04.166173414Z",
                    "created_by": "COPY . /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:21:49.213673295Z",
                    "created_by": "RUN /bin/sh -c cd /modulus/ && pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:21:54.756101003Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir \"protobuf==3.20.3\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T06:21:54.756101003Z",
                    "created_by": "ARG MODULUS_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:21:54.756101003Z",
                    "created_by": "ENV MODULUS_GIT_HASH=eff54e6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T06:21:54.941615031Z",
                    "created_by": "RUN |1 MODULUS_GIT_HASH=eff54e6 /bin/sh -c rm -rf /modulus/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:17:40.922481475Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:17:40.922481475Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install \"pip==23.2.1\" \"setuptools==68.2.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:17:52.648255008Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c apt-get update &&     apt-get install -y git-lfs graphviz libgl1 &&     git lfs install # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:18:09.168741634Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:18:14.392263194Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl\" ]; then \techo \"VTK wheel for $TARGETPLATFORM exists, installing!\" && \tpip install --no-cache-dir /modulus-sym/deps/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \techo \"Installing vtk for: $TARGETPLATFORM\" && \tpip install --no-cache-dir \"vtk>=9.2.6\";     else \techo \"Installing vtk for: $TARGETPLATFORM from source\" && \tapt-get update && apt-get install -y libgl1-mesa-dev && \tgit clone https://gitlab.kitware.com/vtk/vtk.git && cd vtk && git checkout tags/v9.2.6 && git submodule update --init --recursive && \tmkdir build && cd build && cmake -GNinja -DVTK_WHEEL_BUILD=ON -DVTK_WRAP_PYTHON=ON /workspace/vtk/ && ninja && \tpython setup.py bdist_wheel && \tpip install --no-cache-dir dist/vtk-9.2.6.dev0-cp310-cp310-linux_aarch64.whl && \tcd ../../ && rm -r vtk;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:19:12.827276307Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c pip install --no-cache-dir \"hydra-core>=1.2.0\" \"termcolor>=2.1.1\" \"chaospy>=4.3.7\" \"Cython==0.29.28\" \"numpy-stl==2.16.3\" \"opencv-python==4.5.5.64\"     \"scikit-learn==1.0.2\" \"symengine>=0.10.0\" \"sympy==1.12\" \"timm==0.5.4\" \"torch-optimizer==0.3.0\" \"transforms3d==0.3.1\"     \"typing==3.7.4.3\" \"pillow==10.0.1\" \"notebook==6.4.12\" \"mistune==2.0.3\" \"pint==0.19.2\" \"tensorboard>=2.8.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:19:12.827276307Z",
                    "created_by": "ENV TCNN_CUDA_ARCHITECTURES=60;70;75;80;86;90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:19:22.518470376Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_x86_64.whl;     elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] && [ -e \"/modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl\" ]; then         echo \"Tiny CUDA NN wheel for $TARGETPLATFORM exists, installing!\" &&         pip install --force-reinstall --no-cache-dir /modulus-sym/deps/tinycudann-1.7-cp310-cp310-linux_aarch64.whl;     else         echo \"No Tiny CUDA NN wheel present, building from source\" && \tpip install --no-cache-dir git+https://github.com/NVlabs/tiny-cuda-nn/@master#subdirectory=bindings/torch;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:19:22.518470376Z",
                    "created_by": "ARG TARGETPLATFORM",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:19:41.163148389Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:20:35.895643395Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget  https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-aarch64.tar.gz && \ttar xvfz cmake-3.24.1-linux-aarch64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-aarch64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-aarch64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     elif [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \tcp /modulus-sym/deps/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh /modulus-sym/ && \tcd /modulus-sym && ./NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64.sh --skip-license --include-subdir --prefix=/root && \tcd /root && \twget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-linux-x86_64.tar.gz && \ttar xvfz cmake-3.24.1-linux-x86_64.tar.gz && \tcp -r /modulus-sym/deps/external /external/ && \tmkdir /external/pysdf/build/ && \tcd /external/pysdf/build && \t/root/cmake-3.24.1-linux-x86_64/bin/cmake .. -DGIT_SUBMODULE=OFF -DOptiX_INSTALL_DIR=/root/NVIDIA-OptiX-SDK-7.3.0-linux64-x86_64 -DCUDA_CUDA_LIBRARY=\"\" && \tmake -j && \tmkdir /external/lib && \tcp libpysdf.so /external/lib/ && \tcd /external/pysdf && pip install . ;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:20:36.268580638Z",
                    "created_by": "RUN |1 TARGETPLATFORM=linux/amd64 /bin/sh -c rm -rf /root/NVIDIA-OptiX-SDK* /root/cmake* /external/pysdf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:20:36.268580638Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/external/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,video _CUDA_COMPAT_TIMEOUT=90",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:20:54.283350523Z",
                    "created_by": "COPY . /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:21:15.263203471Z",
                    "created_by": "RUN /bin/sh -c cd /modulus-sym/ && pip install --no-cache-dir . --no-deps # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:21:15.52950869Z",
                    "created_by": "RUN /bin/sh -c rm -rf /modulus-sym/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:21:15.52950869Z",
                    "created_by": "ARG MODULUS_SYM_GIT_HASH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:21:15.52950869Z",
                    "created_by": "ENV MODULUS_SYM_GIT_HASH=cab5b30",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:05.743455991Z",
                    "created_by": "COPY accompanying_licenses/ NVIDIA_Modulus_accompanying_licenses # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:40:10.182278501Z",
                    "created_by": "RUN /bin/sh -c pip install \"Pillow==10.0.1\" \"Werkzeug==3.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:40:14.336951562Z",
                    "created_by": "RUN /bin/sh -c pip install \"pyarrow>=14.0.1\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:40:14.354560892Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NVIDIA Modulus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:14.354560892Z",
                    "created_by": "ARG NVIDIA_MODULUS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:14.354560892Z",
                    "created_by": "ENV NVIDIA_MODULUS_VERSION=24.04",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:14.354560892Z",
                    "created_by": "COPY 13-modulus-versions.sh /opt/nvidia/entrypoint.d/13-modulus-versions.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:40:14.371519224Z",
                    "created_by": "COPY modulus_env.sh /opt/nvidia/modulus_env.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-11T07:40:14.371519224Z",
                    "created_by": "ARG NVIDIA_MODULUS_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:14.371519224Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=14160669",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-11T07:40:14.371519224Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/modulus_env.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5498e8c22f6996f25ef193ee58617d5b37e2a96decf22e72de13c3b34e147591",
                    "sha256:2757a78913f29b2b87649e92ee6dd73460f496af008c5c8d772c2cbaf128450f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f80386fcd8ceddd5b8dc0823325847d348c62253303d47507e4c32ebe3e29cb2",
                    "sha256:a0c97f620cd64a3cbb897fb87f9b1df454291253a29032fd8200e422c643e7fe",
                    "sha256:0c5f76392da432595f52b598d72f9f0c7bec12cc99eeea430203fc3b6e0a551c",
                    "sha256:babb0ac901f2a703fd049c1f409256a3acf9dcb47709676f2d56b13847ea6806",
                    "sha256:3aea6fab2dbf23d161e561e6afe0bf060d6c99dbdff31ff6d6dedf4e8e60949d",
                    "sha256:2c8fb4462dd1c3b0257685c36d8e0235bd0fa6cdc86e2934cce01ad67b560599",
                    "sha256:f8a1d3a7e2ee27b131917b3d5dc101f38f4d29e8aa79c5ab34287772e353ea5a",
                    "sha256:a67506fbd03042aad7e8107256fd06d568343a9eebefe608f967f1ee95da27c5",
                    "sha256:ea31cf21ba0208a998ee3bef804a79155864989972e3e489a6a657ec65dff316",
                    "sha256:7a05d6e72510152995b5887fe51c8ac36779140abc9af34f09d706b2cb67e69a",
                    "sha256:f97056fec7f9e222a346f108ca493cef3d60e2f3624722a9d746708180a8e8cf",
                    "sha256:dd28aa683d8467f662e0735f993d4569063241c899069670ea164866e3e9b02a",
                    "sha256:f5b32027a7d10b624f7e139fb672a67d93d5332fe8dc6ca7c03302097e944444",
                    "sha256:d2e0a0ba35eb79d702ebc6ebf74811b09a0fb7a95af51b7ce4fba69fa0b7fe7d",
                    "sha256:a3ef3286e8da3a92eae3c40a373ea623ef9fa11a1586408e262f2d9e37822606",
                    "sha256:4842beca6ada6444225dd426403eda0af0ded255f5086067d0477793a877db37",
                    "sha256:e6c661b14d806044d8477c0661dbabfc85c6a9d0bcbc26cc50aeddb1eda3dc66",
                    "sha256:0b8d7841a1e85c56e73c3acca8edafac7cb0a3ef4b9431cf255493de26004314",
                    "sha256:2e1f7a0e08c4f3e666594a13a32fdcf27bacbb52165ee5b9873cde11f39c35c9",
                    "sha256:b3641fc5834b535b39e9fe6c88463904feb9d1b0a7de9630409988af3f2c1c94",
                    "sha256:afcff30855891bf1855173e0f6a81defda66e1e7d6779f96dccd91f02403cfb2",
                    "sha256:febb76602bd46a8f469b2c15fde9202877b16a02417d3c68c3795ef6d270408f",
                    "sha256:4ed2117ebc35e2502a5999fb568d6e261778a713d04002c7628b72a093030bfa",
                    "sha256:f8684922b4117d0c0cea14501492a3df8ff8ff463d1f3783c3dceb1876a1e8a1",
                    "sha256:4b74f07c763ecc9d4af705a39f4cf1e355cb4df418693b96bae1032031c5d450",
                    "sha256:71fbba3d7aeb17de8d163f24c341b1742c19a4d3445b9e6253dbc6a4c7e33ae8",
                    "sha256:19ddc2e1d202f36777b5290ce6f53aca6145b0ab6f4d5b532e096099c5c56b69",
                    "sha256:2346768d8fa77fe43a9fe2c61993dd6e5ea8455f93e2bb2f5a5ac9824c6ddf96",
                    "sha256:108d6b39f36f55888a07bdb8543cef8db201a45219a04b9e9a760cf59998c63d",
                    "sha256:4b59c729b65749c664d5adcffc23aaa668a7560eb8b7feb385ddc72ba53eb992",
                    "sha256:8455dbdc1b439a4e429d118d88343ba6b0bb91cf46772dabbd4ace85fc8b3e03",
                    "sha256:3221a6264d2164884abfbbe18574c709d6f6b3738623303abad0eda33181123a",
                    "sha256:5b7585e54be562514b1b826cafbd35f3dfafc66156dcb33396ef506e1de9ff05",
                    "sha256:e4c507b27cc1abcca9e2028f1f201e9675076ec77559b34078a38a0f4e592464",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b031ff141dfa11ce6b4684e2f30f3d0a6df6b9e71c28a987093a24498faaf936",
                    "sha256:063ab8df799e3ac0614de5e3f43965e7d7d0e36de8c89e9e11d90b6f06930e72",
                    "sha256:e55a6e5d92eda36aa3e5e26ea19e219f789b32e3edc70163e13bb7c5266800a6",
                    "sha256:230285b7c5f56d281875355d70b9431fb8a8e1de4608b0971a4a268eb113ce08",
                    "sha256:7bed7d20ae16035c7b5968421523f8d5109aa5706229e80a3bdee1d649e4434e",
                    "sha256:8918675f8de0e42bc0ef2535f0375563c143c62cd4f63f71e7b97a24856c330c",
                    "sha256:ecae9d8cc140923d7777cd71d93fc75ce9ebbc2382ad5633143e1db6d181a48f",
                    "sha256:b0378d736f1fc1b6b0d1a43a3cc54e8a5361e382998f6bcdd06199717cdf2eff",
                    "sha256:ae97c4a02c432def725c94a3d8575c3e8cee2b5bf397c04fba6f7f641e760e50",
                    "sha256:c2ea5962c65ab58e4491b01f47de172f133d0401eac59f0c4b12a842ead054bd",
                    "sha256:33ad28d51916c52f24b4fca0747385ea6b626c1cde919b8f31b2c779b35ba540",
                    "sha256:6b9208bf3104ec19c27f97aeb31c43851c34a08c885cc172317001a7c759d030",
                    "sha256:cb7e1604ee871b206a0957aee850c85418e800510ad152f02fa3b05477044cd9",
                    "sha256:3044b800ccfa7996f9341583bd16be17e7428793b7e50819c51c571717539036",
                    "sha256:3af292a495205ce23ede85c5be7a4b2da418968b73fecd1df9d0ba0d243cf3fa",
                    "sha256:be471a5a03fb21c9d9dee1b97e1b5c2cba2a2439213eadeac308747ba03ec903",
                    "sha256:b0302f3203724567a60299cbd3e8685072637bf710fb476bf32fd03aa165905f",
                    "sha256:04bdff6ae1ae325b0c0f231f355881fe5692a77949208fc6c0c8c0bb9dcc830c",
                    "sha256:1b4bf0a27a88ce4c2fd561d810895886776d5e71fca49359c9f10ecf929f41d1",
                    "sha256:3558dd9abb76b1b8247a1828e48d503cd302a29129b1895b59b6afe81217ef31",
                    "sha256:c159d9652d256a607eef81aab51d1c92eacc9ad3289c9281e144563c816ec7c5",
                    "sha256:04a782dd0cd7f7b34a40f8a0beb05c4a78abf4113d97abf6cbd16ece9007dead",
                    "sha256:4b55baec7796714d2f2ef1994ce2e87fa5b84a5a1f533a1a36a045d6dfcbaaeb",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:04bdff6ae1ae325b0c0f231f355881fe5692a77949208fc6c0c8c0bb9dcc830c",
                    "sha256:ef47a39cf9b0de03908f8693f49bb3c66c8a9ca1e450a083a69122e692692544",
                    "sha256:cb0baac9a92f60cd488cf5aeac844a5c717b6fa058e1b9086ad90ca9c0f5a734",
                    "sha256:a46be0138090ea1c7db361eddaca3bbafa285bfc800a5ff1f76b206df236a271",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65fc4ba7b415fdba1c705394caecc9473d51d4659c3d80f5a759c5af3e1bd787",
                    "sha256:ebe8adeb97980201bca4b3071226a9a8c36f433a870a28c97d8eac2ee8488c57",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e8531f7db58f881ed63faeeaf787d72bfb3d6697071f227d0c80088bd84f9ea",
                    "sha256:ca473dd07bd181a5115312b031998507d14c7d305031ad4aae5302d0beed634c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd7bd523fbf262eb04a960a28ec83c57d0c2c5448919630b94d44e9492a45094",
                    "sha256:7581f53c01620e30311feecf29422b4801f3777865c33536aa5bb0a2e72ce411",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a3d5680c76d2d9f3bf69cefa867974fc7efa7f0bc6468a61a3bb6ae358c9410f",
                    "sha256:63fc85126dfb9a215cac9a973d86eb30fda6dfffe6a6b96f63266ca025124c9a",
                    "sha256:31fa779e70629c97d8b375ba8bd4fd58b07ac9800ad387a911c4067abfeac069",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b72f4f364f232ee33964d805276845316ff353d825e1c5786f928c63ba64550c",
                    "sha256:ada9d75ae89e5d6332bea01e7a825a28295f8fe96dc9c006a6fb0b68c9954181"
                ]
            }
        }
    }
}