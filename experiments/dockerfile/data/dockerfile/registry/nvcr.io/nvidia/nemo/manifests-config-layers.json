{
    "manifests": {
        "1.0.0b3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 45865,
                "digest": "sha256:62c51f8f99a3f62f5dbcc431a3bac0fbdfaeb574f0f4d3edfed60c681b1f7431"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26700095,
                    "digest": "sha256:f08d8e2a3ba11bea23cf5c17e8e1c620057412ed05c32d1114640e18d6dd0a43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35364,
                    "digest": "sha256:3baa9cb2483bd9c5329a44d9c2fe72535625bbd4308bca95785dd58e72c06365"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:94e5ff4c0b1526abf77c236655f21c8f67a23313291c8b970fe6b469549d8153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:1860925334f940c3145808527480b4f0cba7f01279087fdb27679e4354fba967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76809461,
                    "digest": "sha256:c6b364205fad9034ce6cbf439da0d4a7c0cc290b4c8d3ad1eabfc81b04b7e8b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50591509,
                    "digest": "sha256:ffcd5dc3448dfb808c9117252c4f1fbbeb20128707d7b9c6b53c29d6f2b988a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18816,
                    "digest": "sha256:13cf13e5ce72f7ff8419042d6d9ea22fa94c18b94c4985269339bb7eaa229e9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2734,
                    "digest": "sha256:7202bec79e4143bda783391ae8cbaf210306c344350f892e9ffd77ba218cf063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3626,
                    "digest": "sha256:fdfbe893941b3876d9e8c3e411178b3bf9f4a316363a98b9181a2c46c6f5e2f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137,
                    "digest": "sha256:f73bfa0e0e1718cab44daf35ff2045a57df7d993f83812c95916bb0c42d081e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:36aade146566f729b04737087ae3302fb8bfca68f02b74f4ba542c53da41bbe6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 397,
                    "digest": "sha256:0cf8254e1bfeb99899238126562204641d0152a417c5f75c8457a29fda84cc10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 429,
                    "digest": "sha256:40ff6c34e5e5179007060a7d9b0916d80e827ad0eac05933d13f4d9b94546b1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1442,
                    "digest": "sha256:0adeec2cfe741e924ea7c35ca95d6dc0fb08861268e50415e7153851715cabd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1899022840,
                    "digest": "sha256:895d871af5fda54cf858b531272369c3d42c63ae37da075ae7d32f71ddfd9c16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11559,
                    "digest": "sha256:71c97f6ac83cefd4d6c3020f909de20166e25ad0fcab9c19b519c8aa0190e2d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:281aa21cb81222304da410b309545b393c8daf5281d6440de38a15bb7cd84ab9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172726,
                    "digest": "sha256:9c7e46bb4080abaae52fac2d3dba4ffffe2383a60911071c74430220e22d1caf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 736,
                    "digest": "sha256:150dfb1677cd0f25666657bdbc203c7f638e50bcbfd986815ac0b6d73d2120a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37244916,
                    "digest": "sha256:3ce488e63cd39ebbb9c42f581c4fe24feb5b57f9220694e8199714ead733397f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7815145,
                    "digest": "sha256:0f6e3807a6dc22c33448ed4127391b494656eca8ea3e6ddbc4b8c500fc44739d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 568028,
                    "digest": "sha256:3585c705a7d04fde836f985ac28893d8207325669f359f961ed9a8aa15c94b89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12841,
                    "digest": "sha256:de81ad6998228a35c0dea2dffddb0845562ba941a1bde89e6a3a05f2606b52be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11961927,
                    "digest": "sha256:bb1a224031d930789559694e1dab05fe12dda7f18b33b2e8eeb915d714af3e15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 432,
                    "digest": "sha256:de7308abc9b3a5397bdf18f3e2aefcc6c8609aef730327b0f825a35070a46112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:07620b1781c27a8f08b59cc4757797049648490f14f5d92984e97eea8c359d1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217854946,
                    "digest": "sha256:dbc3331c85c9801958b1136996a594b5eed49b40debcebd80b26d2b70c727fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56828145,
                    "digest": "sha256:3176a059494ff4a1cca8ba68e1da75c11c52d844529921bf69ad14c99a242917"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933403,
                    "digest": "sha256:8bec2a5043ad4394eded88de76c54452c542bda6387d65cd36e768ce5395ce75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525598774,
                    "digest": "sha256:7416e66d534cdf38bd9ecd4f378cf75b817ad2d891723f1e056d4ee957ffe2cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 941112,
                    "digest": "sha256:2e58647ede62d67ab649c4ff016c19d8a4c7ed67d27121cfafeb82fa9756a9f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417454,
                    "digest": "sha256:9fdc8a046d90acafcc80e8e9824f5996f9750955cbbffac277cc771c8512f6ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083020,
                    "digest": "sha256:5a09baa92fa0889ba0421560ed31f0327dd4bc30ab3f25d5500634dceeabc543"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141472829,
                    "digest": "sha256:f4288a68bb4414e8fa06a34a3bf20c5610566e342af78d90a370c1e129ada126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72649442,
                    "digest": "sha256:7ca760cd89397855e64aee70b93bc85d35c7d91af76973c7a33d98cedeb4c1eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33416994,
                    "digest": "sha256:58fab20f5c7cc9776ae55700f99ef475885ca6cf5050339ba073286e790324ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 417,
                    "digest": "sha256:bf25175a403b8150c7d84c94b496ff2eec1c8a13e436590a51d11e0757d469bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6707,
                    "digest": "sha256:903998a9f9ccc7f91468144c8b614938cfe525b4c664aa135e13d95be1491a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93020890,
                    "digest": "sha256:9a6764326ce18826d1ac0d86d1ce456f0aacc1909937ee0d7b0c9c90a35965bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477,
                    "digest": "sha256:aa7c3f74e41956a882b7ed0a5fd9c73de689e94b91a92e7747d0f6c7649ab1bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5555,
                    "digest": "sha256:47c54eb24e4dea0c539d4b7f0ae26b05aa6d1812f856a09391b9eca2261e5f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138564958,
                    "digest": "sha256:ff874e66daeccf44c768a83ce09549b928c0c5f7b8ba3294334986b05f4d049d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 633564483,
                    "digest": "sha256:eeb92aec4ebf2a1937a98ebf7790ec913f02a2012723182a9d4022431c18a15b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 350812464,
                    "digest": "sha256:4b9737b34ece67efb9644f73e18aadd35b41e30ab417c50443a5c92cbba24bea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4326120,
                    "digest": "sha256:86f288894a1af9cf96f4a24f6ad33cf6061ab9285ad81c9b10e3d19e30af4957"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1134,
                    "digest": "sha256:bc0b2bc7f043477a0289b2e627aee70e49d662432745ed1cc4150c53d375e0e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10950846,
                    "digest": "sha256:a9fec2d46846b44292d6fa4c21888d654f3250f0dbe46a4b95b2fb1090b5a770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4217,
                    "digest": "sha256:566bce734eee20d4263b8c73deff5854b35f5d3816bd520f6102ca32cb4035c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171207344,
                    "digest": "sha256:2d230786f0a26c22ca7791c9fff430aeeb31f7e2e8c71f2979a0af1d63dfbd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1400581,
                    "digest": "sha256:b3222b1a77990c42cf9e6ee32692aada71c8753b434f8658a9ed5eba82cab280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:9b45a6232d14f55867c626782e8927005c375014c528095c533a049aafd57302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1033,
                    "digest": "sha256:5e7d51247d7f51df6fa8f65e059fb8f84987e497bb633c1baa3258bf07cfe473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28877241,
                    "digest": "sha256:4f5157f98b1fda292ecce4eb5cd35a3953c79b128b581d3a7396d4956c3a9360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28118115,
                    "digest": "sha256:b3f54aabf5f85aae9fab0dd421be93c6b98d2dc2c002a2f337dc5e2411c9b63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56997555,
                    "digest": "sha256:95ee1f9488e110bacd4e7c6dc9986b34237c36eeb40d238bc1b73a4c7d168c95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13380,
                    "digest": "sha256:2c97b8ccfa66f26ed2d181c7b9e9fe48c58a65b70b932b0f4086619337c362b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2243,
                    "digest": "sha256:d59ebad2bc08b0d4745fd1358e9425eb442e71a09ae745727bccbab62533f8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1163530,
                    "digest": "sha256:0ba43f612fecf8277eeea7eb4d7e83932d7f8166bb097c191e8147a24732a832"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142280316,
                    "digest": "sha256:90780442cf092517bc645d80b1ffc5d57a510bda356d4d0e2e061857f19bc6db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f9ca815741cf3409ffaa6fde53746161a5e6734a26a7e3fad0fddde5c26cede3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7231927,
                    "digest": "sha256:f1f7b6df36f3c75a3af8fb4a6bade8c784aed1f93b9f46275d342a63b79b5a28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:7a8357db90a01b444404a794d78d628305dd9dcb13b3f7edfa823585050adf9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 762,
                    "digest": "sha256:69b4e22c10e9f9f2130a4e68d2f2067d311ced5436271179ad2cf1f64fe5136d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1677,
                    "digest": "sha256:bca5d80e5ee1cb2aacdfbaf3b68b04824fc7059afd2c985f8402d5b15c502ae9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104375483,
                    "digest": "sha256:72cd48e620462ea9ab5fa1771ba1edea410a51a3b851f68dd5ac9db189f0c7ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:3abd8f09493335251c11f85e0514248576694cba6fee5e6ce1b2a8cdfafcde1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23155,
                    "digest": "sha256:2dc67d875595ce6bd32e6fa4ad5bd894ef7e776143fb0dd02319630a997157b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421383418,
                    "digest": "sha256:f803882bf3ceffae6b266845bfa4525f04249b136ff48173b4b86521d10a5916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9291175,
                    "digest": "sha256:2fd1116757e1312e0a2ab0a40702c7f7fd207e9e136424604231099612651562"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1772565,
                    "digest": "sha256:891d93bf347af7985086eda8fa01400269cdd20444383ed2e26e549e9216ed6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:1653678f004915283fbe529bfb8b780d1c0760d31d3fc34af24c7130fe882554"
                }
            ]
        },
        "1.0.0rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 49183,
                "digest": "sha256:ab39b4bc301006728f741f28ce72a27ed0cb850e9987a7c44f73a103e127ab9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28052644,
                    "digest": "sha256:f52357ed8777c8292ccb37f4237572151971f663ce688e5ae37e6e24b6b350b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 939,
                    "digest": "sha256:546cd35c8a60d0240be248cf5781b310369d02e6e7f3e22c711d352f4b00a873"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172,
                    "digest": "sha256:e19168b2bb863dc7d9dfac3b50a0ac69e4e97ebe7106870009131403bd19e1b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78764148,
                    "digest": "sha256:931f651eb16726b238ac3c743fdf45a7763f47123bfd317a9dace7c6533fb792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59779893,
                    "digest": "sha256:c2120eda0e9642a9e88e2bff9469185d646f95e1eee1a1fa318116bee6e1856d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18989,
                    "digest": "sha256:1929b76c1b4e0a59220bce593226ac5ebb0dd70eb388fdcba312bceac31172cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2734,
                    "digest": "sha256:e610187a9606bb39950e6fe6bdf8d44333c09fd11a41013ef45f5d499c25a559"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3627,
                    "digest": "sha256:b73960743501da0b9be4df70150ac10b28dc0bc45b2fc76d542835ce9e63b026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137,
                    "digest": "sha256:becb4b41f71f5e55aded582f6a67c8a12a145b39b7010b0b4ae317eaa2caa465"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1182,
                    "digest": "sha256:5cd8afab3fa5b1904a45837882ff2d32156611b5b34fce5c8dcfaaa9cdbdd982"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 396,
                    "digest": "sha256:0a1612a4b60557f3428e11c1957e601b57566cab9c2f34f671508c0294357481"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 427,
                    "digest": "sha256:17acd544243058073037de39a987fab1619ecd472a7a9967dc8c571ae30e8e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1441,
                    "digest": "sha256:6f5b134c3039dbefd7212c9092452f9153a1f796be1d5b792b9c3294ffeb0fdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602365487,
                    "digest": "sha256:fea7c50eb5935bd8293f57a9d7153a612372d6263a0cc9254f5447373fb85a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11557,
                    "digest": "sha256:45b87c797aa88b43464cecda553291fc6cbf0c329a35524833f8ca22807e370a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:a3cf0850ba095acd79a4c8aacb45a9688d6784edcfc7bab4c9f282c9e651e522"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172729,
                    "digest": "sha256:86cfe54fa44782329910223e4171e99234796ccdcbaea03a801c0148ef2951ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 735,
                    "digest": "sha256:a252564d7b1f86e981dd1eaee4c37c4ef96ad31040246f8059c16e5acf0c7c84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37604383,
                    "digest": "sha256:84c040372501ac4e6eb55aa3ffbe7ed375a17e55aaa3305427dafe8865248270"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557621,
                    "digest": "sha256:7889b84da9ed4f43ba27d4adec6cc655a8138a1da9badf9fc0b5f02ffdc8a097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 675316,
                    "digest": "sha256:7a2d5080979f5fad49090167ca419e88fd6c58ad9a744a0502f226dd4a97bc01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49803852,
                    "digest": "sha256:b35c2af04ae784f9cc6825e6931cc9a0f4465fe2f399d2b4527ee38a7141383d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:4ccf039ea0b10fd6e4ac81b313b4977b7c7b3f8c595f34bc4e23fea8e21a3f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201472878,
                    "digest": "sha256:23ff403351f88cf6798f1b7fda3d968c1ba85f33bff0bbd180c7e702289aae28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56814120,
                    "digest": "sha256:acc204de10681cf92ada154f9a8ece3038c6a8e3fb464e302f9acddfc25c3bdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933420,
                    "digest": "sha256:cc6b1a0840d2b72a5251c969fd2671d4f0e21cd14acdefabb6f5a2c728f36a5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525170730,
                    "digest": "sha256:c8bcbbfaa83167755f311543abcf7bd8901c68a2c73816bd072ff9bca4559fb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 944478,
                    "digest": "sha256:2d255b8d9375663e7db1ba4554836cb1dec82f210c686ec251b81f0dc13dd027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417472,
                    "digest": "sha256:16ce38c2a3cae620d1ca9b39d1740e43a17e0864469b19a91feeac490be0529d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083044,
                    "digest": "sha256:ee0db07fbd9da0bed6c8a2ab86b880804927bfb098391a834941b28c969ae42c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153345035,
                    "digest": "sha256:df2bf982fb299ea180f8464989aa663089e1d9b5e03a55a0b09eba52a1876a91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73978697,
                    "digest": "sha256:08e4470d002f9d4398515d943ab4d879ee9306d39cd7fb5277d259b4366a78a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35700710,
                    "digest": "sha256:3ed931acab984916ae13ad8324283b2c0ac950015addc9381d1866f571cbd575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 417,
                    "digest": "sha256:b7ceafc92512fe31781c5239319caa598daa5a77c5892166a48d47f545b5c036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6711,
                    "digest": "sha256:e58032dbe0478faa176270250aefc9dbe5d5a6c716dd3ba9b5573a3bb140fa51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93911256,
                    "digest": "sha256:7eeb3a208b7fed273694b3d1966607519452a8070097f8363ae71bb9dbdb76a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 479,
                    "digest": "sha256:4a004fb483e1b8f1f3df9269395b0547c5584b32d94e43e135a5acdbb9524ec9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5552,
                    "digest": "sha256:c79144d37bcf405df3c1dd3c5060c17e1234e3d64905336275d8470828b6399a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171455892,
                    "digest": "sha256:7040332bef7ff496226487910b0ba97bb259d4239e840131a758ebc4e75e024d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 945775236,
                    "digest": "sha256:f48ffe099d58c0241d9e3ad47047ce6508635fa7ea3b0159de7f538a42aaaca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391473744,
                    "digest": "sha256:0ef5a81faea7c983c8458d66b25b0438ea8c85e74c9265894b96d6d669451ae6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4249675,
                    "digest": "sha256:e676b97f703c940332774808eaf4befe37f54e5d6a688105e3f8a3039b6cae1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136,
                    "digest": "sha256:666e2126996e7230cbd62c2a1cfcb49ebe7088c679edf85d723abbb72dd048e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10935733,
                    "digest": "sha256:b283dbcec5d1e4dbbaa4d2fb337e3dc956fa45778f3eac32b67c0d0e577c12f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115909,
                    "digest": "sha256:47bb10f87cca9b5ed5c302e8158c898532913441241f86f5b992df862edd5aff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184152842,
                    "digest": "sha256:836125dc701cfdd1270edeedffce83b428218dd18be47f2b28ad84c36ccb21c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1503259,
                    "digest": "sha256:0888ed2dc539184eeeb3993b20ee5e47a37ffb07d6bd130dc03ee1e24d6fede9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:794eb108686834e520f56ad80e0f6e6c36c942b1def86a5a0ac4025753a41e31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:32ed2a0ab6ce9a47781a9c4330f6f24bf4ef926aec8371306c46abf9970afc7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28896819,
                    "digest": "sha256:ae6024a682cd3f51d184d2285e3a25a411b71d0939765887208617e697810b53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29211217,
                    "digest": "sha256:9f7898575eceaf8de5794c01e6c6cf9a965684172dffddb773aee2be7bd0ac68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58111814,
                    "digest": "sha256:28d979c64a0d50cd9b68b66605cdcbbab7dd88d557285d6a4c20ecf048d7acf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13566,
                    "digest": "sha256:f08427bee23b4e23a23e7d86953c809a48c18c564b4796026fd82c5ee290146a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2008,
                    "digest": "sha256:08e177c4fae2823f4e311f3864a053d668f4e879dfc74cb9eae933a8d53f6640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1568614,
                    "digest": "sha256:d30aa807cff81aa293f6a215b80bbb9c2dcfeed761d4befbbacfa60302e59791"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189783,
                    "digest": "sha256:77b9ab64411c54141730bcea7c90eb9ccdd171653dd86faee0b39949f61da35d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154180282,
                    "digest": "sha256:324b2ed325828c63d87602b100d55999d5895b72910dba879481c55f3485dacb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:d8965d2407f98c7433053033134715b81e7802dc3390572d107cd85fc3ae0cc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7313821,
                    "digest": "sha256:1ad17a3aa1caec348081f450a33cae947b6c597d251aa68bf3237ede454d5ace"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141,
                    "digest": "sha256:bb0a7318bad1eca83bae60e01c8e965b9196a47cafe6de9e099296d7135657d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9955000,
                    "digest": "sha256:7cb3fdce98c679d38c781ad26194f29fb349ea8ff1ae727cdca40bb3ab80bdd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 353,
                    "digest": "sha256:c835197de23ecefee14a144aed79368cc07792118949f1de84e2fec531a84617"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:a2f38b56a0ac39c11b8eac93b56d890f513f61117d1cdd0b018d04692a1a4137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 830,
                    "digest": "sha256:c6d0b4767350e6788ef646b2a4068bcb738e06b9dd841a4139bf462733605380"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:05b116871a9c80915f1faef3f0c91fbbe6864d768da4eb56b0f84b6075731934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3668753,
                    "digest": "sha256:7a84dfa9a944187df732bf12963d3f8f832bd97c1f2ad171edc7ad76f4b91b22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16802621,
                    "digest": "sha256:aa7691ae134409ba7b8c852dc80152475614e7ce635f71e88c325e6a2155cd8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55746630,
                    "digest": "sha256:da5fae28e079668db0d9fe48effb1d6c526f7983f1dcd5ec37286f1b251ffc20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:8e859d8fcd10656b96c75985f995ca0cda485c419c06758614290a67a0dbd0ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209281661,
                    "digest": "sha256:3ba35facc287bd7fd2c7576cc8f068cbf3c2485e28c8b933275b3d2414bc99be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:9e2a20c7d266f81dac4216400245578cba2334aa016a847c92004c2de106cca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44879,
                    "digest": "sha256:c0268c03757c1ee64d4db06c36ad311a1caf2d53295de57272d846af608cf0fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110997,
                    "digest": "sha256:339c29f0f99086aead37e175f272603735a45670b662ebc4fa4de5a7786cb7d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42671,
                    "digest": "sha256:f0cf1ae03629251aae836b1c88d02bf8c82b0b2245cc55b8d3f17d1e5ed008ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7036457,
                    "digest": "sha256:18556a94c4e10599b4434fce47e38768217ec804bf52cd23dce037d7d4f3d9e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:b3626e329df679d9bfb264a18a2f233f87cf81f3d0aa467689b4db351e5fe158"
                }
            ]
        },
        "1.0.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 51136,
                "digest": "sha256:89de53261137529fc7bbb0439c604b07d58cc06f922be4a6b30263236543fa5e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565893,
                    "digest": "sha256:83ee3a23efb7c75849515a6d46551c608b255d8402a4d3753752b88e0dc188fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:db98fc6f11f08950985a203e07755c3262c680d00084f601e7304b768c83b3b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f611acd52c6cad803b06b5ba932e4aabd0f2d0d5a4d050c81de2832fcb781274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82814016,
                    "digest": "sha256:33d2d164ca3999db98c793ad125e04e545ab72f41f325a9bd7e3228cd039cd16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107524575,
                    "digest": "sha256:85942b6b78ebad21c6910a38263d5764b5939d8c7edf42fa8955025a0986c19c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19170,
                    "digest": "sha256:9338f0f9bc278ae71eadb3c9e60b0a3db0c58183b685c1732b7ec2780345b568"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2753,
                    "digest": "sha256:4ce8ce8369c9fd4d6f4da0df423b82cee8ee4fcbbc6f1944607906bbcc3ed8be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4047,
                    "digest": "sha256:c0180a5b378f3a7df0e02d2fc2ebbf91819ceba88d7d78d4570b3bdd4c084097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:ed2371281123c3413e3c78ec2fdddda29b89ee90c42ba16628fcb0337a40447f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1180,
                    "digest": "sha256:2eb4ee2d0462cd3179f17c2ae8ee346d703a1ffdb9287b4f06da374c6a74a493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 395,
                    "digest": "sha256:80be2e509d15dbdd5e51734b53ac50edc4ff88eb3b5dec9a0a89440a67e31c60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 425,
                    "digest": "sha256:acd116a320a1714d5a82920bc6609da95fd46c581d2e7f05ee6a31a6cbaaae85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1435,
                    "digest": "sha256:f3ea6cd5638d947b397aab32f1728f447edb795e7f2639db8f515b314d83665d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2052963478,
                    "digest": "sha256:d85b002fb6022efd6cc3d9f401da95da3200738e5f9258d82b6599830b8c4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11535,
                    "digest": "sha256:ca4997d9e91ebe4c90a9c14cc8c6e4f1be62934a74a965d709f74f6914146367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:18f84b9c06895518f1a581cf3ef7e9f2fd3ada20b6eb53ad2057e061a0eb0fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172723,
                    "digest": "sha256:845173d5a882edc0e4027bed7e3d990677344fbcba70aaed7a7bd0c01cbbf1f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 728,
                    "digest": "sha256:e3df13618239f6c98854b603bbdc20073ffc88da175233fe8c6a2390f04251b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40862706,
                    "digest": "sha256:089def5eda4431e8f3e184c2040e572eb232b378863b04e670322fadc0d2d2ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1113958,
                    "digest": "sha256:d04bbc7a8e4e8a2d701b03c7a61037195a65f9f70f8b9a154d6642c29888ad8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 674169,
                    "digest": "sha256:36d25fa360ff08db5c82beed0e01e6f4bcc3cc5520c3377ca92cca0d66736a59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55254999,
                    "digest": "sha256:7862f86467f857a82d2a678338808ddded9e08432509ab55ee75a8d98e29350d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 507,
                    "digest": "sha256:e51c7d1e525974d3b91e27e83d5903ae9a99f6df402d0913ac36e9374f6859d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235819833,
                    "digest": "sha256:b5fc078586d9656c16bc05f686732284b732a51bf456e66cf799f3f436834f49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28610045,
                    "digest": "sha256:845f579f7047317f4317fd7a139ff103ea0fb92b0528e9490d0e32557228f70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39282869,
                    "digest": "sha256:03d3f17115640a186f2043607cf052229006adca5a9831467a268c6d5e3c67d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933418,
                    "digest": "sha256:6d202b347eb37490e847a8331740ebf78d76d5273ddaf7f48e352ea07d7e2e78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 549478852,
                    "digest": "sha256:0371b0417d50a3f4fb8f532569093cad0b3234601d1a1713a54b56132632ccf5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966688,
                    "digest": "sha256:b6349a7bb220faac03702fd0f63d43780ff2aac69031dfc2f448c215385df672"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215215,
                    "digest": "sha256:2cbea69e8852812a3fac60a9767793886cbf17607785e0e2fb90b38f1221e22a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14786329,
                    "digest": "sha256:6e5290d116178ea2eb3f54dceb7781df134b6c8a3111a07840b64e4b01433b14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1070214,
                    "digest": "sha256:257dba355dd1a4cdfd2315a47b48ee8eabbc9d2db0aabf646d7c1590387be91b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176204008,
                    "digest": "sha256:25daf2daff536ba87562f20f3437f62d3ac0f6995f985107755f34f7fa78a1ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67336221,
                    "digest": "sha256:3fb4257ced316e83c6735d00cc52d6b7cdb08faf8e50a8a455729f6cf5b92365"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 769094231,
                    "digest": "sha256:4807aebd05bfafe14d6a994a40ead77b1a0ccfc10027b58508c61774a764ba3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 418,
                    "digest": "sha256:fcaa149d14c04e662ef56290c8e3620150e887b38ac581c6f5ed979c18731a1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6705,
                    "digest": "sha256:aa5bbb81646f04a7fc9e7615a1203c7d1d43f312757a4137c5b6f36cd2cfe1a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109479503,
                    "digest": "sha256:e273b23ad94b0ea71a35f8ad96c6e35fa2156f4fe01b7511e20491c13d9703c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:301dae9d6e0800c461bdc313fe5c154ef0a80c5377e893982165590bbd911857"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141948802,
                    "digest": "sha256:d90f751cf46ffd7e057dbbcdf35dc0c818940bf486eef5070a5e79f131636ac2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 838735411,
                    "digest": "sha256:6289c5f93fe611c90b28028d7947c22facf5ebf3f11ee39a5f4f8c04b9086961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 560269522,
                    "digest": "sha256:3336c1e7b0bc6806be5acff242e1ed49944d9fadb868a8ce3daef9aadfdbfb49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4862702,
                    "digest": "sha256:217bc5e3bb7848da93ce3eaeb22cf7b86e641f6211d655db47ac04aa9f29fb20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:f5e6ac801a2d0441ed64b86e9a83c58b5bf64c4a8b16935f7e34ef35ba7de3f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29464254,
                    "digest": "sha256:ef71055e2a3b2accb1f432dde0074b76d592710905ca88081be47892a4bb5d36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113150,
                    "digest": "sha256:7aa6dc426e3f4d234878558ea5005ea63296ee5be6e6038ce0400aede02e104e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 222712180,
                    "digest": "sha256:5822b9e5341bba61c36763b29a56eb6054e58676c1e84de427496f68e5c89441"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1655435,
                    "digest": "sha256:4a73ee424389babbd4c01583edf79a6e0187d929c242a2a4251816740ad74d29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:87aeec2cf778b7236ff437da47bd7be959bea13bd366b82f3a01bc0e17b1d041"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:9f623063da3a8f31d25b810cc05fcb7476306c84c4fb3e1a358e70498c05e6c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28885292,
                    "digest": "sha256:518bef9dd74f46d7c2726b2afb70dbf19761fa26ccc124acad5443a3ae76a430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129665,
                    "digest": "sha256:97be84e7df0900db699b6ae67aa10f4a27c715b87ba085a183b786759615ed32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59018447,
                    "digest": "sha256:e169d51e8000f1323b8e68e86edfd82711b61c5080293a5433e37b4aab7747fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10990,
                    "digest": "sha256:df5953c2dff25d861223b3559a286de8d8385f762957e62dadcd325febc23b6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2064,
                    "digest": "sha256:9161936232cf541ea0d0fd038d07c83a5e816ff974b678b28c6564ea7974271e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135313,
                    "digest": "sha256:5c00c6575b8d6da765c5c40748d1e17d141a4c7d75c48322facbdfc17b2eae15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 760987,
                    "digest": "sha256:d43e6746de20591990082b79c580c06a52a85b951fce6113aeee5f680609eee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4396303,
                    "digest": "sha256:0b304eecdd6e6f19ba7e99e856ec972081aef1c64eafe5cb68d5d9e60f6e905f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154406475,
                    "digest": "sha256:69c076600e2c0ecb5945ec8351c9434cb67e54c395d09fd4896ba0735a8de54a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 386,
                    "digest": "sha256:adbac872eb23339cf2f6475a475cb4b9a927a4af6481c2092120fc1c7265fd86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:c5cdb2d72ccddfaf9f0e8055df1030596041c865ee3a26f6dd6dd3b0a88421af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9785295,
                    "digest": "sha256:30927f982ba5b3fee05578ab61c267aa7cbbec4deabe44b1b0c25047870ab021"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:a52ebe6b7cea8c3b946532f4f530fd0023b839c190f67320c1efbeaa627d3f90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9595708,
                    "digest": "sha256:913f5abdcafd4d58f0ea1d623b33af7ea720bd354e01dd9fe97e8d25533b1d30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:c276137c30575462a3dfc362f340c6f83adbe08c6a7d08975caf872182e69d08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2579965,
                    "digest": "sha256:f0765a6fa5414e1a8058713ff1a53aa43eedc4c2a6abc04d8f3112c28371ca0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17987850,
                    "digest": "sha256:6d07f6ccc83a494a42debca22e8ad964cc64c9979de39e2662b173a2d8e837e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57335722,
                    "digest": "sha256:0da801545813841ad3d7e504bcf68d9e7978cfc52ccdd4ddbf6a2a1dc39057e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:f5545471ae38c0d718c555e1e5c01eb8b93e4ae47b9a2c47c7f943ad24ce6f50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 886,
                    "digest": "sha256:bad8617d702d8574e7aba32c2e4cc4b8e876f5c7b7c1b9ceb065df9f5137be61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108594916,
                    "digest": "sha256:67b77dad63f10f815684ff446afdefa35312f5586e46989a454cf1c48f63bf05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 166998,
                    "digest": "sha256:9bfc9adcafd1f4e8c5ed9dad4d5b112a317e6a1706e3d1e36fe66ea599119bc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220071225,
                    "digest": "sha256:7e719a055a03d8ffb861f3324ee0d66f5e30535e8c74a9f39105abe27669b20a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1661,
                    "digest": "sha256:b9877329d7775bba55041485ec9827faab7e335ba44b2e0e38c633a4248f36ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8427761,
                    "digest": "sha256:2315bb6bef8d3d6704a7d72a131d99c888c00ecd8192720f60497a25b2d2017e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131830353,
                    "digest": "sha256:c3d864cd2c2ef26a046f920f3fc8ca4b7937cd72c70e5b95c3e0caaa45e8dcd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:cbb7eb53e0e29a44a6e73dcb79905d4146df3731035ef293ad007fd2cf436c37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59612,
                    "digest": "sha256:b47da202a6cfbe1edf1594a9e2a4db87786c4adbc6cf97ea0c928e75b3910aab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122492,
                    "digest": "sha256:cd39e801cd0bb48521590bea86e6d7ce2a72733aff57c065c258b17c5eecfcf5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61962,
                    "digest": "sha256:ce3ad68ef70eee3abb02d7bf1159ed613b9472ed4fdd3be4d1ff3ef59df0d372"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2576863,
                    "digest": "sha256:d1cad126274859e0014f3aa049e2b09a5fb7b72156358fd25ce12723b6bc34e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212,
                    "digest": "sha256:2af37c06a86a5f9c5bf5ddcf063c1a006a39665b5ce9b49b7b89015905e4e85a"
                }
            ]
        },
        "1.1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 54507,
                "digest": "sha256:8e4314aded12c47458e135ad4c600397b64b6832141a2df28a4d9e9ace39d364"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75930248,
                    "digest": "sha256:69bcbcfbfb7c2728cc174e95d68181ffa5bb33a3d038da7e8dfc821699e6903e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109104278,
                    "digest": "sha256:34b70dd2d1e2630649ec880af4923fa323b946cfd1fc05b7543756cc234493c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19142,
                    "digest": "sha256:c2757dd7a53ce06ea4ae04722d1bc0b28ff4133372e97e948daaac8bfb96226c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2749,
                    "digest": "sha256:5434c3ac6b60f766b05fe5f5ca5419972aa7b506da713942b6ce408528b346d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4042,
                    "digest": "sha256:6d184c68f375af8eda2a8025441026bfc7bab38b4d53f7bd77a48f57419cb17b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:ea6b368399bcf576328abe100f4347360b378711dd3dbe6c32fdf394b05b9717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1178,
                    "digest": "sha256:67c921ab5efd084e34a33ca07585f9899cd3febcdea2894ccc0ed51ec1197ccf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 393,
                    "digest": "sha256:1a63ef462906e80207d96f948a866550d78f7e82ded996608b4e79ee70ea6db7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 422,
                    "digest": "sha256:67ed30a374f747dcc6d3453de9df996843aca1b3ae08fc0c490736aba25a81cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1433,
                    "digest": "sha256:3edc264fbd8bfdd7131966a2a469bf126e953d46707594bc0b16835212a916ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2034372141,
                    "digest": "sha256:fd7937d29ac39340abdf543a9c5f3cc2df2dac92d8c835f405d1a623bc8d1fa9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11535,
                    "digest": "sha256:332f6b8925e7b7f46f65c48e35dc1ba5e37c5fe852cce5ad50894026814bbf4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:edffaa1e16f1eee85aae21bb79b236124c3d3dd5385ef62925f5051cce07f1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172709,
                    "digest": "sha256:c2132bf4305e126b14601fad30301415560ee62658a9f8da2382985f5e7aa6fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 728,
                    "digest": "sha256:1ac04ae64857374d617726f73fe5604d4a4bb832f80738cf121cff03eb043453"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40876548,
                    "digest": "sha256:e91b670a389ea2a8e043c59a2fb93cc1881ab23e60e6c2f40563d4c0b90a6124"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9550605,
                    "digest": "sha256:4ffe5af75ef428a5aa0b6f264e7c20440a71776d1e659bc6105924e6e9560b78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 506,
                    "digest": "sha256:99f72e1e23b57f5c49a346e349cec28e0bf441c71be369133e8ee1d971e9aa08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225846149,
                    "digest": "sha256:bd69e8b25009a6c8c691fee171ce427a3b0f6123865319cb040eee5f57663bf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39287614,
                    "digest": "sha256:d090f5ed1a422c466456af7313d3490d8c53a1ffa1aa14490d5a68da44db5c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933432,
                    "digest": "sha256:7887dd70d4bad72e4a78a65189c70d7282558151c0fb432392667398601ef637"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 551282185,
                    "digest": "sha256:014adfbde54fccc2ade4e86007e489775b36cc9a54cba572a1243694378396b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 969701,
                    "digest": "sha256:fd79d38598e15401560d56ed2689f9a1b0d7d09f7ea7e91e788fdea14fb8b346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220048,
                    "digest": "sha256:a5d34de0c4ff77b310c733c110f24149c3586f673e773b54a29a43c1b501b738"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14786319,
                    "digest": "sha256:66ee4bea84bc2012727236467019661310c9d1cdad551291ed8788a2ff1746f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1070169,
                    "digest": "sha256:b95d1970550af741dff8227fe11f26d30e8a97e82328f4a448b919c670a3751d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185378969,
                    "digest": "sha256:6b4bdd2d48b126f9645499de634812d3d2e89297252c2a64710514453b30b063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73513408,
                    "digest": "sha256:af29d085e7c7c28070082f2cc71ac4af5f6f5d10a44fe4a31eb50af808c3d3a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 829152510,
                    "digest": "sha256:da7047a7e3858ee49e908ed9f1c5d3ce7a3dfaa9707b812769df414266a6d4d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 417,
                    "digest": "sha256:1f73993d9a31d74940c0bd1331275c56fe49bec1aacca800ccc0a2f2b27d0620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6693,
                    "digest": "sha256:2a51c1c15de8fd9e12ec244e04ae9b0cd009f190ccf9f11749a7469bdd47712d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109499946,
                    "digest": "sha256:e23deee7652f93ba5499e4d96d9e8feb66278c8e499a396edd8c50d716068c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471,
                    "digest": "sha256:b48aa20488a445be647fd18b81130c49c1b5b59eef9dee20bc99c843316fcb44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144158846,
                    "digest": "sha256:428efcae8bc59e72c99a83b1d144e71aa968a4f3387d383c3789ea3949d83bdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858823924,
                    "digest": "sha256:22ef5920991bf3a7d20ec0f89ed2962757a4cc5bbd314beb283de330b3a91e78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 575460691,
                    "digest": "sha256:d3837c308ca96a0d7e88dd65a3f643020757770694118ffa1f380b86da5abe92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4870561,
                    "digest": "sha256:9e97e4334b3733c75e7c36d6eaf31db150549d3525a187a96ab32ee1b8fca7c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1132,
                    "digest": "sha256:06403c54ec8f00a31afb54670f49b69a94c5bc2aa11b24bdf78b9e531d3138c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29468715,
                    "digest": "sha256:c030db87c169686caaaee71df525eb15e19442872ddddb9631b814e6804c5d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113141,
                    "digest": "sha256:38126af7871eb7e9ae08d6575d8577192a51687698e8ce551604e504b23a2e5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3504,
                    "digest": "sha256:5a34cba236e20e9026ce7ceef3fc1e1f27b814099fa4b6b53c1ed738688e60a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 237410178,
                    "digest": "sha256:69c1f26959bb5e04441a7c1295d6fed2671106c4364671d97a0eec0094450db5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1655571,
                    "digest": "sha256:301cee63f573b2d8342184ae5dd6099d2f138e0a2d27b18392be3b2220ab172a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:b329cd0204db931e8878850aeeb5103870ddc38f4ea3ef2c3ddecded77b6b9d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:b65271d34cb52b956bfd9000b7cc5ea5d2160784db8f7df4472df5735c447635"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28885368,
                    "digest": "sha256:e7b2004181a0fa52498a8a6efab43bfb22728cf01e0fb796597a0e52433766eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129687,
                    "digest": "sha256:b28da281447cf187ebab4cfed62451d83432b63887c4f503f2f1d6616a3d71ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59018754,
                    "digest": "sha256:a38a438ef2a565c8c45838d6ce772c348b3e1d1ffce998e3f2ec30790dc3cfdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11566,
                    "digest": "sha256:57bfded0263c713a48f6fd396d0e1d36c138bbfe751de584525286efd06e3166"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2060,
                    "digest": "sha256:07721c66ac7437313d0f911b64462d4ab9779a3015bdd8353892ba7529c7f886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135312,
                    "digest": "sha256:47b59b6597e07aec114d28a19391b1e993c4303674bb87ad36df7fc72853b988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 761014,
                    "digest": "sha256:b1bf9b85ff81fe39e2a063223bd1e1044633efe0eec2fc0ef2d87503866924f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4335142,
                    "digest": "sha256:334e7b20204dd1aba27c787ad3482853194753d42072de16e100cb19752bf43a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152433103,
                    "digest": "sha256:ab690cae760497cd66cb3d5e5d4ee053928f7e6a545b27a6151b4c0d6162916e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:8f769eb499554cd9371f6d0b2e347d208befec98c069babde205a867a8079b7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:841a20df23379c9ccc32a1e13cb3928964da7c249ed24296e96c763c8fb96049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53274960,
                    "digest": "sha256:78c074cc6607956bbe552b14d655e69b3bb91c467b7da854fc6c232d0940ec4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 395,
                    "digest": "sha256:90e3b0412ce95160ada017843f13690f34a4f84866bf154469faa8095987fda3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:52a7110c7b1b690dad253fa390f5845a10bca2099b37ff049d1e83422c3e5528"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9843803,
                    "digest": "sha256:f02262db0005db4c1b1d640955fa50ca63b3e40543f6346b24d7b12bc10174e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:5eadf068f42d2638bb024fde12cbc2b3a780b9d8481e49cb6949afd926f86240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9730959,
                    "digest": "sha256:2ac0b8827d8554e615db226c1fc3838f000a3dbfc94ea3d416d36d8a0a605e52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:8a4b733e0b1fe0f4fccc84d24d35cb2cfead2f19171ec5d339d7f8e0b1e02c4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566591,
                    "digest": "sha256:33681abb3c4cad902e65e4cf9545bff184899ee854303f5641118eafbedc8e9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:0ecc2c7c4a14042c3e45f500a32499c31f14bab6cde416a74c2ae39a41c9f4a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:a191ec24a78b603e49e4b34d4362874d642e3d10c69dab55c242b1e6b3d6fb7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48145548,
                    "digest": "sha256:2de588bd419ab01e667560dd25bdd5d88385416368ee408e1b42bef7f33711b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:76da429285907222c3f7f8c99a88447943cd882b4931902506ab8d315e488342"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897,
                    "digest": "sha256:849fbc759b0ffc4361be1c11231b2609415ce4938fae554bf1cc3d31001bc761"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112382816,
                    "digest": "sha256:f91c62f2edfae34201d1b548d1f22c3f7cdafd443197773fd941ffbcb431ad60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 174029,
                    "digest": "sha256:51a8e91d9e81352514538e5e29eafc8c57af8f6b8846b008276bc31d03c8a1b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212667530,
                    "digest": "sha256:c753df02d52dc5620a0a422e69a0386afd2908e92be68a62ec7ae0cdcb443cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1662,
                    "digest": "sha256:d3b2e57ac397029fc31e09892e77a3843274b861b89440f74427a44855797869"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8507228,
                    "digest": "sha256:432b206b0f30e3800f751e588832b1a1264bb06e3730fbc850bbe5ff7824eceb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160757830,
                    "digest": "sha256:07bd92ab483473fe81238c8e0bc0fc2fb28383dcec45066dd21de8373ef23a7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:b2cb5d760ba506acf99475f6274e529388b4e444c952eb1e9476185822d49ba4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59804,
                    "digest": "sha256:343dcb77f159e3f318866e613e46c5f8cc523e9c0859d7a0f15b44b200b08cf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124737,
                    "digest": "sha256:10948685e8037346b6a6ae5c41d78969630f38496e3cd2dc1f446b1a59dcb0b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67415,
                    "digest": "sha256:ea71bb0c5d51e3d51f69ef820214e9ca407842bec6acf9fcd063f6966e9a44fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2595491,
                    "digest": "sha256:871a89ed8941cffe8d4bdd647b888e3c2fe40510b0dcbddbccae9c044c0bb863"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:b0864f3aca0e8d8a61772e5663d2a3b5b6be6426a72547231e9e9de37724c16a"
                }
            ]
        },
        "1.2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50492,
                "digest": "sha256:1e1676bd8e2f3371d56a6e8866b6bc4dfc1b0c822922b35ca1105a802bca225f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75956658,
                    "digest": "sha256:422b94ea3adb4bcb88c2938096d06068099eb0fe041d0e2b67b3749d8519326d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109139558,
                    "digest": "sha256:7ab0fdd1d51a0c576fa8fdc3755e862db00d346456f12cf4b401c1602342c5f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19147,
                    "digest": "sha256:951c975f26cadef74c99646710bb7d9a2a3d38d2ed5e786f9f42b49ff3fd10cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2760,
                    "digest": "sha256:6fc067e9b858f3b2e8e9b8ed907e44d0c69dcafd6f5c031001445259dae56b2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4052,
                    "digest": "sha256:830f68b3a83687d2d7dbf557775ee9de2bc1e913b956e9008af2b7ebdcdaf072"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144,
                    "digest": "sha256:54a8d8cac64775629af4c474d457723d2502706f3d9d5e4bdfbd4dd06498552b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1183,
                    "digest": "sha256:f28fd276a7811872306bbf7c50a1cc49bc92b1cbfd7c59fa8851c9800f7f5290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 396,
                    "digest": "sha256:8da3a19c3fe46777c3c6e519ce0b529e2568169a831667040d9c0f0fd10753fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 430,
                    "digest": "sha256:156e8b88cbfb88e37f099414a9f1cebfd7ce035ae99a6bc5c5e2e0ca4fbd3c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1447,
                    "digest": "sha256:e753ab8bb038a74417b340b768121c6beb8b8a26148c74193031eff3fa3967fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065492844,
                    "digest": "sha256:de4e8911c0402d11716302b10aca7f15c3e2870575c39de3d2a9075123ba03ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11544,
                    "digest": "sha256:3f6d78811f7a7d3be21a71e5331cea7d831c54c14d99fbc52b6ccd5a97e88c71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:a50272bc9835e09824ef9b104bcdfb0cbdbd123dfed9738c1d201b47d89be7d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172722,
                    "digest": "sha256:de3e6019dda1ed865b183959e172144ed6f065f1a7e1d3c09be133d80fb56420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 734,
                    "digest": "sha256:07713eac744176e1c76c58b638989b546bf98ae30e699e53da6ff17e3fce0767"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40728371,
                    "digest": "sha256:0ed06061e3f3dffa2951cafb242aca1f3d76562e396ff6beedd5ac5765a9e3ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9654271,
                    "digest": "sha256:551d7ef78a17d32c878990180bf908c92679198c141f181c10ca8912c8433edb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:2eb2abe15e8a16a25f983fbb3c9c066bf82ae68b3311550f6fb57a0136cfe323"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230319428,
                    "digest": "sha256:78828eae9e447b6c2c4e1b6294594be40e0e4bc3f65ed8f3b43045853ef9b9c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39288392,
                    "digest": "sha256:cf45f508377b71213c87048405a26e1c4577676ab8bae5c51190578630a30e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933420,
                    "digest": "sha256:c9364dd2b6e5ab30a90441a1fb4395134864ddb183642c3748c5509f27b703d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 568379371,
                    "digest": "sha256:58f3446048a420fdd8e08af0cac12dd2e79642ed01eb10ef258b408714795936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 973330,
                    "digest": "sha256:90af6903e15bf500e71df1f9ff51aab1783c8411cd8c29ffcfdeaf2dd670c219"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220530,
                    "digest": "sha256:6079a7d6b598839d162a33e2d7554d96120af362a5feaa810c26d3112b73395d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190650244,
                    "digest": "sha256:a220fc8777f5734cf5c23b86142033902360b7bbbb69d230d011a5b82b8a97ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14786670,
                    "digest": "sha256:b5f31eb329a229fbc66bcfd000f6879fdba92f3546c5ba469929f6efb02cba4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5124842,
                    "digest": "sha256:1ca80be54f25a91cf3d13c79fcf92cbd4f5ab3a684aa62c0ee62789e845f9432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72076506,
                    "digest": "sha256:6f13d5594db8637d6b84013c4bec1a7602538836a5d925f6e6be66e5921caff1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856169789,
                    "digest": "sha256:8c9803c64a0315aecb59225f2c52eb0a40bfd64654f644187f98063a61d48355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12954661,
                    "digest": "sha256:c5452533ca43b3b21b7e23d007eb0e220a9fbc902af427f339a1abe690595e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7902,
                    "digest": "sha256:1de1ba25cde8854b4db80a02c2ba7a2fda4333e9479f350163ce08e9692a4b50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109846611,
                    "digest": "sha256:2bdc653f57fedbb2330e147f85398e59211d1bfcf41d457891baeae640c48936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472,
                    "digest": "sha256:3021dc39e54edc92824623c5c86e4492cd1e639636fd71b3baf9bcbb4ca19cde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144156521,
                    "digest": "sha256:f0a933fe667f9a05e9c994d4ff3a0030989b4c8e50b1b951df54155504a92bc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 929722522,
                    "digest": "sha256:0fcf42a76aec83056a2cc68e166f167da6bc142c74392a348f0cf7ca2a0442ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 618782814,
                    "digest": "sha256:6cd091e177e857738f90bacdff3922ffbe72fe7722101b87b23c454890a018c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4870540,
                    "digest": "sha256:8ebe0aad8678141fbb4941f0ff4a034e00ce51a71f62af3e658a81c77523e06a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1133,
                    "digest": "sha256:90a1c81ffe0c91fd35f4ce5332ae44955f25fe722a155b3850ea29e31bff7037"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29468485,
                    "digest": "sha256:06907d2b71cf8ee62136e394b9f79f647256b83d45bdf396198dd8ca26e4fedb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3506,
                    "digest": "sha256:91aa98cec5c30eebae6191b8c60111d4cbe7970dd0ebcd38899b4b00ab1afd66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239626526,
                    "digest": "sha256:cb5e4b26db10acee9c28d1ab128a5167afc752bfc7b15686f8edbb2d369258b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1655516,
                    "digest": "sha256:ddb2e7717ec9fe871f1dee6c78ca9af1e9dce2ef6471bf052e6aa13bff730232"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:e637ea5cd64ea631d543d7677535112ba883ca183ba2b281c2098467eeec03d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:ec7893df8f02aa67f71807f21a65a403644b9473f9e4cefd44373fbed99fb81e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28885444,
                    "digest": "sha256:e0187d7f7a3a3bd5303010bf19870d4218aa1ec192c73510c3618d2a3a788f54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129683,
                    "digest": "sha256:ba3e48f4ede0f0395b8079b368337c0b71ff957bdf3a5df38d75fc8c66d2be1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59018721,
                    "digest": "sha256:2ad3a017c6593755b4e6d9f090191f7a21ed448ca622744e3b1dc3f58dcd2019"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11647,
                    "digest": "sha256:2763a7b2f0cfdf4eb4acbdabfaa3d30538e3df2ebd7b16a9043c20d2a6015b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2064,
                    "digest": "sha256:38f3e4c9e126c77f2b56c66636ae2b6453b4362ec70fa5e62660b4b4de950282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135313,
                    "digest": "sha256:4cc02d73abbdd49452a78d7c023f805d5b9f4da970c2401394ef394523419591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 761016,
                    "digest": "sha256:6aee476e8278cb7dce2e6863c14c26afae068db139b89a31796b4d9f533169ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4354518,
                    "digest": "sha256:85f9980f841b99969cc28b4da6b4961bc046d354202f456e8e811e008a9eb7e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134762610,
                    "digest": "sha256:6c027a5fe85604f583a48594e8630f4d9974159e5a93afa752d391feba1e9c55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14589153,
                    "digest": "sha256:065d0ae5921cf397c670522cfbe9d6b7a33bd19df5ff3d4fe332b1bc5bf07ee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:2e4ef2149da45cb1123f730303337179a14b82a0b218ca815d1d44f27e2d0f2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10135366,
                    "digest": "sha256:f65503f7e68b9f477c96738277ee59a8f85a454c2e90b1c0dda31edd5baae6b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:b48fe9368cc77a2ffcbc21da43b7450148a8a2d558607030996c5fe9a0f3c39a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10121518,
                    "digest": "sha256:e264ec5fcfb6ee3f33f18311d1bd214cac6ac137b42be7a7e9796eb1c21dca66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:ac1a1666dec928ce0b469dba7ca397ad2597423c54a20af2fc06301bf7ad9899"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2759646,
                    "digest": "sha256:c11b05af2dae2a35793eac1381ec45a0fa4c82a977f6ff03ff58afbd21f79739"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:626b8907e0c60eb8ca54339372f8756ee9a461ca33dd6dd241961507110560b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 922,
                    "digest": "sha256:05490de51d6964a1c1f7acb4f68c4181512122a04c378f05878e2ded6807b498"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98062553,
                    "digest": "sha256:a9b4f11bd17c06376176944b20dc1572ec00cae10f3f42307e54b65ab645571f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 173077,
                    "digest": "sha256:4cf07ae832d23617eca2b4f23f8f2d8a4227cfcde8878d309548d37b9ed2ac30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 254784264,
                    "digest": "sha256:ecd3cd48da69de451059abd4ca0f396e4e6cb9c1692fe4dfefb1026f32b5ae95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1662,
                    "digest": "sha256:3cf82fcbbc30bba6b4062c57c253da386bb582b490626e8d312aa2fac559c04f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35924465,
                    "digest": "sha256:4bc121e1249d768fdfb16ad34e778988bff7c1965aa719a041b359ccc8d13012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54153673,
                    "digest": "sha256:2ecfceaa1e04eef472fe27089e4b464d02cf5065ff233a0ad21148fb8a148c35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120,
                    "digest": "sha256:7fb37d981be9015ca2ec52277497c49b1a64981c4df7dc6e9dc7a45fd9a2d656"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59836,
                    "digest": "sha256:ffe5b10cc4fca2d2abf3581b0e58be98d10e7c771bb938abadbd477db7a30506"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136068,
                    "digest": "sha256:af6c1b1a92fe6dffbb2c055417264bd4758209c8f43d5990964b00cb42d52335"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69728,
                    "digest": "sha256:1953274fd4677fa1b9c074fa14853f982e3fe59a28f8060c2d1dcc7ead0ced53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2644550,
                    "digest": "sha256:9725c4d84a8fa2051bdef2e2f733dce78892c37f878147a8cf6411904a80ab8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:5a09f4d2ee1a4eb82754bb8dd48037ca4297639b7a33a0ae4fa8138d5ad601a0"
                }
            ]
        },
        "1.3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50504,
                "digest": "sha256:2f61d9a6bb8dbbbb0f80e70bc766eb862cc2a1b7fd5e34af95eb99ca6b9b287f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75956658,
                    "digest": "sha256:422b94ea3adb4bcb88c2938096d06068099eb0fe041d0e2b67b3749d8519326d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109139558,
                    "digest": "sha256:7ab0fdd1d51a0c576fa8fdc3755e862db00d346456f12cf4b401c1602342c5f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19147,
                    "digest": "sha256:951c975f26cadef74c99646710bb7d9a2a3d38d2ed5e786f9f42b49ff3fd10cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2760,
                    "digest": "sha256:6fc067e9b858f3b2e8e9b8ed907e44d0c69dcafd6f5c031001445259dae56b2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4052,
                    "digest": "sha256:830f68b3a83687d2d7dbf557775ee9de2bc1e913b956e9008af2b7ebdcdaf072"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144,
                    "digest": "sha256:54a8d8cac64775629af4c474d457723d2502706f3d9d5e4bdfbd4dd06498552b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1183,
                    "digest": "sha256:f28fd276a7811872306bbf7c50a1cc49bc92b1cbfd7c59fa8851c9800f7f5290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 396,
                    "digest": "sha256:8da3a19c3fe46777c3c6e519ce0b529e2568169a831667040d9c0f0fd10753fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 430,
                    "digest": "sha256:156e8b88cbfb88e37f099414a9f1cebfd7ce035ae99a6bc5c5e2e0ca4fbd3c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1447,
                    "digest": "sha256:e753ab8bb038a74417b340b768121c6beb8b8a26148c74193031eff3fa3967fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065492844,
                    "digest": "sha256:de4e8911c0402d11716302b10aca7f15c3e2870575c39de3d2a9075123ba03ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11544,
                    "digest": "sha256:3f6d78811f7a7d3be21a71e5331cea7d831c54c14d99fbc52b6ccd5a97e88c71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:a50272bc9835e09824ef9b104bcdfb0cbdbd123dfed9738c1d201b47d89be7d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172722,
                    "digest": "sha256:de3e6019dda1ed865b183959e172144ed6f065f1a7e1d3c09be133d80fb56420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 734,
                    "digest": "sha256:07713eac744176e1c76c58b638989b546bf98ae30e699e53da6ff17e3fce0767"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40728371,
                    "digest": "sha256:0ed06061e3f3dffa2951cafb242aca1f3d76562e396ff6beedd5ac5765a9e3ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9654271,
                    "digest": "sha256:551d7ef78a17d32c878990180bf908c92679198c141f181c10ca8912c8433edb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:2eb2abe15e8a16a25f983fbb3c9c066bf82ae68b3311550f6fb57a0136cfe323"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230319428,
                    "digest": "sha256:78828eae9e447b6c2c4e1b6294594be40e0e4bc3f65ed8f3b43045853ef9b9c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39288392,
                    "digest": "sha256:cf45f508377b71213c87048405a26e1c4577676ab8bae5c51190578630a30e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933420,
                    "digest": "sha256:c9364dd2b6e5ab30a90441a1fb4395134864ddb183642c3748c5509f27b703d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 568379371,
                    "digest": "sha256:58f3446048a420fdd8e08af0cac12dd2e79642ed01eb10ef258b408714795936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 973330,
                    "digest": "sha256:90af6903e15bf500e71df1f9ff51aab1783c8411cd8c29ffcfdeaf2dd670c219"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220530,
                    "digest": "sha256:6079a7d6b598839d162a33e2d7554d96120af362a5feaa810c26d3112b73395d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190650244,
                    "digest": "sha256:a220fc8777f5734cf5c23b86142033902360b7bbbb69d230d011a5b82b8a97ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14786670,
                    "digest": "sha256:b5f31eb329a229fbc66bcfd000f6879fdba92f3546c5ba469929f6efb02cba4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5124842,
                    "digest": "sha256:1ca80be54f25a91cf3d13c79fcf92cbd4f5ab3a684aa62c0ee62789e845f9432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72076506,
                    "digest": "sha256:6f13d5594db8637d6b84013c4bec1a7602538836a5d925f6e6be66e5921caff1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856169789,
                    "digest": "sha256:8c9803c64a0315aecb59225f2c52eb0a40bfd64654f644187f98063a61d48355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12954661,
                    "digest": "sha256:c5452533ca43b3b21b7e23d007eb0e220a9fbc902af427f339a1abe690595e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7902,
                    "digest": "sha256:1de1ba25cde8854b4db80a02c2ba7a2fda4333e9479f350163ce08e9692a4b50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109846611,
                    "digest": "sha256:2bdc653f57fedbb2330e147f85398e59211d1bfcf41d457891baeae640c48936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472,
                    "digest": "sha256:3021dc39e54edc92824623c5c86e4492cd1e639636fd71b3baf9bcbb4ca19cde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144156521,
                    "digest": "sha256:f0a933fe667f9a05e9c994d4ff3a0030989b4c8e50b1b951df54155504a92bc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 929722522,
                    "digest": "sha256:0fcf42a76aec83056a2cc68e166f167da6bc142c74392a348f0cf7ca2a0442ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 618782814,
                    "digest": "sha256:6cd091e177e857738f90bacdff3922ffbe72fe7722101b87b23c454890a018c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4870540,
                    "digest": "sha256:8ebe0aad8678141fbb4941f0ff4a034e00ce51a71f62af3e658a81c77523e06a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1133,
                    "digest": "sha256:90a1c81ffe0c91fd35f4ce5332ae44955f25fe722a155b3850ea29e31bff7037"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29468485,
                    "digest": "sha256:06907d2b71cf8ee62136e394b9f79f647256b83d45bdf396198dd8ca26e4fedb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3506,
                    "digest": "sha256:91aa98cec5c30eebae6191b8c60111d4cbe7970dd0ebcd38899b4b00ab1afd66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239626526,
                    "digest": "sha256:cb5e4b26db10acee9c28d1ab128a5167afc752bfc7b15686f8edbb2d369258b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1655516,
                    "digest": "sha256:ddb2e7717ec9fe871f1dee6c78ca9af1e9dce2ef6471bf052e6aa13bff730232"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:e637ea5cd64ea631d543d7677535112ba883ca183ba2b281c2098467eeec03d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:ec7893df8f02aa67f71807f21a65a403644b9473f9e4cefd44373fbed99fb81e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28885444,
                    "digest": "sha256:e0187d7f7a3a3bd5303010bf19870d4218aa1ec192c73510c3618d2a3a788f54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129683,
                    "digest": "sha256:ba3e48f4ede0f0395b8079b368337c0b71ff957bdf3a5df38d75fc8c66d2be1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59018721,
                    "digest": "sha256:2ad3a017c6593755b4e6d9f090191f7a21ed448ca622744e3b1dc3f58dcd2019"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11647,
                    "digest": "sha256:2763a7b2f0cfdf4eb4acbdabfaa3d30538e3df2ebd7b16a9043c20d2a6015b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2064,
                    "digest": "sha256:38f3e4c9e126c77f2b56c66636ae2b6453b4362ec70fa5e62660b4b4de950282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135313,
                    "digest": "sha256:4cc02d73abbdd49452a78d7c023f805d5b9f4da970c2401394ef394523419591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 761016,
                    "digest": "sha256:6aee476e8278cb7dce2e6863c14c26afae068db139b89a31796b4d9f533169ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4354518,
                    "digest": "sha256:85f9980f841b99969cc28b4da6b4961bc046d354202f456e8e811e008a9eb7e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159855396,
                    "digest": "sha256:d231ad6a56f702f0189517f34b6592aa13e34faa07d83e59d52fcab8ce96b4e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52147840,
                    "digest": "sha256:3980afdad2704389c6835ce49d9cacbf0222e8f065648ae85d641ca1a6d79289"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:7697c5d68f29462d2a06f579c038d63d02af59415d684921dfa4981aa6d64db4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10135405,
                    "digest": "sha256:788681f9544907d3861363f957de6afe4b10a30f51b5e517c6216a30437e8620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:bd84bac32b79dd1fe00305771a9f16b45132c0edfa74ddf1176f63d2c752a29c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10121539,
                    "digest": "sha256:24a5f3b208575a5b009a24afe18c197a6452bca5cbb2d80ba17cc01866b179bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:258a8c63b74129fad2e8fbce3b22b3150efc22e3167f1d671ac664ce15e3e6dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2760212,
                    "digest": "sha256:19b70ae2173894bfb2fbdedf3d04dbcdd63871143f0d2cd6c7a62b5a2c977e1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:d2fcde236c686a859aa986bbf5e604e18d4213b774bdac818bf248d41a4b3c3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 929,
                    "digest": "sha256:8c35ff0e066309151d0e1d16b72a2ac0479a5141a91fca2b2a23cfec7d044536"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99930174,
                    "digest": "sha256:af9ee84230b47f41c37d46314e95e90bae5d97adce952893bcf824e3fea61fd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1159960,
                    "digest": "sha256:b2825164fa4224f1d7db8bd65aa1066b93ccb3bbc2be5eec22f66c79dad18af7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257581916,
                    "digest": "sha256:4997068b787dea19431890690ee56eb6beee38d533dba92330d7d9bf26ee13f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:047db7e6c8bcd23af8625a2a531c613c4b3683c680586d6d56e57fde225dbac9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30209159,
                    "digest": "sha256:3f9ab7ec40ae680ab582f06294b2da8abd6fbb360dbc10390979cac7ed34bbf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54154422,
                    "digest": "sha256:5cd1d9dc936cdd335e0da2b3c8cad5b2e1edc815f1d72ecabca27fc270177183"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:162ece3c0c7813550682030c4dced5d8448277f8b345aa1e4c084f737d7e4c55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61573,
                    "digest": "sha256:85696c3196a72080f21ae99ff6e3ff9f52e413225a654bb4649742fd2e8bafe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131345,
                    "digest": "sha256:66f583cbd6cbe9591fb7e0e95560eb0cc7d3874dbac6cf2455149d1c3feefbf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83505,
                    "digest": "sha256:e81081f3e13f056bf353a9cc447f4b045a9598b49167907e79d464180bc5e20f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2742588,
                    "digest": "sha256:5ab55d3a5ab264e1daea010ac85bedf3630910c8ebca608a197880531a69a404"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:9d1dfdc02ad7b778eec2c319226e691dc3710e56abc0abc1d43008ee1dc2f21c"
                }
            ]
        },
        "1.4.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 49027,
                "digest": "sha256:692d330f358aedd3d98d33881e4e87bc409b7ddf91d7b23bc3f33c1a137c561d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567944,
                    "digest": "sha256:16ec32c2132b43494832a05f2b02f7a822479f8250c173d0ab27b3de78b2f058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80191886,
                    "digest": "sha256:2d20fc91ca4c0326328918ab17e9807705367ace8f755e759b5499c6ebfbecf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77724327,
                    "digest": "sha256:8c1cbfe29823a598a5fbad25aa23cf737b244aba2183d8b19dc1db7991df1746"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19138,
                    "digest": "sha256:8969bb0f48c6f9b18b11318ba20c2c6ce7fec4823faabc8704b5fa991e1d8b02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2762,
                    "digest": "sha256:979c937ae0b10f49cb1593568154ba1f3a94d960757c71c416c5b02db0d9d92a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4055,
                    "digest": "sha256:54f447dbb8690f98de36c65d7f84ae649a5faa586e7027a25a3b9e18556ad780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145,
                    "digest": "sha256:050b9a515d3847af1e77162af187777ed2af65cb339327f9aa43cb7da74a8e7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1181,
                    "digest": "sha256:b47abefddb18a03b46f1c6d38ba7d25394889a8bdda3c9a6ead7c58fed245130"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 394,
                    "digest": "sha256:9baca5bdde0b163f5fa0b1a66681d5dfc69326528063329141187355a0253a67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 427,
                    "digest": "sha256:8f5d32b6dcb0b993ec6efac423645c913c170452b1be8b9a55bc18a6fe48ee44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:7eaeb39618edf423203c580b497198cf6b68f479ba23b0ceb49a9ce4949a8fb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2356483769,
                    "digest": "sha256:15c95b7dac39e44d6fd755aa7f2ecfa2b3dbd9a7ccc2e1304cf681444b07324d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11550,
                    "digest": "sha256:146346f1ce6782f22e4bebb35951ef26949f0e5cec8170d8f5f2c4477312bcbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:c78746b2b0ee62efd9d65ad520585d3a8e7429afa18651c924ea52217a60a55a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172721,
                    "digest": "sha256:de960f57ab6779447ff911ee45ffca6551151b920691cf75f6ec8e1a6b6b9b2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 734,
                    "digest": "sha256:a23a010c3f6133c02a1e08b9de268100b7ac5cb8638262663abee072bd483cdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40746388,
                    "digest": "sha256:9bf2920eee68168d5758126fc8d4caf00c0162f782f4bccc0e4b3c8c7493d401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64003720,
                    "digest": "sha256:29c67fe2ac6fcf13048695d0f00a9d56f0d0cbc9ae948fcb3fd0ed5cef2f5829"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:18c1ec3721d9c274d780d7065b8f5b758971e3dca6d5018fb738cc684886e693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238579625,
                    "digest": "sha256:3ce7af4d5a99e3bcebe74040d5771530fa4ca974738e4022d9eead1593d0827d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39287292,
                    "digest": "sha256:a6e2aee79aa722024f33570f7ea4e1e4ba90b5da724cf5bda43c4c85a2a51fab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933403,
                    "digest": "sha256:834a9b496fe3a8154149667eea948a9cadd9a45f1ce5ba635dd08629e5f97551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532909424,
                    "digest": "sha256:e9b823103b6c721d767e212c281c2c008ed3a27a307252e5514ba6608c84cbbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1128211,
                    "digest": "sha256:2ac9ff55d0236f43d4675b2505525aebc596cb58eac30dc8d582b07ceb7a8484"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 222589,
                    "digest": "sha256:da7fedee2aea196900209b62c536916fcea1672fbda75cdc31cb6c5e1d3966cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185056608,
                    "digest": "sha256:11ac5910731759b86c9e242b928cc1850087483be8a7a68080f23443a45c2f35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12642412,
                    "digest": "sha256:8c29be386e50b572bdba473b56e28635a67c56827806dc516bde9fc39105ef1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5124844,
                    "digest": "sha256:cc06b3fc277ba45b5253b6cbd91c4d531b0a8818bbc79b3144af31e9a3697121"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79015122,
                    "digest": "sha256:95bf9b3d3e1bdbd431187deb6f171bf88cdd45c0ef349378e3577b5aef352ee0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17666658,
                    "digest": "sha256:912382e73914c68afbb71b758fd0fe94a1a4227d2e740dc0fe45f45f0bb28867"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8132,
                    "digest": "sha256:d459e2192d85431a3793d5a5abbf7c007fb05bbbacf837e67e989a91dff315ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109853102,
                    "digest": "sha256:ce1fadce9a475236e57b93c6dc5c928c7dc0c63407ffee5a9a9ec28e90ce65b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:58dac880a223f7976442fb1c24977e0ac15139ed3709dfcb77ebefe66513df6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144547556,
                    "digest": "sha256:d0e377788c67953c900760e4c611f303a40a359680ea782d08b275e3f97098c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28295884,
                    "digest": "sha256:109660bd6ccd9e061e54f2e13cf4d25610eeedc3075aeff47bb1eb39fc2a9183"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10208,
                    "digest": "sha256:26870531d2b71a2b6743f05d23c393aedffa68a1dfa49cc4d1be0d826b1fed3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 920275634,
                    "digest": "sha256:65c3d682c501c6f491c026ab756db0c45e616687f21de04ff6846aee9a15cf3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 796849851,
                    "digest": "sha256:96b58c0faf73ab88f441d2c08d85a700f637bc31b9fc895a4765aaa60656509e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4881233,
                    "digest": "sha256:d37375c0138fd908435f260696c5b56336aed6735883584067fa925976e82ac4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:20181a413c6dba8d072dbe79830a714c311bce52bf9c4641635278a16dc0c12b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3509,
                    "digest": "sha256:332bf8ad0fede69ef16707d02c27a9cd089f910f70653310ca038b0e688bfbe3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137577832,
                    "digest": "sha256:8bd15634de97991be519987564046862f285d167880c91688bbd413b87bfba64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1629309,
                    "digest": "sha256:3689a3b98617b36e0d9bbf991b04a7c66f0e7407dad6c52dd9005017ff987e6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:238d973c1a31a7cb72f42518c42064be0d557e2f5ebcfe121419d49eb66317f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:20cd75c115bfe0203b1f47349bf4d88ee834f01ff5b57e9369a4eb6b93dfcf20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764956,
                    "digest": "sha256:39d222de31cec1a79215c4241bfde55de47e83cad0996746c4510503c8402ff4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129738,
                    "digest": "sha256:cb222cd47e409014a10a1ad19cd42b382784ed786c7a7a60a7531e6b7dc0181e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36895782,
                    "digest": "sha256:fc0e76362a8209125d864b8604ecbcde877cd7ea55732a16d424eeb8c5714ded"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11772,
                    "digest": "sha256:6ae9cf9b41c8ddcf0cd5a7d6bf4e7db45e40f20bba3e47241d3a8b8de9df9240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065,
                    "digest": "sha256:be0d78ef40ec2f42b04256956b4dd81d64436f94823b23aecd68d3915e038a5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135310,
                    "digest": "sha256:2846c18e802fc641ccb3f30298d27836bc5dc6509eb84d51e0ab4891bac48b07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979124,
                    "digest": "sha256:474d5001000365fa864e7ebf25db14a9e6db09d4279c5f7186dc1f2b0b8c4408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4367543,
                    "digest": "sha256:c910dd629ec91ebbb69bf24eb69e3160b39431decda9587e6d40cac92879a55c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16615678,
                    "digest": "sha256:ae6ba689ee3efa89d090e41137d33d2099972a8f14911d964a3c941c460adfc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159218698,
                    "digest": "sha256:859a762239f423bd10979a59bc941c018f50e2d88106b3a32a870b70d6ff08e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252,
                    "digest": "sha256:385f274739fbea575f933435698c32ae209ff085808f058862602ce479af407c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:427e214cca5b6cbae7436a65fa3568f060b3175540d3cef9c840038f24ade436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2167655,
                    "digest": "sha256:1a1353b902b9a316b11d2a05b6cdf1fadfaf86d13b3347efbdfe47217f67cb2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:05b7574ccc8181dc822811446f10d72f260b6adbc9cd08a1bc1cc74015e39973"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9905148,
                    "digest": "sha256:206baebc41608670daa5cf8fd0b39497a475c0abbf87458b80cb4df2c0b4d95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:54d84fecc3ad2f03c6deccdd4be608f42e4294220ac11651b2275595e9ea936b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2789282,
                    "digest": "sha256:098214e95b3fd4f2fdef4b56038120ae5004aa1be5803138823ff0580b685f02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:87354ae6fc1d31db3a2cfb2992ad96a7b858cd2bd88537a7fd9936222f33852e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979,
                    "digest": "sha256:12e5f4ab495986c52319c9543f30035e64d32ea1f1f13035867493d35511e41d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122102252,
                    "digest": "sha256:8b1c883289fe185cba8f714892bc23b3fb1b5ecaf8a91af64bddce58b0a93de6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1175851,
                    "digest": "sha256:82c53294957805991045e076edcb5546dbe7c0efc6be757e93d4e76e321e55fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225035689,
                    "digest": "sha256:6a9eb08b8e36022c43206faad35b15db2e2c9a0a7558a665c1ba625999768eed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37763004,
                    "digest": "sha256:87d10b9e08d046afb754e8a12504a3dbe8d295e1ab748c900440b388703b276b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1662,
                    "digest": "sha256:13c28c0ef109f33838691e498f5def1084551bc3309857fe0ca6424a8e248825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30323361,
                    "digest": "sha256:07ee938b843fd7639bb289fc4b6bcd51d718a187e59cda98f45cfb0cce895d12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54154348,
                    "digest": "sha256:8bf28985f8f4314ee45d404e916450b0404e1e2c5acb04192db748f6de074344"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:31c8a2b1293773135d91ef9cb577b2a7f9db2421e2132ad00b68852d3f35cec3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62373,
                    "digest": "sha256:884e3227152f7fb46ba8200a3a67c40deef3c53ba941cb6b542bbbbdc16937e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141940,
                    "digest": "sha256:123401177651898473375748f5e3503e2f94f4935fc0ea4aa7e4bce35741005d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87828,
                    "digest": "sha256:42b599f9d7edb56a79978294276b6641cd9271769c477014b87a74cabf51be33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2836506,
                    "digest": "sha256:86642ac3c22e304c4baa46f0453cd099c85904a0ff36c0cdf80cd25bf8380172"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:02c972e7bd1b4a531aa80ec693cb8711be7bd0980b98723b03f679451c6c6210"
                }
            ]
        },
        "1.5.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52268,
                "digest": "sha256:7a827fa34c371aa74683373f8bd155c38bcc65394526b4815499b465e39df1a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28568914,
                    "digest": "sha256:f3ef4ff62e0da0ef761ec1c8a578f3035bef51043e53ae1b13a20b3e03726d17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80179114,
                    "digest": "sha256:0a5a58fe9f80bdf8d873a90df8f25b0c45521493c683962ead7045416ed044e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77730009,
                    "digest": "sha256:ffe911d7d638437aab9d53b4010ccf19c716c99b564b6422b44569118ed19e80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19137,
                    "digest": "sha256:b6ca3d91503f31b907ea0f082f73942b6cf116b4a6ba79a767afeec6d3ff7929"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2762,
                    "digest": "sha256:2153f05ef7a84e6c9cba0a8bd645e729fa2f9410f9b8c5d783a404ca3352f640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4055,
                    "digest": "sha256:960ad9fc339d74f9c9d97da11fabef63bf91c8df2998fca9964e2e1e55db7dca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143,
                    "digest": "sha256:423cea99f7d205805222abffe128a11b14d90320c8000aa568bc6953e3cdb833"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1179,
                    "digest": "sha256:ea4474a67b49659bf6a4c9f352d77216781a357cfc8dfcf1d5fd1410c6ca28f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 394,
                    "digest": "sha256:b397fb86b3bce85b096c00152e4e199e553b7d298a78486895c8a71fe0094124"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 425,
                    "digest": "sha256:927627363759dc4a4a799184cdd59b07c100f7e21b788be85cea7bf7a058fb33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1447,
                    "digest": "sha256:312d920fedccedbb19babb2d7f5d3f438ecf789ce747924dd32a677a4cdb6b31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2512286243,
                    "digest": "sha256:7a50c2cfea6bdb37dd2fcecf1b34f9b8b97f57735244717944dd12082de7cf77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11549,
                    "digest": "sha256:06daa3d0f46c9d3ed6a1b945ef5aad249863addcf91de2aa53f18854539b0367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:aec116761f981c14c18ada8b6160151292b94d8ddc0bb86ca1136c259c6745e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172709,
                    "digest": "sha256:2812dcb9b1f104373396e0c59a745948dd050d078be82ad02728da77c97566ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 727,
                    "digest": "sha256:0b40e0143bfdfb31fe9de82db1ef5fb25679c469a8295135d77d06e2b06f861d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5019,
                    "digest": "sha256:0617ebfc4a217d4ee06e336355fd239799c49af5e9a07159a209c7a7467ffa27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135306,
                    "digest": "sha256:45a7802e347f9ad3c137aac9461230d03e52047014e6f92e47eca5919bea7df2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40738921,
                    "digest": "sha256:9c3aac051d0f30a409d076d6bdef9509f04c94c7f9ad584ddf6c204bb742a22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64004003,
                    "digest": "sha256:c06cf176a9cac808240f4e20877a39fe67d8cb8520a028fc13b59db3bcf1b008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 508,
                    "digest": "sha256:6790e5e29cc342d9c75f12826d8946299dadd5b42f7901e21c282de5c98eb5e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250886313,
                    "digest": "sha256:896ac25d66a98c1ce0334eb7f27484bbdd19897c6e36b46c05cbe73c53462ec9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45202312,
                    "digest": "sha256:7dfa990e7e1717368ecef9fb287025797169d78742743ac70be38bc7f8b5624d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43719923,
                    "digest": "sha256:9c0ad29545c4be69846aaed4d570e67593e6b07258a1432416a297c83a8d23a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 538071170,
                    "digest": "sha256:10c826feeab7cc4f49d1967555f661350f55ef88732bc616680aa75b3ee4f1ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1132314,
                    "digest": "sha256:7586e32d819735346b24330326aaea584daad95fa89bb02d27e317b5e601365b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27219,
                    "digest": "sha256:4b15b5b33bf7fee3002ff6be283d3b2967665b82e229bc5944f4bc6c74c8f8a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188435455,
                    "digest": "sha256:57e6549ecb9d491f63316a5dbf6b47084fe3f894ac5f5192c7ce2d64c08131b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12493111,
                    "digest": "sha256:6ad6cc7591f45fd3e054ea646fa774a4e9b2c96b3c8335ae7915548a78c62dfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5124778,
                    "digest": "sha256:42f060f227fbc1ae3d18e3e2ef8904c63a316555b72403566ea23b7a55eebd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70518180,
                    "digest": "sha256:011b1f6b64000b441fe978aea386ac1b361635b545c36f93df46690036a30bd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17326113,
                    "digest": "sha256:9e53e4417963341cd88aaa951dd6109de48a17c55572d0bd17145142244622a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8140,
                    "digest": "sha256:ca666d4eaa20f41827bb083824cde9c2c41a3d469224a3e83015767841f812f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110853524,
                    "digest": "sha256:d1f7400b2d3faacb8c652f11245d8fb44904c693cf5403705a183f54e2e5fd6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477,
                    "digest": "sha256:54369ed1d3f1249a788b4dffbc2594f13dca83fd3cdc44235a046ca1f6b0975c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144548966,
                    "digest": "sha256:1c729a9c37b37a7b2f7dd63219a97968ffd5838e2101b2521638423cdb723ab2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29391131,
                    "digest": "sha256:e1578f4858a108a7764fa961732c7d7d4f9edf1996cd671511a21fa88dbadac5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10214,
                    "digest": "sha256:74181d60a1e29d3b690ec97cf97d4ba0864c09b9f7cb7c2819d867c1f0a00e2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 929667959,
                    "digest": "sha256:50ddcf676259eea0c726d296ef892f473cd6ed14b32311d88dcda4d130a0a445"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 838617200,
                    "digest": "sha256:21bcddf58d24ffe92114b0634a1a3ffa23428f4f4f18f00549fba80c28c9cbcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4920028,
                    "digest": "sha256:2bbd488a8a42883a534e6dc22d1737782dabc9496fddf670835c8ee3236adf8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:908ee1b12e54cda4a3809dcbef140a40f1304aeacd7467a0ee9253814b6fd934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3507,
                    "digest": "sha256:b47a76672e02445d3443dd7fb51252d73e227bd8a7b13f9ec9f2177fd88d4017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149847039,
                    "digest": "sha256:75b1c4237463cf4a425223667326cca27786080ce0a363ffa46af5d0d9440107"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1629167,
                    "digest": "sha256:b04a25f7a06949e8600a642f495bb8f6e867a01a22939fdd4a8e353846eb8822"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:f4b2df38716cd2b4a0b483b6cd626964118134ac8408e5012cadfe62871e9b9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:a0b7791628b2dc92010c4c0f88134b059161c15794683d82b1b2949f529c26c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764930,
                    "digest": "sha256:ef76ad566004fbb82a2f55c7f6877a2ec9ccf8cbfad3806f9177ec249becb888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129609,
                    "digest": "sha256:afe1fa48935179e38397827d5cd78a0eb8fe9fbe98e4c8b5fd16832d8731b9be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37030843,
                    "digest": "sha256:d11180edb78fe2574caf556027b5fb5a046cd5a9c5fbac1717511dc53e2f302a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979166,
                    "digest": "sha256:8b703351d31b1faaa129b92b9f899ad003796eb556ddbb5e0e22599b3f2d4042"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386414,
                    "digest": "sha256:ae16429c29b3059be9e071386315c27ef993baebc52977d7a8cd2c908f13e4f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17030350,
                    "digest": "sha256:51065c2f605b391194198027580035cdd5a0c690e87bacd84758e73634b85031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12125,
                    "digest": "sha256:421dd65d1507ce2c67e654ec443e109280a2b66f32df0bd6c7df2736d489bf7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 603,
                    "digest": "sha256:7d08e51a6a51290ffb2e0880b36738a2046c860783d830267f4b85edee9e6b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157113216,
                    "digest": "sha256:1ff5cb3934b285a3d0b7db573f7932f82e8c4820021f749ba6694f848cc63ab3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 254,
                    "digest": "sha256:7b216f4962d84ed4f812e3da061b15c377422f9906d402fb1f43c97484f25d58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:c37de8dd60355677f58f1854a86f8bef37984955090a507aa312521ffb7dc693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3039183,
                    "digest": "sha256:bccc7069791a9b9eade0bea572bcbfc7cadcd67833b9ff6341102464f625dea7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:d469e1f0dea85038277211312013afa54ea41f31115d6e2cb32c88130a2d3ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10663676,
                    "digest": "sha256:3a9b9faf5b6e2677de2f31731d9a3cdf75b691e3fa897b0605105399e76bfaf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:97ac6681e0554c7c7ebe142d460b3c083fc6d84fc54471e130759fe17e227344"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2825418,
                    "digest": "sha256:fb42e4f3639b854312aaf0b41aaf1f58431d4f528c11e76bb9645e29aaae3c24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:49cdd130d3ff8e7d33d722be0c13e2202dc6d0c86d6b7c1b3387619134511bb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1003,
                    "digest": "sha256:4b132b301ec12bc88fee385f9e3c32e0ec61ab3c8a23d8ed30dc50027f2db405"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123112118,
                    "digest": "sha256:ce399dd0971412902f3bc9458637988a8cf6bb6e0e54312fbbc6bca406683931"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1196178,
                    "digest": "sha256:ff1663ba2fd2d6f8e648690e7f29f3871320162ca81e088044199247a43a213f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 258412765,
                    "digest": "sha256:deb8c8c1bb45d04caba4c9ae11e2dcd074adaab74b49f50c0c8a52367ca390e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1661,
                    "digest": "sha256:961e26a67a60a4d2c16ebb37deb0118c87d2533c084813ed22febf8167e552f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3212650,
                    "digest": "sha256:f84a126d0876b852bff9b565c68da718954e9cc5432a701acb2d75befa54be8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118319847,
                    "digest": "sha256:acb47a2831afadcd5cb2369de9379ffc7c2e720083d10466b121584c5e9da5da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 288,
                    "digest": "sha256:20a70e64881c4cf3ee386210b20df2ea2e6c83dcffd8f5a2a138147178ad7355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:727c9bbafd7ca10a66bf4e98622788eb71bf7bdb798120025672f28d94189a9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69028,
                    "digest": "sha256:9c360b71cf70af339e5be1a566737d42f7c2c734b5f176d0aca59d9bc9a93cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150876,
                    "digest": "sha256:5ca0f19556699d738639622725eb1488208091053c3302afaccdb7a5f14c9136"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93329,
                    "digest": "sha256:e29a001a1bdf5e617f27a6a4d46315419003562a4bb3b152b99a7c115586a68a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2850137,
                    "digest": "sha256:8934af743289c77eb051b1701c7f075f8251f933547072c7398551092e6eefed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212,
                    "digest": "sha256:79211ea298e6fc33b6b76e0ca665e708f19f0bee9f287fe9fbd15ea2d4228443"
                }
            ]
        },
        "1.6.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 53853,
                "digest": "sha256:5d0600299f9966473812c67ed16294d22026950f2739a3eb18ef8a7e7c121f81"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80180904,
                    "digest": "sha256:5f7323916ca4990fa21d198dfbd8600d486e2a63ce8a336ff4e0c282f0cdbaaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90234048,
                    "digest": "sha256:7ce644330c76d43e0cdc9d121bd6fb906cdb34f5d8349b0ae29493272d78162f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19137,
                    "digest": "sha256:e900e21272cd1c113c11741f36d4123aa2b40adea6c2cad1f9f39576e4a5d483"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2761,
                    "digest": "sha256:d4017d4c1e65006cb9eeefb1a2ecfe8b875893e7f700546fc79658352ffb02bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4052,
                    "digest": "sha256:44badd1d52eb4eaefc6295ce6b05ed817cb6aae465cef0328ea6d70ea78fb85b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146,
                    "digest": "sha256:986fbdceecc43f7de30b0f981cfc238e47f1e7f04c10e2f6ac6216e451b769af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1180,
                    "digest": "sha256:c50b2e15ae3aa7ff4996ce0c5b7ef5a0a5023178aaa62abc478612a8e9a29df2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 393,
                    "digest": "sha256:3b9fa17db1ec6ff682c641c3fccea2f0222d776c8479ac46fb374d56956cc6c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 425,
                    "digest": "sha256:137010008590ee030dbc3dd8ca7a5e399d72cd45fd3abde368fcf40bebe0d55d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1446,
                    "digest": "sha256:122482c27e26fdfef84bba87cd97a17451dad711c0150e162371a2deb4d504c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2172226090,
                    "digest": "sha256:79e1dac1a5e1a0bce379c3fbf573f7838ba9fae5dd6fcd3e43f9cf4f24a3aca3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11550,
                    "digest": "sha256:2d0d69917e68f38f1d0cb5e80a5b19f5b7e1a984376880010eed704181cf1b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:ecd89c33c21329652cd7e3f6c020d991a3630ef67ed37dbff6cb1d8ca3415720"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172720,
                    "digest": "sha256:c90b882bd028ce458c34e9b7d4792d87e813e7e7ece19654cc99b7477b584978"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 731,
                    "digest": "sha256:cb269007b11f5eea0c3960c1edc8a951773d13a24d1e6f613bd486ec12941d96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5020,
                    "digest": "sha256:f0c36d6d703e0cb31bf728eb48e777fb5657d771f56dfc19e6ffd6ba97df2df3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135313,
                    "digest": "sha256:f819aa073c28e2d1a981bb75c86fd76c0ad7d753617b40e87f56c104419e26b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40742330,
                    "digest": "sha256:bc9b73f19422795b585efa33f3db412b48c1cad2658c148e9a4e4f3aab5bc8ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64004196,
                    "digest": "sha256:2cc7096264362ee1e2ccf9d52ff8bf1a4308d22d6e169eaeb4e2cd7dc36e4553"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:8c29b9f10ef39609ffff41ebab98f42a8a757249d59e281e97862f3e9da119e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 312569146,
                    "digest": "sha256:4298f114958568977d8e18563c9f50ee97f271198ee4eae7804a558b6bb14393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45203083,
                    "digest": "sha256:0366ac38a86d87687f80cf31271098eab55891ee9a654b7835771e629c3373e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557479666,
                    "digest": "sha256:21118e218fb9cfef089ae058a851a1c0e6a7f53f313d1a0c7a73f6e60e93096d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136106,
                    "digest": "sha256:1e467f423fefb0209260062250b76fced0b98c95b4d15080b6081b8f5d56285c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27220,
                    "digest": "sha256:962d0998264ffddd6b2c3c39b906f627fb496519db65ad61d6fbe91017909fcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:819c3daa65f11d31fafe491ec17f7588de6a45c515909ffa5252aeeafcc91895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188878196,
                    "digest": "sha256:a221ac533e5b30f935372e1eecfbef91e5fa00bbd7aa79a834c509d031ceab3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12492989,
                    "digest": "sha256:0a33598379485c2049b1bc55cec2b674c49dc95725afe0ef5c07851f6a99ec63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73374385,
                    "digest": "sha256:ee43a67a3402ae3e09917358dfea7bb0653f9c03156a0aa8fb49a931a551d48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17673529,
                    "digest": "sha256:a7081f12f3d335b188c0835a2d53cf6603adf07fdba7ba8efeb4ef9a58fc3d11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8131,
                    "digest": "sha256:58d72baa819194cb3b0cb9618c4267953bbcaac9de5b5a98f08201a5151ce161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110836438,
                    "digest": "sha256:de949c7f6cb282036b08f2be6d7028e2ea9b9d3d8061be07c2e842fa557ef21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:8aa4cb72447de7c3bdb5509cb60b618978ab4817a04fb77d6190a2e3b09c7bf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148462006,
                    "digest": "sha256:23bf56b0cd00989bd718ec73b655a0c97159c2fc99f38f575ba49a959046b872"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29450032,
                    "digest": "sha256:c592bc68606eb9d51728a297a3c391faefedb92132f18080bcc5f01850c2d787"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10202,
                    "digest": "sha256:2ea2eb02e75fa48d2af4a6acd51c905ec6c990ba0e05a350271062076d4b976f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 934447895,
                    "digest": "sha256:9092315ac9d8337fa1c5b1ef703a0969069294ef32af4810e0b5c3e1f7fef394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 686147788,
                    "digest": "sha256:375180a4c9a14cb43cfba4cdcef64290b0a55e27dd14b2d85a98813c39ac9aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4967887,
                    "digest": "sha256:9ef7c386f1d80ef1b99ae127c0a7212b12f709b2d2127ce1ca2c72f3d743bb20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1134,
                    "digest": "sha256:872ff03f9105d70e7ef19d107993cda8d0b86478a9beb9120343dbba56996d82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3508,
                    "digest": "sha256:fb1f539548ba7619872477d1fb9bc679a2bc803cfc958d6048f1c0e98ba4d5d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66559962,
                    "digest": "sha256:d2b91240eea8055a5cbc648a059fbb6d632b6699f6cc566490c3cb34d2f23442"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1630294,
                    "digest": "sha256:230f49853d7720c1df067935ffa35cd1592f694e63b179777a1ed0b9a9532022"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1161587124,
                    "digest": "sha256:e938236661bdbac8a0c911f8d4cdf4ed441fb7681bc87474b57d0d0f431cf747"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:38af28ed59c7042372f9e8b1de640a0a748d6c7ac35f95fa8c4971fe2bd3eded"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:88f950ed10b71f4837931b8a3fc32bc58f7b05c6a3160f6373cb3f8764513518"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765045,
                    "digest": "sha256:09404618722ea35f9759067545af00e59825d13a59415fd740bd86857ac0b404"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129776,
                    "digest": "sha256:634377c5b8ae96011f0fd282ccb9b6dfd88ac46e4faf677738840c7ee82f6e5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37031007,
                    "digest": "sha256:05e32fbd3fda6b4d64c5cffffdedbbd38f654992fef22890549ceac7ff170730"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107489,
                    "digest": "sha256:d7b747c79b11d2fa807cfb487d69d36860e15d2b19e2f4f24b283dbe82f13588"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4657300,
                    "digest": "sha256:6ca1f983fb603f30dd2156907fef7dcd9ba8b2dc140aea7b07d100a21b9a8445"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19193709,
                    "digest": "sha256:fe3bfa4c83102e80cb2cc3cd102f6938857c304520e6baac96e81cf37310e9d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28939037,
                    "digest": "sha256:aa4ec8ef88b9c7f6a52661347271bb438e60fb7c6ffabc2e84d6e8039af86112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11048905,
                    "digest": "sha256:62cc1e90c9519e3e2ab0243440fd6dacbff3314f30d66d575db2f491ce6b3a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13175,
                    "digest": "sha256:7faed12dbd3eb4fc023f1bae487a65ec08c853960f0e93ee85e0717b6062d581"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:a87b5eca8cbff475d94dcdebfcb863aa214c440a2546272ceee142416f448ae1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157111886,
                    "digest": "sha256:eea67be72c86e6910c07fe41cec6386f46fecb6da719d556d9cb13429ed60ecd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 262,
                    "digest": "sha256:8fd7cefff06eddbb4e97e378ddbd1e31656d76b95d50c566ac99140fea487e4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:50eab1887516ef2b3aadf64fb3ccbf0d002b89a531e9c38fce2145cc74a24d59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3040291,
                    "digest": "sha256:9d89df9c502cf46c85667db1206e7269f0158eac1731ee9d430fe6b240022c99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8e7803e2460f04f60ad45c7752958afb22313ea4c34aa2052594c57c6d703f0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10860639,
                    "digest": "sha256:ad56fcb290d69cd9619805340941c05b02e1a7e0266281f6f429ebdf005acc7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:1c4ff55a66cea4cf94a3edbe98d6531f32ffc59fd200aaf9319c9b8cd05292d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2866919,
                    "digest": "sha256:e141d56d6cda8a1165ed5232166ee4f7bb2e3da2f80dc12561fe07471e1ed174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:3fc5824fd6d7b088659a073c7ea7ce03d4fcecb02d40a7bea66396e8a0f2009c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 988,
                    "digest": "sha256:f1d762fe51dceff27e68e6ade2b258d63824d319c157c868738ea5390ce831d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110431787,
                    "digest": "sha256:9c9b1695f23220f0a5674d79d9e196d1e3e5d3a07778beeef8fa1caf6da1a5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1218325,
                    "digest": "sha256:96fe88a692fa84d29338e1fa42d2f99ff5a3abb8fa50111867befcaa4ef41853"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223776764,
                    "digest": "sha256:db061ad9b4bc5e7d337a5e5ba14ff9f22ba44a54aa67c77a3dc3518c6da8c99a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1660,
                    "digest": "sha256:d5748ae659a598efc3c4d148a241d5a5ffe276f260b40f83371a818cdd0f215d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3519104,
                    "digest": "sha256:048d808a1607667683ecdd7dfb691cc7783a9b97a1482b33495dc6242a68aba6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91299998,
                    "digest": "sha256:44587bfa678979b1a754babee47a8bb680a788033ecff9a98c0eafce2d2c9d4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1624fa87734ce5459881e71eaa5e97a53553137792b52eeb63362bfbc907face"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 977216,
                    "digest": "sha256:e0bbf4707e69a26919512cff47000bde81f5619f812a33741f77d91d3ab35034"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181272,
                    "digest": "sha256:d60bea40d23dde032405df8e4be284bf5f2ebb450230177f5801447b6a60eff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105120,
                    "digest": "sha256:0313fc884925c86389f265b2f827ac32ded524f0ca169fc876c0984b8c2c78d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3058491,
                    "digest": "sha256:c5426889866d3fbab43e194e2af774e0046593c3c81e8aab0b5d86936c5fe25f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:b3eaa802cd88294d130960b54d79753b48c1550549665a85d83401027f1f0e4f"
                }
            ]
        },
        "22.01": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 49611,
                "digest": "sha256:1f8abb0d90df265095f41622927fee1407623b62bafeaae43acbfeeb39401142"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566425,
                    "digest": "sha256:ea362f368469f909a95f9a6e54ebe0121ce0a8e3c30583dd9c5fb35b14544dec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80179871,
                    "digest": "sha256:946996a35715741842397c0ca689e80a81641328027239fef30e729574348da4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91165069,
                    "digest": "sha256:b68628bdd658b20f4ff33195fb809f0f8c95180518290db1c3390e5f4df34612"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182044,
                    "digest": "sha256:067c279d0ed3483b1f3fa0bc75ad7b2349477a37b815947f187159e870b858b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2217215358,
                    "digest": "sha256:788ed670ac9a16f5bea5ccff530f156d01eae33d4dca52af1761c53759fb3b31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11544,
                    "digest": "sha256:5bce02e2160dc0f710ac0d592194e6a0d253595a734f509253560af521c9578b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:dde9cc1db7febc8868179b6df9fa15d3faeeb581c9cbcc842d35db305d4848f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5024,
                    "digest": "sha256:db5cfd65155a691b7778a88ccfe871b8194217b26758abc62903c9b04a2a9164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135308,
                    "digest": "sha256:488189cee8db8350609315fb65335b03e02a8b227c8395dfcc8059c54623c12d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40741345,
                    "digest": "sha256:8b6a343453760b6112adac592d01a1e39468e84cdcf6aa02fcaaf66b5fd32e9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64003622,
                    "digest": "sha256:f860e6a3e66f9c69ad9fca0bf252d199313e457a0ab3d1226001b6f89038d4f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:1f89580a827915c5d5d4fa530968eeaa13091684fb6d0482f6eac0cad72a1e5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 335229858,
                    "digest": "sha256:9b4ca11389c408d96fcdcc3ac0052abac5c1c14283632a17225c4d35fc4b9712"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181891,
                    "digest": "sha256:121f50ee36693c8fea4259e5d71692296634f6d2d0a2c411adf7c0367071db70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558473747,
                    "digest": "sha256:24722e46c15087eddb8746731c1fd89957a6e534792d4f276bc240a6d797708b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1154121,
                    "digest": "sha256:3f295b5e6312dd8ba708758840d7fb2add453782ef7df46a30a0a436f21c7e91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27218,
                    "digest": "sha256:0a0cafc368eac955a27324962f72b6dc46dd3de888af02fc0cdcbd7beec8075a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 297,
                    "digest": "sha256:424d13a393162c1f89829631c41a97b1d1aaad3e9a465a10c5ae5bbf6149b4a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 191448463,
                    "digest": "sha256:ec33e88bc5b0fba877a973c6c906fb2883a52f0cfb34f0c8ef7cb9126dd096c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12494639,
                    "digest": "sha256:98212a3cabf60b22e1719a25fd5c98913a9642aa8e6984974c56bc28605a37c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74723283,
                    "digest": "sha256:15bcfec6884803e1101a1a460b918c2b81161289a6010d19c8e46a16910964ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17778447,
                    "digest": "sha256:c15a2a6a11117ace76ce5a443c6e214205601fa57cb95932ac2d8ced2ded36b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8137,
                    "digest": "sha256:0850a5bb70e420056140c960bbaf5abb903379c345e2ebd6eabbca215cdabe34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110868667,
                    "digest": "sha256:9f18f6e1062595a05c3e0cd2b710706e2f54353b8341e7f20299792d94302468"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 479,
                    "digest": "sha256:91017b75076a23b22357fb149ccf61bbc9b0bffb3c2f49126825b0d9ce267e7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147925387,
                    "digest": "sha256:5ad33be74e0a26415142b8355b5fc9b2bd0ef36f5c3e20347a0568f15916b0d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30336977,
                    "digest": "sha256:8aaa001f93ee77f758d53aeb180c79242381c698596c3fa1d60a5b36b7760b79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10215,
                    "digest": "sha256:6d5d4c18a88b3e485a36d3f129b33cbe96d255173b4f55d3fec983b770685bdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 926601692,
                    "digest": "sha256:104064b1245826fb3a24ade5c517e9f15ffe9230aad09436dd470a552754730b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 687237415,
                    "digest": "sha256:4efe6bebd45e9dba78110652f52813c9362981bd7a1f422570fe714899de1cdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4980402,
                    "digest": "sha256:eb706901c618f939005644b7517130a909db382c9123ac965b2df6b25a2fad55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:6c66f1b139f20b8ba9dc0654ee43b4a0d9a4d4ab925c084a01be717ae04947c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68824308,
                    "digest": "sha256:00ff2ff5203054cbdf1f22bf315b4b9b72fac1bb5410293772b53f27292c5815"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1630302,
                    "digest": "sha256:d33638e0d8b1478eb3916229246f494f3ae680ca5fec45b79f271aafdb72b441"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1258929593,
                    "digest": "sha256:e8a918eba319410a421a900936b18f72584f9a3e7691da568b57097198a9bb63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:5e631a161e2da6a2c7a1b01fe02d7412cb3487ed9f38a48014366bb00432379f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:b11dc4ca4cdbaad0d69725217bc9d69f57190dc313e9d5f1a712825507cf0b06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765047,
                    "digest": "sha256:9f40e8c7fb12354b5195bef9f4230b99a6659d942dc2af6ea356b83aaf02d779"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129596,
                    "digest": "sha256:cb5d6566be0719ffee7b418b0c6cac0cde4d23bbcbb6c5685c652396e1e0e17e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37030876,
                    "digest": "sha256:e10731ccd79684c7ce7c0460f6ec01189b11aa5bd6afa47285a93553da840108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1127861,
                    "digest": "sha256:066db7f7c9caafaeecf255aa88503a8a1bbc07809c483ed0b1d60d8d05fcf102"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4657420,
                    "digest": "sha256:29778a946d4fe50e5deacd75ba030934c512f9d4aa97e13f558ca32098c1e5a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29811432,
                    "digest": "sha256:3071e91f256442a63afe6822b090a7646109b064f226f4210be3d04813bfac8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10932706,
                    "digest": "sha256:3068db47c00b49f854b8b6cc4956aa1c413fbc424b4ff31c0d0a6fe013cfeb46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13087,
                    "digest": "sha256:448481a6abc0cbc42ef7891c920d302c94d8c541cb3be10e717c509efd963dc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:aa940ee791109db4a74a589f64652444212fd1dba7cf03841a28bef653c7497b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159907919,
                    "digest": "sha256:5310dffaaecbb6ac9891759ec6445b65d3acb5fae519d4def3413bd65b1b71f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 264,
                    "digest": "sha256:3e77f8f5b7afe94f61465c06ef6e0655cfb4792aea51c58435b3965fcb0eefa3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:e0f0be9d13480490dfceddfd902f222025a3de2c5421aa9394b2abf2564c3d43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3097161,
                    "digest": "sha256:5e6256808cbad72ecc30ca6fd43df3477cf7bc9a4ad9a00d19e19ae789395ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9a5c5386b58dade30038b676af6fec8e69a7be768dc5eebe87822b75548f5e02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2857829,
                    "digest": "sha256:89de65656f91b2093cfe312308af4cc87b476614d089d2ee57d1a34f0262c8b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:9fdc0a57bc2ff12d2b028faeb6532f7bdd6412625856cba38492eb6bfc49df22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1011,
                    "digest": "sha256:f15e140ed3946971d098ee591464574520192c2d45aceed82ebba059439775e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110655468,
                    "digest": "sha256:87e97b9596ca1361b120707a15014bd74831cabb314d5682a72724893dca08fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1221053,
                    "digest": "sha256:81f746ccca939fbe52681c70dc7896db16e8486191e3537dfa46db918c30f170"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172326180,
                    "digest": "sha256:456078e6bb4f55e530f7d2a2f1e725da77cc66a58756634e911c7fa203bcb589"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1662,
                    "digest": "sha256:5a920fa2f52fd0fe7e0dff6a0367b7519106c1efd26274e08185be127798f4dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3674612,
                    "digest": "sha256:5a255258be55d13ec1336383b379cb0bb8b3504b7f13c72dcfec374ce83d9a58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b5819b761877ae752697519f8833bef5104bc531deeab4c96fd8dbd637d9f931"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 991473,
                    "digest": "sha256:d9655a6a52a519623e30ce27260edfdac086b81775c441042c80ae843ed662dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199839,
                    "digest": "sha256:50b0785330ffb464b469051e06eedb1ccd949111e7099ca6d908400bafb0b8ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108198,
                    "digest": "sha256:aabddff6d8f664c2641601e60e20683b8e6de0bba86f6ff82955c4e529dad92e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3161534,
                    "digest": "sha256:a2e3d5ac0c494c676918e34b879b2af6f27ce0a2ff0676dba86ecad2a00d36e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212,
                    "digest": "sha256:08d96acd65fc14e3896695ae5782229b1c631d69a884518d4db32e8c27bc18fb"
                }
            ]
        },
        "22.03": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 49439,
                "digest": "sha256:b012350aff66c00f443a399c9950741dc3fad94f52834108d5d27b82b7a9b610"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565909,
                    "digest": "sha256:4d32b49e2995210e8937f0898327f196d3fcc52486f0be920e8b2d65f150a7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83847696,
                    "digest": "sha256:45893188359aca643d5918c9932da995364dc62013dfa40c075298b1baabece3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91143848,
                    "digest": "sha256:5ad1f2004580e415b998124ea394e9d4072a35d70968118c779f307204d6bd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182116,
                    "digest": "sha256:6ddc1d0f91833b36aac1c6f0c8cea005c87d94bab132d46cc06d9b060a81cca3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2221936457,
                    "digest": "sha256:4cc43a803109d6e9d1fd35495cef9b1257035f5341a2db54f7a1940815b6cc65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11547,
                    "digest": "sha256:e94a4481e9334ff402bf90628594f64a426672debbdfb55f1290802e52013907"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:3e7e4c9bc2b136814c20c04feb4eea2b2ecf972e20182d88759931130cfb4181"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5111,
                    "digest": "sha256:9463aa3f56275af97693df69478a2dc1d171f4e763ca6f7b6f370a35e605c154"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135312,
                    "digest": "sha256:a4a0c690bc7da07e592514dccaa26098a387e8457f69095e922b6d73f7852502"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40746943,
                    "digest": "sha256:59d451175f6950740e26d38c322da0ef67cb59da63181eb32996f752ba8a2f17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89186826,
                    "digest": "sha256:eaf45e9f32d1f5a9983945a1a9f8dedbb475bc0f578337610e00b4dedec87c20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:d8d16d6af76dc7c6b539422a25fdad5efb8ada5a8188069fcd9d113e3b783304"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 334499175,
                    "digest": "sha256:9e04bda98b05554953459b5edef7b2b14d32f1a00b979a23d04b6eb5c191e66b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181721,
                    "digest": "sha256:600169a9eeb90d73300e3d33859c1c9addf9f338bef9513e3ab719f6fbed39a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 542395777,
                    "digest": "sha256:5ab4a4c795873db7bd60e491a2d47ed74eefc371a3b18fa5f414e0db8a00097b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1157417,
                    "digest": "sha256:cc9c383bbe7ebe2c84298ba248c4a2a07063d8e691da5a7cc0e1070b7605637d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 224424,
                    "digest": "sha256:28f0a4457214c419a0e792989a05b32aabfe288a9a4efef8037dfb48232cb483"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202096217,
                    "digest": "sha256:c9fa92ce1ad6b2f970cca3f68af958da9bd4d43c6962b4c91965eac822806e6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12499937,
                    "digest": "sha256:6de187d8986c7f6c91fef8d21a0c79adad0ee432cb1ce5aae744a97ea8772817"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74330021,
                    "digest": "sha256:776dd63817184de76e71037b01c4a7308fc60383b005ecb8674f40feeb340f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17949959,
                    "digest": "sha256:fbcec89863dccc0853a6330c22792801bbb3bcd5ca1a2eac1431225247aa0df0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8129,
                    "digest": "sha256:cc9bd67c83a553365b3c865d6f18fb564745e1e834ea586381e00bcaf7fda0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67785485,
                    "digest": "sha256:b14fad4790ba71d322ad569201cee7d9d47061d00a6327780ab35f54e6776a7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472,
                    "digest": "sha256:2e662c1f02bf06572c62a33873a252c6f8525b652efbb9aac0f2f7c3dd8ea69a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147925236,
                    "digest": "sha256:43fd87c93a0ebf98acce090ad62e17b64131c5ab423bbf1c7470a5e2556b82c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30352564,
                    "digest": "sha256:c25c11c90147bae2944f754617fb3a0a5f229ec06c0b34950ac00484883a8ca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10211,
                    "digest": "sha256:21f8a0e7678c7cbbf31db6709eaf5836b3719f4a169835d3713ddf9fbb1603a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 698493530,
                    "digest": "sha256:38498f1bac59aa1fb7e4b2d2d877c0e34530fc46a89c2b1bbad0bee163a87a35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 717283359,
                    "digest": "sha256:be1dcb77f9286f979ca93c0b26303faf62fb21b2c11bf7cc18e32787ca4d5334"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4990895,
                    "digest": "sha256:cbb8b770c5f1e4625ff08b99a18727afaf2ddf6eec76d286707c57d711f1da6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:570f80eab64d63e287848f4a3b9ac296e25705b1cff50b43d5952a10c67db4b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91077855,
                    "digest": "sha256:3a68c3ed38b19cf1703a07884dd48edaa36092168a66158cb667601f0c0f1e75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664690,
                    "digest": "sha256:44048c6af4c5854ae49eaa5d53a3d4b9d6512bd86adb2ef4b80bff57a142435f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1424432356,
                    "digest": "sha256:aa81cbfe793ba3f5f8cb8d51d767a9c1f1751330cd0a0ecf2762174d47fe5040"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:7be5ff0e99ab9df9c87bae696e9239d7243bc3e5402dd395c3d55918dee1f657"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1027,
                    "digest": "sha256:fcaebb8600f0c3e3376fef56367157ef5da709a6fead68fa8c35ed42131f3791"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765042,
                    "digest": "sha256:5fcfa55efbe2472b0b583ddf5acea5eda40794790f423674344f8b9653cb3d90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129628,
                    "digest": "sha256:30e2d0565dc130b264c65f9e95ae85ae224704dce0b7db126a5fa5c67f21f699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37030889,
                    "digest": "sha256:57161218948176f4f07c6b16766865e5ecfeb7448012dd916075fb94515e8aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107472,
                    "digest": "sha256:41b60602350725f54c02464b531716dce2cfc89b49d66c44c4c53c569af61e1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4660808,
                    "digest": "sha256:b46fc2bc95278510284270b1aef27fc6ae0ef55327ebfd12fc828a1999b9304c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29664545,
                    "digest": "sha256:218cc4dc57a5517d9e53c13465ab5d77e08b573887f398d98cce50426ae57a5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11556505,
                    "digest": "sha256:312f4a0d232a53f78011e825559e0d89d68ef02d167c8221e6c96e64e2593f80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13268,
                    "digest": "sha256:e4b105bef9a0766afe27b5916b8ef14766141736c58717420f59522db978d718"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:775c8d6f4c5131589a3055f9fb656c4072d07646ba713a4ff1da1a39f3585a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159758542,
                    "digest": "sha256:79a67d2dcc228d66166a358d93d2a877ea63576de2130b119e03324654bf5ff6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:cb7e1f84eee47790d2798e438184c10423cbff1c59c9a70c0e360e89db65f310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:34a59181c4fa481265f8e3e2c2a968ced51eaa68106b65281c9a579499458006"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3082462,
                    "digest": "sha256:a9575f1e551e512fa848e9d2c385a570680b5243ea9c4d2890f723eaefe3194f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:531c7a7ee7d25cca6db072b660ba1a76ff7a64f13dde55d93824d43b848d0514"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1714828,
                    "digest": "sha256:751b7b28d44544245391160d43cbc7d436c80eac7bfbfcc46c47af29c45a9731"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:6bcaa33411ad0204c1a6ea37b0280afd88438f1f7896365f6c448aa435b12716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1052,
                    "digest": "sha256:91ceb8500e26806becf74d8a51506e945dcc22bfefe14b1a7464f4fcc26a3125"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283806042,
                    "digest": "sha256:08cd02fb5da851be82dc72c9aba394d2b0bb89c7835012651305da1ade50ab52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1008223,
                    "digest": "sha256:99d7f896f62e65feb72aa47cd3dd6b87c47c85b3fa29fb69e64a902af666c909"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103473532,
                    "digest": "sha256:13fabf207f58e744e3593c96d84fa04571c209ba8b81268801ee189731e293e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1661,
                    "digest": "sha256:ec824f362d5343fe5b9dd08da9b69f0f5db0c8eefe5aab3bf83c5be3e1d4d552"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3948710,
                    "digest": "sha256:d69dcb5b6b3fc22e6b060d70d14d33b71413255c372652800c8903952d12067a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7e89482856cf5807227a067dc8e5ba42d891bd4b26b035464cdaabbc00f679ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1008234,
                    "digest": "sha256:f21f52b51e9615632c7693c8b22dcf11216c2a1896bfa213359da9c356d2724f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220590,
                    "digest": "sha256:965053d05467fc647316fa745f4b8c740c36bc9aa17a25e7a29f79dffba7bf29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118186,
                    "digest": "sha256:6184a4179c40d796286b6f5cf22460e06d1599caf8ad2d7969cab30c03b1997c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3198045,
                    "digest": "sha256:018e1daaca939b5686da586a112bb1e8d8e372c580b2a2b5220b6bf11748d058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:13ba0522776ae844a4220ff90dba8fcc7c2f636dcd42da332bcaac5d0354e11d"
                }
            ]
        },
        "22.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50171,
                "digest": "sha256:044ecf5eba02c8a6ec80a54d56ba27b1057015c92f7c1809c3ce1b0354c66c96"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566292,
                    "digest": "sha256:e0b25ef516347a097d75f8aea6bc0f42a4e8e70b057e84d85098d51f96d458f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83843204,
                    "digest": "sha256:194debd62ba5f217bc315bb9015ab356647b9ac91b7542f9f366d2e1baa3c76a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91156932,
                    "digest": "sha256:fd30e4fef3c05e3c6c1da87ce43aeabd0ac96d7f3a9ee593c302b77a302facbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182113,
                    "digest": "sha256:3fa4dbce8a1e0ba74e8d8484da9d85e93594765f81f16f0539595cdbbf34a340"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2215517752,
                    "digest": "sha256:0504b98e8e6517e158a7cbbbc23140edabb082148adf162a8e01fc94dbf838d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11543,
                    "digest": "sha256:1331aaec5572fc916802a48c7bb888b2789548d1bdbfe41d1bc7e2ad400c8e2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:76508ddd1a74d6c511b7338103ebf72bf5be1d17813ffcf0b7da8d3e5854f847"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5111,
                    "digest": "sha256:0bf3a8a20fa3f72cf7f3a2f591fc816b49f1391280ca9877c8d095c86f9bd284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135309,
                    "digest": "sha256:e8a363c6f2d2ea6523f84450b1ab29ad235cc2e5cde2cef56cd7b8a9b63c6842"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40746500,
                    "digest": "sha256:8fe27c654df4b97095bca12a1379f05d9a624ad6c8dcfeba921c00d180bb1c96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89186870,
                    "digest": "sha256:ac0f086ccced5620c5b6cd590334199d420386afdee6a748325a0d949aa4d479"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 508,
                    "digest": "sha256:d5518673e8553ce936e699cfe1c6e036ad64a7c50a9697a89dd3b74bf33c3d50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 339308112,
                    "digest": "sha256:52002f2c06265fcf4da01c8527f632558b65d1c3feb6904a5c39e8ae43726728"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181659,
                    "digest": "sha256:bc96ccdc5a9e8d335c131b8615953c8073fee1ecb02db5877cdb7e9f2e40c8d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 540409406,
                    "digest": "sha256:afe3fcfbb11f52eb97d73ecd8c55fcb52586b5766b984cd1c3b85cca07ebd10a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1160856,
                    "digest": "sha256:3e42d779e57e9d2b58152e84704a5bde26ab64c2df6e3987fb481d096a435714"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228548,
                    "digest": "sha256:58a17f368b0dd64d1b71d7cef4d8558085a224e76ef8f87c4a372db461b01427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215172209,
                    "digest": "sha256:56501e47863721270b0f6a54a10f014dd865104ca3d93575f4710f56107223e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12500029,
                    "digest": "sha256:f77c788e9a8a693f074e595c6aeb26cca77836978635d2cc38114fc5c468c9ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74240362,
                    "digest": "sha256:39662f4749901a171942e4144530b8bde73ad54daee4a0f07f9a8abf5b2b1eb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17949933,
                    "digest": "sha256:ed401adaac48ad4133a602f01ed3ce26e7b35b42a02c0bbab8c428048de72856"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8128,
                    "digest": "sha256:9a556c07e26a546c31d36dcf0b796bc1aea6ce7b86296352b9197b1da190ef43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67827640,
                    "digest": "sha256:a985eeb6b366ad5eaa99aeb77e906de53b9b2f1fd54a168f1a1bc4dc42b07d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:34261e4dede665038fcf6f1d613dcf16dee8b091b31b9bf78f0fdc7953bb6560"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147926876,
                    "digest": "sha256:8e693c48ffed992d923382a4002ee530c9fac0777690a90093dfc949c27aef89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30337626,
                    "digest": "sha256:bf8648d2a51e4e4c0b971df497cd7de6572090060b06fa32d5d2066baac6c200"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10207,
                    "digest": "sha256:c38f4bcaa389204379feb4e1361e7dd6b4cfa9076e3658b33c5575d05af8eb7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 698100856,
                    "digest": "sha256:6fd807a042050c3fabb25eec67154a309f4188e480cd3c5f9ab0e2987a0b1538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 316271377,
                    "digest": "sha256:3ea4c953fba3af619b4710b98b8cbed6d6a2e8e9d151f5b7b1f38e4b138b8699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3176754,
                    "digest": "sha256:58d8b7b90dc488461376be9f7b3208093cbdda2d2b2fe7e5ff7ddcc3b8ae7fb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:a53ef1099e7ce6df7cf589457ae03dd575ab429ed298a49c857dca5491a3c618"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20303,
                    "digest": "sha256:79863b61ec442334a74014522e37c7c370e27ef629095be70be81596eaa1a0c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68916725,
                    "digest": "sha256:b277590447b18a9abd46ca7e5073ad6a83fc4a1b2552312e934f4a47ee34af6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758707,
                    "digest": "sha256:1f12e360855bd3362071c186724689f7a9d51fac3f96caf8738de8bc4b31e392"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1424442593,
                    "digest": "sha256:7720344c7a4930671e989e50a850057190df0f5cd3171c77601019f712048c35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:64f009292ec6dbd2334461b8476ef1d719819ca2a00f7636dc129171a2e1dcee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1028,
                    "digest": "sha256:a765ef20524efb8d8ccfdde948f3f6ea0f0c96d30b2c837432496e2197a04382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765054,
                    "digest": "sha256:7ec5625186fe50622469bfd6a22d9fbfdcd70d8568dbab47f4c36f9acb283ff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129680,
                    "digest": "sha256:4539c1f485ef8073d2021822749609760da8441f647fc06833b7062d816f56f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37030938,
                    "digest": "sha256:b0f13d653eb414f74022122fea9d4e3a0baa8a5d147127cf1eab5dad4270ec45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107471,
                    "digest": "sha256:afd522c7ef15b9f52602696f52485e8ef658647ec5e3953a7671cd6ac3effc29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4660799,
                    "digest": "sha256:3d3687e181fcbabb75c196afa2d0dd0c4c8b2e95404f3c2eeeedfbc50130c9c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29665362,
                    "digest": "sha256:929cae183bd7064db67ebd2881fda6c4f2eafec3eacededd89fa5ab968f8c09e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2304507,
                    "digest": "sha256:686cdcb3779f4e91d18e8b318708604e5d950660d61d24ae9afc894597759197"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13223,
                    "digest": "sha256:2adb20a548b2ed53827843796fc36c8c0eb05a06545b599b13171bedc1751bc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 514,
                    "digest": "sha256:4d03e2fdfcaecee4a428a407c7ea8c6406682c77ae2341a5baff1983f80d2fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159756348,
                    "digest": "sha256:6a10a02481e3557bf390727b419b4497045805e8f6fc4e3264706320ce7ee4e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 290,
                    "digest": "sha256:fd01f9167c23d3b70c858e344536660ef8ed7611724b8ad3d70286b916321fec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:466e0f0d2dac4af816a3f9e219381b0bc2c05ab27881eb706f9bb2f1ca061acc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3082443,
                    "digest": "sha256:ea9ac457af8e92070f9ce8e29d06c597b38ca295c0d63ef1bd0a4f102aea4396"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3e8cf52cf92ab0051e744be2ee29a9b56b87484ce91dede8a648aa6e79bfaa7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 342750,
                    "digest": "sha256:f0609ed7744b10a1f241358a4f34972ef47841fd1b996ac3d7afa0d9b3baddd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:dfc646e00381c5e62b39b08491a7a4debcea19ee1c63d9ecdbfc8ec174c79d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1068,
                    "digest": "sha256:124221d84e3b01efeb4e67f48048ddf0f2f468fe39dd9f6f2f5d1811bc4050b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281596840,
                    "digest": "sha256:7654ac53090d6de5fb8d69085c010c0429e36bd04a16b2b7e87be3662f723f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1020942,
                    "digest": "sha256:f23724bf5902ae26308a639ca0b67ec1817728718fce1e40c8145e09926b427f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103476648,
                    "digest": "sha256:42be390537db0dc26bb84b7ec73098f4657ef3170105058200b374eaa147b2fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:63caa352fefab1a0ee1af6c1e3a7f9d283ed730c2a3d1f52309238be3aa7ccd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3989105,
                    "digest": "sha256:d2acc7a7c7a2621261387743494f39384c840c024996ae40993e369a88795da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bd08a81fcdefca534594f2554e24c56406e45759525adf1eed50d8a3111cff39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1020957,
                    "digest": "sha256:0c54357a68492b419048d7763990fc01ba372da0ca37249f176cc8135e964782"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 242613,
                    "digest": "sha256:3f2348cd959e0f9a665c2a533c2d0275e88ed122c4a550e0794b64314294da89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126604,
                    "digest": "sha256:c5341470684c2a916e383dd634f0f623d8a1a557852cb5b4415708fd471cac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3701566,
                    "digest": "sha256:ff6e8bce7b5cefae160cca236310776b2a0abf567fb4ba6ced8bd74fa2e92a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211,
                    "digest": "sha256:1aea5b6b294f854dc7d1aebec419749a857aff0de84049741394f4fa7b84feec"
                }
            ]
        },
        "22.05": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50210,
                "digest": "sha256:a5fab853aee0f3862130e6dce376a3419f74aee098d32867d7712c526f0a14b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566230,
                    "digest": "sha256:d5fd17ec1767521cf97f61568096bfc9a7cd9c2d149576a7b43930c5a97062b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108952796,
                    "digest": "sha256:06e980b25883b3eff986fe2e17f9de24192f96783825c3a210f1e87672b3eda9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116066158,
                    "digest": "sha256:d989318274553a6db0227b14cb0b105aa5b78e908c3536b27943988abeb0a6bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182115,
                    "digest": "sha256:3cc9550cd86aefaaa634438c13f5b0e6b3470903d73da26c304fe4555790371d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2208413881,
                    "digest": "sha256:c03552cc2849bb6a92fa992c96ee43eda4b7c3360efa54d0f9062502171c3afb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11548,
                    "digest": "sha256:a50cc00269e8dcc08e356d434e93ef7d2c0a2473c0ef1306648182f62a074a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:3d84b6f8180948a72d01de2a0b4eeaa4232847e4dee7047f4f0090733b9ac369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5111,
                    "digest": "sha256:4ecbefd7921a224f6fa3a8f5452c22a7e4d28d769d343b55ba0b917c8bc1ed84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135310,
                    "digest": "sha256:fffa258a7fcf0881eb186e127968f5d8161616f1c3f60b0ac805ebf696c11067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40735264,
                    "digest": "sha256:927a6e4d269aa3ca7a3956e4ee9c981e7597944c7ac7a3610c86589709555613"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89187092,
                    "digest": "sha256:c4ace063e89c78b1ffdd90ebc935d8b2c889158187566bef183609017fb4eb7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:c15f7417808e7e5eb260b5e42699fe330716e98e49de5678c27c3847c39c3adf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 344020542,
                    "digest": "sha256:ab690c8f4d73d506e2babd5d64648dcd8eab393cc8155aa6de9b1d1b65c8ec4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30181845,
                    "digest": "sha256:1b09cf07ddb08c20a2da9d685b56225478051417516c870d530accd812a108d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 543711110,
                    "digest": "sha256:e9d2ba4e38a58d41df8d2c20aeba899d59553f3f08ea1607f08798922fe6be50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162919,
                    "digest": "sha256:e146b957980ed1c6ca2952383f5f83637d2161900c5b7eac7272993b7071878e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228540,
                    "digest": "sha256:7ee51fbaddfebbdbee2b12820f1419159e66369e72577da1d2f9b9a77451e76d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 305979235,
                    "digest": "sha256:0e37aa477dee25de1dc4c404e7d1c7c1178e4936952fcd909f69f8cf83c14ccb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12500019,
                    "digest": "sha256:64c360f034e25f89ac5557ad29b24faab0bbc4de921a251e000e8668bade4f91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75045763,
                    "digest": "sha256:c5d4ad524b2f3739a87e27ebad7dde82ef7bcb5e40524941fb371b1fabb82be6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18097068,
                    "digest": "sha256:0c8ab9153e0b6a8f1fca2cb2de0f943c15378661ce7e3d835985677e7249a5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:aa7c55cba55041a103956fb4f2a0f0d2cc6cb538da7d07fea31ab343533b3473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68120772,
                    "digest": "sha256:5988f6065a39bfedec0f0f5f7e2a7a0d9a89b7d65876e37d0786f7640f746b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:7ceb6ed9943bc20028b7a9fce7168a59d43db561e64fcd76a0499a8e70e08048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130209907,
                    "digest": "sha256:9888ae33bccd7c009531a80c0edd980679c7e8b4f0a0856b123cd7ec11d90484"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30337562,
                    "digest": "sha256:80ba0803c815ac06deb8ce7ec28f0d13079dca74ad01255b0a23bd4ec5682611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 645750845,
                    "digest": "sha256:cb5eca4c89ad74227931dbe36407d0259e56284ba92f8c8a48dd431d8ba8945a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 316952797,
                    "digest": "sha256:8b5feddcfded9d1048e131e453b05ebca5f0903dcb8899f4659973e3a71aa979"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3176624,
                    "digest": "sha256:a17c208aadcd9e78685cd6d2f2f8de0fbdc4687fc8f1ed1b9589c27199593354"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136,
                    "digest": "sha256:1c8f104115adb51a99c9181e1e08cdccf91d7999e627b963c225e8084227e6a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68481481,
                    "digest": "sha256:9db775429ad5488ad3ab919098f08730675b13caf56d43ca4be556131cebe356"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758683,
                    "digest": "sha256:618c64051de843eb8ca8ba83deb608c52bdd11de19ed9a08c2734d6c20a168a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1550652194,
                    "digest": "sha256:b3d83c7b35db4731ac22217a2eb8ce0d76ecc498f109121c116f314ccf2cf6cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1141,
                    "digest": "sha256:ad4483ce037021a819d61861c415c457ceb9f0879c5f99a3df41c99eed4e0f5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:de894ea2e3c41f4da7d5e36761d5ae91cf7ba1da0078f7416be1db16ab1ab47c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765068,
                    "digest": "sha256:4969876c8e5456ef0adb46f04779b7770b3c92251e8e5ddeac596da6b181e7d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129834,
                    "digest": "sha256:38ac99992f9245bc69fc069bdc811f682c399963f10804df719bea02602f8bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37031054,
                    "digest": "sha256:a40c9cc1c42bc82d8f1ce16aaf7aa05feb2fddc1f6d6fcf8753ffc41dce0b1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1107471,
                    "digest": "sha256:d1685070ebe02ac98b6e0805a2f3f9020594e8d1722371056fbc5dd08c102709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4662029,
                    "digest": "sha256:4827f0e8e627b3f5367a219a246b8ed84a5f72fdfb67979f7679d7f9168b69c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30344799,
                    "digest": "sha256:3364ef9b7be4201c64a24017e4d987f8875b4e031039d5e70fe9b8a2ac561a04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2355871,
                    "digest": "sha256:94174e7bf8d575301d5efe149580b23c59018a5b1dae7f14efdf7447bd18dbb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12986,
                    "digest": "sha256:0d3fddaed5f66cb46e5e54473be8a3b20277cb44fdc38ad39799fdf1ce89dd31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 511,
                    "digest": "sha256:c49f8f3af0ecf6ea911243bebde476767816565f1b2bdc56aba41be56961387a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159777795,
                    "digest": "sha256:6ba4f8031f1dc87dde6cf9765be90f63e98db74d88ca5c107c0d7c2eb7913123"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 290,
                    "digest": "sha256:286b20db4692fb3fc3db923ebe06d46eeb569e67a51a371b43ac09fefbc252e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:1ab9b888a4ed3a6eee3b64dac568d391b33a5dcceb335233238c20fbf1ad498b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1436,
                    "digest": "sha256:b36fa1fa4194ea35125ee82c431ed40d24f0471e0d02631ded0d1857f759a794"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3941009,
                    "digest": "sha256:2c057ad4b4dffbc2b741e6ed5e8515631e361f2eb59fcde08fe181755a3f7769"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fbd506d613c5cab20c6684e6a0abd65f90d78c2d28894cef4f9dd7cbce280ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 340762,
                    "digest": "sha256:8eec05eb1eb934f0e1f682375f62abd735cc024a4c87b11394ed3b0c6c39eac9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:413c920f47ab22d8b252a9016ff7f60ec8af48265edfa1e544d1a200e8172e43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1085,
                    "digest": "sha256:495e650f21be867361fc8eb9279fffeaa406513051e992fbf33124ac33194705"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291547113,
                    "digest": "sha256:b447358c81ec3bd2e7e99679352262acdc6c8569856e79cf59023246a4d0ea10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1915991,
                    "digest": "sha256:f4004e7dc7dc31291102d128ecce25d509cf74e11f91187e759ec78bb62ef298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104611355,
                    "digest": "sha256:f9ca68b20a71d029d9e97d8815f353c8d3f172df7c90aecfb0d96028175f1af7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:cc4f0ee0173ba0d0e2a0670d38917e29eb8e920b76be7b6003225a3fa40193ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4109366,
                    "digest": "sha256:967149d30e24d0c8541c92f1aa9574a385603838b41bb007d42c48766e3f5029"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:69cdbc5b5cc922c423ab5c0b30ea5f961a58e3c81dee867e10c1c6ba4b62ee06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1916015,
                    "digest": "sha256:77ad9bd489c0427ad24915c4673737a7b226d673b81ef538c8307089c41ac1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 246619,
                    "digest": "sha256:1e2fd7f683379e7a8213dfc41cfe2a89a97abd7864f18203086e455fd8732e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144670,
                    "digest": "sha256:533a49f09bc2bd58ea9fbed8acaeb226b1779901a886dd0a5e2b967f9a52a31c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415251,
                    "digest": "sha256:2e51b713a6fa1cea35d0fce1c3ed81342bd1964a80fab0cb245cfe36a73c7f25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:23a0c7f16b0c95ea63053168561e75929cb0bdaa66b34a34fc35dfcd69462bd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "22.07": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 51088,
                "digest": "sha256:bcf8e0460a41d75e4c8865dab8a931decb374cc0967e9e3b94af8d708f77a050"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572632,
                    "digest": "sha256:d7bfe07ed8476565a440c2113cc64d7c0409dba8ef761fb3ec019d7e6b5952df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109461100,
                    "digest": "sha256:b89dbe542fab1d4a7fb970e73adacc969e910112f8364b66e4a9fbd1359cdbe7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116111287,
                    "digest": "sha256:4a726f2f5ec16265f03f2f9a4549cc1645599552d96d60f07b0edee1a653986c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182118,
                    "digest": "sha256:a1d578e9bd9da1fac91190c9bd9ece2a18d82ac125ccbd7712eee1771ef26869"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2217375538,
                    "digest": "sha256:b7c50d57d0f7406def0f7a5826917d35b96ede4c2babd59d3b3b3ad62c41e350"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11547,
                    "digest": "sha256:3e8bdc45ad69a92488242d28be5fbc3431a8c876a9a28c5f6a5e74c57e5bbd18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:4be115188ad1ef6574559f852e9b229b5bb6b97095f1937a3dcfaef98d9a365f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5108,
                    "digest": "sha256:445d43204edf349133cb86215c4fafdc72f45f713cad43f17df0377cbe9cd589"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139297,
                    "digest": "sha256:de19749edea166f861b149decec7425a71d8f4dba871627f78e4e1ebb6d11677"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40734929,
                    "digest": "sha256:89549872839bdea12005a3fa3ef60573270f23296ab38871881d5ceb1872f617"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89187467,
                    "digest": "sha256:69af388a0d287ac11b61f3efddc1385856613fe5a33c619422d6e2de54426a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:fd0f594e30019c210adbe2195e61fdafa72bbef89eccdac81f5adb3870037a2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343553035,
                    "digest": "sha256:41afcdc79b01fc0474fc024d82a40248812ad4227d3e8233b42f5441e9e5df57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30182584,
                    "digest": "sha256:22706924447b0d610b7545d58fe22005e6b136489398c531b551135791b7bec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 563975928,
                    "digest": "sha256:0e19a588e44a8c6b66729442da651abc1fa96c2a4a8bdae190e056892653c8ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1167184,
                    "digest": "sha256:167897f4cd0c7effb5325515cada00d1d76d023fa251f037585f2937b3e9bd9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27954,
                    "digest": "sha256:d6d065e677b312496626aacace3fc734cf6bd15d41c55b44c595b642ce62e029"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162739,
                    "digest": "sha256:e3bd233d6585c43788e318a5609b1b89a9b9c6683eb81702ea6ca24e4d63a27b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301971192,
                    "digest": "sha256:da32ae529fd7a5f51b380feee618303e6974c5e470ef20c00096d6b8c8a4c90b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12500044,
                    "digest": "sha256:c4a947fe7e65b34001b6aa4df8fca1840cb6b3b30e29260336d54099e6677302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72954180,
                    "digest": "sha256:d6ad666365a5235c0714208f6e2e31ec3730d50c283191b305383894ddc3ad72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19390231,
                    "digest": "sha256:9a4a79e076f1cd039a9d706283e8066fc5df3c69041557c756fcf75c8821f560"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8558,
                    "digest": "sha256:0e2fe6f9c00f71cf45e35f41b19388ef596edb166392678afa101d2c67a715a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67879362,
                    "digest": "sha256:e135ec46c522abbd81b3079d4bbd09c81493be4a213eb092c34883fea1b7996a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:ef4813c57d11ad171b28ec366a9a7d56c33a1b649c6364858dc1ca551afb4c2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130321952,
                    "digest": "sha256:fcb9e284ff8f9291368717e4c3fb940e2dd01287b18e82766193e5aa922f66c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37885730,
                    "digest": "sha256:b4cd3404540278f61bcd7e7e5e869d76cefaff25b7c7b3dfdd0cfff2a3cced78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 636226880,
                    "digest": "sha256:18ad4098d78fd61119a54fd1872a8929262abaca355ef2319a991df51bf1dac0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317708712,
                    "digest": "sha256:da2f2c60c489d8c91d07ae44ad1abddcb637b1e0829a36fc28889d739755c48e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3182333,
                    "digest": "sha256:c65cb140cdfe6c3000ba170217799a04591bad09524a9c12fb1c60952a8c9238"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:b6e3800b2672879f884587bc2789c3411d546e55d88627b31de5e905be9625e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 63629305,
                    "digest": "sha256:dc9f19b554b3ca9ebbe10dee3ec795497e9df5c9bc99f2f37ddadaa65657c986"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758788,
                    "digest": "sha256:6804aad7d2818c2bb94579934abb542867cd2e081f675aede75d4378ecced44e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1687017618,
                    "digest": "sha256:2e5ea39e3250e7df956c17469b74ee4618d9ebd6c6c3818a13b9feb87026301f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1141,
                    "digest": "sha256:8cb91f7c4d1c865f1e68a6459fcbc9dc3ac93249a132c6f3936d689c264c7bb6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:b0ca84c3aeac7242dfaf4f398a4e0d37254828f2af5a05ad8b9ccf6376a3da63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765067,
                    "digest": "sha256:aa04870e0785d8ed4f8caef9bf94e418fad1056439beaa47bcbfda1afcfe2fb0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129866,
                    "digest": "sha256:f0e20eabcb305f6ef6fd53248f14abd27694f2bf3de6d45d3ffc1c14bf55b9a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036038,
                    "digest": "sha256:1800d808d68d4a4f92f5bac27a68ef27ce194d83be05c510e2b8bfd7e939d089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1153066,
                    "digest": "sha256:7a9ceb13188ef88e6fbc11ddc38e7b8297f6974c31f75e6d5e271dcec4107d30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4662031,
                    "digest": "sha256:00575912155d9bbb17e556b48aacbc9f83b3937c73375a58b865803a89e80539"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37609520,
                    "digest": "sha256:1246e70706eb50e16ff86ade2281d5a88798d713cdce3af6624c4c69bdf7c0ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565378,
                    "digest": "sha256:240cdd2f19e4653d9eb510fc0b4d990c0fbd02898a0c8a0d2f8f9b3ea51faa69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13301,
                    "digest": "sha256:12ab04221f039058913cc4a4c615d54708859d2ff29cbd908c4fecb009e06183"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:f1b23b80d9c490308c0aca9d6f39f5326a2c9c9f42083b674de8666de3a560ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159749922,
                    "digest": "sha256:25258b348117c3917c53286e6cb424ddab346fb6792fc7127c903e3b4b1895f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26846180,
                    "digest": "sha256:23f63ae06ad8810f037d1a22184300d184b2116f6ccf62f808946c7c25c35de8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285,
                    "digest": "sha256:c766d1a3fc97c1b541371d244d9c8a5092b4857a4c3bebea19776168347a2495"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:249d1ec2be4ba30ba3304daada2a28f8bdab9449feda4499ab1ebf53cc731723"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1437,
                    "digest": "sha256:8766ee0a24f3bc0a2f39c2bef9ad22cd3611b0df9f947a80f470fc391816ffea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3941660,
                    "digest": "sha256:31c85692b414e2d06747703797b2e798a49faa18de940b2fa986686d7fc58c2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:0812fed22206593185314e26a9cc4982c1e95e209d76dfaefb8ea8b061f4a7d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 354660,
                    "digest": "sha256:4bd751d15a4a0d2903feca26a46baabcddc7e1867c373fe2dddc21e05c34c806"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150,
                    "digest": "sha256:01f1bad11f5d3fb33524d8b9e5a18d263d1ca3ccb7fe90afa202b43f71d550ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1082,
                    "digest": "sha256:6944e935fe1212c2893fd73612499fd639e4aa2b082b5f1a184d6e409b7f7805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133692357,
                    "digest": "sha256:7d3e825f30f2d68b70edd099536de06e950b2dcf859d660dddcf672fc4d4e22a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266,
                    "digest": "sha256:96800111afc2ce93fe15d5d47c192f2a2536692db7d381634564a4addca7909b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861643,
                    "digest": "sha256:d57e38478b223b388c0600d7336486c9d4c678a6ab6fdea575ed7d2ce4f74425"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1939648,
                    "digest": "sha256:12fff8941371db9cc0e6fa4c597ccb2f4afb3afb2d9b275eccf0e7f41249fe39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104738507,
                    "digest": "sha256:da5a8a681063eaa731bf6082d6cb743fe944ebf50aaf3ec8a8b8385f7c73360d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:25f3edd82f1fce23b0403e34f530e55158d4d0a5ab80bf0ac6a7aba97a2dcabe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4498302,
                    "digest": "sha256:dca889d197ee89d26a93ce957a890df289c5c84c27ab3ee0d04d0699ebb6a925"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:6c6713a2e37665af44d08fe7073b4b8b7cd9801d32119f3259844d165db7b9f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1939656,
                    "digest": "sha256:a196c78c9ad594a59eea5f6115333c6f3455f448c2bffcbaf7e0c384718d7f8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273888,
                    "digest": "sha256:79a1cc0389f0f76c963f60d4b35e139c6e357dca9ab1a5b9eb2b6396dc687303"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154004,
                    "digest": "sha256:1f14afa6850708f9f1b3cdb74b338f179dc4cd12a55d33aaa80c08c32fb94d4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4425580,
                    "digest": "sha256:75127e55e2358010bf5f928aad54dd8c62e64a52a9fbedc780de8d36041cd8a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:93da79c880a42f07d11d783f146c373acbdd485d4d28db5aa271e9d1d1a10916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "22.08": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 50972,
                "digest": "sha256:1b8cbf3d26af789c2489ac4f3180d36a1138deb944bac7a04957b21728c26ab7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110227632,
                    "digest": "sha256:fd80d866e8b2ff78a68c620497903eb44081012e30e3239c61de1e2c6b748ac1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116111346,
                    "digest": "sha256:a364ca75fd6d4ad75fe074251b9ac69c7521ff74b860cdecfc2401587f09ee4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182117,
                    "digest": "sha256:3d4731d036239d51c0c1a77b6bff6e6242fe552ef601719bd1cacb8740bf698f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2138483120,
                    "digest": "sha256:53a5c2e0251f34ce84043000bfa7ea77c6baa942935d5a80580388d3e46838c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11544,
                    "digest": "sha256:b00ff40d02d99db4fce69d33e9fd0ace6bcd2292c03907826c7e38b025882da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:3036e9b94123509fbf81b52235cb6e21d5d714933dbaab6fc58e6e51b9a4dd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5107,
                    "digest": "sha256:453fdcdda78825ff232cbce7f4bd0ae25dfa3f756c2869e3169b2a120640a440"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139297,
                    "digest": "sha256:35e12ec5e515230cc02bf7040ca566e6b0e4f5e3fd32e01511bf506189fdc3e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40751482,
                    "digest": "sha256:11f61a475a23754fa279f9f84a669f19415933b841978b4868d02b91a1a43176"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89187513,
                    "digest": "sha256:24280cf31c9a111673f8394349433e7904a49ae048bacf0380374dac071e8a6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:79007799e2ed7d584e6296ffffafc3dbae96db80df886f6845664fcd3112b013"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 343550579,
                    "digest": "sha256:03eb76abf1e52325e71eed4462c1391c1cdde9dd1b75bd78add84242a520939d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30182751,
                    "digest": "sha256:b35cd2ffed7fd0b2651f07fb5e78fd89dc16ffb01211cba25973a07a85a4c6f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564340391,
                    "digest": "sha256:cad1ddbdf3295d7380e05baa7d7341ee469f8618d5270cc15e35ada1e7ae7057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1164740,
                    "digest": "sha256:a6a9a66448224f53aeef200b942c109a00e83e5cbbd92f0b51db37cad197a9f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27953,
                    "digest": "sha256:6d2159745bc6c96d107f3dfd5c19f3ac8c9897e4c0d0cb12ef08152c61dd2e21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162670,
                    "digest": "sha256:16c820b31f0cd270e76fa414d5cf142873cac77ae1cade984bf93d2d769f2bba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291433043,
                    "digest": "sha256:393dce0c06475392bff3538e2a718b6eb39f06df3995df662a2d2359265650c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12499993,
                    "digest": "sha256:54a8dbce997d6fd18be4bb597a47bebb9e909174cd6c9c7ee79556f80db4d4b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73431293,
                    "digest": "sha256:a82362f4ff019491cdf5901b08e594c8cf5f7ec396da326ef69f6daf2d243800"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19375764,
                    "digest": "sha256:06708ff71fddf98a82dcfbb1433072f68ece1ab9ce1835ce7b0223b811de7854"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8555,
                    "digest": "sha256:b0b879f3c073f0803dcccd86ba425a7f73f6470ec89c50f5a229dffbb7c6b618"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67865782,
                    "digest": "sha256:6e5d78beb27c53de33de1857df62f90f7d8472e11c345cda4b08c108f0400730"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:d71376208bab2a0c9fee381621873060bbb059df33cb8ea34825aa01c3db400d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130320955,
                    "digest": "sha256:24f514f7f50178d948fcc588e1c57792ecf51997294a76a201a000711c59dcca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37906038,
                    "digest": "sha256:d8ae32214ced1d27b3bc3b9701d19815558070b6ab3cd8a9ee3faca22e018d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10202,
                    "digest": "sha256:a03f96c08202d41e21bd54e6784d509a1c698f68d1acb41774b7439e752aaeb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 656375531,
                    "digest": "sha256:3cf5f2a145cd382cff685ad13eaffcff2d8166ac73b54a0d9863fc813c55d78f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 318432439,
                    "digest": "sha256:e2b13828337572dae6bf8d91905282d62e4d30d47c08abcfc2c939223620a3b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190137,
                    "digest": "sha256:4bd4ec3d41eaa042721fd9b7f0856843c1c8db494116006360be8ce8ede7fcbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:d60e7de2d0021c19e7dd3fe8be4f2a937e9b64f70109fe851553a22cfddc2e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73273311,
                    "digest": "sha256:70e9ae99b5b525d595ff996020736c8b2688d9781268586c85f5ff51acbb3850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758770,
                    "digest": "sha256:6613fbf79c8d77cfc192b15ad4df627ef3c51424cfd46d80977b504a5d3f7d18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1687448303,
                    "digest": "sha256:4f6e69da8c380f0c9e4f49d5c0543261d856937b5bc341c6f0aa3d41a2ec51de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:97202eeae640443034043bb6bbec38b6c5ec19bc965695c75b0d09e5f25f23cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:05ec51fac3bfb07919e0b1bd5f7a04543d2bd3c69497aa8afcafbbfaef922af1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765055,
                    "digest": "sha256:7a750e00ea5672ff014852128c64f0237917143f3736fc69775e8f4642829c68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129779,
                    "digest": "sha256:78bff220edd355dabaee9f3a0fbe1412ce72c2288be63425ec83c0a2a3c18d77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036018,
                    "digest": "sha256:97c451224901439ff0aa97eb2f8613ad81f936dc6a262f2fe585e2f236fd9fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1153057,
                    "digest": "sha256:9794a42b9979e72e29322c08c8a20a8700974e1593dbd1fc2c35f0b40c2128d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4662096,
                    "digest": "sha256:39764506fa0c86d96ba8fb8e8087176670f6465b487669ced681f5258d6ac56b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37646748,
                    "digest": "sha256:760cc94414cdb5930b96457ae6f1168f2c131f988f5f7f27aef7133663fa3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2588089,
                    "digest": "sha256:d16a8be704b0785e76e6afbb2e4a346693b55b507002ad375b6f1dcc2b7b1e7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13288,
                    "digest": "sha256:3c5d01fe62d8881495ac70551eed8886c0a79f354dacb7952f7e1018f7ab0b92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:614853be683c9848e2fcb6b3dcb68de4cde2206083d8335373ed40fcb8a299ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165006435,
                    "digest": "sha256:0210b9b12b141cecc82a32a8c68b339e5e3e697c97711ac688a1c32065fcb5b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26781363,
                    "digest": "sha256:fc2b92edccaffa25616fec5450eb0283e7afc308b04f13cd4c36b15554f4a7df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 286,
                    "digest": "sha256:0ca9edc5a2bd4c393e283da163451e6a3da9a39c3c5ba6019c9e2f52c8165624"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2671dfebda06856c68fb2c51e2949439fad78186b54de7d5a76906088ea1bd0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1435,
                    "digest": "sha256:022b9205fac92d8d566a90b3d0d4205eb14e0c0386163139b42efe075f17180d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226468545,
                    "digest": "sha256:431a07cdc293efa6208e45db34761047f0036ff97b74652a995d12c9407298c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0b9a3d248c585937b39c3ad3152dd134c26581c577b486c14548b69dff6c2ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 356131,
                    "digest": "sha256:9b4c66cf881debbe67ca2df07a1812b898c4ffaf240083bb1ec1df1f875f26a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150,
                    "digest": "sha256:361c2237e6b239ff033723b3794bc5d27e2d7526d03955007c1f6ae39fb15d52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1105,
                    "digest": "sha256:937af0843567689545f019ad1b9bede415d5eb3fddaeada98d801535df8c8668"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135085126,
                    "digest": "sha256:c780d629e4590a5e290a58bcb66b191809758fb6f636eddb559d227081e3fd0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 269,
                    "digest": "sha256:3c7c03d7d83dccf051f7d38e9e3bec7126bb6e71826fd22e371b03577a4ea946"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861599,
                    "digest": "sha256:a8d3a162a0b35619ef3c4d6920a8aaf9ac4c83641d78130962bc4c8a11210365"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973893,
                    "digest": "sha256:afa202eca73d5788b8e8423dee8c0440cdba6fd6cc8f61b44295b529b50d7c25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104776186,
                    "digest": "sha256:0fbe8c0509750a5883440e8e46be2249635b9421a7b946f3c89857a522d74324"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1665,
                    "digest": "sha256:13fc4cb48358b30ed61972194451e574fd9326b5f44b8a011594ed598839b35d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4718116,
                    "digest": "sha256:f3066de8676087e106a388438b4590606d4a69bfecd25cdada337d2b1dab92f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:2714bbd103a2c23c68052d670f61a1d5181c59063dfd52acc1affa7f6f9a9456"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973898,
                    "digest": "sha256:6a560a160a222d3323ff79995c0168b9a77c5067488c526324dbbf62242ed5da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282465,
                    "digest": "sha256:5491bc83528b95a6f90fc448b85e72b5253082160641c6826e4bd26ab538d4c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165430,
                    "digest": "sha256:20217d84dbbd0117a44e431212fe1b35a682b31dabe605db48032fc4b54747f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4428134,
                    "digest": "sha256:9c103c7a65221e2c11ef9819145f93a7cab5a4c822e43550fc01988f5af17df1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:395fe519a03236bd16c4e58aa496538004ae43df28727872f1cdf9a1972d02e4"
                }
            ]
        },
        "22.09": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 51684,
                "digest": "sha256:26a56d8e974245d1a5be574b4dd158f57625b2a34aab643b310cd0fbb83e1183"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572685,
                    "digest": "sha256:675920708c8bf10fbd02693dc8f43ee7dbe0a99cdfd55e06e6f1a8b43fd08e3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110848873,
                    "digest": "sha256:6ee22543019361b997cf945faa83f79c851bfc2ee11fb73b00a768281bf50062"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133378049,
                    "digest": "sha256:8b1a583c6b123c1d24c6d18814f906479fa97d40aa479ea9c57ffafd769dfa00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182118,
                    "digest": "sha256:7302be10edc2df7474a3d96a4b156ca72481cd81839c09c6f4358647bb8aa905"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2758495613,
                    "digest": "sha256:5bf9d046b7e1b061d707a4449bf57e4eb105a0b13ccf4f61dd8cb28c0b13a7fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11553,
                    "digest": "sha256:b4f5e997e3c2dad9cf9ad02270cd77ce0e10bc946d87c8dd675440ca0030c227"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:d0e445bfbc9d40c3fe0e3f218f1b9178aebcc88315d069a1a4a90c1e4f6b41c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5109,
                    "digest": "sha256:a86d67d9ff4b97b30eaa4f687485e9751b05fdd66b169abf6b1b045fdb009a80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139298,
                    "digest": "sha256:51d596db94d9bdaa8d36cd57b1653835bb93a657df3e636e0f1d4c6a9fa0274b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40755946,
                    "digest": "sha256:a8bdaac63bdf31fe5c545c6b07590b9e214a4d3ae85e5029af86cdac3788c8b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94981910,
                    "digest": "sha256:299ca652228e4a3020aeee30c4c156f4f262fac5309039d38c6c8202b9cb69da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 508,
                    "digest": "sha256:2d72ec5f9761ea24dae10afa57c8ebcbc2a5a8282cfa7ff42992ac9748bff541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 458391617,
                    "digest": "sha256:36eb1c09fe219361eb42ba6fa908acb54ce4cd54f79a5f80b809781d98dd4cf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33760271,
                    "digest": "sha256:446a1cddbd6ce0a7010a61e7c86e57c4f92faef95402f41c7a5602b33c9cec77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 561815138,
                    "digest": "sha256:4e04ccc28a6b079eda91233cded37764c1c1d11572c7ca79d3ee3ac5a6949835"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1165622,
                    "digest": "sha256:bbc4815c9e50815d031263ac649cf10673b7bb5c54139253e128a1363e8feb9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228548,
                    "digest": "sha256:819e63a30388989bae41891ba2502d582534abe86c1b0c7734fede58fcc67eae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1162655,
                    "digest": "sha256:c2586b59522c8dc93818f6fb360e21c77004c99d9189780297a6a13f54754357"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293365079,
                    "digest": "sha256:da5ca7a856865c4b700135efb3456001e731833dfe4bfe66ea292444ecea8c03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12500003,
                    "digest": "sha256:066c655aa76614b370da171807054528e6c877bcf42539a272b958987ba8cf2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78707002,
                    "digest": "sha256:699f7e1114d78665b67ddcf685015157a85a60b32fba49e24fe5bd357df310dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19624651,
                    "digest": "sha256:74931718dc400811ba6a6d6f1896d3b5447de62ee095e89c45d44a4c32710c6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8559,
                    "digest": "sha256:e08234e919827602a1d3049db0b455b916527c5ec1b1b6749976bef715afa6b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67843958,
                    "digest": "sha256:d86c0894ec18fb4e3938fdb48ccea3d3d491b824ff4e2dbcbe9e9be23a1ce8b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:263407dcc416c179f4de3dc2fc140ef5dac81ccc5680e5c5f16f413dd3f03da9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147850030,
                    "digest": "sha256:9752da26180e3d426b585e7c82f0e9b0a8040973e1f7ea97cb11c6dfbd9e70e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37921594,
                    "digest": "sha256:0276f84b6c38a6641a0bc76eca348c93c6cec881418b7332ce5ad9fe94e9ece2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10203,
                    "digest": "sha256:5aa631c2e763acf0d2962c47513c246c9e21e3a01f39639de7cf874fa228cf9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 710576456,
                    "digest": "sha256:0f9f065cb711ce940e636f65133d99752a0c73b6e995558cb95958bfd4031c2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 374896029,
                    "digest": "sha256:1da363432c37c1fbe209dfdfefb4a0bc061fc41f737679241ea0c46de99c97cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190191,
                    "digest": "sha256:fc68b1a3a6dde2fe02ab489754d05e0b3ee9dcbaf5b9d16547c239490c7df539"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:f88f936764ac61fb7f6e937e0b6ed9b3548f73df62b2577ffe2d54202eafa247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83262273,
                    "digest": "sha256:0ea91eb82de8eff5289051e17a2f244c7be0c4d05a63fe1f00d76bab0d310b6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 758762,
                    "digest": "sha256:07efa6069223f741896b6892cb0e47389bfe155de5df366053e4b18ccc1196d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2009583044,
                    "digest": "sha256:e1a12e73213f1dcc2c0545a2da0006d7b1c997d6a72cc875788e196d88e01871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1143,
                    "digest": "sha256:f272544375542d47ba20ed6cb90100eb6ea0a2ab23d36b19ddf3d31a17d55ed2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1028,
                    "digest": "sha256:7c17fb0ad1070ea10dfc043b8b6ca73f6c367b1c768f7d899b10fd2245a56ab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765083,
                    "digest": "sha256:c675c44dd3850351e3745e40ae0c8aed316789abf527817832bf2f128134cc00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129860,
                    "digest": "sha256:bb482163e2ccef03a3a31273b2455f2864a3b8726bfa64568ad63a9822825e8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036034,
                    "digest": "sha256:2b83aaba1d4045f95909253ca5c9b96ba845753d76d56cc49e13996dedef686c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1237184,
                    "digest": "sha256:f382cc928b9fc6b9e24bdcef234aa3096acd0a91883d0cac1da59aa430187280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4707840,
                    "digest": "sha256:dbde45fb47dafd637ee1bdf7c443e45b77508db54de400be2048f534105b9f04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37844820,
                    "digest": "sha256:8dfa03973ab31280d838082d70c5fd7cf2173c8e094d98d82eee5594a0317988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2711356,
                    "digest": "sha256:3e9443b44dd093879bfbc407584708a19518930fce54d448e8924d842564b2b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47564774,
                    "digest": "sha256:d54740aa074cc74dc4d9a96fd66404f016c56af2b77e2beffd6539102e83664d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13281,
                    "digest": "sha256:2179043d2e40e5c081873b4a1c428c5eb02c0ccca769c23664804d5c2b239edf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 513,
                    "digest": "sha256:293b11b1b14e317d4853215f8c677f0846383704ecfd57a5baf8fafa143dcee9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159880813,
                    "digest": "sha256:6e78335e5ee5f70e31f194451839a554f9fca41bcaa4f01238634b984e087b32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28944623,
                    "digest": "sha256:ad08360ed0e4b12cec468a5bfc604fccb98f3ad0ada90de321cf8f6ac3336688"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338,
                    "digest": "sha256:8e6666fc87cf08d16b6d9ff52770d91be21e4cddbf7281134f46ae5df9d9b0f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:358cccd3fcb76ac581539d98f27bf6a30a9d2ec2551fe7ff73dfc1dc27bc157e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1433,
                    "digest": "sha256:073194294f8bf4687e267b93767fb5781df6b430fffee799254413b16708531d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4176877,
                    "digest": "sha256:e460ed4335d9799e0076524686dcfc495d72a84ec3c9cab036df1bc4edd08f77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:23afa5a104a1208358d63aa5885fddfab0d27cf98ba0a161be22775672e934fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 495231,
                    "digest": "sha256:a97b88ba2b18fb1a83a00ac74e68b5364e4685f779990352779423734e1216a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:7c91f97268a390bdc8642d2d79308e1cc1fdbbd6b8c3122870d9746565bee59b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:651103433e64b5668f069b276b740a11054936b3e18d7af9472e261c14bd814c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153743184,
                    "digest": "sha256:87d0f6fb1a195c6ce4474486bcdd6170e3e8ed97cdff6b1b5dc641d2b2d33e34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266,
                    "digest": "sha256:74929ae01f4a49275ccb98fdff23f81b7dc76fd0a967a7d295a9abced2ff34d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861605,
                    "digest": "sha256:718673d46c48cf6bda7de5a3f4c08d8a6b166b5f9eec594cb723a3aa648d9ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1991865,
                    "digest": "sha256:2f936e123c9828467edc022338fec5b4e849a270b3da9b80f699308bdc2871b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115798211,
                    "digest": "sha256:92a01c4cc3c233af2cb1ab6bec90110ae98142d12c98b4b669a59e6a2e72a328"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:597178b9e6b09db1b710dc04965b97d0088f848793fa424db314b910ca9f3e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4912159,
                    "digest": "sha256:bb62dde773d6463d2b81df4d16b6f7a813e303149b52ca690a5347b0d6471757"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5ca83f52c2a054b547847d86e821233cef972c8797f531b6b86a888fa6fa27e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1991873,
                    "digest": "sha256:1d313caea3d189f1203b9ef2969f2ac7e0be04e81787739b9d5b961e09a008de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309025,
                    "digest": "sha256:56ca67a38dd241845f29d51a4c06fa1cc0ec7760d98a4630c510c62dcbb059f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171312,
                    "digest": "sha256:aa2552847cfc88607b62ffe1e5c271ef9b9d0165a9145ffad5fe5a219e83d8a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6308319,
                    "digest": "sha256:07865c5ca047ad73c93c103f1fefa3d03d04dabc51f01fe6e06194c9606f99f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:76b387a28783aee4a5e37e52b2673d657c18c4d26790087887cbc45e8c91a58e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "22.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 51729,
                "digest": "sha256:8cd736d3dd532519075958e1673a278279a4bd26569f1483ce8282e7f1541cdd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577834,
                    "digest": "sha256:eaead16dc43bb8811d4ff450935d607f9ba4baffda4fc110cc402fa43f601d83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111539002,
                    "digest": "sha256:d86e6ecee9abb2d8b4bb66be318ab956861cec12f33d1143f38cc1399a59b2f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133378243,
                    "digest": "sha256:6b08e0981273a337a2162ece566ce3f03b653a83d2b4478c4a493e7b731d3e11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182136,
                    "digest": "sha256:54de03fa67ca69629e43a9eb9cd6cf22355d84e6e0a8b33752e2c04f48be32f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2776915473,
                    "digest": "sha256:d0067f8e474411db12a6934f75336ab376aa0be5c8d4605d4e5e5a3adf7a9667"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11548,
                    "digest": "sha256:9e8473502f86a85ce48e2be4da9668b7f9376041d3e4d6b75bafbe03122a7fb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:62cbcf4cbe13004e618b6dfbcb0aff50ad77d8d76900b7dab97cf2df07c4efad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5098,
                    "digest": "sha256:9054d495b912204d708f474c53491e5d85779364a4778922e29b5d692e605672"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139296,
                    "digest": "sha256:363a6cd124331b49a5630f1507a5456560e1bccbe3e8715c5a1ab3dd44d1a0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40765407,
                    "digest": "sha256:69633d945bdecd15783d468cefb6f8e853691d9b81a37287391fcade9dbb4cca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95009955,
                    "digest": "sha256:030b5d54675a0852ae673c92fa15b4d62e2e0908b5fd63c33a1b05526fa7e25b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:282a25844090efca16d115557b049beadd23e5ae25d9960912d268653fe67530"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 456458124,
                    "digest": "sha256:51caa25c21ff6a8c9420a98286c563895102f07f0935e6afe019947f23f3ee1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54818319,
                    "digest": "sha256:7e60f534eab9f4f553fba5041b75663c83b693c048f7f54e5038b5a7cea16509"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9299324,
                    "digest": "sha256:ebf794310444e42877a1b41e3a5f317e8c10c95d47e0eac2c66da73ac274bb5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26899597,
                    "digest": "sha256:34cdd20fa9a57734c93692ab239d8ae1d30569e9fb7f67cf8e295a9590e8e041"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337200,
                    "digest": "sha256:3ca7c5b4fa8dbd5a04e49db214ba30d3f4730fb57a2becd111b40f97de38bebb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309883070,
                    "digest": "sha256:19f08dfc02b47b494580f6ddec4e582dffca18cc4cdbca1f802956c4df4702d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 939265808,
                    "digest": "sha256:aeb03acbc665249fa1ead6cf07e96deb0e0c6b2db5fb168066facd96289c2f40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50925801,
                    "digest": "sha256:53faa7c9242ce08c184668988f2cb7088ccf8ddd05de4e5b7a60a0fcdca592fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8452,
                    "digest": "sha256:1671cad749069c9149058eb0aafa01183642d67508b950ef1691e72688a44788"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67915292,
                    "digest": "sha256:ff44d2cf2b069feb2a12e3c894568b9d64539077048620a47de4bc4516430083"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:847fe51b1105a5e8fbeed70dc05f3ff004e3efaf7cd99919eab01d0cc73d2258"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954460,
                    "digest": "sha256:c67155743926e456cbc5f2f4663d45fc844ba87b5033c780fdc457bd78b54ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147849674,
                    "digest": "sha256:00e9b89517eedaa7ec1fb369de7762a0290c735b9fca32fe9a12909de5025609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 749349363,
                    "digest": "sha256:a3f0d5aa7c6e8e6241e37c05e83c76e96e98dbb13df2271662bd02c6e81681ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 378050931,
                    "digest": "sha256:ef948ffcde64a8880b0bdd0a8f2b4613be0dc62d32297eca8103f344c4604b53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20758070,
                    "digest": "sha256:92f5eb686e842475ec70ddf5df068478ded290e1d3880f4a6354bec1bddfcadc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:b25aacc72a12d881895a0e8a2599718afb6fe1fce904ae9219869cb3bf2583b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70651518,
                    "digest": "sha256:9df9e281c83e79396c449b9a887f6392458697487637763df9ea847d84005156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1441396,
                    "digest": "sha256:7cc0770823b33360fcbe10435d65af3986d535a84a47a10a53637f3b6ce0f461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1966792138,
                    "digest": "sha256:879c3e503a422a2bf71c4be6d7e0faa323af27ce141324c92f84cb142b68d6f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:89b663f58167170cea574b3151db0990634486fb988f937150e8c39db4044d60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:ff5f2de8b949be0f15e4bb02d565c8c1f648d0ad7c2534650f2f64994dc1e32b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765055,
                    "digest": "sha256:82ae40ad8b7f76bff670697d32dee7a90d6d221162062eb7c659f102464a3d84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129857,
                    "digest": "sha256:6408f20e6e1bcf38ab43c460e60639342bb5472ce106509ec0c1e5e770665e63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37035761,
                    "digest": "sha256:606ff247506608fce2d9e3596519aae097646140c0aac9bdb751f5ddd10f6ecf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1235553,
                    "digest": "sha256:3b04c2cc880324fae56a1fd0838d982bdceacd2a8416b7b993c19383dc3e332d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4739245,
                    "digest": "sha256:61c642141f3876f19c2fcb98379547bc6322535c872a8b883aa919fd1c98b9dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50322485,
                    "digest": "sha256:0ac3edfbea47df1f3c57be33f171f27306050290ffbe0bbac5f3f686286bff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14484328,
                    "digest": "sha256:0fb82ef44cf1a56c38b0d0ef8e5fb002c7f4b16430e66ba828a8212eef4fe41e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55151836,
                    "digest": "sha256:7407de4dce7d2491f5851d8b115bf63833a60bab70d9356a92c39dcc7424640d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15624,
                    "digest": "sha256:b6a24bb388c9595b37391a442dc30905cb9873358da022bcc7c1aa7070656184"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 514,
                    "digest": "sha256:3fa80f37c8ad6099ca37c6df8e66504552919d0722848f5aebd5c43ce09188df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171254663,
                    "digest": "sha256:10e3830fd6bf9f9377e3c4cc75285bf8e99289bf6f157495bd4042eeeb07a7bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66896768,
                    "digest": "sha256:90a540172e51487daa965e91e10521d604fd0b5c98d77336562f646f76d03f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268,
                    "digest": "sha256:e32d21fa37981272c7ef7a5b841ceccb426084e527ec1be0e77c5e4b3a7cb554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f26f67c8e275a2f0d4837fb8ad809b47fb2eed009b8a0589ab42218ff17b0f6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1436,
                    "digest": "sha256:354f4238d2985411509e46bdfad612b213e7a36fd89ba24e88e1af3e31970874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386655,
                    "digest": "sha256:cfa8aab940c65f4d1a2853c170dca3d6c9497e8226f967917636be70c75ea351"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:a49336393f77b38cc2722495081e0df05f1b43e79eaba60ddb90ed0174a047f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1112,
                    "digest": "sha256:7b2ac6d2f0b59b203b3f55b2ed4bbbca496d37052f51ef2c011c54f005eb602e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165305484,
                    "digest": "sha256:a81bc7ecd37c167e922a236d7d1ab1db82d58eb9be50ff705b6924fdeb7b6c58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266,
                    "digest": "sha256:1b6c223b398c67eb96e7d743774a9e3b8a9958f1e73ae9d55cebb0e28d247b8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861576,
                    "digest": "sha256:b01c9b2af12da098d24248780d3a6b9a37a37f76efcc5457806c5d2fa39226d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2025432,
                    "digest": "sha256:aadfbfc916fdaa4003cf4ba6e9a8cab0661db81f895c6a86d2b35bd0a306c077"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115830776,
                    "digest": "sha256:63df038318179f4b8e1a2f1a667f198cec0f3de8691916e72aacf02008182204"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:03aab2ee666a2be76854f8e7377e018e051b73ac064d359d0377aa3724a0e046"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5061308,
                    "digest": "sha256:ca032667f045dbccf026450b989fcc9597db3a0e6f14fbade873c97c71878534"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2067,
                    "digest": "sha256:8551c14f60dacdaf4e0696796fa47ecb6929be52addbcc81ff87fafa9c726ccc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31996876,
                    "digest": "sha256:7a8b2e7a4f633c10784f5d454bdc9477b5c96243e80f683da6f7fac374c6bfa0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:bdb2addd6c2ac9de4a959742c033e565e00cf26d1d658a1321c8646d064aa0d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2025437,
                    "digest": "sha256:b716bd486edd7e88802d176ed15bd10e2ee474b048708b6cd183ea83b40dc5a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 313925,
                    "digest": "sha256:b48c9bbdda1df3948f8c2e5c64475ff4141f6e14cb7797fb49c6ce252e9c956d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187013,
                    "digest": "sha256:c9a89a4296894db521210caad9282462e70beb9f2b6ab7364698e26c140f9d49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6319404,
                    "digest": "sha256:730db5bb5b6dc2d84109563bd02fab1739a8757819fff41f297fd711dfa91b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:56cb85a5daddf43e0730558f2a698231d7e4de2c5e387a15166a0c0074485508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "22.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52128,
                "digest": "sha256:7b9144d7fae221118f2029028059770002d0fbbb6cbaea59ae3090c7928ca8b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112098293,
                    "digest": "sha256:61b1f751e984653e3c193315bde06cadd027d730544d5248080049a0d7084cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143011743,
                    "digest": "sha256:dd65b807c6371c7ad01ed47b27c5002bd5c617553a4658f9c24450ff99b718de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182133,
                    "digest": "sha256:04712991e3930806bdab874321f261a66205f6886759991295d7d9e41ff931dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2774747167,
                    "digest": "sha256:a0e57127409620ffbd134fed398941297a33e6ac6666f11a8112b9912fa9c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11547,
                    "digest": "sha256:03a691138ef8873ae8f244bfae84a8f425d6d970d9eb9e02025f09cf3e6ff73e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:9684ed3c71177bfaf2b3dd14a7f4f396e574be10c175a8eaafeddf71db897ca6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5100,
                    "digest": "sha256:c79b46181ee684152af9c05fbf145fd65a879155efe3656904c6782f738ce5a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139298,
                    "digest": "sha256:91b6a7918caa109af3526868ecd34dd58368c1612f97b09c87d547fc550670c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40765386,
                    "digest": "sha256:d3ed2fbe7c334026828edfa722cc573ae82bf47aa8f3796d048a4e45c0021743"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96182115,
                    "digest": "sha256:79a28dd493566ad8f77a68bdb8827f450b8e08f6e8cbc0a97fd07b0d9f3e5f59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:02148fc97997080a40525c593dd6412858d7daf2ebc3fcfd31d113f3c2ce9fff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 456462665,
                    "digest": "sha256:6471a4765a47fc71de42baa86e1da4c9c6cfbd2cd60d683175b12602ae342061"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54811754,
                    "digest": "sha256:824e6993c2a6f049af207439226b8f6cea693d6ef5f8751e52dcff31997451c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9303829,
                    "digest": "sha256:bcd2dfdccd094718505d87d069d9c0682d8d6285ba39bc5ab7b72a1281d63075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26899746,
                    "digest": "sha256:499d104c2b1eb9e3bf33835377ec125a657b5f55e42f0ea88d25a92426dff428"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337219,
                    "digest": "sha256:2105a5e6a3755dc81484fa8fe0341a2c19efe3af23e0564b6507b8b7b82b6065"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 312398538,
                    "digest": "sha256:5550e985500c192ad3032296aba24defb04ce3a4e18afb8b1c9dde4b08f9b251"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 917230495,
                    "digest": "sha256:2850b7199f2c3891cac9f36f96c03bf791f9e31ed3c6d2e717a168f7554a9061"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52420430,
                    "digest": "sha256:5a30dc6e60f7aaf9e019cc520e67cfcef58a02e9e04e276e749917bfc15576ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8442,
                    "digest": "sha256:38acfe94dbe9780e087ee1ab39408e2995af898a57035b057020cb3d8c2eb34e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67917121,
                    "digest": "sha256:e4afdb54f01075983a5668ecd5a88026c3304118a4462338d6e42d1b40ce057a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:65bc4e90123e87e336d0d4536014e59d964ffaae8cc3a16da6e13aad20d5d255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954452,
                    "digest": "sha256:120b49f1101804a473e4de8ce2d3e794fa458e5c65f3d749b7bf7b4a5b096881"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147850110,
                    "digest": "sha256:29ed91f2bc74af23b484bd5c7256a9def2ebece4afe4b7b208d053310929d70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 767333725,
                    "digest": "sha256:e175a7d4c536680a5adc4b2a151fc9fdd64529b5208ab835359e195ccd0ac532"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 449528882,
                    "digest": "sha256:06d1766c07ef0f6689b1ac5b5c3594f2a27833885996bb67f9dd00644197ae25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20972098,
                    "digest": "sha256:ede52db3297f9c3e92ed0c6160ed6db31827c0a8e8cd93275cdb84c340b2d608"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140,
                    "digest": "sha256:09a8bd0521b81c29af569e067de08f690d968d1d5935d13b7e41f5e80870e1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90426918,
                    "digest": "sha256:856030010aab64cd002e6f1b47b414f54bfc32c707cf61f4c823429fea18da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11487,
                    "digest": "sha256:9f4b7d58d41b339f5b7106129aa54887218a0830f07e7524e0f4ede9e373194e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465497,
                    "digest": "sha256:7275c2240c04e9c507c7d55c3495a2c41d2fa7691c2a1fab9aebfc8b03afc3d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1778358619,
                    "digest": "sha256:3650c6aa1ac1923b4d7ecb4f8ff47946967ff43dd46ec16ff9697208497489d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:597a6c358afc5a2115173cbe119820ee422e7ddeae5f6a095bbed8019936d95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:8bb9583747a242aa775cac8a5ba0c8cde7d72ed527769c7d66004abe7e294fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765065,
                    "digest": "sha256:13e96fedcb8d1beb4ee9962bf5e5c54e34ccfbb5364d9bab591aa0d327e99169"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129869,
                    "digest": "sha256:d9ed1e887990918854a429d592561eb9abee16b6d7ffb0728bd3c0733b1e2e14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036010,
                    "digest": "sha256:66059ebf13c6cc61a4d91d44886fcbbde9f8f85cf6b6d5e92693ef12ba6256d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1235529,
                    "digest": "sha256:96c54e0e4c1a642a61932c6164f3352305cfa81848fcccf74d7552755d6940cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4746213,
                    "digest": "sha256:d04d0713d15840beb755ce096503afb3ab2ebb0b6c59fc0c12a02ff76eecf682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329244,
                    "digest": "sha256:5bdc3a280b31868241ed3e1558ef1742d97d7d42a77912134d77d3897a06cf70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14654675,
                    "digest": "sha256:d9c77bc172c0003cdbbc277c766e76b913b02798f407d9d523bc554460bb9b8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54924216,
                    "digest": "sha256:f0d07955f406a98d2a3ef5cd3cb1c559339dc6cbbbe209914ad33ad7141df159"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15706,
                    "digest": "sha256:63edc579ff7da32c44f2ecbb8cebdb8c0bc75afea5c55bfc40ca0faa1f25b971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:8abf5ec0bb1316cac46570b2bc2d49b8628ce20f17ca13f7e77b260e5fc3da6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 178870868,
                    "digest": "sha256:ed15cd3416a21a05ce454f9366e746b902bfe1aef6552385cba4f89f4a652c08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 270,
                    "digest": "sha256:167556036ddcd1b37164518609b56741318cc5dee2b6e37e2f01654ee5a0fd16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:c905fdcb8f66121d6ac6f24bc38da995dc8f5512d7bad5e0564fee67089f991a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1437,
                    "digest": "sha256:7e53a8e85a54d75c7e7d0b4f18f00505e71614c4607e13c504112f8af10fbcd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4386580,
                    "digest": "sha256:f7fa6201bf13b00e590eff766045b58691f29ffb6a6745d6145e28352153e60a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:15377f1de93f6ec6f2a250ee946bc1f82d9c6ef74b897904ff4190ca181ef592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1133,
                    "digest": "sha256:483ce2c8a178b1625bb632b522997ddf390d830d31c35f53ccd3e5127165bcd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184214534,
                    "digest": "sha256:8d47792ead44778952a0aadb6a98168cba3684da8e32590dd22a1dbff0e6988a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266,
                    "digest": "sha256:2a9c5950cb95810a13518cc458474b677e6aefea3a3d92575b2d101abdf0d877"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861615,
                    "digest": "sha256:e6bf63c216332f714d616fb649eff84d392cec822b94678b031124bb9df1451a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2026393,
                    "digest": "sha256:e8ea230d2d5df04a5b3bbd80b3b218284ad16cce9e45e31f326ec5f4cb1f4cc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115619857,
                    "digest": "sha256:2598ca07065c30ead56d1a97ab3aa2146c802fa5a51618bda5ada51249f2cf65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:e9bf2d38713d61b428ac1e255ef847d0f4cf32117bf1f7e1cca1ad138b50e8b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5227019,
                    "digest": "sha256:e6ac00889273f281b57c0c09df1b50c1dfcafc7c2a1c3c799086b9d075e6f7eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2062,
                    "digest": "sha256:6f824075559604200735b0beec91917316b2c928f3bf903969180b4a1e6f532b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31996839,
                    "digest": "sha256:95610880eb71751f531e43c0358338048a9adb4762b3599a3d7815087d335f80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5491111ddbc7539b24028ce97947c38464dddd3a682d327ee391ab2ff784a144"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2026382,
                    "digest": "sha256:30751c2b3a3c45914efe752cbceaa94d1ca658ab6dc1431b9148a242a85ce8e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 324774,
                    "digest": "sha256:c60ef28eef0d7b6034325c6592dc2d69561a9c50f8f75ef34401d6997059492a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202608,
                    "digest": "sha256:982d75898465913cd432059e1785aa2f461d127c039b06ea4df22ee61adfbe0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5241674,
                    "digest": "sha256:03e217127be6c2896c5866a17299c3e66eb32d9f2aef87229048e6ffc9e511b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:c95c8da848ffc06de0954ac21bd621b512e52ca2aad7a84d451243680ff84ace"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10614078,
                    "digest": "sha256:819c8200a4047abb9260d40b81e28a48bc09ca7e09418ea5c28700150b6406d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.01": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52402,
                "digest": "sha256:1833826e9be90fc9d7b1d2efa3630dc7ef0a0bbac2d3ee8211fdbf6415d19b97"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112464608,
                    "digest": "sha256:3831132b791f89d0ab7ba2cb2a1cd663df61e1a42fa3e46bab387e8c56cc5971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145796338,
                    "digest": "sha256:df6f6f4e7d1008034dcd78f434c07f3405380b96df83e2900556661f5a4127fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182127,
                    "digest": "sha256:cd7011885ace6e7f3bb5fa47d4f4be71b151f95e63a8f1fc96ef4e5008cc2d27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3095074073,
                    "digest": "sha256:f2d204158ba25ae8e33110ea5bfab7fef227a7b829b8c02ebc1e022d9fd5b70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11546,
                    "digest": "sha256:959470e121f565283225b582dddf248cc66502715a2627ff012298ab985f7eb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:ae6f697ab6f7f9d88d44cdb66a7bd0feea5731c95fad8e60f9a1a7f521bd7453"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5093,
                    "digest": "sha256:97a9e2538fcb78dfc1a0bceaf039cfcd6ba47c498712548d193c932502f9af36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139298,
                    "digest": "sha256:4a06da899d845523cb5038e2eb0dd8e24c67c02ffe6faa85d0b15f28274b1e19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40764429,
                    "digest": "sha256:cbb886a9e1ffa1ce9939893225b86f528e1cc02154a710cd756e39377085ff2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96183691,
                    "digest": "sha256:d3146f7bbdbb37f9d1f67527a5499ac7f4342cfa12182bbe8412bf4f0c3e8607"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 508,
                    "digest": "sha256:1aec09350b1c0b3b900c037b52f9b0cc930796a8c8b9aed1a508971d56dab9cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 945350467,
                    "digest": "sha256:76f23381aa3b2a194ae7f3e4cfc8de35f6e7f25553e3fdc82934108f45fd889c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54813223,
                    "digest": "sha256:c08e590e72aacefa1d15a1a0b7d1dfc62dd6dec3e0f55096772e39503daef9d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9385462,
                    "digest": "sha256:fa7410cbe4d890c5fc660a258982adbb665c71397d78d0ab9cf694b442464863"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27481738,
                    "digest": "sha256:a8c36f162579acba9e61e0f57b4c83e7987bfd7732c965f5dd90b793468bdd3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337220,
                    "digest": "sha256:17798a7d14b6d4aacb8700dedebb2ec4c9e235803bdb5fb98a1da81645751466"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:85c163a2e0466c2eba3bc710e83f4d821302d5e2fff9d577f6201aae726f4c8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 313567587,
                    "digest": "sha256:9833813282262197ae8674d8ebcfa698cd928016ef542badde14ba444ff273b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 907106871,
                    "digest": "sha256:431a83add095227b1412afed487050cdbe4e7d8f7d26d667619bf45c18e26088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52450391,
                    "digest": "sha256:3829ddc1dd22c71d889ac8178fd64af35e23450a56454c3ad09094fca631eb2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8445,
                    "digest": "sha256:336e54e88169a33fe094946976cae1aa17e6c76c5ceb2174e3f2cb6bd00b30f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67914110,
                    "digest": "sha256:dafc609d8f64d6c2545e8037ac9145e7f2f9727c8c44076a21080c7d0d56628b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477,
                    "digest": "sha256:95a72b367dbf91107208765c7261b136ac5f38e8d2072d31a23ce89a6690ca0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954375,
                    "digest": "sha256:f3f4a9f5412f45004fb880c711a627ec211512b43a230ef924e5d31f4e0b7126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147690033,
                    "digest": "sha256:936b5757e982dd0892fc4929fdfc1a4ad41eda5ef243777f7d7d83189bc58687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 730985965,
                    "digest": "sha256:2e017e9db7156eaef6daea346811521f3cb1e3dff84b446a31bcc04a1e159d94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35303424,
                    "digest": "sha256:d2507c60e3259790b7528ea4e887231130baf4b0847ae373ce0b1dfd523b25c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 448818026,
                    "digest": "sha256:6524c9f1daf35ee538f6e75a8685122e8a3990878f038e7a7cda92000cc01e77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21084209,
                    "digest": "sha256:c504cd77e9e2fb4434f754d342d8e464456dfaa10830201bf1790cc896a36360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1123,
                    "digest": "sha256:74dca305868cbbcad9b640c461657383a4a9f432747d45bae7a10f3b4272f7ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70071775,
                    "digest": "sha256:81aefbe84fb60cb5e45783d292dee5d7f01910861cc85006525989919a10a32e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11489,
                    "digest": "sha256:bdf10ebe358bd28e1ee4149c8ecd6ed54e30e3749598348309ec3063d135672c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465473,
                    "digest": "sha256:80cb63e7b0b7504b44599d6be509f6f1c7361ea35d34a5cedbbe418163d06620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2334976209,
                    "digest": "sha256:13f954ddc41950dd1990eb88dd8838e8de17a64cfd30397d16338fb8ba7b3d81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1144,
                    "digest": "sha256:57d6f9c429bb0fbe2b107bb17852c2ec6422ce08dbf54da1f14bac1e16005793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:19e70578208c0eb5b9bbb6126b3100cab52eacb9f959b1c5292bf70cff08fbd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765022,
                    "digest": "sha256:1b7cd7814e6f71494fb17b3389ec3891cee2987caaadef61d7035b8042c78247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129472,
                    "digest": "sha256:5151ae4af5c2b7b5f1207ca9f562b8dfbeb01ef60915ebe80c35d453bbef8d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37035442,
                    "digest": "sha256:46565dd39d40884805a24973e9fc97ebd2017228deb7f4ba9e5c1454646487c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1235571,
                    "digest": "sha256:a2b6634b5501fc544e9f1950c1e8e874574812f61baa7a660e75191026f20edc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4746402,
                    "digest": "sha256:2640dfee50cdb65209b1850c9f80651742aabc40e3eec10bf2bad999693dd2d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56606761,
                    "digest": "sha256:0e7bd805779cc8bfdb022cb19e4dd475c7b51ee6bf36d4625b3c5645fb696cb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14877333,
                    "digest": "sha256:b9073bef6f946121e92f7d094023a771c96f8a0cd8ebc2a9ec173f7aa91d5610"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55642499,
                    "digest": "sha256:d2e9cc5b0c55380b597f340731109476d8eb53dbb5441ecdb308afac20e75cd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15846,
                    "digest": "sha256:52b612a8c98b1398e43dd704069ced753e2ef7f183d90c81743466c7f15ca500"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:018c51ff4b9bd9db089a241f854fc9604dd4d987f0a1cd46bb0f454c3d791176"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182847458,
                    "digest": "sha256:bb528687cb7958855961ede20eb55c7ff515315bf03968d656f79d6c4556bd13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72400921,
                    "digest": "sha256:2d2fe0191b16f40a3c53621006c09521afdd61b4aff27933ce294de6ef1fb3d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273,
                    "digest": "sha256:16725545a2c9aeb4a2b31f1999ccd4b0e667151aa9c7271ffb4859bc309c21e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:e7516c7a9fbe5597839028e8b3e3c943f27ed1ee0550deac69ffe1b484a9680b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1907,
                    "digest": "sha256:aac3ac114f77c71400e9d8945ad79b279bbb8e1fd04e443f6fe2dd8e83dd88d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5177698,
                    "digest": "sha256:abe51cbb047964f2884ea12a7a577eece6b0697c998ba10bae391d3976760c48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:1c3fe3dfd3ea2d6a9dd87601b292468b05de5f71024508b73b789bf0fc570470"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1133,
                    "digest": "sha256:10f759d58db83cd232ae9c4095d10c6a4c4b1b59715c5300722c1bc7ddfb417d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 191289684,
                    "digest": "sha256:7c09e95cc02477c22f233465f4c215e5569051f4e4afb0880a40c8b07ff7b7c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:5ae101786a5b0fbb9f56c3ef47e092684dedd3655c033cc9e4a6721d6865f44f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167861636,
                    "digest": "sha256:61a387ff099ea615e776e7835c7c211e0a30fe57f8ab624c32274f976eca45b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3251022,
                    "digest": "sha256:4225e35e726f1c3c26d95b5af628a13f9679d5dee2c03228e5f6d8783c3016e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72544,
                    "digest": "sha256:04c6d1e9cc3dd9fb5aa9108abe71dcd24ee320ae8f5ea9e16456fd8bf2000510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:d3cdc6756fad543c3ccbfecdf12d464cb3e473383748f017c1848d969dc56f52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5461667,
                    "digest": "sha256:395b579136b3daaf90a9a9f0a72adef977444c3076ddbfcdcdc18c28cc41105c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2135,
                    "digest": "sha256:5203af3deb1d8e68025f10bd74c357f1bbb812b9fec4cbb6b85ee9211a4633b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31996874,
                    "digest": "sha256:9dee85bd072aa91150f598955b2defafc5f6eb25d83d2bdd5e8dd2e80127fc30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9a56a43545a34bcad086fe507124aca33631765b1ec33a63cca75a4ac34ebf6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3251056,
                    "digest": "sha256:29120656350752d82eca14c0c8f8ee22bc49fdf4eb1ba07dd62a4cf392906306"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338672,
                    "digest": "sha256:831ed86d47d52c2f4591933e498efb1a9b8cbb5d584ea2f24696d4585c6dd03b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217602,
                    "digest": "sha256:c49203a7a02762d9b814f67fe272e39fd4084cf4b0f8ba21937a772749484de8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5241752,
                    "digest": "sha256:e3588bbd6c9b2e113c36309d51869dfcc8fa5c21a48ad391ca96f7f2b8295fdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211,
                    "digest": "sha256:1c3e4d660e74e9a4c52c8a12d0a9c7fc556765be7f6147ea81f5aba164570368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10614088,
                    "digest": "sha256:a4b6dac9251a353566a8b04248d41bf50a81d4b3836e1445417ff3882e170af1"
                }
            ]
        },
        "23.02": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52308,
                "digest": "sha256:706027964aa45b5ffb81e2cacafacab2ec80c29e922cc7b306e10c4549424ee0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27503418,
                    "digest": "sha256:b549f31133a955f68f9fa0d93f18436c4a180e12184b999a8ecf14f7eaa83309"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112588778,
                    "digest": "sha256:bc615fe751be676071b689777b430eb855fb49cac50e9844111af0880a5b895d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145796236,
                    "digest": "sha256:61c7c9e567786b834955030cb0013f8966c3e47eac1681720d085e8cc6fea8a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182119,
                    "digest": "sha256:1f749c08065c706106d89bb0b94a1bcc763c2e66b79b80861bc965cb4057d002"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3097626669,
                    "digest": "sha256:b777129e9daa45acc3d995d921ba4d2ebfd3ee5b7c56700a2385c8574cc50ef3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11542,
                    "digest": "sha256:8e47ddf5daefe94d9b53580cd06b649e01572a43ca950c11309e9dd0a6fc9592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:556ab1e8d85ac194adbc009a70a2c09a99f56a19f36787b68a15f8a260bf90c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5092,
                    "digest": "sha256:b704bd04fbf5cd6bfe7988a3d75f2da89e4c663ebe82cf5db79d2c012114cda3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139297,
                    "digest": "sha256:3ff10bd8cf3551b6df7afda24824a96a7e0c7dfd9b94eed1fdfac7b4bf876ade"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40764283,
                    "digest": "sha256:7be515e856a0e9014de927b3fff13a71589ae3c3f79c9e1adf81d7ad9bab7a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96183168,
                    "digest": "sha256:d115618a5cab2b958cf08012c1ab34495b2beb24282f0e1d673352031112ed4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:bd04c88200907d594a48c22d884fc0b91fee99b0e1debee3157f78f5a9b7550c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 945341003,
                    "digest": "sha256:0384305027fa84fd2735a72e9c9856924c2dd6ec3d144ae9f3b1ae63f52ae4af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54813096,
                    "digest": "sha256:db4721f602b1c109c004a8c2af2aaaf3b1539df7af70435196898ffa46db33c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8823114,
                    "digest": "sha256:2cdd08dbe941c564caf16361a1336e3213ef4e7fc01d57fe0f50a57dd6f1ef0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27482564,
                    "digest": "sha256:b5476a08c26e1aeda503fcc63772ecd99a488ccca73b95d0a878aec12aadeb8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337199,
                    "digest": "sha256:9ef76dbcf0331f5aa933f871506bf743e5bfa44b0249ed1c0543e65c46faac54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:a5f6753787ae8edd9f91176fa4279a7a8e09dd1381916abb5992f209ddbc3ec8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 314812967,
                    "digest": "sha256:e3101162400892c6091404dacb0f2737a6cf7f2cbcb2b8803ded700aa993a5f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 907111970,
                    "digest": "sha256:f225c6e7f54b26c7720050f8f31c15efab7a8a5111feac66b0a2525bbf07be85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52453762,
                    "digest": "sha256:93396f066e66c83624ba1e48615f3f15694ded69280eb6d79eb813ad60aae355"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8455,
                    "digest": "sha256:5ee21dd6989f55563fd956362d049167c7ed9e9e1d8eba2466dc852a2ee59621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67914676,
                    "digest": "sha256:4d090ace1bc44ae1e2894fd467a5eb126c9427eccfa96ecd46324841200d3599"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 479,
                    "digest": "sha256:66b94608319821f0d769446261c315f2f6ca218ce6ac14557e75a94ec9974843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954465,
                    "digest": "sha256:6303a7a88287ed8b320ebb5198ba53c0669943c6b410e0f74d2953c1eaa23b5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147689946,
                    "digest": "sha256:8e1f73547e7d61e22c5bb9a993994755f62f43b57a596d7fa2ecb63e7a55afe4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 731063090,
                    "digest": "sha256:854e6116a3dd5712caff93aa5a97e31375fba7d93d84c69c8355eab1d574f8c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35302924,
                    "digest": "sha256:2ed2f3008a4152fdaa029a3ff3347b4a04fb69c9131bcf1b4e62bfb539b9a638"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482634923,
                    "digest": "sha256:146e06ce2369028892624b6fda5385b2cb45c436e1ff8fcca391806dda59d557"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21084184,
                    "digest": "sha256:5bef32e88defb9f969dceb4f4e3bc82e108ab2c0edac23937804cfce8f4d6af0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1123,
                    "digest": "sha256:74dca305868cbbcad9b640c461657383a4a9f432747d45bae7a10f3b4272f7ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72828008,
                    "digest": "sha256:5a3615521945ae77d6114795a2d977372a90ff88f4642d558f67712bbb9b65dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11491,
                    "digest": "sha256:c1f6551486a3411466b29f4bb4adb73a892cd4e9720824f3e15d515509718bb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465556,
                    "digest": "sha256:c564c7687ef0be37b4f4d5e589dac11148c55b178254ea9e2a62824148ca5d09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2334976628,
                    "digest": "sha256:13f62a4d80b93c696cf6d33486cad6e681c98ecac6a91a8c3d9dbf7b1eaa6347"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1143,
                    "digest": "sha256:d2a86cb16058d50382e2259938a136cb9cfffbdf549ae8ec65325adef1175eac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1032,
                    "digest": "sha256:adf675971050f38e9f4cf1c5e23b38f82dcba13ecc35968ba493ab08ba631afe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6765026,
                    "digest": "sha256:7164a279f931020398c2285cb2b2c9a3bbd0b6c57308f3da0475c547598356c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129466,
                    "digest": "sha256:b95e187cbad7e89c8ba862c8f32e5cfcca05278d722ee5beccf6b7aa6dba4128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37035464,
                    "digest": "sha256:6ee22e82fb7fb9db44dfe150ce056debce0a8725968747bd27db5fe56fe76026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1260337,
                    "digest": "sha256:2eb84d800a55e2dfeb2295048d4eb3b1954d500349ed88f88b9ccffedaf1bf81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4746403,
                    "digest": "sha256:29c4315523f22e8439cbf94f91ce530ceee3607c39ae052810c3ca85fe49b699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56613269,
                    "digest": "sha256:2e38e544231174a9ad3f1484c3d1cf3a0243f92749b51110e0e35dd7f4836b8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15116161,
                    "digest": "sha256:5a541be6b4439a79d6f07f3f04249d5fc4dbad23674b8df6a5d57d7eb68d678c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69991557,
                    "digest": "sha256:f7b4baa4403a33845b0bd131ccbff820c4e14f45db6a3e9b82ed0285508d5d92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15991,
                    "digest": "sha256:b5ef59da744968fb5fa3eafcddb009931fabada58b33f2fe870f0a5bbb7c1579"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:bd0603f5f6919c8318f4e0784badab00db2df3a0ace4611b33123e171fb731c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215598287,
                    "digest": "sha256:74f16a652d35154f22b0a52d5c46490a5e71439f8f5bd29ec294f0ee3ba0a9c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72711364,
                    "digest": "sha256:9fe715bdb5a6562dde1ac09e65b856ab126a2fa93e49981f2cab1f6e0abb7669"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268,
                    "digest": "sha256:0d08f940c694bda25d24700933d82decd6c55412ae733222e71aa547d69f7015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:639da98e1cae789155437aee140159bd019cf9b6a7b53b20e0f6590676d66fa9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2102,
                    "digest": "sha256:a7dcd07337d482a6e451334d70fb37283cd101222e2f1d85761f47599bdf509d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5166612,
                    "digest": "sha256:c569961475bb70c6edd391d8f85daf3365cb8bd16a6170e24b5ab6b6a4d298aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:9531f950ac3cf8d3e5e7dfdad16a21b9c20564392243e241c966ca2b46b9bd9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1102,
                    "digest": "sha256:da2fbee106c34cd702da55de7ce28bfc54ac86d98dd1b088f896fcf76e8bb81b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362698158,
                    "digest": "sha256:5f20d0463b6f1e97c272ae22853cfa14f48e58a41bded103e7a819ab57b064d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4423278,
                    "digest": "sha256:905be9005075224623d9515eea81c388d3b1d2669b852e25fe8671f16e19e1b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72542,
                    "digest": "sha256:d88bbe24e25462e4db9dc679f784cab7539aba9299be448702d31d3da3892a39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:fc7cb8dca6c4069823ccc766e395f07967f5c9b0108965be98d65be25d1f7dcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4064151,
                    "digest": "sha256:9203057bf663ff1c9af1eddf40f8e94565a4d5ed3fc7c17265e855f1a98d9c32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2122,
                    "digest": "sha256:1a2e8fbab7b3721f9997e58095bf2fc69a55c054eda0d0cade5310406a53720c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:3a6d4b98e881360a7a049735bbd9a5112775cb8d815961c84acabc201cefb8bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4423302,
                    "digest": "sha256:e3af833c061a0853080213975afb1e0556c93c9bc39be180042174cd0511ef4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348008,
                    "digest": "sha256:2027e08022c0de73a5816712bbc06efd16ce99dd2ad7825a562c46daf3c312fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 177933,
                    "digest": "sha256:893085eef0f60c20bb3c3948d268f969c7de9851870a278166db930d0575dcb6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4756135,
                    "digest": "sha256:bb6442fe6b54f76b48ca65f0a2e60210225ca1bd831e39a3e03bf96cda62e694"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212,
                    "digest": "sha256:98118edea72bbb185822592b2dc95867183554832d1aff7e2a2a98965597ad92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.03": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52587,
                "digest": "sha256:7772bee53e1912fcab89824914f4416cf98684743544a21d6988d87bbfdb7423"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27503418,
                    "digest": "sha256:b549f31133a955f68f9fa0d93f18436c4a180e12184b999a8ecf14f7eaa83309"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112865892,
                    "digest": "sha256:7c8937d0a90fea3ddb3d4a98994f92029788f5f933aa6825ac6d40fca7d80553"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145513399,
                    "digest": "sha256:c5b9a46f3cd0b6fdbbc3919bc751d0c5166e7b7e9ac89fb592a970ec5dad000d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182129,
                    "digest": "sha256:467348fa1a68c682def779be8a3103f6b6c946bcfb1f72b04302e8802125ced2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3140047883,
                    "digest": "sha256:748d92f5aa2fbc1664c5478b2b7422955b90da73f32dd45e93f7d8cb671f4e93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11542,
                    "digest": "sha256:1e2ea271c797f18ae3fe1bc81a95f6fec811df5fd8ced41d94555964f86d2619"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:3f333c8f6893084081eed945b5db576e961d18a0af3283a6ccb1495383f7f972"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5086,
                    "digest": "sha256:58e23178afe62d9989351db0f83d3c52bcb1d9dccd5a293f8370163646ec742a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139298,
                    "digest": "sha256:ebff80de7587e186c847bd148eee9ff2305d0c4fe3ff08157f9bee58e034b802"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40759152,
                    "digest": "sha256:ffa6ad243f0c31a5fef9f1669e63e92651e9edf586b10ddb9c05e826a1edc586"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96183710,
                    "digest": "sha256:5a6b3bfa1c7c03e7b671d22beca9a0519b513c398df83a02c2c54d0fc870c87e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 506,
                    "digest": "sha256:68e75bfd9f44549da08dbd0e665c42463d16cfe832c44a990797c4e7ed5459ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491000281,
                    "digest": "sha256:9f36c7cfee5f744cb15c287118012c8de6d8fc58cb36de12a05de03918e3f3a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54813275,
                    "digest": "sha256:96073cba6da35cce76b073c036831400d5787a269375c182e2b4a6846c561fa1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8867221,
                    "digest": "sha256:ffb3619ac4fbc0b3062c05c69e6677d1ff970a195c05c8d20e8e0433bb0d61f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27482522,
                    "digest": "sha256:4842912ca6c630a2d1614ac604fd7540603154c486a0b636e71392ab1c33c55c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337219,
                    "digest": "sha256:e3e2e003bb9ce1031e14d95176103685b9147f09d9f5c4aa7e646926154eec26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:84979a1390f5d0227497c88bb4262c4f5c3003ddeb48a305e1f0bb6fba1c66de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 345214575,
                    "digest": "sha256:8d0b4e634534792147a4c394539894f8c1a3137915b9d9dfa60f3a694121bd54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 908468728,
                    "digest": "sha256:1893b47c020cd62d5e1490ef5ea30512e81476b40e32d7f7d36e9fca1475c6fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52474772,
                    "digest": "sha256:33b7a2cbbcf61a06c4af15c4c62bc20d4eff076348f9021e5b43d58c4dbf97c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8454,
                    "digest": "sha256:368a0f26afaac5bf99f79ebd11b29298dbfbe1b9b1fcec3547876a5435093491"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69158135,
                    "digest": "sha256:b659afa6f4a510aeb4f3aa95cae221f0757de593dc29619045430c8d9c629c3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 479,
                    "digest": "sha256:65008a7428120f24f6fab5cee89811ade7dde5b8eeaefa96fa320f673cd89a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954476,
                    "digest": "sha256:b2666c292f308eba0ff3af96a30c90b707c45f6281d9117cd4b2542aab1ecc23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147767513,
                    "digest": "sha256:fb45bf4d380dd89198a214b872fb9a6f91a86e8adc5afcef1df91f916708674b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 771091223,
                    "digest": "sha256:24469059e6dfbfc6b5ae7dad1be33975aadf07660efd6518aec1ace9689349fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19412689,
                    "digest": "sha256:53da81732ef7b353b88e3935d4174fd592b9ee048a532348c1a765e1201e0996"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68665927,
                    "digest": "sha256:be6ea3a9287544641f13231c0ba112b79417e765d7dfdfe7798abd2dab8b1c2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 487986830,
                    "digest": "sha256:071ff65f50f2000a64b6db37a62a624f9eb4ce0a3d0ed1be8dbd739d7cc1417a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21015957,
                    "digest": "sha256:282938525e97de94abdff5574b3717e0cc38adde71f3f0dc42afa9cd040eb662"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1123,
                    "digest": "sha256:03160f32a4e2e31d735e76ee35320ead786cf369201633f20f42ef4af6b45ce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78397064,
                    "digest": "sha256:010efb4a2b3b8536d6f8f499778f7efb76c7f1a1cf1134493e097919eac7de8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465522,
                    "digest": "sha256:a196c38718e44f6009779705d3aeeef68c2d1f544924285084b97ac475bc605f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2357576978,
                    "digest": "sha256:72290741c8ea273ce6bab55acf6dfb4e200a021492da1a562e955681b9f5ff15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:eec7eaf48fe57f7b6fad0baf500b2ba38f09a0633556c6b70d120d2ee16e20cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:89de0a987b534b897aa8b88a069098762b9afa6639dd4f17698c3098d7d3d3c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764992,
                    "digest": "sha256:c65c52842b91cec5683133e876ba870ba866db7a59b3a040cf1f3b651876a2dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129449,
                    "digest": "sha256:2bdc517e07c2f59c9a2d62e573f026bb29730e41b9e151b9232d5e32786eee1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37035402,
                    "digest": "sha256:098d00ccaeeeee2919b2df7a693014657a167e5f783328f63bd414f1499504b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1235531,
                    "digest": "sha256:35ef4b2f9dafab7e097f63c5853abbc720f83b8dd682c77adafe86a9e500df7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4768574,
                    "digest": "sha256:fe63404cd9c3b99d8c69a3b99664c930268ac67847d897c6c137a9f65ba5b473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56639250,
                    "digest": "sha256:4da7fcadef7100d113a054636f001d1d315f55d2a0e016cf04e006fa9a8aeaba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17202133,
                    "digest": "sha256:08cb91192b3cc0ab35f37d8262a82508cf43b09b60c86e7aba75bf92a75687a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152395729,
                    "digest": "sha256:af17693c8625060b6527e90bb67d85dd7180fe44884f8b3c38e635cb5185b8be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15978,
                    "digest": "sha256:36b952fae64fe3be82256d1dc941b5ec9838f055e6e4b06ca3f131a292f809ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510,
                    "digest": "sha256:02dd8ac606a4db82a82ab38acf07248b8dd5fff79856c70911ab567f06ec6a78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214813680,
                    "digest": "sha256:f5027d50916930b5d6e9dea4da9ed3205360e13042040d63df2a0123f0e13fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82693706,
                    "digest": "sha256:9c0b9b63ddea43bd1bcff55e8dd2c3356470415ec7d4e7a95498c9e1f720ff2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 270,
                    "digest": "sha256:a24719cd73112f2de1050320491e6d4b301df0d6b2d325bbc1504663124969d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:0d008f6955999661ece13fc29b4d5f5f1861ef8a9b2467822edd6b0995346f3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2101,
                    "digest": "sha256:d92a2be4e72eed5dddaf03470e4f0a296926a0a29399a40fac1327297dc6d9d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5191488,
                    "digest": "sha256:b9552719cdfd7db53f942736afd58b29f6525b9b0917f38f1fb595a276c24e4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:7d95f9df374bdb234eb0e77b23ab4de1ba20c824b5e723181c249dec6974076a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1216,
                    "digest": "sha256:88bcf4f5e29008ca7b2a864503a59ef0d18de29b46252759a1fa62e704482ef8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 366291986,
                    "digest": "sha256:5b107ddaca9a23d1cda80bda63631419d2287a806444548d38d8b9c6a4e64476"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4426667,
                    "digest": "sha256:741a932fee094f0655393da68678e54de32f6051a440d46ddc061ec396c98ff1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72535,
                    "digest": "sha256:bbf355813da18216e395b3ca63ef242c6133092782a158d7a40a888fa69f73ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:70db4b4397af3919a7e961ec6a08fea3f7b92ef04f9074f043782c3c5fd03fed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4384349,
                    "digest": "sha256:44092d06c9a1ac27e0fc47227bbc78c22395cbd7fb2e75014985926ed39adc01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2138,
                    "digest": "sha256:cded24f6c2e3a86713bf7489d74c4ad9a0602a9dd44af903a1bedf488d1c6d35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:79be89f4394d1d6d0d69bc840dd6b7038b8e8f1e1cd0f751780d21e093605371"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4426703,
                    "digest": "sha256:18310022ffe9ce257e7cf7fdcdecc90895f579a70b9d036185419ce9d7c1db0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 372057,
                    "digest": "sha256:241fc21f3a1ceee1251e4ca84ae1f4a4f59fb09f8fb943d2417007db657f3099"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187999,
                    "digest": "sha256:13cc14d949ba09f539722907d66f59529ee8be6429f1d90b29fec0bd1fc18722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4865372,
                    "digest": "sha256:91464708db9d10ed3bfcc2c6a321d94aac4cac25bc49bb4d5f123e304d8b8225"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 213,
                    "digest": "sha256:b437cb74ad8b87ea36dd195b455c3c6b698e5f3658e7c14fc124458728e74078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.04": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 52797,
                "digest": "sha256:fa048266b337ae6c80c0600d1cbdb5113e478eff54cf65f426d146be5b9eae02"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27503825,
                    "digest": "sha256:06d39c85623a79eb68b6cac39f4c4aba8834873ee5fc27be9d9d7655e6313c26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113141033,
                    "digest": "sha256:5c7458fe8983f363fdd9b19b85c287f67d15e60c43cecf540e4236e6ed818de1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145513419,
                    "digest": "sha256:a7ca97ce2d24fdde9576a337af1268a7aeaf4158605919ba40b61fd4f40fe986"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15123,
                    "digest": "sha256:58924ebdac55d89815f6accf8b6c0f8a73fe08b7e543ed1dda483c3b768f24d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3022620805,
                    "digest": "sha256:d1395efcf841016ea19ce795cca38b18c5fd560e707229be93cdeb46005ff7b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11546,
                    "digest": "sha256:1dc583789502afd33bd64e15284b566c744eb8e9fef1557626c7d36294e8ebf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188,
                    "digest": "sha256:b99d6fff5fa47a385ccb1d7a859d4fcbff82d20d520dfdc0abe0ee84aba0aedf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5723,
                    "digest": "sha256:cf650b3146a40cee51b7e4553a037318bbbf5fedeee84fa15e6c3aae5717ddd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139296,
                    "digest": "sha256:f44bb4b446643ed92a347250680f10b6014e5fc5b2b85cdf4759a5b65eb2e6b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40807206,
                    "digest": "sha256:3d76915b6a0b0845e2013682ea53b05eba213bbe995a8b20879af38abdd4b534"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96182871,
                    "digest": "sha256:f55fb0716f11d54bfb3f292d3289d3aa33fed59b658e32afb712c6516e4a7f36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:c0e27e5c9220057c7011ac43f0547dac4a37e1466ec786d4a44da80d43c74837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491288600,
                    "digest": "sha256:6b494aa228ed6e7f85540cbd1ec2bbb6128c0a33781c4839f3352213878328ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27287263,
                    "digest": "sha256:33c730a3ced43f856965b294fe876c2a3ccfbf73db40bc1c0492b1e7c4551150"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54811048,
                    "digest": "sha256:09388cd61ff2f6d096e77c052b1993abdae98568087e8eafe6f1c8d1092d0aa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8953918,
                    "digest": "sha256:0937006b376a280740c6179861e5cf81a73f4ebc13442f500cf4f986e2a9a5e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27482840,
                    "digest": "sha256:2a752461252124d02b2f32c57c0a2ffbbcf1ef86c42ff742cf4ffcf96183da4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12337201,
                    "digest": "sha256:416879bfa209b2312f29e12f7f885692a6ff83e710bcac440cb5dfdc6adfe003"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122,
                    "digest": "sha256:e80a0ab67370233351b17447097517a394db5086176ddd1065ace441e066aafb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362599448,
                    "digest": "sha256:cc97ba1f64e15785455990cb4cddf312a1a718e533301a6f17aa76b10b112874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 908543274,
                    "digest": "sha256:00b29a40956d23105d62c758d2fe12606ec5b30bb41e14aa3ab4602c66675806"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52730183,
                    "digest": "sha256:3cf472ca23f6e8fac2e51d122abd8dbe41ebc309f487ee45019a9b715fa8efaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8447,
                    "digest": "sha256:e96e434c027919c7bde041eb038e74fcf40e222a8f18fdfc0bbf075bd07261e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69149372,
                    "digest": "sha256:7e67235d8e4cdd23d07e9191c18d62c5f41cdd891354463b72d6c53b459bf6f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476,
                    "digest": "sha256:1f7cb8a7c1ce01b2005dc1ebc5938ffdd7aa6875d2314b60172b492cacd6a10b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14954475,
                    "digest": "sha256:1b5fa9517c4d8cf5a7f1882f6716ab9f1d206848e227b88940d481440bdb3a19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147768789,
                    "digest": "sha256:eda5f8df1361572d8242e3470d4cc92a71f040f04a26b78c7823225695e8ac7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 765361001,
                    "digest": "sha256:c52fd4578a0b4e675664c8b26e421e97b62141884179eff75a810c0c9b3904db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19473534,
                    "digest": "sha256:9268b4d9d604fed8a7e6b5258b53299f002c96170c5ef13b07a1216e0dfad96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68670453,
                    "digest": "sha256:8a7c51d733b68ca6336c1d1d6a5b5a99d1ee43b01b1df75bff5c7930fbd93743"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488049048,
                    "digest": "sha256:4f2629a6150cc0ac3933a4d86cef933b936f4fda95e0bec96ebef376063d0f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21083406,
                    "digest": "sha256:6aed1e3d510d803fe2e3be737014ac68570e3625e38b6d0c4f62a67fd9c80a2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:2fcfcaa4da486f2bc2b4388b0972525ee37e5d974f7d5c4d019d6ca4943e3f70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77488219,
                    "digest": "sha256:3e111926c66dc15c01aa66ece7da37e7ea42c2492611b1679c72d24c924666e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1465752,
                    "digest": "sha256:3e0ae795173b442496dfc9d3eb49cc4c661e0f525fdfb54ea3f318c72f72a211"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2389729143,
                    "digest": "sha256:b8f2aaba3f33871ce8b86b8885f855c92237f63d1bebae360f658d187c9e22a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:8cd044789f4b9057308a7e5ac5b0f41e2b7b3b0700990b38d8ca910780a939f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:faa0005beb3c3428959f79a0b04176a52c060dceda23f1a20ddd769c5389e8ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764997,
                    "digest": "sha256:6c6e395ae0b14e84d96634c73315e6f43eccf442ade1dd49b3f4a531fd26a6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30129420,
                    "digest": "sha256:e96c397bff8e9347dd8c034049edc02e52350ffa3dfcbb4508f2031595b604ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37035405,
                    "digest": "sha256:70d59506f359a733103ba9c8bbaad535938fd7c838e6e8401e21d366265b790b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1565624,
                    "digest": "sha256:a7cf2142ef16cd804436b3c783d0122a561ca222afa677944eaadfd412e2ca51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4773785,
                    "digest": "sha256:20541973d747d0655865343a5d21ed4a7a4069ce72e61912f8737c5106b41316"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56648564,
                    "digest": "sha256:d36d17582a7046455e465959d5759ad799c463221e4739b409fa7f869ced400a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17342239,
                    "digest": "sha256:8a7814a18156e5592abe303117e56f516e71da7554b37ce15c387e2216d107fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171088148,
                    "digest": "sha256:a054355b9a82f2e1ec04783a5b974766d59df6d3f88d63baa78b8690f3bde022"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15889,
                    "digest": "sha256:1cdabc0ea87d123409638d00798d337e2d42470fe6a3b540b4daa53e6b879cd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 507,
                    "digest": "sha256:bb48a35e7cf2d571b42923475d214ba83b5ad606621177863ef89435b53fb161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231413141,
                    "digest": "sha256:f618f6b9996c14e7f669af256bc2575b6b0ae2409b62f55141b66bb5bc45cd65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82894413,
                    "digest": "sha256:47cf68958f9e3bf45890b1e20b77bb5a7efea0fc179f8d3583d8a4463f64b79d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 270,
                    "digest": "sha256:ea55eedb9833333ac364bb2a02743daf2ca9a739ff123692920d38352a094315"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:eb67387356e9e497709d93de2cb962ad7bdaaa203c059b75ef95c06130155966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4324,
                    "digest": "sha256:65e8490167045f6bf4cf531e9aaca3f1e15aceb84313993148c5c6e91e542c6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5191827,
                    "digest": "sha256:1bf9411e94142dd1041ef95ecffff0f25aa9550e673e566997a0f8682f3be589"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150,
                    "digest": "sha256:b45b3220b426abc75eed29553dca341a1ccf201ef09632926c04161dd5195d0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1230,
                    "digest": "sha256:57c15779e156eb492c7bf8c20cef11b2da7a001b2674614a2bd301aa24d8072a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 366295533,
                    "digest": "sha256:dcc2f50b0d65eff620bab3ff061af3db3c3182710fd3ea08abb873195b97486b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4447875,
                    "digest": "sha256:aab4d804adcabbb416e00c3652d82f6453b8f84762ce99ce1016c074da41a8bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105426516,
                    "digest": "sha256:af9434f056302923ae2fb37404fd19dad55b8bbf81aa0286a005089b7624b457"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:372ba9ae929c69a9ff2d7e746e1c7ed2a6fc2bee258c0d0777abc8778101dba4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4286010,
                    "digest": "sha256:5ca1422999936a740e57b59a65afa5530735b9c1769b1091f80468e0306fbc40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2128,
                    "digest": "sha256:96b032331350dded83f361119c87a2adb1b85247795bbc1dc20dfe9115725e11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2cdb8fee95b773e3d0cdec0d1255d29331725e1aa332697cc9fc6939474ea1b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4447830,
                    "digest": "sha256:998de6eff073656513c557ff24ac2248c14376641611244a08e2b04f15333897"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 382926,
                    "digest": "sha256:1da101f21b1c716437c295de2bd22c557c5028e6cd7d4842eaf3a43639a30671"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 192974,
                    "digest": "sha256:afc78e299722941d2e7fd93b2bb3642008d3a93d2608f0f88b6f9503a8a4ef8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4874554,
                    "digest": "sha256:52861436396bcb18d9ed18172d8ef5eafcc476e801bdec4ba3cef4c0230bec38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212,
                    "digest": "sha256:b5f078e24a3d03bdb2526725f63ac7b939ffd529449e15ab9391d126a72cbd21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.06": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 53519,
                "digest": "sha256:ea7edcac5fc693f70269924e48d62d5ba28abd9156c65ab680bdd211171bdc5a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29533050,
                    "digest": "sha256:6b851dcae6ca1461dde247915abc5048061f34332929ca8fb37d9dc18f2e2f44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128350364,
                    "digest": "sha256:8719e9b2cc01fdc4b095eddb255ae0161f92cbc22fdd066a5360d7c31e83f73f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145512856,
                    "digest": "sha256:0c05d0c38245e1ef7babb1a68576b5f81cae853973b07d06aaa297b1324192ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15102,
                    "digest": "sha256:d948c55effc889da7891cba6a4c9bddc1c69acca6d8de0bf8af9ea3b8f93a5a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3039503253,
                    "digest": "sha256:e017cdf4a85939a9292987a620c8737d9dcc898875168241d1ae12d496a2612f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11529,
                    "digest": "sha256:b83f40e94eb6d25dcd5a4b556ca38b101f72ef2c7c7a8809299254d295f45af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 181,
                    "digest": "sha256:0c76b157a3dd4d8ecb38fb475f00b8752d385210286d26569132f683cfb798c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5720,
                    "digest": "sha256:80c3573986ca9d2113a47cc1ec460a04e2d3bec83fd5a7fba72cd2e014fc9450"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139293,
                    "digest": "sha256:e317cbf4e138ea7f958db9297ee14dab9815cec0792f12c1d22d60940259492e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31347034,
                    "digest": "sha256:54c6343ba9f287165ca54c36ed2f9ff29df5ba4dfc509ef36ebedbe089fcca24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87012048,
                    "digest": "sha256:2de88a5e16d58df710cfd33927601e69ca6ccec18a342975fadaa89f1d5e41e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:858ee3f6c9803a1cd071fa2bea168b996b73e32866df5ef675f0f7c49f4dc7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 454623229,
                    "digest": "sha256:662bcb3357cb7c461b826cdff11e06c202255b9a070656931a12446e893fc909"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64449950,
                    "digest": "sha256:17dba187f13d26a13e8d7913472b64ed4996b89419ae913a97db948aba06f155"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8358239,
                    "digest": "sha256:9e0a74ee0332c125fe67d22eb83e9a563fea0e2dba2ae61a4ea02b19fd88fd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27565400,
                    "digest": "sha256:1d79cf5d7c1d944ae355b1da9e2d6b41180c2fab04f7c98a4740e128a3f69147"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12358717,
                    "digest": "sha256:297a6e079fb2b45ceef0eb8483f06fec829cc2ec66efeffb8d561e13a83aca40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:fde8394cc9aa91e4f79809ee9df6bb34c5c064ac83d2f2c545bb5ca152df4383"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497436014,
                    "digest": "sha256:4e33ad748cb4becb5f4eb5af0a949c9c50009650a8508c5e67bfa60edd9facbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 931757956,
                    "digest": "sha256:37bfb9315dc24d76a30f558cb9f45d58e8dfc5855e2bbee4773e353789e6ad4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53288553,
                    "digest": "sha256:05154722fc968ba34496c2f1c2868e9ed574cfb82b7e588fa7d92552ab539003"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8421,
                    "digest": "sha256:f916827cb9b51a7254c1050a5cda8b70fd3171532d4940d8a2a52d94d4fb1394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69150375,
                    "digest": "sha256:212b10a1c645f9071737f3cf098834f95e4f291af0c8a60cec45be7c4170e9c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:5d60b9208e580c37ae5f458e778abe75ffa2118b864eb492c50fc70169e1fd8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15078031,
                    "digest": "sha256:864ed5b53a2dc3408ebb45a40d8ae39755c90e7ca97d2db73c3ae52effea1e03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146639158,
                    "digest": "sha256:93ed8dcde8fbbbfc4d066caca50f21465806b9082a2eb6baf1c6f4aeda43de71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 815799664,
                    "digest": "sha256:a6f36aac2ad3f2f7c4dc2aa231600e721deabb5f99acb9d6b40f7d67f47c09f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17842599,
                    "digest": "sha256:c1caf56356e9d673a0413ded977b41510432ff51932c9d807831a7fb62e4e60e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83652178,
                    "digest": "sha256:bb2b3238237c7b17d36bc7d6ec1916a903a3df61fd1634545960cdfba7c21182"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293309295,
                    "digest": "sha256:e7a7b75250c71b418127ecf3e5a6feaa88959a7062bb109f8e547d28bb2189ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27101971,
                    "digest": "sha256:a81a845f3099e335a8304bc4fb32cf2d64c33d3409f3399380692b54293e31ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:5270b2f7f1e470a230b9f1af932b4ac72ef67aa3d02d5058c1e7dc8374093ebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60462709,
                    "digest": "sha256:0967e8409f813be8020c2cfdc2635fda873f7ffcf272af7aeedadc7a2fed6539"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1322122,
                    "digest": "sha256:998adac79073b0d82167383ff30723ca7c63a749ae742c930017ecea6eac02ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61711,
                    "digest": "sha256:27bcbf63d2175678089a197159d95b6750ba31f89deb7fabd6098a5fbcab1a37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1853146051,
                    "digest": "sha256:ae8fb89a6a57890d4ac959ff7203258201bfd682ff72b982facbf94e4c7353a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1121,
                    "digest": "sha256:15cf804d2c1ca4e4c967eee8ef1c9bfca668ae698c489fa070d6e6da1a921508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1025,
                    "digest": "sha256:12660d5ca4451c1dea14e2cfe2e91140fc732fc3d81fbc9358499283e9729389"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764859,
                    "digest": "sha256:3b7a4fcd3ba5cb67c5a07f5a6530f2ae5dd3a007b1d56396902bc75609e05811"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128416,
                    "digest": "sha256:438e6e236632ccc883b2414df74175026ec6690463ac7bcf3a2b727013311732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033404,
                    "digest": "sha256:a3d5e204aa86f833908ac04d6e2d783d9352cb9ef069e19167f130cf873d5a68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1566976,
                    "digest": "sha256:e4d6369088eedf718bce5a35b21996cb29c982c2620e9e1d397162f95cd1078b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3658300,
                    "digest": "sha256:f8dc86a7048acce52210a7bfba04c746d2e2fac1e70074e3f307972291931280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56687835,
                    "digest": "sha256:8a84aa6273d98bce8598f0770a527cf7c7abe14bfd928308d2b8b343acb9d3c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14814901,
                    "digest": "sha256:ecabb7348d02916189c8c9987ba19540ef0f5112b0b22c1c633716144551258c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172140844,
                    "digest": "sha256:32f66a2d3640102c6d37720638ecc6712543eb79d45f0f06e3560cf997412886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14684,
                    "digest": "sha256:f9168afca1721bb2304a2ffca07273123982fc4dc0ac30d5085bf8cedf347920"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 504,
                    "digest": "sha256:581656619a920f1d657a3a6800583b16061293ef5fe1c6f026ed636016ee5787"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 212558669,
                    "digest": "sha256:ab4d4ff037cf574103bfa7da62a7c2b98bf2b1de6d6a2275469676d84e736cc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72681302,
                    "digest": "sha256:0c4d61305a1cdcaf0a003dbceb0c40d3b79220831614d3a35327d1f6c58c33cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257,
                    "digest": "sha256:64d883207fc0bed9b977e8cd765cce32f14f5e8e0c9c4edca86d158f7668be25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:970c6508a496d5b48858c211785ef3e8159503abb8f0eaa62dbc8364c10b6032"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4322,
                    "digest": "sha256:979d6f8088ad823be83112cd6805f12124dbf1c2fe77ed5c5bfbcc7014361bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5211809,
                    "digest": "sha256:e5449e16f40445cd3a0023bc6671dc2e2fc340dd6b48be5d9ecafef016c9754c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:5816cfecaf4dcd6e0dc86ba33c43b48be9cfe40f492fc794e36d3512891f30f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1217,
                    "digest": "sha256:f9ee186d5242472493eda05541fe9ac7b255075032ebd4fabeda55742c5c3c2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 361989414,
                    "digest": "sha256:8ae1dbf00537c945f3cb2c81300224faa52c2fcc907c1638dc330b61801ad910"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:c4ffc79931da1bfeb036987eb463cd1270f4d052f5cdb6f8fe6648f00b971914"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19260841,
                    "digest": "sha256:b3b879aa4cf80919b48509111c2c187184b0349fb94709dcf801373a9522bbaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4452740,
                    "digest": "sha256:1999fa08ae5b9c9cdf70bf89738cd4415004735b86f54f4973facdadc3c62df7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105178951,
                    "digest": "sha256:cff1ab74bc1bbe78cee9f47b5ac93b18e42149f5698e942e75a4fa014da90a9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1662,
                    "digest": "sha256:d4bed032d5f3d353a4e4bcf5cd95be85104b8f7e7b9f0ef6c26a9c85a8becff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4495154,
                    "digest": "sha256:e36553083c45b4732d51556c15ae957f9c2c338ed0c8fb069baf3cf6e6e8c258"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2121,
                    "digest": "sha256:5fe5f261e06749b5a7a86c3e9dab58027a98c5d047c123a513c214be5c1110ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:06d97416d9cfaa8d4687aa1f541d14367284c45d7f5bbbb3fd43682579fc7f1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4452733,
                    "digest": "sha256:63059b64c244c36dc0313aa2224ba7f7078b83d7783113be88de59cd7d4af2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 401411,
                    "digest": "sha256:87b06c419e9e976a3434b76c8197b822ed743eae18201d835b68bd4ea2a78e81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 207701,
                    "digest": "sha256:73d581b6de7e68bad69db8842cd6e6fd7bd3981b79ecfce404c7e41502e1b510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5168018,
                    "digest": "sha256:e3c3e6fbf7471cfdc51bcc3d18826799c705c98f137af0d4833e3a81f633c508"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 207,
                    "digest": "sha256:b586c95f53696176a3c729d44dc65dede7d378934cf5cdc82777e8a7f7dab1b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.08": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 54742,
                "digest": "sha256:a87f95dd6f8636e86a20708e83f93a1105fbc6ea878acf51ecc21e9ba3d127ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29533422,
                    "digest": "sha256:3153aa388d026c26a2235e1ed0163e350e451f41a8a313e1804d7e1afb857ab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128730015,
                    "digest": "sha256:0ec682bf99715a9f88631226f3749e2271b8b9f254528ef61f65ed829984821c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150070616,
                    "digest": "sha256:9ac855545fa90ed2bf3b388fdff9ef06ac9427b0c0fca07c9e59161983d8827e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15107,
                    "digest": "sha256:0a77dcbd0e648ddc4f8e5230ade8fdb781d99e24fa4f13ca96a360c7f7e6751f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3022821480,
                    "digest": "sha256:0a1756432df4a4350712d8ae5c003f1526bd2180800b3ae6301cfc9ccf370254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11532,
                    "digest": "sha256:e9225f7ab6606813ec9acba98a064826ebfd6713a9645a58cd068538af1ecddb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:5b5b131e0f20db4cb8e568b623a95f8fc16ed1c6b322a9366df70b59a881f24f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5720,
                    "digest": "sha256:238f69a43816e481f0295995fcf5fe74d59facf0f9f99734c8d0a2fb140630e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139293,
                    "digest": "sha256:4d04a8db404f16c2704fa10739cb6745a0187713a21a6ef0deb34b48629b54c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31356948,
                    "digest": "sha256:7852b73ea931e3a8d3287ee7ef3cf4bad068e44f046583bfc2b81336fb299284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87012564,
                    "digest": "sha256:3e3e04011ebdba380ab129f0ee390626cb2a600623815ca756340c18bedb9517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:f608e2fbff86e98627b7e462057e7d2416522096d73fe4664b82fe6ce8a4047d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471384332,
                    "digest": "sha256:2ad84487f9d4d31cd1e0a92697a5447dd241935253d036b272ef16d31620c1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132849106,
                    "digest": "sha256:a24ac4dbffe89442eb59467d7f2f54358e0b8a3b1411598f09978303baf1f0d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8438120,
                    "digest": "sha256:681008e40cf9ae171ada70a6e3d03ed7e49a40a3f087e49e3937f6bb809fa7b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25426027,
                    "digest": "sha256:693ca498adf9732a3ab8f609e67e7190b97d3cc9f89dec0b481bdb2727e02246"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12725779,
                    "digest": "sha256:f82403eb7b835b5d0685f63e79528361249fb5139aa8d1c7c644fffe59785b09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:8035aa77f7fb3b4ff0af6169d46d0fb192e5150c94e6ab4a1947840aa0d3ccc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503005342,
                    "digest": "sha256:19ea29d74e8594a133ec0d391359f5c1312296b75461478bbcc9f326de3085b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 935470511,
                    "digest": "sha256:497e75b3d1c5473a012b207c553f76e4b11419f2f2f66bbdd07017435dd84957"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54433436,
                    "digest": "sha256:e4cba662a9603ad133d46b375fd6a4160a906db10e6107b91c9eb753ba97903f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8417,
                    "digest": "sha256:2173aa6212b2f08219bbca89288f81bd7bd7dd3aa07fd0b8a78b46c145955f7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69155902,
                    "digest": "sha256:bcb3f16762beaac604eb8c3adcf64f8e5135e6112978ba328e728a7d5db1f353"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471,
                    "digest": "sha256:9d99671cb5957d3375832ecb79926b45d2ab6909598a347cf85295a643e5ae16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15748524,
                    "digest": "sha256:05afacb5fb85363abcb75841dedc7a315bc7ac9e7492bedc5201b3531cc437e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160415726,
                    "digest": "sha256:f09998a3d18e2250d0fff3115a237cf718c116ab2a5ae6ae032b560a2aabe5b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 873460727,
                    "digest": "sha256:ba56bd485673e44a146422277ac896a790afc372443156d6f3ffa126033a97a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17843478,
                    "digest": "sha256:f019b2fd493daded8fe7e721e285dcfe80b4d3823a8cb909b98d3c21f2aaf9cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87839905,
                    "digest": "sha256:0720a06920d50250ed9dba508b57f58f81572246581631c5612a0513d67f1b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293822273,
                    "digest": "sha256:b40f7980fa75bf5aeeede320a688926b08fdea7c9bd312bef455d8e9a903bff7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27414948,
                    "digest": "sha256:458f02c241a1f79bf9d2dbb779985390db262841100baf2e3429875244613455"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:3e36ee182e799cbd5b74b71ae7298354e127e5a2f4f583c566c92b0eab6bdf7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 247182470,
                    "digest": "sha256:6c9f88339e6283cb72af66d47db4818e17155ef072be34fddd0df91b5305de52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1321965,
                    "digest": "sha256:662de590d31b6645f45ad59c5365f5dac1ac00bb02a6da264f988e43f595afb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61689,
                    "digest": "sha256:84f7141bcb6754aac7af7dd823d24e06d6b849342db5940caeaeb77b08e27258"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1600518160,
                    "digest": "sha256:ce782753a19f67a2c94eefa0ff3dd560a4b847462aa95eb2c82be662dce4b132"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1119,
                    "digest": "sha256:1f0730ed36c9d3c7736480a3c5614c1e5b1e70c4d01930a6ba74ea26dd12aa1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1114,
                    "digest": "sha256:2429a42968794f8b47d27bed008908ce7ab2c929846e5785479b6c88b6931d4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764859,
                    "digest": "sha256:ca542a4bbaaa45384d2576d0d8fb208aa5f4678684da8a2a3a9c314e8262f4ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128391,
                    "digest": "sha256:c9a11388a8b4c14532e2ef45283b92582d2d01f6030959168b832c283a1cbc1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033476,
                    "digest": "sha256:3f049e94611fb011ae3e8865113e1455efb886ba11ce121e4e078da9d6d93dfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567238,
                    "digest": "sha256:cb58d08aedd006d55c74a355577562fb4f764314547665c34e29ef6a05fb5264"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3659140,
                    "digest": "sha256:16f4133becabe75d195fc9c5f9ac7db98867c803774b27edd3f1c80c9d7d7606"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58811191,
                    "digest": "sha256:0287752c8342c84aa714834c11878658599f7c2f7451ca9cbf68fd42fb9b24c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14834209,
                    "digest": "sha256:0426922605a82712afd675cc35f314717eaecccae97af0b47c4de425a02c4ebf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230686835,
                    "digest": "sha256:86ea29fc5964c78eb93fc15cced07544d0a8372879681c1fe71bd265b11e5df7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14550,
                    "digest": "sha256:7e63c04b708a3fbd958517608015e30f7098452f74a0b5bd4ebad0e5fe1fcbc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:756610a546ddbb6b149e49aeb67381d64929f093baa84d4e5383e894fb60732a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243494527,
                    "digest": "sha256:85f78399c87909382cac1f9e69b46b452621c4593d5655571be1fc31103f51ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7019184,
                    "digest": "sha256:4e3416d4ba930b7e57098fb38093a2822ecc9d5a5eae09c235e11d9e52f7e2b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193153616,
                    "digest": "sha256:6cccca6997230e92fa9d9f97246fbef68031cabe32d2ecab7bb5d2b43ebfaadd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 304030775,
                    "digest": "sha256:578a8879e093ba32e109b431631ab949953b84f1b33fc2b2ebe0864da4f54038"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257,
                    "digest": "sha256:bc0c268a705928b9c2174a8b9ae02f19947c6fc89dd22d1c39d200660d1f083c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:8918380033148395ced4a84991fb93d8c138a77feb7af1ec89a5f1a7bc47ec73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4332,
                    "digest": "sha256:bca8a34b4e5c16c44698682532522b60ec6afb2a8f4267c5e234556a60036810"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4189856,
                    "digest": "sha256:de2b713b33a84fed997ef6ad28109e74c88c4ffa62c9efa564bf34a79c7b138d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:ffe636635bdec37b9efbf35f9f8e257df7eef87b262590fc7ea56eb45e900a66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1513,
                    "digest": "sha256:c49c5ee5c9e24b903b5402e03bb7fc4503b5b4888103ddb1b2f41d5102ef2bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 376038094,
                    "digest": "sha256:ab43302a58e459d0bb40f602b44d28df7db48f543d199565a4d0b893221ccab3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:96b70baf189072dce5b2cfc37035019ed5fa6914be48aca0762232abf18dd9b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19260872,
                    "digest": "sha256:e39cef0552d017359642751a0afd457ebda572c128b18012e45c8c2b15ede0a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 346,
                    "digest": "sha256:17d36cc551971a5949c5d76128d672d20abd6101c9abda4fd0c7ecd97ff8a246"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4466590,
                    "digest": "sha256:b412d1459a2e3cf59e9fe2a17c622e59799d89f73b3ae1b86c75b2719e6b17b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:8cc26c59476807f285b2164246af1d2825ab23e41c7967b7c84100f73542148a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:bbfb49d5ce3ac84d4de60c842ef4c3a5e66f31ab71e0c5c233b8210001d1c6fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7087845,
                    "digest": "sha256:8edd2d9b60747fa1e9c608326766d7f3e02a15f9bfd009dd2a21bb4ced99c8f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2092,
                    "digest": "sha256:6b38f974016bce2dfd339e85fcdcde7062ec66b048874d9c1f6e9a337371a5a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:8b81479dbd4944bc5832c76cb41f64cc218e15a7048d9de0b04568c557bc1b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4466616,
                    "digest": "sha256:67d18d4cbd718e4807eeb5ba9349c391225bd769313222edb357f117e6bc2fd7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 422184,
                    "digest": "sha256:b77128f75ac3b34f7a42a9faa87ae55b1fe4726701a6d038fb978ec8db934bad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 218272,
                    "digest": "sha256:2d246e2360d668fc13e479699ff6f26f51ec2c6597ca31796abc1bf3d11260ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6678645,
                    "digest": "sha256:ba4443e94f4caec34676fe880001c388f6994181de350b8b5fb663c6b068b4cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:7dde71ae6ab1822fa1804145bdf19bdb397fa39ae57c8c353871220ce7355c6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 55568,
                "digest": "sha256:38388f563c90e35027ff11905943c5257da7259a79f09d5f7af2eafb5549c594"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29538209,
                    "digest": "sha256:37aaf24cf781dcc5b9a4f8aa5a99a40b60ae45d64dcb4f6d5a4b9e5ab7ab0894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136224298,
                    "digest": "sha256:c15d1d6b2c114297f644c2ed4772799b38a8f40e9c5c316aea8d32f9c2e1039e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150210130,
                    "digest": "sha256:7e97a8ec568145d13fe1361d6e957c941078dcbe2c4f3c4a916efad7f3e87592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15091,
                    "digest": "sha256:894330fe1bf5277366684663ba1222c3cd19b914eaed29947e6b1cafda6d5f69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2950366558,
                    "digest": "sha256:97707dfd1d405b5040d502a602969c136df40811f7d2b4f44bfba8c7faa2426d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11527,
                    "digest": "sha256:d69ae92c3e1e3e003bf7b23a721ce78a6bbd3cf0cb49118a338433b5376cadc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:a013d53fd443ea0742f7b19675e3db292c134cbc653e5690eb209b2419d814a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5720,
                    "digest": "sha256:18989d23e6f7c4d738325a1b570ad544de13b4310a0ce86a2566d48dd9fad88a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139291,
                    "digest": "sha256:53638f96ad3cb41733643e47aed49d72a800a4fd799663da1e9ae65be8257ef4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31355080,
                    "digest": "sha256:edbefd2705db7824afaa7d954ed6c3854d319ee9d8a925ce7368d33581a09838"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902206,
                    "digest": "sha256:4a10dab4bd4c27d1fe970f310b3700c973ffc7ffeabb5f26cc6696dcc0fba084"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:7ee32cc2089fcfd16a6865688542cfec9d61a5dc84e1e3263cb4ca92911e4a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475739268,
                    "digest": "sha256:91eeea9164ed8b38d034a48b8982f881d4e96fdf1c79e23badd50c2f564994f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560340,
                    "digest": "sha256:7aa5209b2eba60148b1a27de97e03913cc61d8da572ed740bd62bea352ac92d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8444428,
                    "digest": "sha256:6729082aba49d6babdb44b2a80c0eecbfdbb9c787e6e9f652ba937fd9a0bc097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25445229,
                    "digest": "sha256:c926d5f5cde0c64ea36258fa3718acdc15a7311cf35f44b561f46811312dd0f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12725799,
                    "digest": "sha256:c8a736dc04ec201c0ae6dd2f36674af43b0ab172c57ebc7d6b82c0977d664585"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:07cf6ce1eca776bd0f4178bcbe9c2d11cecc90478e503ab4a61a635fbb5ab8d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510393919,
                    "digest": "sha256:9c90b8728b50e088113baf93d21e581bec158f2def94463e2c9808f5055f498b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 936962728,
                    "digest": "sha256:ade437946b14d35a5a0cfe69f3fe0fee4e40e33c82243655d8aec9053188d438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 325,
                    "digest": "sha256:5e8709f8c02d1f5a4aceaa923ae0a396f14e6a6871bfcab5b2db55b273c38aa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54920951,
                    "digest": "sha256:866ac4b0341d94c2730c2a3a824650a43cf46befd5aad3a84ea5e232792abf5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8420,
                    "digest": "sha256:9d3d147186f3325255dbbba859d7cdb8b46bb30918570268f8c49453fdfb310b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69251646,
                    "digest": "sha256:5d57a558faf6957d617221297fec1207a0f045e108d9a95ea7434b9a1a0623a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471,
                    "digest": "sha256:1373dde86157832732ffbc4e049bcda5f4e7cf25d9f807326729ca382f15f52e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15748557,
                    "digest": "sha256:ad53f9124ce24c2574c7762fa7e4f5b6c94b3fcd021a6b1f13325988f12ec5d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160415215,
                    "digest": "sha256:9f11293d3693cf42102cbd7384216e17d9954a25443a4fc37127e56747dc4ee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2059445898,
                    "digest": "sha256:7d470bc79d5a694f315fc5b294e07aee0d6bd6a1fa612b6cd9f6911a28c64758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2395,
                    "digest": "sha256:cfb097252e126d5a7f17dab7e995595ae6deb6c943dbc6b001c58dea4595db0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90614823,
                    "digest": "sha256:9d44a7cad2d3af60e667ef832878cac2db42d63d4a944fcaa4abfd2269f1ee19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294955465,
                    "digest": "sha256:8771942f5e66ec6ac6b62ff204ce1d4aff6b4c0be6d18063bb142092e43a3aa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27717362,
                    "digest": "sha256:3660958c4b05b39e6ba43bb0dd803680c3a3b8070ef6432de9f001d3a1773160"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:ee70577cbd50a6d19b223540745a40a504ed6ef7dbaba0ed4972d7401bd77e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 286623254,
                    "digest": "sha256:264099d0635475a8c3c38be1400fea6becbdd01b0321ecbe0dbc06464e4cbdab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1321965,
                    "digest": "sha256:1cd8bbadca178224b5fe6f8dfdcf88d7ff0b8c555ce1be8bd9aefdb38514c85a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61683,
                    "digest": "sha256:c39a5d65a5d5584150cad4100ecdc7aca5daa742eacb2a94f58b0ab90ab861d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1734252228,
                    "digest": "sha256:7e732042875703c0c7a9c7b818b35054e305a8bd4b76d282cdeff2bf1a785577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1123,
                    "digest": "sha256:3748e1ef72fcdd6f237b76094cac5e89820bb7418336b30111f5cb90d7be7a6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:0e694a487f92f8d06670d7b1bdc14e425df88530b67b9c9edcbc283078f1901d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764858,
                    "digest": "sha256:e37baf71233c0f5202fadc988ca719108dd6ce3d1628bab83e7140231a9caa63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128435,
                    "digest": "sha256:0408d58f5552e2588c8a6f8a8893b9e7f9762245f9e7bfbbb22294ee5f90b6f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033515,
                    "digest": "sha256:d53c1741513161f1b0b8eb6b83744d8c7dfbdc681bea9e2b43a36df525b10949"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567238,
                    "digest": "sha256:b5531652875768de297f0bddd916e29ec3cdac29348c6f3bbcc8aeaed6025530"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3697334,
                    "digest": "sha256:2285bb2a21912b0ab01b51202c27b6ba8da59ee23d172da0b678e7562426b484"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59128994,
                    "digest": "sha256:1ad3a5cc468872655a93fd7056ce06ded176171cace0508b3893b3974882ffb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14693077,
                    "digest": "sha256:776e338b632ded0efb5c5e04d003b532ee4a100df677944ce2fe37acfa8a6cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121574430,
                    "digest": "sha256:cca7b16b7b04086bbc5527d28746b89af5694c986df15258412f9041b27889f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109113775,
                    "digest": "sha256:9c55ea83da607fe99cb12529f378dba3c7944755a867887ff9607e7d39bd56b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14213,
                    "digest": "sha256:48bdaee6e86f6b8a8bc01949cf837bd9b4c4e75ebda1b426718a37916831f319"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 504,
                    "digest": "sha256:77ee12f01893fa11fc0d3161c0d03642ce46541aea75f1aac4fadf6db964e292"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 270003137,
                    "digest": "sha256:e8cd0c1412d0d5a92334b7095c019ef73cd653197492ba76342a63b1a7b42e63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8048286,
                    "digest": "sha256:483cacfbf041dc3481fed1fb5b2e4e25f1acc63c86ba442d5e3d43dd622c8174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202196075,
                    "digest": "sha256:a1bba75ee1521e9de544735e0b48c25a690507c53d38264d4d0c33764c89b516"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 307693783,
                    "digest": "sha256:fbfcd0336243c2173963e74fac1f830836d69f6cfc076583da819666b2b916cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 258,
                    "digest": "sha256:d4f0a11ef252c10588a9847689e580202713dc4f56f729ffb09bbada2bd0d42c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:69fe3b1baf3d19d82b15a45de6cf64a9b17d54b4f2184a7577a7bf82d2959ceb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4992,
                    "digest": "sha256:c1ff321cce3e0f87f32c9619ff74b78fd15ca91b0fbd0f52176be885843f7381"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4458326,
                    "digest": "sha256:69dbd17cfd2a232229b849d725eb821bfa1b8f80155d8627d2c8e63d2a390063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:7797e61f5efb6a81e69dd33b94d39754756aa1a7f34fce4aa26b5496d083c6a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1424,
                    "digest": "sha256:35a464ed648fad506aa581b6c0d0c1723bd555ef52d30970dcfe4a3112ab53e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 399058322,
                    "digest": "sha256:b9c50bc555aaa1adf840376687eb9049efff7e17819e4919f80705748a9ecf3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:91e3a871ba636464beab303d510338a9ebd8b5f862456e3386500c876dcad578"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 346,
                    "digest": "sha256:c66020e313d3259d45b816556527208206aaed72a2a1b5d8824e378fa3e87c20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4478622,
                    "digest": "sha256:3efdbeaa085b73eec9ba1101bcc86650326801e5ac574412e6d81368da367f5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:b5a5f78fdacd43e2136a60b61cd8eae2ec40fe718369cc9e758682e7739e95b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1663,
                    "digest": "sha256:94b791aa461fefd9041650b06675a694441be8dccc50cddf70cae519ff7b4824"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26944084,
                    "digest": "sha256:56428fb3c3d6e3517bdbba0dde1e0d6bd5f799f86abfa0ba80b503da7c2b7d5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1861,
                    "digest": "sha256:e84caf36f419ebd869abfef2ad0b81b85e3201b89b79eba566166997970405e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7946c14c78655e9a75977a6d07b91e0782bf43dccbedb75b7f39ad848b2e20d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4478611,
                    "digest": "sha256:a35298b2127bec54a2a5f8237cece63076d368646a4b1cd8bce4a7674b921d1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 429739,
                    "digest": "sha256:508ff474239a108aede370235bab8b5f763366c36325f583ce0824a2d1e006ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225635,
                    "digest": "sha256:556ddf63bd41e79404f0cbefe082c46319450ecb9852fd087f19bfa8f80b86f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6654973,
                    "digest": "sha256:c0dc2a184fafbb9d73c6d8b32c684a2bc06f5408f397a9ba496caaf6f92c2d3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:653f2f301dc934a9122600affbb0452aa96c2cd7fda3d2c4179a5887efdaec03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "23.11.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 64801,
                "digest": "sha256:aa1897b8fe27701b698c804daa57360e5f6cc583b7ed0ad3a1aec622908382da"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30440869,
                    "digest": "sha256:707e32e9fc569fee476af9e92ae3d1df8b8e6dca47f9cb31db9d2c922a6de952"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136224298,
                    "digest": "sha256:c15d1d6b2c114297f644c2ed4772799b38a8f40e9c5c316aea8d32f9c2e1039e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150210130,
                    "digest": "sha256:7e97a8ec568145d13fe1361d6e957c941078dcbe2c4f3c4a916efad7f3e87592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15091,
                    "digest": "sha256:894330fe1bf5277366684663ba1222c3cd19b914eaed29947e6b1cafda6d5f69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2950366558,
                    "digest": "sha256:97707dfd1d405b5040d502a602969c136df40811f7d2b4f44bfba8c7faa2426d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11527,
                    "digest": "sha256:d69ae92c3e1e3e003bf7b23a721ce78a6bbd3cf0cb49118a338433b5376cadc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:a013d53fd443ea0742f7b19675e3db292c134cbc653e5690eb209b2419d814a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5720,
                    "digest": "sha256:18989d23e6f7c4d738325a1b570ad544de13b4310a0ce86a2566d48dd9fad88a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139291,
                    "digest": "sha256:53638f96ad3cb41733643e47aed49d72a800a4fd799663da1e9ae65be8257ef4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31355080,
                    "digest": "sha256:edbefd2705db7824afaa7d954ed6c3854d319ee9d8a925ce7368d33581a09838"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902206,
                    "digest": "sha256:4a10dab4bd4c27d1fe970f310b3700c973ffc7ffeabb5f26cc6696dcc0fba084"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:7ee32cc2089fcfd16a6865688542cfec9d61a5dc84e1e3263cb4ca92911e4a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475739268,
                    "digest": "sha256:91eeea9164ed8b38d034a48b8982f881d4e96fdf1c79e23badd50c2f564994f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560340,
                    "digest": "sha256:7aa5209b2eba60148b1a27de97e03913cc61d8da572ed740bd62bea352ac92d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8444428,
                    "digest": "sha256:6729082aba49d6babdb44b2a80c0eecbfdbb9c787e6e9f652ba937fd9a0bc097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25445229,
                    "digest": "sha256:c926d5f5cde0c64ea36258fa3718acdc15a7311cf35f44b561f46811312dd0f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12725799,
                    "digest": "sha256:c8a736dc04ec201c0ae6dd2f36674af43b0ab172c57ebc7d6b82c0977d664585"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:07cf6ce1eca776bd0f4178bcbe9c2d11cecc90478e503ab4a61a635fbb5ab8d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 510393919,
                    "digest": "sha256:9c90b8728b50e088113baf93d21e581bec158f2def94463e2c9808f5055f498b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 936962728,
                    "digest": "sha256:ade437946b14d35a5a0cfe69f3fe0fee4e40e33c82243655d8aec9053188d438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 325,
                    "digest": "sha256:5e8709f8c02d1f5a4aceaa923ae0a396f14e6a6871bfcab5b2db55b273c38aa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54920951,
                    "digest": "sha256:866ac4b0341d94c2730c2a3a824650a43cf46befd5aad3a84ea5e232792abf5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8420,
                    "digest": "sha256:9d3d147186f3325255dbbba859d7cdb8b46bb30918570268f8c49453fdfb310b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69251646,
                    "digest": "sha256:5d57a558faf6957d617221297fec1207a0f045e108d9a95ea7434b9a1a0623a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471,
                    "digest": "sha256:1373dde86157832732ffbc4e049bcda5f4e7cf25d9f807326729ca382f15f52e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15748557,
                    "digest": "sha256:ad53f9124ce24c2574c7762fa7e4f5b6c94b3fcd021a6b1f13325988f12ec5d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160415215,
                    "digest": "sha256:9f11293d3693cf42102cbd7384216e17d9954a25443a4fc37127e56747dc4ee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2059445898,
                    "digest": "sha256:7d470bc79d5a694f315fc5b294e07aee0d6bd6a1fa612b6cd9f6911a28c64758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2395,
                    "digest": "sha256:cfb097252e126d5a7f17dab7e995595ae6deb6c943dbc6b001c58dea4595db0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90614823,
                    "digest": "sha256:9d44a7cad2d3af60e667ef832878cac2db42d63d4a944fcaa4abfd2269f1ee19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294955465,
                    "digest": "sha256:8771942f5e66ec6ac6b62ff204ce1d4aff6b4c0be6d18063bb142092e43a3aa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27717362,
                    "digest": "sha256:3660958c4b05b39e6ba43bb0dd803680c3a3b8070ef6432de9f001d3a1773160"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:ee70577cbd50a6d19b223540745a40a504ed6ef7dbaba0ed4972d7401bd77e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 286623254,
                    "digest": "sha256:264099d0635475a8c3c38be1400fea6becbdd01b0321ecbe0dbc06464e4cbdab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1321965,
                    "digest": "sha256:1cd8bbadca178224b5fe6f8dfdcf88d7ff0b8c555ce1be8bd9aefdb38514c85a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61683,
                    "digest": "sha256:c39a5d65a5d5584150cad4100ecdc7aca5daa742eacb2a94f58b0ab90ab861d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1734252228,
                    "digest": "sha256:7e732042875703c0c7a9c7b818b35054e305a8bd4b76d282cdeff2bf1a785577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1123,
                    "digest": "sha256:3748e1ef72fcdd6f237b76094cac5e89820bb7418336b30111f5cb90d7be7a6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:0e694a487f92f8d06670d7b1bdc14e425df88530b67b9c9edcbc283078f1901d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764858,
                    "digest": "sha256:e37baf71233c0f5202fadc988ca719108dd6ce3d1628bab83e7140231a9caa63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128435,
                    "digest": "sha256:0408d58f5552e2588c8a6f8a8893b9e7f9762245f9e7bfbbb22294ee5f90b6f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033515,
                    "digest": "sha256:d53c1741513161f1b0b8eb6b83744d8c7dfbdc681bea9e2b43a36df525b10949"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567238,
                    "digest": "sha256:b5531652875768de297f0bddd916e29ec3cdac29348c6f3bbcc8aeaed6025530"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3697334,
                    "digest": "sha256:2285bb2a21912b0ab01b51202c27b6ba8da59ee23d172da0b678e7562426b484"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59128994,
                    "digest": "sha256:1ad3a5cc468872655a93fd7056ce06ded176171cace0508b3893b3974882ffb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14693077,
                    "digest": "sha256:776e338b632ded0efb5c5e04d003b532ee4a100df677944ce2fe37acfa8a6cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121574430,
                    "digest": "sha256:cca7b16b7b04086bbc5527d28746b89af5694c986df15258412f9041b27889f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109113775,
                    "digest": "sha256:9c55ea83da607fe99cb12529f378dba3c7944755a867887ff9607e7d39bd56b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14213,
                    "digest": "sha256:48bdaee6e86f6b8a8bc01949cf837bd9b4c4e75ebda1b426718a37916831f319"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 504,
                    "digest": "sha256:77ee12f01893fa11fc0d3161c0d03642ce46541aea75f1aac4fadf6db964e292"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5158753,
                    "digest": "sha256:5253179cce7e6d9d2ef2f4a28ba4e024c38a2f195a679734f30e2332da1510c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4288952,
                    "digest": "sha256:184dc6fab795098496d22831f6f747e5c2e1059dd880cfc23458ae73cca1f53b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48368476,
                    "digest": "sha256:2a974436c6d884ace074f1d6c6f8e99f0145fd189aeb90e5f6493b61750b5963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:acda39978b9e5d7af68962c062724431e76e1d54a9b043983c50644f52d8cfbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202185411,
                    "digest": "sha256:9767e4291e49eec826449e3e43572755665f9e7bea05cad0654daf034e768f75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 449194977,
                    "digest": "sha256:efeba5d9cf9ccf267094d082df0165ce14b6a8f246ef78202fd27f4c248beaac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2163967,
                    "digest": "sha256:765a7342b0cda94676c3d739541626c1aba9cbd5cf4e114e2e137d936905dd9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2010353,
                    "digest": "sha256:93cec157fff15e24accf535025e297636279f29f64b75899d2d39969d23f87f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 307009741,
                    "digest": "sha256:cd4df7c2ff3910a59aca05f8bece86db9931e51ff7a01505dc8c96010e170897"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1131627,
                    "digest": "sha256:7199173dfe703d658cab0a241a7448b0f22544c1e47c0348b58ae9f8b5e19b52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11892,
                    "digest": "sha256:ea1a108b4fcb2b8d6394fb0ad543d4bcb70891c482f396af870922e4ac8f9cf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15355301,
                    "digest": "sha256:d68cd88e4707cccb77ec5d3e76d3099a832c81a98bc3b833d69fd73cf24d143f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1728972,
                    "digest": "sha256:10a2a6195c56ef3981c06c2a2469c989fef4cb7dad5536f848b8faa60f523cc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87290061,
                    "digest": "sha256:3ae2f3d59d663a75d1f3c8c1c888280194befc9f5da9d53c9859ced87cbe92cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119612875,
                    "digest": "sha256:3de5a6fa5091a93603ab4e5c8e4b69733778fb06d373e023bcb5b533a6e1c5fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:4861656046425602404250e79b45811855d94aebce7cb466faa0d5dc8a5f6cdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853510,
                    "digest": "sha256:dd1a4c184f98b7babaa8f1999761fde671df78f29e770e86fbb1bd623c57b0d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294772,
                    "digest": "sha256:e15cf641a7a10c1b1c492e51252fcf92d63009c6ef22fbaf5917431b491c820c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812809807,
                    "digest": "sha256:84e6151e048e185ed860e459ca3682298161b4ac62753d937c670e86dfa1cbf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766685,
                    "digest": "sha256:cb2927c4b0520285c59f0e94fd2cd12f127be07f7d0337d33280e19ece1f117e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897620,
                    "digest": "sha256:a7034792064bedc301f273e94e60e4463be513c07240b81a1a947b3e6c213efd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2248,
                    "digest": "sha256:8374a31f0ed2145ce34d7eed92dd654779579256aa4885e55f1493688dc23b72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 315224744,
                    "digest": "sha256:6d3b865658a5fe611dda0da0c85e274efed6fe704a9696d321dc5f38e0e45a9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033401,
                    "digest": "sha256:4d668b3aa25bdd376bf4907dc5267dea4a85dcc8b0039861c451821c3368cd25"
                }
            ]
        },
        "24.01.01.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 58711,
                "digest": "sha256:329884f53256029b60517f1a8232daf2e8c0630b9ecb78791a9488529aa7241b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4939844,
                    "digest": "sha256:6b8cc30e3f651b3e67cb3f7cffe2aa373d09f97af5bc9a74b9ca87543b3a3c90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:d83522fe5b8dcb6b1e2848652f01bcf1c7f43ff20b6a38ad28e36513e54fe967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491306482,
                    "digest": "sha256:ac63f6746e919f2560f5bce464955d7a7e1c91f66a4e41d6ef6d58d3cedb1f79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464273086,
                    "digest": "sha256:1d0c8f13df7b42a38698cfe041ff8e073736610dab48911bbb808bafc68fe7d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3399791,
                    "digest": "sha256:2cd5d5ba9548c882be38afca71d9c5945f5b1165c565596c697d3b8615fcbdfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 427373770,
                    "digest": "sha256:7bfae0b1e765641855ceb301040773b0d9ca98fc7c0d0b2387d75571c8fbed24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1218417,
                    "digest": "sha256:0d96ebb8d44ace7402c2381df27a5611fd541a836ffe8e575678cbacafb60c4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966959,
                    "digest": "sha256:09f7213a350e02afbbfeccf00232c12da85c3e747d42f39e14c4835c3a986761"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3394616,
                    "digest": "sha256:98925dc1173c7bd5fbe68465cd14a3e4ae50ad7347d5809c6e6b28073fb3c186"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120558210,
                    "digest": "sha256:6d23f7ef5aa8226bba205c58198bb3b9111915c0f6ab6327037f5974139f025c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853498,
                    "digest": "sha256:862666f4808d5b1ccb88768b667764e84832f85b7716a8e128bf06a789c2a247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321389,
                    "digest": "sha256:5f8e42783ef81c53a4014bc5c173b5fe17dfe8eae4a04e1524752436fcedd623"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812043614,
                    "digest": "sha256:4888a2cfbddbce92d85b4ebacd384a003973b27d4ecbcab2c8e9a90fe0b1460f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766839,
                    "digest": "sha256:f571caef010b101fadad014db3bdda29b459950b1747d840208c58783888be6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897709,
                    "digest": "sha256:c94145b6bf08d279f395dcd8fcf8c6440fb2144e8ace476c67ece96cd374d7a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2254,
                    "digest": "sha256:ca3d503eae76039dad5e03202b920d8824d5c464f1e1ed513d8ac6678ebcf52f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156667783,
                    "digest": "sha256:09919d3a0366cbb1c36bbb289cf5f764fa1f1fcb460e4660aa65eb153368a9df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503615246,
                    "digest": "sha256:b1138e766af05f00dd5a38bf5658ad6ca00edbabb7372dedc9d28939d3387780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29858019,
                    "digest": "sha256:4f18d5d43c46042f8089a5d6a7deeec66d516b75a0ec155f67c801a59cb69ef5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216744993,
                    "digest": "sha256:9ed494f224ddaa88b13c36891603406a0f5931154d59c57c7ecc514cc8fa24ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                }
            ]
        },
        "24.01.01": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 58711,
                "digest": "sha256:329884f53256029b60517f1a8232daf2e8c0630b9ecb78791a9488529aa7241b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4939844,
                    "digest": "sha256:6b8cc30e3f651b3e67cb3f7cffe2aa373d09f97af5bc9a74b9ca87543b3a3c90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:d83522fe5b8dcb6b1e2848652f01bcf1c7f43ff20b6a38ad28e36513e54fe967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491306482,
                    "digest": "sha256:ac63f6746e919f2560f5bce464955d7a7e1c91f66a4e41d6ef6d58d3cedb1f79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 464273086,
                    "digest": "sha256:1d0c8f13df7b42a38698cfe041ff8e073736610dab48911bbb808bafc68fe7d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3399791,
                    "digest": "sha256:2cd5d5ba9548c882be38afca71d9c5945f5b1165c565596c697d3b8615fcbdfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 427373770,
                    "digest": "sha256:7bfae0b1e765641855ceb301040773b0d9ca98fc7c0d0b2387d75571c8fbed24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1218417,
                    "digest": "sha256:0d96ebb8d44ace7402c2381df27a5611fd541a836ffe8e575678cbacafb60c4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966959,
                    "digest": "sha256:09f7213a350e02afbbfeccf00232c12da85c3e747d42f39e14c4835c3a986761"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3394616,
                    "digest": "sha256:98925dc1173c7bd5fbe68465cd14a3e4ae50ad7347d5809c6e6b28073fb3c186"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120558210,
                    "digest": "sha256:6d23f7ef5aa8226bba205c58198bb3b9111915c0f6ab6327037f5974139f025c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853498,
                    "digest": "sha256:862666f4808d5b1ccb88768b667764e84832f85b7716a8e128bf06a789c2a247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321389,
                    "digest": "sha256:5f8e42783ef81c53a4014bc5c173b5fe17dfe8eae4a04e1524752436fcedd623"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812043614,
                    "digest": "sha256:4888a2cfbddbce92d85b4ebacd384a003973b27d4ecbcab2c8e9a90fe0b1460f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766839,
                    "digest": "sha256:f571caef010b101fadad014db3bdda29b459950b1747d840208c58783888be6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897709,
                    "digest": "sha256:c94145b6bf08d279f395dcd8fcf8c6440fb2144e8ace476c67ece96cd374d7a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2254,
                    "digest": "sha256:ca3d503eae76039dad5e03202b920d8824d5c464f1e1ed513d8ac6678ebcf52f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156667783,
                    "digest": "sha256:09919d3a0366cbb1c36bbb289cf5f764fa1f1fcb460e4660aa65eb153368a9df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503615246,
                    "digest": "sha256:b1138e766af05f00dd5a38bf5658ad6ca00edbabb7372dedc9d28939d3387780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29858019,
                    "digest": "sha256:4f18d5d43c46042f8089a5d6a7deeec66d516b75a0ec155f67c801a59cb69ef5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216744993,
                    "digest": "sha256:9ed494f224ddaa88b13c36891603406a0f5931154d59c57c7ecc514cc8fa24ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                }
            ]
        },
        "24.01.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 61030,
                "digest": "sha256:2ab389f6663932566f8c0282464328f3bb50c48015d52ee1aaf90e1193a447bb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4939826,
                    "digest": "sha256:a303899a5242982a7fa269a18e253fc57028075f17581b8a943ffbf8aa43b3b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4288942,
                    "digest": "sha256:f2b9ccea057aa2153f675b6f6d90901d4c65d2090c6e3067b05878e2d88814b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48605132,
                    "digest": "sha256:5fff9d7d85e24ccb900ae4f09420d3422eb7f9cf2ad645cfe9f85c5e8bc620b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:04dc817eb8da60fcde44c2d41740d63cc3f0bb589a7a67c64d2646f48fe69076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491278481,
                    "digest": "sha256:3603b1ff7738a290064de7ccec27ac7aefc23fa4d3609d5493ada73a93d2d81e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 455847712,
                    "digest": "sha256:cabacfc79086d17930d6288d92b2f3d7f9a0114ef8beaad17dae5f22d41e9c3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2010383,
                    "digest": "sha256:b6d6e406c3aa10de8a3471c0db7a4d31c86ae64d373dee515ecfe94769f6e418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 403412843,
                    "digest": "sha256:6e48096fe554d7ddbe1da643440182d2b6e2ae38122c4943116dffe185af04c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1214264,
                    "digest": "sha256:9f73a3bcb49a06c2c7f464a93f70468862e42679e70469cc222a09bc0c0906cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966909,
                    "digest": "sha256:b26ac1fea4c440b5d487debd4feea8c507922e58b21e6c3e251caa119d81fea8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3146258,
                    "digest": "sha256:b7423f781e6e15ac027a6ee319236860b6a4af61384c00dbcc6cd0f456aaa7fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 140144867,
                    "digest": "sha256:901fc1615151830b40585a0add99936928ae47cc64d4bf312b9bfce549127c6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853492,
                    "digest": "sha256:dfac909919a2c233c533bab0179b869aedd30298120b013152d4586560ce0c26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321396,
                    "digest": "sha256:e8075022ae9986c823b19b43500fd2262c0750d88c82acba61a7993c0edc1262"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812053462,
                    "digest": "sha256:eba5d9298a332217c07f3cd1f8c637e1a89b99be982ec6d66a01e8dc961047d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766881,
                    "digest": "sha256:fe8243b418138f3e31d3a4742f68afb2f1d95703fb4d952e5ad67f8684d8e949"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897762,
                    "digest": "sha256:7bc547f48787eeecf7c27237e9b89af20f6a0f0c8be91eb8569f5c3f13fe4090"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2258,
                    "digest": "sha256:05f2615d4bf707dd441a73f81c03ebaf61614dfa48d6bf76514ae61bc15c40c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118186039,
                    "digest": "sha256:0284039a82b16dae772d95098fb7c316dbcaeb362d487675494acdd40853721e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:89377de5faca4d5458e78486758c09f9d20acabd7f62f2f800bfb4a717577b37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156667697,
                    "digest": "sha256:b7de724aa696d529c1b164f5a25e9915837022d1585fe3963cb5191d930cc55c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 437914660,
                    "digest": "sha256:6097cd6181e9eb05db9867ef7aa516da9e9850c36000387d62c98fe1cdc6322a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29858033,
                    "digest": "sha256:8c69eb3668e346f95573dd99c3c8adf0222367929357ddc018c76ef1a167a436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216746734,
                    "digest": "sha256:81f86ff59330a977757799eb6c680d833219869121b98136abb52887dd2fc1b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                }
            ]
        },
        "24.01.gemma": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 65033,
                "digest": "sha256:9f385839e56a5f5a874b9a734d8f60ade01f96964f418a55acc5b31fc2628524"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4939939,
                    "digest": "sha256:514f253aac738989d337bf7766127b1dd4f3c053f7c13dda4c2eb89872074cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4288942,
                    "digest": "sha256:fd7e2ff3223054d99d009cf77e71d00ea9fd1698079121a1319c56b9332dbf47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48601621,
                    "digest": "sha256:f7f16b58fd49ac7e008bc312fa9e7449fe48d9a1c76b869a2b2b29b732f1b837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:e587214c96059a70fd7f750aa71034fd2eb78e6ea30ecdb68f62b3bfdfdd6563"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491291028,
                    "digest": "sha256:e2ad282e10be1e98a3b654242d965af215fc6612d83076402f379711071f1e40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58363904,
                    "digest": "sha256:d242f9726b09d68d7ba1fcc678f4cceb06f91a8b67f3c2929298946093ad892c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138987101,
                    "digest": "sha256:a8f53d6bf7aef2550b11afe22bf180682c44139c46e786d001987551e078a14e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2010613,
                    "digest": "sha256:dbb5f7f6615ff22af9bbc8df61d69f8c634e2721541109872c826c5f7ab63713"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 421487890,
                    "digest": "sha256:4d9356f399d81f0c5bb3d6fc8514428e48538d2ca76fedc50d5261baa9d81430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1216076,
                    "digest": "sha256:231bb5f9178f9a512d30d8a743c61c3f2f07ec41efb29664d76f0e91596ae78b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966945,
                    "digest": "sha256:45ab1d71ad3a4d0c2eb86313a4749938908b962810ff1bf2e03a51f9577889d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3239236,
                    "digest": "sha256:efc13fef03ec5e8cf0616d7aa2cf991202a93fdc75a4ded66a21fb493c2f97c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1005972,
                    "digest": "sha256:325a622d94781f611efaadff98c46db3213d48fae9672769bf9e3339dbf86807"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109285627,
                    "digest": "sha256:be9f4f0760e53344949d9e2157e82ff3da67c5d930b5c5916378ba6001e06fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853504,
                    "digest": "sha256:32cc1877dff6d13ad987d0f1f43d33a74181265df982cf742f1bef9d08fc35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321393,
                    "digest": "sha256:7dacc13dc727074fc0c5e8d8f611c139054fd1f0afc8030dc9ef0a7a94b20781"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812048102,
                    "digest": "sha256:6225b8434316b7d8fd6693ec51b74aab38dd5defd5f2d6f078991ac965e0f51a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766881,
                    "digest": "sha256:23d900d01e6f4cb38caa3350e28df2b19b78471f81fd2186d38db486f87e46c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897686,
                    "digest": "sha256:a5e4a358be50c331ea0dbf0969bc8e4c2ceded056c8bbac3f0ea685aa22d1fa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2259,
                    "digest": "sha256:dc34110d35670355f4a4505f517e37361cdab753cfba2f74cb3c708541368cfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118882711,
                    "digest": "sha256:f0339f43bd5630dae0a4eb9b6dd83943ab41cbf4c60aac02c2e387c57fb1caca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:68037207a69d199c866ff34cba4477e58d3eb64f138ae953095fe29b1f57d702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668062,
                    "digest": "sha256:bce6907d73a3166391d4b86e5fa47fc0db27f7bde96c83c4419e26749b7c9215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 437955047,
                    "digest": "sha256:703012845389bcd7ecfe65f8ee7fc5b002c6eed008581dd4b055b5cebefab20c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 265,
                    "digest": "sha256:f543ae9de4e5fcb1a819237fa7633fea0902028c85d8e889a8524fc5f54dabb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1603,
                    "digest": "sha256:2bcdf7ceded8851ee31b6d8d4bb799ec098890220e1817accb4336217f9682ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5157736403,
                    "digest": "sha256:3931a3d6bc82a004bf30962031506785005263a2454030f01a6e3f3771298b9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 311,
                    "digest": "sha256:610767ebc7fc873bc72f8264fa8bcf0df9f69f8672e40412e553d31822984e68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501890,
                    "digest": "sha256:c6b94a624ca50420daa5a195228c8ab332046930dc0515ebc1b87b887d714bb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:a20d74d9a9e8f065a699771e57f12179c347186767456133bb81284dffe4723d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94767344,
                    "digest": "sha256:475c009e072966d1b4ab48f2bf8da5d191d63ee7d477924e9c7c62de543c87d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 411,
                    "digest": "sha256:d657e9aabffd9212a842e37ca99ecf2537ba9065a35f3eb33c24ad7d220fd232"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853623,
                    "digest": "sha256:e02df4ebd4a91ef2622026c345a0ef10fe47319dc9766461b0020d6c8545a8f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62282094,
                    "digest": "sha256:1d54a7639ef3236a55dde9fd007ac08ad76ce1582437b93df0bc141441c6bc27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8662,
                    "digest": "sha256:5171f5b754e7430d6891f3d4866f3e22fdef459e44870fb652e6968c82d77be9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4483011619,
                    "digest": "sha256:a57131e4eebc754acd03b1893115ed60fd7bf5f14fff790bdd863ccf558aea3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33605,
                    "digest": "sha256:f682171074cf785b9fb27441c96a223eff5dc07716d46fbb58b6fab3352ce48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230617684,
                    "digest": "sha256:364b8a79be6f96c41f909187b572576a64658b159d0e814c5cc7afabca139c58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2463903994,
                    "digest": "sha256:f5a52b7748ee3982ae85065575f102d4337ae8e8a8a9bd869c1331fc6a9b6038"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 221402,
                    "digest": "sha256:c5e503a9e2b01753238b3c5f251d1c21ceb23e6bb0f5443ed40489456e4f0471"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:a3fe9578f7d20bc3399157e3cc7bf2a758a5e36329dfa5cc30b18f4b3812dd63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2840,
                    "digest": "sha256:fbb7ac0b5d3b76ee48b7b5130335a30d9bbacd71f73aa6941dc8749647418341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37036676,
                    "digest": "sha256:c98290d73e3437a660a574ef52bb2c212508b936cb426723125fc55de6a4fa2a"
                }
            ]
        },
        "24.01.speech": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 56238,
                "digest": "sha256:dd10c701c250f95c8ea927fe17e63ac110c11e5180130d271ae7a435104c09ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226544520,
                    "digest": "sha256:c47008df28130f57541bf6c64dd1b8840a3659d964863e8a1e206def3a53c376"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59889847,
                    "digest": "sha256:d709018e45c4cf36847c737c862594c5b726f565111a48296a17427287562d79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12372284,
                    "digest": "sha256:6d0846cded830f2cb647ecd6e891720a71eded3e9d859c7b8058c542353739e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215119590,
                    "digest": "sha256:3c7d5b041192379cbec55f90f8a652ae61dd49aaeb813d27ca024d763249ecd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 403489586,
                    "digest": "sha256:38483a258115d8c84916b70315e208c1fd9e08b136fc2d18d3bb3b269f9fdd24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257,
                    "digest": "sha256:df6003de174b2640d1999e22d38f25b52ae4c3007352a46a38f317734c09b2e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:a7011b884db74d055dba94a1f6c888ce4af1897a945b02887dba825a36176610"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5451,
                    "digest": "sha256:3115182ee9c71bb89e694b72671b8e36db654e0f461f85ccdac90d648ae6d106"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4569885,
                    "digest": "sha256:124dc6ca2a55b187ca9ebc703b441abd0e8c7c91fe945bb38f7e087aa57e04a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4490983,
                    "digest": "sha256:ab15e27fbabadd5e5fab8e153db8909fa9c406b8ab81de1f4ca8d993d9317740"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42735758,
                    "digest": "sha256:5cf51ef6a2598a99e5148a1b7e27222676ab444089f0417d6d12b022a25ce156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4490948,
                    "digest": "sha256:1d5e933208ad598c1432524d9739936e365b23a1b37d4e49f4ab1fd9675ad958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:d541f6e4587805bec9469f81e00b59339c61b4f922f1089e7afbaee3bac8fa9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1480,
                    "digest": "sha256:e0ec6903ddfcf7cd59400fca6069416443bbc32c04090287c2f9285d01256f05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 392437109,
                    "digest": "sha256:c0c158caeb52c751f4696dcead7dfa1ca1b1a6c65dd0984e64774258ed820b54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:22f56c23ee70cd8db16c564acfb75976b1f2047de4487329c43ffab199f1118b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 349,
                    "digest": "sha256:1b22363dcbdfe6330286be01f3af154aa7458b0792579f3a09c773230023d115"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1664,
                    "digest": "sha256:a01421e98544382eef54b77aa4f2ea507c729f7726ffc9afd4dad7eea4591e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8167330,
                    "digest": "sha256:b3b26e88377c3fe17ce4ca8f86500b1f639cc8c5ba71b52f42b199fb9e4253ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2891,
                    "digest": "sha256:ab721bad76004d29afcbdd9b380fd0f760f6421a82366fb28b23ce397a4d5840"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:aa98201b7f911d301cc852994ad200ddcfbabbb63158cb6687db53bb147f3a76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4490987,
                    "digest": "sha256:5c4e8efda3e58d9e9ca12f22c9c57482347f819a175f6117f5751556d26dcd38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482086,
                    "digest": "sha256:b975dca92bb751be611315f9e7bcb8f6cf42e75b3dae07e551c5e16fb0a61550"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238013,
                    "digest": "sha256:4d44ed27f72972ea0e6d81ccc5c85c0a07221f9b38396d79a4aa059178517957"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6936418,
                    "digest": "sha256:4ef5aa07f42e34bf7b19baf789054e52ab5ead8026eee65283ae87e7df921ad5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:0cbb43d12ccd19a083d4eac97fb0702af427da2fe11165b248ded5fbbec3cac0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "24.01.starcoder2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 68401,
                "digest": "sha256:4791302718e0123c5fca79778f3d09fe12335844510707e43e6949daf00fad95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4939939,
                    "digest": "sha256:514f253aac738989d337bf7766127b1dd4f3c053f7c13dda4c2eb89872074cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4288942,
                    "digest": "sha256:fd7e2ff3223054d99d009cf77e71d00ea9fd1698079121a1319c56b9332dbf47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48601621,
                    "digest": "sha256:f7f16b58fd49ac7e008bc312fa9e7449fe48d9a1c76b869a2b2b29b732f1b837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:e587214c96059a70fd7f750aa71034fd2eb78e6ea30ecdb68f62b3bfdfdd6563"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491282179,
                    "digest": "sha256:9305c80c61af3955e158c5f98191d1262d3a1d879ba93d983acadf3ccc76d376"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 455935034,
                    "digest": "sha256:efc915340c84210c0766ea9bcedf68258ce567bb347dd81808c2ac15c88e44c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2010374,
                    "digest": "sha256:507e5c4bddad8e9ae875fd59e8f84f6e6de5989a2581d3ee1fd23baafb6d35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 403390778,
                    "digest": "sha256:1e3126bcbf6e6f6a906678db4a50a2212a5f01453dad723cf0061e69071c5f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1214256,
                    "digest": "sha256:67fcab39325e32b40ab74911c36d1d507d4bb36c0897650a447f730c846808ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 966906,
                    "digest": "sha256:4408e33fa5caa104b0b66d4648c0623b8887f2b500048d02e443b39e8bcfd446"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3123017,
                    "digest": "sha256:b261b0f034640da33732c6551d1ede11cc5e8cc7b5c9741fa316238da689ff8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105250675,
                    "digest": "sha256:0bcba7f981417f6a19f9434445a62e1955580e956ba3e008110b2ac914a7d251"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853490,
                    "digest": "sha256:e7ba25b42113dfe6a255dcbf0e07a873735adae6979f6db4bc64812194ed76e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321394,
                    "digest": "sha256:fb990d2428f7cfcb8b60a1a8adee5a4be0a9599f0397aa8f55bebdc12cc64678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812051900,
                    "digest": "sha256:029858f9313d20563dd95dfc748cffc020ee32ac80a1417e80805bc562f0d3e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766880,
                    "digest": "sha256:cddb5eb575d3d63aa7efa7f7076e017f5666ded3a7dd752cb19f32161fdc7dc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 897689,
                    "digest": "sha256:896b61d1855c4d3fc8b1eb44520c5f46f468cf3f19edc182e133e0b82d64a1cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2257,
                    "digest": "sha256:822e41b1d0b68bc28039ecf1c2596ef1ca3fff2156cbdeef7346f79717db258f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118185112,
                    "digest": "sha256:a29ffeff8f86d8f1b56c7ff197de4c42234de75c571f801c4678a78b1f77f9a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:268f2e4ba41a2b2168c64493d79b81bf6c1ea7b7af9a233999a9c294bef2d3ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668196,
                    "digest": "sha256:724d5ca15dcfc43da2c510862340f0e8d87a05867c4f4ad8a0aaa90cf4363e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501860018,
                    "digest": "sha256:32c678194245ecca01e22e3596caa4349113674cf48365970414ab0c9aebf842"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29858002,
                    "digest": "sha256:b4c84f39201fc5707ea2c230cad6f0c52f0a6d47612d8a5190fffccd07e9084a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216745538,
                    "digest": "sha256:055a5b35a736a1c32ac0331f05b2d7beb4dd82142a8f12c5cdd41be441664282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3657,
                    "digest": "sha256:81caf2da9c859a3c8279ec4b093be5d53f9816762178d35e8a739f31fd2fb1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 387624,
                    "digest": "sha256:b714c0ef0c33ba40dba77f36e5e709f4f9a97a05b704dbf1536ed358eaf8effa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266,
                    "digest": "sha256:be3c18b7036b7493efe4fc44a2b719826107f42d6e14b563ecdd972c02de8d87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1602,
                    "digest": "sha256:3076e262b34ff3b4abe66f4841d1de63c3741482f0cf100eedb6b1a22cc358e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5157783524,
                    "digest": "sha256:805e04988c5cb4c83c7aa52b7a7567bc59c021c5b326f50235b2069094c4bb63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 313,
                    "digest": "sha256:eddabf30970f81f1846ff75bbe6738eb85f520d1cb71448865e4a3d5ab7f7136"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501888,
                    "digest": "sha256:a1c475ca69c3500de15f7e811292e64e138d59033df5f29aa93239580411da49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:62e7c8362036c4c4d5fb7dbb01575451469f870187f7831a3b522945a647a64a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94767340,
                    "digest": "sha256:34d0539c30d64af54a9b45b005b1e0e59cfb56504fdce27b26af086ddf537a28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 411,
                    "digest": "sha256:4675bf206f22f4b0bc6ceeef6a056d846cafc7aaf1ee7c1a60e82538b6756d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853628,
                    "digest": "sha256:d973cd43823a7dd526901bc51c3caed9cd3492dcf3d10b5d4310cd03623f2bd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83027606,
                    "digest": "sha256:8888c402941418b9b2b5ee9aca92fa2f17727327856f222f2ccd65a8fb1243d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5731320478,
                    "digest": "sha256:695c0555863f4b2e707ff04d80285e418a03e41f1504fb97047751dde2710f5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1128016089,
                    "digest": "sha256:f0f237dfa00d72fba84866ca7787c5ad529478a0962bbc7324d9a4fd48be84ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2675090884,
                    "digest": "sha256:fe1e88df549cfbf613e7b6a13242a9e21cd615d71a2e3d7a2c61e15b1ae3f871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134,
                    "digest": "sha256:ea828c3ff342bec93b1372d356af4b06bd4b9246f3feb5a8cf9f862e1c400937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49616,
                    "digest": "sha256:d55a23c357e280adb325e2562bed9f9203778868303de6db6d33201e066bdc83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15608,
                    "digest": "sha256:d146205adbd204a807c4e7d32b02870a94712477e220b2e6b5a14da7d6b28d29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2359,
                    "digest": "sha256:f4f5dbbb59a9c1bf0405abcc8cb3d77d60094cbf69697c39fab9c66223d6fd09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14827,
                    "digest": "sha256:6b2903450e20596ec1bdac0272f415b948ccaa80181865983a3a78a0b9222143"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4599,
                    "digest": "sha256:1b7d1a56123f2b4f49f851a7bc37bbdd2974cbc3f2b6db2348c76cccfd33f320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4403,
                    "digest": "sha256:f0cf030ee594081aa616b33eca92237a1657cb0d84253df92f9b3d254f50bbd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3479,
                    "digest": "sha256:27a5e2d9d91402145adc20c791c6b54a9daa5c784348b8e4d73406d7e35d8f09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3610,
                    "digest": "sha256:ad5a0d694a39a9abf56029791aead1da98a4ea312a53b0e540b476df6ded7e18"
                }
            ]
        },
        "24.03.01.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 65523,
                "digest": "sha256:f7c7f1bc716000b6633d59684e4a059ffa59382dc63b887e73012c9218bce4f1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30447882,
                    "digest": "sha256:31bd5f451a847d651a0996256753a9b22a6ea8c65fefb010e77ea9c839fe2fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133329657,
                    "digest": "sha256:ce8cc979c12ec0f60e45b40683afc3df504bbb1e049468d546ad1728cb8dbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152859,
                    "digest": "sha256:b4655ab72d6645c694f68bedaa736c6ce498cee6bfc44bcfd1e83056dd591a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15100,
                    "digest": "sha256:d70fc0fc8075b5838efe5c58c08cb2eb266526c6b099f048e37dea779668d538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2925223394,
                    "digest": "sha256:fe8a966cb8fc5db903a157b90c4951e7d6ae80b4b39204ff3294b2e7d5926111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11528,
                    "digest": "sha256:04923829d9a5eecc2e459cb9631c379f48a5959d496a72472d3497b89504a7ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7c6a9a9ea6058400785b314fc55260320b3c49563f7692f0746bd5875708fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5722,
                    "digest": "sha256:dd6850141179aa89cc90f964600a4357b94e4e6a8526d2435f9fd0ae704cc4d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:1ba7f770c2b7186d8f77d86e4f5ff595ee91b38dc3ca00d9c9681252890d2819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368597,
                    "digest": "sha256:28d2d38f5f1a3196b2915e1bc8a9211d2a33af3468981374efb317a9c9415792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902530,
                    "digest": "sha256:2b069040cb644c6a0dbded7dd6d722e85549cd3da5127c6ed02b05fef66a1758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:25a11129edd6b98ff1cc0ca09ef64207cf867177d8f158eef9ba009818ccff79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476386432,
                    "digest": "sha256:8b6652143eacb9375119af1e72181023a9a8b9996363cf22aae037d621605f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67143455,
                    "digest": "sha256:5ae505987b0c3b9da949b6e0c104376f6107704fed64fb46822dd619ab0651af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8539493,
                    "digest": "sha256:af0496c76d99d20f2e99acbbf43a8fc38b69476ed97633486f282ffd11f76b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260220,
                    "digest": "sha256:6d01c7ef99accffefe09a5041a891c17e9183b0242977760d1dd96ed06bd5b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748518,
                    "digest": "sha256:6b291f4a0909e3e6f785426db8f775cc2abcbc17819d764e1d37fcaaaa089370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:fc45afb36fa6b0ed80f672d518c4af53d8807918e0f254b466a89efe6858881b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488864043,
                    "digest": "sha256:659de15fb9cb806b60673fe9410d3a1bba52c963b5208a0a055395f4252316cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 643255816,
                    "digest": "sha256:9507c73dfe60d8f0a52ef9d794bd89950d81c32e98f27c85cf25b9e727e64310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54285508,
                    "digest": "sha256:e49b9068ff39a9b99549bee050cfc8cd6d88c9d79a5d53ab69ea62d991ee48f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:80329dfe43a8ce79454da8b9f7046b446f91de76a7cb752112339475bfc77c5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69239219,
                    "digest": "sha256:3d6bbd8c25038085082a33738222a605317a3d05d74a4fa915ea9ec5498a4a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:4dae9d37c6081720ac2a8f96d095823bbf6816050acb459e2c911d7ad60fe966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747611,
                    "digest": "sha256:ff95200a93c6dc1da367514bf4fe6035dc76d6f84d2510a484cfab174bd9cebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2344716946,
                    "digest": "sha256:e53cd7499a582d85501561896b7f36777a23b0e624ae0ce3f1470d4be47b823c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320405,
                    "digest": "sha256:1bcb8401a3f58fb1da8e38bb98ee73c80237ab38e192b3bb02b55c7821196b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167431492,
                    "digest": "sha256:2e1a99ef64a31d72ca30d7e4597138fafdd88de31e36161977f152ee041ef9e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303844619,
                    "digest": "sha256:4274655c4688455bd92824909b85ba723978b1fb70ba30375f7add7b64387088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28740935,
                    "digest": "sha256:94e59f9b9d856e70738801a056df5ea266993b1e6c1627eef94645d304071a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:d5a762491a36834a4ee5531f978f356dd2940137fd5fd60b0c3bec0eea08ad9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470495018,
                    "digest": "sha256:5a54e3f7004ebb31082a648b0cc3322cd455cff3a4e91b01e9bdf8f6766e62c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344302,
                    "digest": "sha256:793228fec91c06b916320a57bff9320625570a4ed6ca671cc5ba7af035fd453c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61690,
                    "digest": "sha256:5d76d81b9de6fe9ab4ef31a684bb523be14ae6791937c2a3f3cd22297f42278c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832886008,
                    "digest": "sha256:0a712b700186574c6f625d0c07363e62ac4eb4f37fa0e5938d1cc5c7409a6ab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:29d382b49364bd5af3dba7968fb364cec842299853d4f99e5f83c2f482001e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:a44517dcf1730ba00caac630fb9faf541e2455e73565e9cebabac667029915bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764871,
                    "digest": "sha256:9915312acb9c4602d64fa1f4297c1518d2bf1c804393e50b64df3e29632a3b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128376,
                    "digest": "sha256:0a38a9efa24d6bed9eeaafde04eb07d6869737038afa36056071b8c638b2e0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569827,
                    "digest": "sha256:9974ea02ccb08d37d08e67f39e1d0f81ff58547404a9673e43b7292bd8c0ff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6464344,
                    "digest": "sha256:e6621cbb7adf94f2d0617e884645da812d823442e2ef7880bf1e4db33a09c1c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60682087,
                    "digest": "sha256:c8b807748ba0f231d48bdddf7c765bb67892c0989c589f322cfd26b884a28384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14811022,
                    "digest": "sha256:a021b0895cea94f6be9cac2dc2c09cf4cd02696feecf4f07bfe9c5235c74e5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112276835,
                    "digest": "sha256:f3be9d74b9ba928de56bbb0788234f5246bfe0d660efc87ecb55a7bc08589c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109589432,
                    "digest": "sha256:2c862030856eabf2823ce55609e25529de492061b5151bdc918c44868e6c4d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14115,
                    "digest": "sha256:d4f48aa94df98b95049d02258988f44a3c818897f8f6d6c203dcee095be28ad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:958e6b58ee1c83c42634b506b02571bb4f3f9f698994ca81ce285e80ffbb39c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6225981,
                    "digest": "sha256:e47a9e426b19f0aed276dac8a355a5ec1e4c28338b4f153c6837c9f3bef024ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238352521,
                    "digest": "sha256:1eb23d1641adfc72241cc5338470ef8e092c21c1fe77e588126308851d408ff4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:b8b937535b8b1b5eed1179136ad26a481b824e0bef42a9c37eda92144a79e913"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172295118,
                    "digest": "sha256:d59583ed495d53f505a04b1f0dc88829ba14188c0e776da15bc9a734671331e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 336703216,
                    "digest": "sha256:35e0dd6a9536044c9b2cda362901ef4bade8ad997b68ec8bd121028224fb78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4134948,
                    "digest": "sha256:237357af802cc0140bafb1094142626ce1b2e35a2fcb7c204ef00e739ad22bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553448276,
                    "digest": "sha256:8acc459fc0b077473988ffa687ec601b882a08d4037b96f0b1899bf1369de5d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148613385,
                    "digest": "sha256:d538715ead2f81f1c6c0ed2103eced20e680e80c75992aa15246aa49b713d134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123530131,
                    "digest": "sha256:4839d2a337de1188581db827e298b3506be2b8531fe6c5b20f9a3cd76587d4fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853573,
                    "digest": "sha256:7b6e65c2c7d25fbe90a006be9bbe80f5f5de24f20d0f5a35079396f56870ec46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338920,
                    "digest": "sha256:5582dcb32e16f2beb5d90c10bbf18d1657f4e11cfd0419d43b382f20edaa9eab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812295043,
                    "digest": "sha256:63a7c518ca3970bb3013f33ae32b069d68dfeba2f7ca801fabaa1951853de4c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 956931,
                    "digest": "sha256:66902bab59ebe3a9971362885749d5011463b34375b00a567aa2f0d2531d32bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136737,
                    "digest": "sha256:a3a63b9afbb397472041f3eb9ecccae41461c4f553859a01d5ed6dd2e8a48926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1546653,
                    "digest": "sha256:d031c7c2465c22d38337d95aa2068d191cf8be708f6173b182fc860b7227b3a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2284,
                    "digest": "sha256:29b60dc83c2bcb0af2602daf91cbb0ec3184df9109cd76f24cc86f0b391d7e26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668466,
                    "digest": "sha256:f7652b9d82603a53d52607bf8861d74786d36328c1d51e2758e7a9985ba8a8da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123381,
                    "digest": "sha256:221d62e04b21db0f7eb3d8152f9e8e6d3c0df30fd736b171c614888a868074bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30009895,
                    "digest": "sha256:ec6035c074a959d080060acb0d5867a6d315c954071baf0dedee56e115605dc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217153973,
                    "digest": "sha256:de80342d2f038e0a326a8425816dbde6bd1af3ab507f160e69d89da8ed58da90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:d847fd99b38ecba3a116909ce5632a630c7cec1541a2d8c5e06cb057cd61300f"
                }
            ]
        },
        "24.03.codegemma": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 69857,
                "digest": "sha256:cdf34c628afc003d76c505eefc6b393137f93f375e93a4a335d6f3dd5d9a9ce2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29547485,
                    "digest": "sha256:a486411936734b0d1d201c8a0ed8e9d449a64d5033fdc33411ec95bc26460efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132568349,
                    "digest": "sha256:4505fcb34058ae416dc7683254d015ca2611c5b4c2e4ee2de5099b06cbe0087e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152313,
                    "digest": "sha256:61c70c86753ac3f0254f77f1b49458229c2e75001e8e7257516d0cbf308c1c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15097,
                    "digest": "sha256:2e71696a7bbd5966b71dab95b505cffb5f4bd57bd28dae32a77a71cc827e8395"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2962796575,
                    "digest": "sha256:2f61de369480f5d74cc4fe2a232b63025b1387fbb92981bb0fe9c6868d42d2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11533,
                    "digest": "sha256:232727b13aa7e7cf6685166db6389eba39d2d10693f7cb85a6b94cc742e8df5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7a0e546cb493224413263867449b7109d6d23ce23823f7af289acde4205b266e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5719,
                    "digest": "sha256:b4e102e4d6814c982d29286e4dbaf339179c7fe2090577f8093a90306da1c346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:5f8055ebdf5665f8b0553f8b0cd9fd96571478a64b69e9483f63b5ca24e23fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368368,
                    "digest": "sha256:93a7bdb523266365415d53e6a1c780c624e25f76563b5c35e6ac0bf4c8d22955"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902006,
                    "digest": "sha256:c62aa9613aa26ef95f416f0a5831aa8accb512b749830581ca82cc3ba9d86360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 502,
                    "digest": "sha256:2d6fed7061355b60fd53ac31e709fe78fa277e8973a8e46fc7e04a9275bf57f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476387941,
                    "digest": "sha256:573e602e6564cb45ecb9743e909c510eec7a78e6db1a3a1a7c343c091705bce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64560444,
                    "digest": "sha256:4d17c9c781ab272280b01dba47339324c918b63078be699ee3a49e661988b017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8538056,
                    "digest": "sha256:70711103185586bc2dbf34d9fd5835e6ad9a9140080674a319b32ad0c52ebd82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260115,
                    "digest": "sha256:9ee9f649846387c87376a6ed73d7938fb7ebc0de62ae5e6b5285643682dc12c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748519,
                    "digest": "sha256:dc7bdfa3eb9fb9440e98e6f024faa64c40171755cf849cf6f6e0c374178fbf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:888aaf4ee19565ecd91dfa6d84a2d2c841a6f8eaf4725d81edb7ec955d506363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 499331908,
                    "digest": "sha256:a60b8d0832ff0c021bd21380beb574cef0ceb36fa7b272b2996a8c2da9527ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 642822288,
                    "digest": "sha256:11de7a87da2d0853b63608712c318856c928e0f6e270f5106627a2be43ff01c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54878193,
                    "digest": "sha256:b71588490be65d58089b64bd3affe282b2aaeac878444ce4bfa22b0ed5986c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8430,
                    "digest": "sha256:fb321aacf31cfe0b622e084cf00ac1978030e3912dc14d8e2f3cbf434379982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69242159,
                    "digest": "sha256:78cc4abe17e142a1c84ce57a9f5886703ebdfc03610593f1ed1f0cfcd14edcf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 475,
                    "digest": "sha256:d32d4641f18d7958ffde19da473f993570388249597b44399acbcffb332bc626"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747602,
                    "digest": "sha256:b1f4dbeb2b28e579422d0b7b8f2e7e1f8c0c190620ba7afac5261982cc1013f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2287393488,
                    "digest": "sha256:b3f840edd25cf87a74c6d75b6080a225f5b9ab225e5d65cdda1e1f257a0ec17d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320431,
                    "digest": "sha256:a016bc2489c37bb99ce0c90f936d7af7748c7eb40014239002724b4ea200c134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111956527,
                    "digest": "sha256:e8527bbfd24be9e48d8f7692cf704a93653c185a20a1bd9163f6f956306c26b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302948391,
                    "digest": "sha256:de8c3cc9816fd46c609b4faf25591a6a0cc248b1f50eb1eca44ff5bd239855dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28739576,
                    "digest": "sha256:f42d3a7d99d2d2074fe246d8223d8521c69a0edd8d922a5906c95e3e953ce2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:dbbb831a67949b98cf616353f4349efdfa87140b99d7fb6e4b1b2992c3b6e981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468847986,
                    "digest": "sha256:6d44997dd27f230ad8f72fe0ff66fc1e896b3938a51422d087cef2bf901db886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344109,
                    "digest": "sha256:ac811f42870ce7baf9d86e68ff17971cf5a779879f0847af5fdb7bd99fdd1f6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61699,
                    "digest": "sha256:c2e39f0c0242725818b4db5be95016508ddb69abb1a97c74124c6215ccf31d07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832456707,
                    "digest": "sha256:d798e0e450837dc0bc63adee40b409997993ab5977d5ff8d422b6d514cc83c56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124,
                    "digest": "sha256:26538772e167426056ad3c76eb4c9477fceae3fdeb55f293969a6be7423b2d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:e290d1a1fab704906317ffada9a99fca4ed5c55ba984aebb28fda1ab7426288a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764870,
                    "digest": "sha256:88cb5faa5e0a673fb355b15f988c6c5ede731de1b664c7b6ee6f3efd4e65ae9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128431,
                    "digest": "sha256:32f8280159de51fd9bc3aef5596d9fe0e16f0d4737d9289fd681bc5e60a4a33f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1567235,
                    "digest": "sha256:884a13e199b9bcf7b0623a39acf575feedc05df282ea2f48c9cb71afe5501645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6427709,
                    "digest": "sha256:80585addf367894cd073169b101a5a95d17a50f2a04a96b190f66aa91faab116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60493042,
                    "digest": "sha256:5653a9f4d99280076a4f9aecf22c7cf12cb1a003835cf7e54e1c875d60a4f0f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14563951,
                    "digest": "sha256:3bd9bc3c9cbb95f83956113fc8c676c49421265261148ce57579a857f2ea1f92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121750280,
                    "digest": "sha256:df7813bf3771a0e9d09b5d56223c0b76bdc3b4e148a815b26510f1cf876182e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109423425,
                    "digest": "sha256:7599267d44ae73e071fe62b0fcc3ed41ebab37afe88cfa0f1f88f3ff79309ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13905,
                    "digest": "sha256:91fcf24da1afef42790e31b1c35f03679de4b41c1b48f21ccd49942315e6baa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:96c15f382bbe36c5dc67246c0e4d1e1bd490a5be9f555b9271435187919c8717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4940048,
                    "digest": "sha256:9101188a91ab36c14aa3e15342af6b92b7ede2bb6f6c3fe36c972b70df2f66bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:6acad8754f8cef98b587bab2f78c239ced9d7a467e9995db01bba130cbf3b952"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491308971,
                    "digest": "sha256:27b9aefec5336abe6072b5f3f24045b3dae44ec2ea303c1027a4bf5b85ad36dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 566913259,
                    "digest": "sha256:5724b5adb5dc98923c19f56c81edda209b42735dc4feb14ca2f5f08450a6ed19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3399815,
                    "digest": "sha256:e42140a23c4d8e16d9138b83f92b88fe8c906df8d9238ab9742f6f5f40acc797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 427397939,
                    "digest": "sha256:ad60393bb78a7c94e57ab688dca3758844fae4aac84284fd1e69cd797d39acb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1234808,
                    "digest": "sha256:2a3fa235cde55b0dde60fba986609b41daba970bdfe25c42ac1d2dcf36087c54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 967094,
                    "digest": "sha256:75a8148559c61ab83d1900b48e90ae5068bcd49c56d89dc726b85b9ed60c908f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3498658,
                    "digest": "sha256:e7c139160c0b092c96d62ebcccf597fc9a67e90812f2f4d3e1772373415cd8b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120561000,
                    "digest": "sha256:9ead433e7ac8b63f1384f755d2ee40aa80b3b9d16a180ae287c24c6d6e0472f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853535,
                    "digest": "sha256:a17a6a336b1cabba95608f031013197efc7ca9c4cbded42abf5f4ac493db78a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 321417,
                    "digest": "sha256:8c542948f39bdb04eea43de93a1b3322c99416df1b7cae9654e7c2a6b3fe3b9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812032915,
                    "digest": "sha256:e1198f1ab66f4424720dd60a448795d1be4016ced2c000480a5e51fe83c54859"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843334,
                    "digest": "sha256:e51fe6f1361f81989256e30576c25c78195d47d9bcb9692d29c2f2c2e23c07b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979776,
                    "digest": "sha256:136e1d644b8d1322077e04ab50c4c787b2d0e9088000ec024fd70d48bd372daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1326885,
                    "digest": "sha256:77300ea52f4c612086e74323980969126134e2ebed9792859e562b2825d7a779"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2283,
                    "digest": "sha256:fadb73d92bc42fd37c2e6a0f55e62659e94ceee680a6a75c1daa0979266bdcce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668839,
                    "digest": "sha256:3f50cccbb55803ad6c45d481c0eeedafa3c32793023a27656dd8749a80f47740"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503626119,
                    "digest": "sha256:4ee866a81a48de16a6b92baf1b3124ba61550eb3146c23a886b8bd1e2b56cd46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29858065,
                    "digest": "sha256:7defb72fa93716e275d3b0a831fbc4852913d431357e649ee25b7b8bee2efbf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216742704,
                    "digest": "sha256:8c206e8bc785f85c48599417a6498cf8dd552b8d83d3d9dfb9958198a8c62e2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033530,
                    "digest": "sha256:c065e287b6a1b63df8cc04d7a1cba8723af0d7ef015224136ecff7b3e2ce48e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1796,
                    "digest": "sha256:524fbb3e45f31498645e14d9545dd687570154357a724075a9a574454bd4925f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30466408,
                    "digest": "sha256:c0b3bc48a2ad46b71ba44fd79566fcacf16eb278bcb6a5dfcc255688a949ff1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 453,
                    "digest": "sha256:6e2bb4c6151b40f638db87f5a9fe92c1d4f3ff272f8451e130c7122ba9beb550"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94767372,
                    "digest": "sha256:4ad025e69ff53306e54a87e2809bc176462f03dfe23666d970a67385bbf68b08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 426,
                    "digest": "sha256:e4df02c8ec8f4240d6e3e6fcdca093d4885e5428f01c42d9e4e0bb898601a459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146,
                    "digest": "sha256:e3b5184a3ad6d64c250d765cfa4f2828b263d8294cd21f106352c21e8e62bd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1608,
                    "digest": "sha256:2e13971ebfbb9cc0d0c5a99c3a1bce22c90263bc42d95b01031519ed99cea788"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5157810548,
                    "digest": "sha256:c11fbfce074ecf8f77d20cfc8d215a21fab3a8a89ffc43cff5e5127b91e99e3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317,
                    "digest": "sha256:d61c588e6c5e8e3fb45e011901816a69a5e5150921f77c26821e740100535558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501972,
                    "digest": "sha256:f841999eb47bc6c4689790f398dcb3df1b3e06b77fdcf1754b268efb64c521ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 417,
                    "digest": "sha256:7df55006f3717cce902a7a960c721f02a5a052326b36e114df0092f014c57920"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853636,
                    "digest": "sha256:adf6d7dd93c0de906020b4b86103262ee738dc1b131b8e8a3e72232d4b10019d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 870,
                    "digest": "sha256:7384717f3752f0b234eee972c55c2ec2e99567feff2a127f562a8141ecc1c697"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:1a9bf891e58f1103357afbfb75a71cde2a23d3efeeafd6cdf3e1427ee5374ac7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268394,
                    "digest": "sha256:fb454efbfeac2615e7fadde4a417a0365320e2ad84f93371a2a71e62c626920b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15782,
                    "digest": "sha256:4d3e1f556b22a9dcdfb834dc6ed3ce6ad75676afbfbf32dc645461f36d5e8d40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50710,
                    "digest": "sha256:0d044b7779ce71add0b1ed17bde771d8d800ed54b5e9f9196cb0481795b72c9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6096,
                    "digest": "sha256:51d4e960ada5fc6dca7ac2c37ad4966be09f507249f33df3c44e0d08cc7196f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1009981,
                    "digest": "sha256:b5d3630e762ad6b24666122253cef1b5583060106fab99c3227c29861c3e27c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15148,
                    "digest": "sha256:5fe86f67f75910e2f3b43cff17be2c772001fb9f680ef4a723097ffd4327557b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375,
                    "digest": "sha256:1afae96a44f226cf2cf16a14b4a72c300ce76f498d7730d85ba5b0c46a0fbf87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:1bf669dcbb5ea42353f0c184604eee1786e80b052d49819548f139ad7497c3d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55912128,
                    "digest": "sha256:45a00f65bf61134587276368ecf5e7ced03f8a1f4fa27d4e525ed22451ff6e59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1124660109,
                    "digest": "sha256:5c0c93d71211d4440c2170b2cdcdce34e49a79c16a7765e5748721c1a207d0b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1155880236,
                    "digest": "sha256:ae1dd4276f3e78f9062a56060bb180a527e98b3598c88216ba8d53d17242892d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14980,
                    "digest": "sha256:c21e78ec52a52625e68ec7bee29dada3d697ece338fd59ad83ea3914c9fdfb7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15890,
                    "digest": "sha256:ae212bbbc180cd30039efe9cd2402abdd3fe48d316e477dbff2c224050c8a694"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52220,
                    "digest": "sha256:4c9edcc44754b0d0a75d391c38df38d33d32c5e13115e9721ba94ba0e6ddc01f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15286,
                    "digest": "sha256:8d37603c452994ddc19b5050aa292e0a1392800453d527014c345560f2751111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2381,
                    "digest": "sha256:4d601922de02009248c58988e08b0fb4dda3ff39524e52bb786a8614f7492d37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19766,
                    "digest": "sha256:1711e5690843d70130a5867bb5411f86877b431244bbbc1914c7dbb9e55f78e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41070,
                    "digest": "sha256:4a50c9552cd8a71babb0c2e011a02fe72a8368b0f7faac0f55c01105d2850a0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "24.03.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 59665,
                "digest": "sha256:f8639222df73fa766189e309f4606e6fce5c1dcee6e2db00df0a21677a58a267"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30447882,
                    "digest": "sha256:31bd5f451a847d651a0996256753a9b22a6ea8c65fefb010e77ea9c839fe2fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133329657,
                    "digest": "sha256:ce8cc979c12ec0f60e45b40683afc3df504bbb1e049468d546ad1728cb8dbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152859,
                    "digest": "sha256:b4655ab72d6645c694f68bedaa736c6ce498cee6bfc44bcfd1e83056dd591a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15100,
                    "digest": "sha256:d70fc0fc8075b5838efe5c58c08cb2eb266526c6b099f048e37dea779668d538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2925223394,
                    "digest": "sha256:fe8a966cb8fc5db903a157b90c4951e7d6ae80b4b39204ff3294b2e7d5926111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11528,
                    "digest": "sha256:04923829d9a5eecc2e459cb9631c379f48a5959d496a72472d3497b89504a7ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7c6a9a9ea6058400785b314fc55260320b3c49563f7692f0746bd5875708fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5722,
                    "digest": "sha256:dd6850141179aa89cc90f964600a4357b94e4e6a8526d2435f9fd0ae704cc4d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:1ba7f770c2b7186d8f77d86e4f5ff595ee91b38dc3ca00d9c9681252890d2819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368597,
                    "digest": "sha256:28d2d38f5f1a3196b2915e1bc8a9211d2a33af3468981374efb317a9c9415792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902530,
                    "digest": "sha256:2b069040cb644c6a0dbded7dd6d722e85549cd3da5127c6ed02b05fef66a1758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:25a11129edd6b98ff1cc0ca09ef64207cf867177d8f158eef9ba009818ccff79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476386432,
                    "digest": "sha256:8b6652143eacb9375119af1e72181023a9a8b9996363cf22aae037d621605f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67143455,
                    "digest": "sha256:5ae505987b0c3b9da949b6e0c104376f6107704fed64fb46822dd619ab0651af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8539493,
                    "digest": "sha256:af0496c76d99d20f2e99acbbf43a8fc38b69476ed97633486f282ffd11f76b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260220,
                    "digest": "sha256:6d01c7ef99accffefe09a5041a891c17e9183b0242977760d1dd96ed06bd5b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748518,
                    "digest": "sha256:6b291f4a0909e3e6f785426db8f775cc2abcbc17819d764e1d37fcaaaa089370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:fc45afb36fa6b0ed80f672d518c4af53d8807918e0f254b466a89efe6858881b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488864043,
                    "digest": "sha256:659de15fb9cb806b60673fe9410d3a1bba52c963b5208a0a055395f4252316cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 643255816,
                    "digest": "sha256:9507c73dfe60d8f0a52ef9d794bd89950d81c32e98f27c85cf25b9e727e64310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54285508,
                    "digest": "sha256:e49b9068ff39a9b99549bee050cfc8cd6d88c9d79a5d53ab69ea62d991ee48f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:80329dfe43a8ce79454da8b9f7046b446f91de76a7cb752112339475bfc77c5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69239219,
                    "digest": "sha256:3d6bbd8c25038085082a33738222a605317a3d05d74a4fa915ea9ec5498a4a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:4dae9d37c6081720ac2a8f96d095823bbf6816050acb459e2c911d7ad60fe966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747611,
                    "digest": "sha256:ff95200a93c6dc1da367514bf4fe6035dc76d6f84d2510a484cfab174bd9cebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2344716946,
                    "digest": "sha256:e53cd7499a582d85501561896b7f36777a23b0e624ae0ce3f1470d4be47b823c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320405,
                    "digest": "sha256:1bcb8401a3f58fb1da8e38bb98ee73c80237ab38e192b3bb02b55c7821196b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167431492,
                    "digest": "sha256:2e1a99ef64a31d72ca30d7e4597138fafdd88de31e36161977f152ee041ef9e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303844619,
                    "digest": "sha256:4274655c4688455bd92824909b85ba723978b1fb70ba30375f7add7b64387088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28740935,
                    "digest": "sha256:94e59f9b9d856e70738801a056df5ea266993b1e6c1627eef94645d304071a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:d5a762491a36834a4ee5531f978f356dd2940137fd5fd60b0c3bec0eea08ad9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470495018,
                    "digest": "sha256:5a54e3f7004ebb31082a648b0cc3322cd455cff3a4e91b01e9bdf8f6766e62c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344302,
                    "digest": "sha256:793228fec91c06b916320a57bff9320625570a4ed6ca671cc5ba7af035fd453c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61690,
                    "digest": "sha256:5d76d81b9de6fe9ab4ef31a684bb523be14ae6791937c2a3f3cd22297f42278c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832886008,
                    "digest": "sha256:0a712b700186574c6f625d0c07363e62ac4eb4f37fa0e5938d1cc5c7409a6ab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:29d382b49364bd5af3dba7968fb364cec842299853d4f99e5f83c2f482001e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:a44517dcf1730ba00caac630fb9faf541e2455e73565e9cebabac667029915bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764871,
                    "digest": "sha256:9915312acb9c4602d64fa1f4297c1518d2bf1c804393e50b64df3e29632a3b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128376,
                    "digest": "sha256:0a38a9efa24d6bed9eeaafde04eb07d6869737038afa36056071b8c638b2e0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569827,
                    "digest": "sha256:9974ea02ccb08d37d08e67f39e1d0f81ff58547404a9673e43b7292bd8c0ff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6464344,
                    "digest": "sha256:e6621cbb7adf94f2d0617e884645da812d823442e2ef7880bf1e4db33a09c1c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60682087,
                    "digest": "sha256:c8b807748ba0f231d48bdddf7c765bb67892c0989c589f322cfd26b884a28384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14811022,
                    "digest": "sha256:a021b0895cea94f6be9cac2dc2c09cf4cd02696feecf4f07bfe9c5235c74e5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112276835,
                    "digest": "sha256:f3be9d74b9ba928de56bbb0788234f5246bfe0d660efc87ecb55a7bc08589c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109589432,
                    "digest": "sha256:2c862030856eabf2823ce55609e25529de492061b5151bdc918c44868e6c4d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14115,
                    "digest": "sha256:d4f48aa94df98b95049d02258988f44a3c818897f8f6d6c203dcee095be28ad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:958e6b58ee1c83c42634b506b02571bb4f3f9f698994ca81ce285e80ffbb39c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4940272,
                    "digest": "sha256:d2ab946be33196ae3867effc5d849aef995af5ab07410a001477899619095d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:9a8ffbb8227f91ffb75a76ef802317b8cd833672e1fcab8105e0c58a23295477"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172280948,
                    "digest": "sha256:4b047247faa41d0735b7be803fbfc11e763d85518e56dac8dc5df99e1ffd8270"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477896295,
                    "digest": "sha256:197a4bd0d39524e1e34aa444fba09830b91362eea300532ae69d3cad38f71aa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4577687,
                    "digest": "sha256:433a11ca874c606cf60b52c0c41abd359cf1d7acff03263e671fd4329a7974a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 548478562,
                    "digest": "sha256:6461fa0110fd94fcef902a20749e7cbea50d1f2b07a47e6709760b647e4ed6e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1260409,
                    "digest": "sha256:631f73e0d8eac60c64f93762eb363bba5b475eef152ce3e40c258f32c83f52d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3934469,
                    "digest": "sha256:b729b7734e1cccb21203742347be2c9c0e06b37a166fa3abae5542d57135e7e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3785508,
                    "digest": "sha256:d4fa08e3d443b9f3b6b415beab6f0870c87f6fbcde381b9d80b254cb97182c79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119930569,
                    "digest": "sha256:f19c10fd61fa45b8133111f99115405a849602df13dab780294591ae2c8d5a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853481,
                    "digest": "sha256:db04538e864705f3e818fbd0c596c0d5ed6a0c9b68a6f65d55a6b32f0f5d8866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338899,
                    "digest": "sha256:85c5f79ee8dde7f45f623e07cf6c66d8b0e695e9cc5ac35812783480d0c55d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812249811,
                    "digest": "sha256:41d98218212c515337029c0d853a889539207424dcfac478a6e14811a841d268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843279,
                    "digest": "sha256:5d0bf3cefc436f378a1a01fd74659792948d6b84c2373ea3800e5f8c17043e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979667,
                    "digest": "sha256:632f3b0e17e06d88a86110795bae6874ef8c5826ddc29a12ead6e19d4960a705"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1564053,
                    "digest": "sha256:808c9287ff821ddff4b2d97197cc663432f9f34f2d297708105cddf81479e8b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2255,
                    "digest": "sha256:13e83ef06dfd4f7d4de215b1dfb20cd019c63b944ae852324ac6186cdd4b2c05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668010,
                    "digest": "sha256:26871000cfab5b29252b15897385efa5e1998dd9e120b8706171865564e79bb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123325,
                    "digest": "sha256:fd1bcf5376ef05643e86d89db65ad941ddec9410548a1673d058530cc1f61334"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30009450,
                    "digest": "sha256:dfc402b3a7d6c1f6fbee77de6935bec54c42a7f84824d3cff420eea3365bd44b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217156157,
                    "digest": "sha256:cd117190a3623db77d63ab127c950f43045273bf3f224df1c0f27c676a71109c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                }
            ]
        },
        "24.03": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 59665,
                "digest": "sha256:f8639222df73fa766189e309f4606e6fce5c1dcee6e2db00df0a21677a58a267"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30447882,
                    "digest": "sha256:31bd5f451a847d651a0996256753a9b22a6ea8c65fefb010e77ea9c839fe2fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133329657,
                    "digest": "sha256:ce8cc979c12ec0f60e45b40683afc3df504bbb1e049468d546ad1728cb8dbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152859,
                    "digest": "sha256:b4655ab72d6645c694f68bedaa736c6ce498cee6bfc44bcfd1e83056dd591a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15100,
                    "digest": "sha256:d70fc0fc8075b5838efe5c58c08cb2eb266526c6b099f048e37dea779668d538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2925223394,
                    "digest": "sha256:fe8a966cb8fc5db903a157b90c4951e7d6ae80b4b39204ff3294b2e7d5926111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11528,
                    "digest": "sha256:04923829d9a5eecc2e459cb9631c379f48a5959d496a72472d3497b89504a7ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7c6a9a9ea6058400785b314fc55260320b3c49563f7692f0746bd5875708fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5722,
                    "digest": "sha256:dd6850141179aa89cc90f964600a4357b94e4e6a8526d2435f9fd0ae704cc4d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:1ba7f770c2b7186d8f77d86e4f5ff595ee91b38dc3ca00d9c9681252890d2819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368597,
                    "digest": "sha256:28d2d38f5f1a3196b2915e1bc8a9211d2a33af3468981374efb317a9c9415792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902530,
                    "digest": "sha256:2b069040cb644c6a0dbded7dd6d722e85549cd3da5127c6ed02b05fef66a1758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:25a11129edd6b98ff1cc0ca09ef64207cf867177d8f158eef9ba009818ccff79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476386432,
                    "digest": "sha256:8b6652143eacb9375119af1e72181023a9a8b9996363cf22aae037d621605f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67143455,
                    "digest": "sha256:5ae505987b0c3b9da949b6e0c104376f6107704fed64fb46822dd619ab0651af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8539493,
                    "digest": "sha256:af0496c76d99d20f2e99acbbf43a8fc38b69476ed97633486f282ffd11f76b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260220,
                    "digest": "sha256:6d01c7ef99accffefe09a5041a891c17e9183b0242977760d1dd96ed06bd5b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748518,
                    "digest": "sha256:6b291f4a0909e3e6f785426db8f775cc2abcbc17819d764e1d37fcaaaa089370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:fc45afb36fa6b0ed80f672d518c4af53d8807918e0f254b466a89efe6858881b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488864043,
                    "digest": "sha256:659de15fb9cb806b60673fe9410d3a1bba52c963b5208a0a055395f4252316cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 643255816,
                    "digest": "sha256:9507c73dfe60d8f0a52ef9d794bd89950d81c32e98f27c85cf25b9e727e64310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54285508,
                    "digest": "sha256:e49b9068ff39a9b99549bee050cfc8cd6d88c9d79a5d53ab69ea62d991ee48f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:80329dfe43a8ce79454da8b9f7046b446f91de76a7cb752112339475bfc77c5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69239219,
                    "digest": "sha256:3d6bbd8c25038085082a33738222a605317a3d05d74a4fa915ea9ec5498a4a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:4dae9d37c6081720ac2a8f96d095823bbf6816050acb459e2c911d7ad60fe966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747611,
                    "digest": "sha256:ff95200a93c6dc1da367514bf4fe6035dc76d6f84d2510a484cfab174bd9cebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2344716946,
                    "digest": "sha256:e53cd7499a582d85501561896b7f36777a23b0e624ae0ce3f1470d4be47b823c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320405,
                    "digest": "sha256:1bcb8401a3f58fb1da8e38bb98ee73c80237ab38e192b3bb02b55c7821196b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167431492,
                    "digest": "sha256:2e1a99ef64a31d72ca30d7e4597138fafdd88de31e36161977f152ee041ef9e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303844619,
                    "digest": "sha256:4274655c4688455bd92824909b85ba723978b1fb70ba30375f7add7b64387088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28740935,
                    "digest": "sha256:94e59f9b9d856e70738801a056df5ea266993b1e6c1627eef94645d304071a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:d5a762491a36834a4ee5531f978f356dd2940137fd5fd60b0c3bec0eea08ad9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470495018,
                    "digest": "sha256:5a54e3f7004ebb31082a648b0cc3322cd455cff3a4e91b01e9bdf8f6766e62c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344302,
                    "digest": "sha256:793228fec91c06b916320a57bff9320625570a4ed6ca671cc5ba7af035fd453c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61690,
                    "digest": "sha256:5d76d81b9de6fe9ab4ef31a684bb523be14ae6791937c2a3f3cd22297f42278c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832886008,
                    "digest": "sha256:0a712b700186574c6f625d0c07363e62ac4eb4f37fa0e5938d1cc5c7409a6ab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:29d382b49364bd5af3dba7968fb364cec842299853d4f99e5f83c2f482001e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:a44517dcf1730ba00caac630fb9faf541e2455e73565e9cebabac667029915bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764871,
                    "digest": "sha256:9915312acb9c4602d64fa1f4297c1518d2bf1c804393e50b64df3e29632a3b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128376,
                    "digest": "sha256:0a38a9efa24d6bed9eeaafde04eb07d6869737038afa36056071b8c638b2e0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569827,
                    "digest": "sha256:9974ea02ccb08d37d08e67f39e1d0f81ff58547404a9673e43b7292bd8c0ff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6464344,
                    "digest": "sha256:e6621cbb7adf94f2d0617e884645da812d823442e2ef7880bf1e4db33a09c1c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60682087,
                    "digest": "sha256:c8b807748ba0f231d48bdddf7c765bb67892c0989c589f322cfd26b884a28384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14811022,
                    "digest": "sha256:a021b0895cea94f6be9cac2dc2c09cf4cd02696feecf4f07bfe9c5235c74e5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112276835,
                    "digest": "sha256:f3be9d74b9ba928de56bbb0788234f5246bfe0d660efc87ecb55a7bc08589c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109589432,
                    "digest": "sha256:2c862030856eabf2823ce55609e25529de492061b5151bdc918c44868e6c4d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14115,
                    "digest": "sha256:d4f48aa94df98b95049d02258988f44a3c818897f8f6d6c203dcee095be28ad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:958e6b58ee1c83c42634b506b02571bb4f3f9f698994ca81ce285e80ffbb39c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4940272,
                    "digest": "sha256:d2ab946be33196ae3867effc5d849aef995af5ab07410a001477899619095d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:9a8ffbb8227f91ffb75a76ef802317b8cd833672e1fcab8105e0c58a23295477"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172280948,
                    "digest": "sha256:4b047247faa41d0735b7be803fbfc11e763d85518e56dac8dc5df99e1ffd8270"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477896295,
                    "digest": "sha256:197a4bd0d39524e1e34aa444fba09830b91362eea300532ae69d3cad38f71aa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4577687,
                    "digest": "sha256:433a11ca874c606cf60b52c0c41abd359cf1d7acff03263e671fd4329a7974a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 548478562,
                    "digest": "sha256:6461fa0110fd94fcef902a20749e7cbea50d1f2b07a47e6709760b647e4ed6e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1260409,
                    "digest": "sha256:631f73e0d8eac60c64f93762eb363bba5b475eef152ce3e40c258f32c83f52d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3934469,
                    "digest": "sha256:b729b7734e1cccb21203742347be2c9c0e06b37a166fa3abae5542d57135e7e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3785508,
                    "digest": "sha256:d4fa08e3d443b9f3b6b415beab6f0870c87f6fbcde381b9d80b254cb97182c79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119930569,
                    "digest": "sha256:f19c10fd61fa45b8133111f99115405a849602df13dab780294591ae2c8d5a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853481,
                    "digest": "sha256:db04538e864705f3e818fbd0c596c0d5ed6a0c9b68a6f65d55a6b32f0f5d8866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 338899,
                    "digest": "sha256:85c5f79ee8dde7f45f623e07cf6c66d8b0e695e9cc5ac35812783480d0c55d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3812249811,
                    "digest": "sha256:41d98218212c515337029c0d853a889539207424dcfac478a6e14811a841d268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843279,
                    "digest": "sha256:5d0bf3cefc436f378a1a01fd74659792948d6b84c2373ea3800e5f8c17043e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 979667,
                    "digest": "sha256:632f3b0e17e06d88a86110795bae6874ef8c5826ddc29a12ead6e19d4960a705"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1564053,
                    "digest": "sha256:808c9287ff821ddff4b2d97197cc663432f9f34f2d297708105cddf81479e8b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2255,
                    "digest": "sha256:13e83ef06dfd4f7d4de215b1dfb20cd019c63b944ae852324ac6186cdd4b2c05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156668010,
                    "digest": "sha256:26871000cfab5b29252b15897385efa5e1998dd9e120b8706171865564e79bb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123325,
                    "digest": "sha256:fd1bcf5376ef05643e86d89db65ad941ddec9410548a1673d058530cc1f61334"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30009450,
                    "digest": "sha256:dfc402b3a7d6c1f6fbee77de6935bec54c42a7f84824d3cff420eea3365bd44b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217156157,
                    "digest": "sha256:cd117190a3623db77d63ab127c950f43045273bf3f224df1c0f27c676a71109c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                }
            ]
        },
        "dev.framework": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 66192,
                "digest": "sha256:b170c191f96192b86ae29f255b87cddecd041728f2fcfb3cf2dfe0fac6d67543"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30447882,
                    "digest": "sha256:31bd5f451a847d651a0996256753a9b22a6ea8c65fefb010e77ea9c839fe2fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133329657,
                    "digest": "sha256:ce8cc979c12ec0f60e45b40683afc3df504bbb1e049468d546ad1728cb8dbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152859,
                    "digest": "sha256:b4655ab72d6645c694f68bedaa736c6ce498cee6bfc44bcfd1e83056dd591a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15100,
                    "digest": "sha256:d70fc0fc8075b5838efe5c58c08cb2eb266526c6b099f048e37dea779668d538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2925223394,
                    "digest": "sha256:fe8a966cb8fc5db903a157b90c4951e7d6ae80b4b39204ff3294b2e7d5926111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11528,
                    "digest": "sha256:04923829d9a5eecc2e459cb9631c379f48a5959d496a72472d3497b89504a7ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7c6a9a9ea6058400785b314fc55260320b3c49563f7692f0746bd5875708fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5722,
                    "digest": "sha256:dd6850141179aa89cc90f964600a4357b94e4e6a8526d2435f9fd0ae704cc4d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:1ba7f770c2b7186d8f77d86e4f5ff595ee91b38dc3ca00d9c9681252890d2819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368597,
                    "digest": "sha256:28d2d38f5f1a3196b2915e1bc8a9211d2a33af3468981374efb317a9c9415792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902530,
                    "digest": "sha256:2b069040cb644c6a0dbded7dd6d722e85549cd3da5127c6ed02b05fef66a1758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:25a11129edd6b98ff1cc0ca09ef64207cf867177d8f158eef9ba009818ccff79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476386432,
                    "digest": "sha256:8b6652143eacb9375119af1e72181023a9a8b9996363cf22aae037d621605f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67143455,
                    "digest": "sha256:5ae505987b0c3b9da949b6e0c104376f6107704fed64fb46822dd619ab0651af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8539493,
                    "digest": "sha256:af0496c76d99d20f2e99acbbf43a8fc38b69476ed97633486f282ffd11f76b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260220,
                    "digest": "sha256:6d01c7ef99accffefe09a5041a891c17e9183b0242977760d1dd96ed06bd5b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748518,
                    "digest": "sha256:6b291f4a0909e3e6f785426db8f775cc2abcbc17819d764e1d37fcaaaa089370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:fc45afb36fa6b0ed80f672d518c4af53d8807918e0f254b466a89efe6858881b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488864043,
                    "digest": "sha256:659de15fb9cb806b60673fe9410d3a1bba52c963b5208a0a055395f4252316cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 643255816,
                    "digest": "sha256:9507c73dfe60d8f0a52ef9d794bd89950d81c32e98f27c85cf25b9e727e64310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54285508,
                    "digest": "sha256:e49b9068ff39a9b99549bee050cfc8cd6d88c9d79a5d53ab69ea62d991ee48f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:80329dfe43a8ce79454da8b9f7046b446f91de76a7cb752112339475bfc77c5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69239219,
                    "digest": "sha256:3d6bbd8c25038085082a33738222a605317a3d05d74a4fa915ea9ec5498a4a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:4dae9d37c6081720ac2a8f96d095823bbf6816050acb459e2c911d7ad60fe966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747611,
                    "digest": "sha256:ff95200a93c6dc1da367514bf4fe6035dc76d6f84d2510a484cfab174bd9cebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2344716946,
                    "digest": "sha256:e53cd7499a582d85501561896b7f36777a23b0e624ae0ce3f1470d4be47b823c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320405,
                    "digest": "sha256:1bcb8401a3f58fb1da8e38bb98ee73c80237ab38e192b3bb02b55c7821196b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167431492,
                    "digest": "sha256:2e1a99ef64a31d72ca30d7e4597138fafdd88de31e36161977f152ee041ef9e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303844619,
                    "digest": "sha256:4274655c4688455bd92824909b85ba723978b1fb70ba30375f7add7b64387088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28740935,
                    "digest": "sha256:94e59f9b9d856e70738801a056df5ea266993b1e6c1627eef94645d304071a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:d5a762491a36834a4ee5531f978f356dd2940137fd5fd60b0c3bec0eea08ad9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470495018,
                    "digest": "sha256:5a54e3f7004ebb31082a648b0cc3322cd455cff3a4e91b01e9bdf8f6766e62c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344302,
                    "digest": "sha256:793228fec91c06b916320a57bff9320625570a4ed6ca671cc5ba7af035fd453c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61690,
                    "digest": "sha256:5d76d81b9de6fe9ab4ef31a684bb523be14ae6791937c2a3f3cd22297f42278c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832886008,
                    "digest": "sha256:0a712b700186574c6f625d0c07363e62ac4eb4f37fa0e5938d1cc5c7409a6ab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:29d382b49364bd5af3dba7968fb364cec842299853d4f99e5f83c2f482001e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:a44517dcf1730ba00caac630fb9faf541e2455e73565e9cebabac667029915bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764871,
                    "digest": "sha256:9915312acb9c4602d64fa1f4297c1518d2bf1c804393e50b64df3e29632a3b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128376,
                    "digest": "sha256:0a38a9efa24d6bed9eeaafde04eb07d6869737038afa36056071b8c638b2e0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569827,
                    "digest": "sha256:9974ea02ccb08d37d08e67f39e1d0f81ff58547404a9673e43b7292bd8c0ff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6464344,
                    "digest": "sha256:e6621cbb7adf94f2d0617e884645da812d823442e2ef7880bf1e4db33a09c1c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60682087,
                    "digest": "sha256:c8b807748ba0f231d48bdddf7c765bb67892c0989c589f322cfd26b884a28384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14811022,
                    "digest": "sha256:a021b0895cea94f6be9cac2dc2c09cf4cd02696feecf4f07bfe9c5235c74e5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112276835,
                    "digest": "sha256:f3be9d74b9ba928de56bbb0788234f5246bfe0d660efc87ecb55a7bc08589c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109589432,
                    "digest": "sha256:2c862030856eabf2823ce55609e25529de492061b5151bdc918c44868e6c4d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14115,
                    "digest": "sha256:d4f48aa94df98b95049d02258988f44a3c818897f8f6d6c203dcee095be28ad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:958e6b58ee1c83c42634b506b02571bb4f3f9f698994ca81ce285e80ffbb39c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141130526,
                    "digest": "sha256:21fc6b9cafb66cff68789d0b73845da82d9b84c9a855cc13ea170e64c69361e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:5ee2f040c59b86c863fe6cc1784165e7261d7ba025a7f929fa06723092fa918c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15857884,
                    "digest": "sha256:d2733d5075d36396473e4b96349c6538ca5d1fd6bb561d0718fd92989d2970cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:665361df0253cdf612780baf71371aea17e6072c1d32f1733a3fdaafa71a6d65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94767308,
                    "digest": "sha256:80f05ff8005f4da3555c11b21e4f6c12b76a65434a067d9e8293c8f5b7dedd7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 420,
                    "digest": "sha256:f5eb43e7cfac6b95848ce09c12a867e3c6629023b413aaf02751e5449f068d84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139,
                    "digest": "sha256:8feba70d6c35c07941db54259e6a7226f6426a32ea6c86f8a332c8c1cddd8dfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1814,
                    "digest": "sha256:e88ff89e93125baae39af2f9e6f9115e674679b572c0773c7b8fe6789d9ec551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4737561634,
                    "digest": "sha256:92a9edbdec7f987dc30e926000b690a03c0ddf30c2f1f0b9b55835969cddb6f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 191,
                    "digest": "sha256:0d9da798ae53214c26f6da4d543e11278e2143ac40a1c9e65ec0364ec1b98343"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 530978,
                    "digest": "sha256:631c3920bf7a529581820f3581efa0613251061f2fb3942ab00670292a8a6106"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 412,
                    "digest": "sha256:3912c6fc7f2035126572f840658e6c9a2c9f2fe52fcff722c799d8782b8b96e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853540,
                    "digest": "sha256:cab197cc5c5aa95cd2a399e456cbea3720f0a9fa615736c60ba65c9ec136fdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123300,
                    "digest": "sha256:e0968150ef387a8e84d254548b33954aff7d83e446d6d3281681a4c36c5174d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30009380,
                    "digest": "sha256:b6955e77e5b5f7aee05b44949fd12635d943d31ec41bf4cbfa00301c839ae33b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217152998,
                    "digest": "sha256:cae11e1dbcc7f0f28bd151170480eb02434004d224aae3511e91a97e8ee5a954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172355874,
                    "digest": "sha256:c66f5fe96afa7390ade99d45bda07373f124c9228d78bc28628f214dc38aa806"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554346834,
                    "digest": "sha256:69ab01a2725b3f94609d106970be605cdcf5ea6ffecfa3c1dc7b9f5b393b9361"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8834796,
                    "digest": "sha256:1d6608b206efa65b157b924f0e6946ecede80332851bd9f573c95c2b92ad9121"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1242266003,
                    "digest": "sha256:c4ede145eda340f43bce4416f0af701130555cf5283d1eb8fac5252455b918ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408834579,
                    "digest": "sha256:7c9fd24325f31981945e05640490f6bd3750fe601dc4361a978ff3834c8fe198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20459,
                    "digest": "sha256:854940c05e82ff5116964f41f97d4ee311e2a369a9e730a02e9e31d7c4d5b0f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85568793,
                    "digest": "sha256:1b0761882ef68ad55dcb1450516a9bfa15b00e3fd324265dd54559dbfc9b435d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133491105,
                    "digest": "sha256:cace803f5e81f5029237bb20f528a8561678bb7328a8fefe8aef061c533c4c1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844928,
                    "digest": "sha256:a24e061c1945019825e69ddbb1774193e42a8e3de29417f83a4096fc4c686d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4589134042,
                    "digest": "sha256:ecb02d92eff116163979471fa704e145c81973f87dad5bd9331cfdc30234d0b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1435082,
                    "digest": "sha256:a088793e6713de54de08103001694821c9c4595c51f0491f84980720ac49ac54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2949908,
                    "digest": "sha256:b1171dc435ea4300e0ef3a39742b618dc3dd333e3338c661536f69578db1360c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2257,
                    "digest": "sha256:9df3c164d590b83e3c93566f893057287edfc5e23290efc6d9fb823ece7a6081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 702804412,
                    "digest": "sha256:f41dfb3187fbd140a4026ea716116f54cc9fc3fa3a8dcea079b8623716855650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4135127,
                    "digest": "sha256:92b9e86f452e461c30546684bd5588e8e7329557a58557319b6f2c338ac793b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1112820,
                    "digest": "sha256:ee0c0c9fe13faa9399f83b882990ee608f0591476188a378ed9d74fa562e25a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 908,
                    "digest": "sha256:17155c6cd30da536e4aace7049fc47f038226e5535dde50a3167dcb864829d82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                }
            ]
        },
        "dev": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 66790,
                "digest": "sha256:e71dd60a86a82960506af432bb546953f96d15140ca7c687e1235fafc6b314dc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30447882,
                    "digest": "sha256:31bd5f451a847d651a0996256753a9b22a6ea8c65fefb010e77ea9c839fe2fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133329657,
                    "digest": "sha256:ce8cc979c12ec0f60e45b40683afc3df504bbb1e049468d546ad1728cb8dbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155152859,
                    "digest": "sha256:b4655ab72d6645c694f68bedaa736c6ce498cee6bfc44bcfd1e83056dd591a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15100,
                    "digest": "sha256:d70fc0fc8075b5838efe5c58c08cb2eb266526c6b099f048e37dea779668d538"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2925223394,
                    "digest": "sha256:fe8a966cb8fc5db903a157b90c4951e7d6ae80b4b39204ff3294b2e7d5926111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11528,
                    "digest": "sha256:04923829d9a5eecc2e459cb9631c379f48a5959d496a72472d3497b89504a7ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 180,
                    "digest": "sha256:7c6a9a9ea6058400785b314fc55260320b3c49563f7692f0746bd5875708fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5722,
                    "digest": "sha256:dd6850141179aa89cc90f964600a4357b94e4e6a8526d2435f9fd0ae704cc4d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139292,
                    "digest": "sha256:1ba7f770c2b7186d8f77d86e4f5ff595ee91b38dc3ca00d9c9681252890d2819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368597,
                    "digest": "sha256:28d2d38f5f1a3196b2915e1bc8a9211d2a33af3468981374efb317a9c9415792"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 86902530,
                    "digest": "sha256:2b069040cb644c6a0dbded7dd6d722e85549cd3da5127c6ed02b05fef66a1758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 503,
                    "digest": "sha256:25a11129edd6b98ff1cc0ca09ef64207cf867177d8f158eef9ba009818ccff79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476386432,
                    "digest": "sha256:8b6652143eacb9375119af1e72181023a9a8b9996363cf22aae037d621605f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67143455,
                    "digest": "sha256:5ae505987b0c3b9da949b6e0c104376f6107704fed64fb46822dd619ab0651af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8539493,
                    "digest": "sha256:af0496c76d99d20f2e99acbbf43a8fc38b69476ed97633486f282ffd11f76b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27260220,
                    "digest": "sha256:6d01c7ef99accffefe09a5041a891c17e9183b0242977760d1dd96ed06bd5b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12748518,
                    "digest": "sha256:6b291f4a0909e3e6f785426db8f775cc2abcbc17819d764e1d37fcaaaa089370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 114,
                    "digest": "sha256:fc45afb36fa6b0ed80f672d518c4af53d8807918e0f254b466a89efe6858881b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 488864043,
                    "digest": "sha256:659de15fb9cb806b60673fe9410d3a1bba52c963b5208a0a055395f4252316cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 643255816,
                    "digest": "sha256:9507c73dfe60d8f0a52ef9d794bd89950d81c32e98f27c85cf25b9e727e64310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54285508,
                    "digest": "sha256:e49b9068ff39a9b99549bee050cfc8cd6d88c9d79a5d53ab69ea62d991ee48f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8416,
                    "digest": "sha256:80329dfe43a8ce79454da8b9f7046b446f91de76a7cb752112339475bfc77c5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69239219,
                    "digest": "sha256:3d6bbd8c25038085082a33738222a605317a3d05d74a4fa915ea9ec5498a4a27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:4dae9d37c6081720ac2a8f96d095823bbf6816050acb459e2c911d7ad60fe966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15747611,
                    "digest": "sha256:ff95200a93c6dc1da367514bf4fe6035dc76d6f84d2510a484cfab174bd9cebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2344716946,
                    "digest": "sha256:e53cd7499a582d85501561896b7f36777a23b0e624ae0ce3f1470d4be47b823c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 320405,
                    "digest": "sha256:1bcb8401a3f58fb1da8e38bb98ee73c80237ab38e192b3bb02b55c7821196b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167431492,
                    "digest": "sha256:2e1a99ef64a31d72ca30d7e4597138fafdd88de31e36161977f152ee041ef9e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303844619,
                    "digest": "sha256:4274655c4688455bd92824909b85ba723978b1fb70ba30375f7add7b64387088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28740935,
                    "digest": "sha256:94e59f9b9d856e70738801a056df5ea266993b1e6c1627eef94645d304071a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:d5a762491a36834a4ee5531f978f356dd2940137fd5fd60b0c3bec0eea08ad9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470495018,
                    "digest": "sha256:5a54e3f7004ebb31082a648b0cc3322cd455cff3a4e91b01e9bdf8f6766e62c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344302,
                    "digest": "sha256:793228fec91c06b916320a57bff9320625570a4ed6ca671cc5ba7af035fd453c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61690,
                    "digest": "sha256:5d76d81b9de6fe9ab4ef31a684bb523be14ae6791937c2a3f3cd22297f42278c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1832886008,
                    "digest": "sha256:0a712b700186574c6f625d0c07363e62ac4eb4f37fa0e5938d1cc5c7409a6ab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1120,
                    "digest": "sha256:29d382b49364bd5af3dba7968fb364cec842299853d4f99e5f83c2f482001e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1115,
                    "digest": "sha256:a44517dcf1730ba00caac630fb9faf541e2455e73565e9cebabac667029915bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6764871,
                    "digest": "sha256:9915312acb9c4602d64fa1f4297c1518d2bf1c804393e50b64df3e29632a3b66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30128376,
                    "digest": "sha256:0a38a9efa24d6bed9eeaafde04eb07d6869737038afa36056071b8c638b2e0ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569827,
                    "digest": "sha256:9974ea02ccb08d37d08e67f39e1d0f81ff58547404a9673e43b7292bd8c0ff8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6464344,
                    "digest": "sha256:e6621cbb7adf94f2d0617e884645da812d823442e2ef7880bf1e4db33a09c1c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60682087,
                    "digest": "sha256:c8b807748ba0f231d48bdddf7c765bb67892c0989c589f322cfd26b884a28384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14811022,
                    "digest": "sha256:a021b0895cea94f6be9cac2dc2c09cf4cd02696feecf4f07bfe9c5235c74e5ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112276835,
                    "digest": "sha256:f3be9d74b9ba928de56bbb0788234f5246bfe0d660efc87ecb55a7bc08589c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109589432,
                    "digest": "sha256:2c862030856eabf2823ce55609e25529de492061b5151bdc918c44868e6c4d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14115,
                    "digest": "sha256:d4f48aa94df98b95049d02258988f44a3c818897f8f6d6c203dcee095be28ad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 501,
                    "digest": "sha256:958e6b58ee1c83c42634b506b02571bb4f3f9f698994ca81ce285e80ffbb39c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6225810,
                    "digest": "sha256:5b38bb16eda8e782697997191ebf8160065ce30fc084bb5dc7d1ddeaf2e25698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:420cb4ff199ecb669ec66d0f543f148ca694d6ca3df8c52720e510353191c1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30520764,
                    "digest": "sha256:1e672c6bb537dcf68721a1b0fa054c97292e1aeb0a54e139a4f89b9285ab0341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 446,
                    "digest": "sha256:3b1140ba3acb9794be56787011908649ac5e9014d739f4adabd2f6d782d92099"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94767340,
                    "digest": "sha256:044cb4455251e77ce0f7108e7888ab9a99df6d0b9fb46f193487af950c20e4a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 419,
                    "digest": "sha256:e01e682a50ee19dff39c9172eb1b3d1fa413e95db60c94c55127c99491969a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137,
                    "digest": "sha256:f542b4d015d9905518fb66008f20306a6d1b41ef0cd2765da596c0f4743e3582"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1813,
                    "digest": "sha256:4a82ca21ae5158d97d0d4dab0783c5fc053997d47b35c4e5fbfe4139abc60bdf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5152862515,
                    "digest": "sha256:0712e59de3b024b1d076aa0a998d3f5a28f703c1a9004650e327da5ee2bc811d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 190,
                    "digest": "sha256:16b5b234f0acf4242c89243c456e036fe440d6ba138cbd33d0dc903f5c28c0fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 531049,
                    "digest": "sha256:74d9d5e1fd7f43fa85608941631923304fa5537d33aedc3284d9bbb5d5021ccb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 411,
                    "digest": "sha256:80f5e5c7ec84a2931c642cd890a30b44b7ba6dc8ecb46e0a3e197ff9aac3f86c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2853574,
                    "digest": "sha256:613fc7784544037b0319553045845c87d739cb6d8f736d502af460b5d3bfa53d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123330,
                    "digest": "sha256:dc8d649b990405bb05828c9e93aef9f9deec76160aab024cbd32721ec82e7f30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30009463,
                    "digest": "sha256:93134faa9793f14eea6a48703c50916c15877a59d55e392026e84249f3ad5821"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217155785,
                    "digest": "sha256:2fed812b0e25c2bca9854fa2ee3562ab3957c0119e6f2483b7c915272c62a128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:1226264aec0202faf4127cd9a14b1e5d93a0c60b317e558cd618e56c5a1bd97c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172344172,
                    "digest": "sha256:bc9d070063779b8798354384c1d0959b63989a05e8507d26d16835d9d07be3e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554240476,
                    "digest": "sha256:8e9bb4cafbc2db399a826eb0359e857b90245df61d235e335c47fb99d8dc0b11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154280755,
                    "digest": "sha256:417cdde7da4d8205811051fe63c94ef8bb91f8a9ba42f04fc9660e386ca6ac84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1242254108,
                    "digest": "sha256:d414066e6d8150e07b896cf12e31200f4f90a0fd825062e1e25461c14a5be8cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408831405,
                    "digest": "sha256:a9eebe7db8fe662e80c6b867d5694aacbddac5d7b34b1fb9f518fbc1303b55b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15279,
                    "digest": "sha256:c8d3da5698f98aba6443a4b82cb2fe15fcf3c5ff0bd298fb706c45ce0b100901"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85427847,
                    "digest": "sha256:06e75373ec0196239a6bf25feaf3adaed5d62cc44795047c1e910027155225e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133383689,
                    "digest": "sha256:37453cf4734e77e5d790f0b1f8ad5fe044eea87b2d47ccd125c60d771db45389"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:11a9549e5d46f72eba5d0344a34f57ed247f42c59bf2ea8f300154e0ac12b69a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 812211,
                    "digest": "sha256:c51b828ea2214d6c32e7e565f613efc51361582e77ec47161b3682e8c50f2aae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4661403312,
                    "digest": "sha256:dff248ddfa7c759ab294d244372fcecf92cc008942aee7a7feb337c4d7f5b720"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 956891,
                    "digest": "sha256:f2d42a43421159b2da2a605fd364e895a8b6d149e98c820f869ae2ac3ead6a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136750,
                    "digest": "sha256:8a12b296a6f3a555bf56fbefe8d6621577904ce03acfc5737cd2135b3306a4d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 247671,
                    "digest": "sha256:c3ac10fd7e978f5f6caf0a33dd987ce360d0a41c81c611f0afe7471a4db8ec1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2255,
                    "digest": "sha256:9de70ba787016b85285683fd6a77cb452dc405398a4fab00fab9e9d9e81ebee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 640810101,
                    "digest": "sha256:5b5ff92a2f0807e3e53e90d58fa1b9fce98c6d18883b6d0dc696c6bdb1a4b997"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4135167,
                    "digest": "sha256:5af9e94c913b5e6d4ca9ad5a32b58665ec8b3be9eb77ac77472710bf2c76a44d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2156667885,
                    "digest": "sha256:ecc60077073ed7da64b8fd39efcb6dc334ba6b4516a734154f4a304b49d918e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37033507,
                    "digest": "sha256:51608a2bc20e2d07f38952642039c34da187817379a5feb21ef15e9e1fcc9137"
                }
            ]
        },
        "v0.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 42472,
                "digest": "sha256:2f6180df102c681c21f725cf3a4a3509b5566f42d90f410f1dee15eb526458a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69349885,
                    "digest": "sha256:f3acd799c7569d66d9faa36abe83dd88c4143148e01cf378a9aff3f9a06cadb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 647224278,
                    "digest": "sha256:f9992cab42845dc28d0c687c2eb17831c98d21bbe736ee8de6c6c9c8e7783d34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18811,
                    "digest": "sha256:7dd577f0d8eb971a2e97121c285a3ff292a55d2ceb6bc68ea49701f89e148bf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2733,
                    "digest": "sha256:c1cb011d1b168d86131b36de00ea5881097c7b37c7e1c2fd9e9de3d344013fee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3626,
                    "digest": "sha256:bba943e4f4a53272de809d0c505c0696d9e80737e48c61e3e252c0b9d50711dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135,
                    "digest": "sha256:d628b8e3070d5c8820af59c9d80ec86c536028abae09874aede35e185b5ef8ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:6a0d61137eb5ea9b4e7340921ab9c44d40c59bb29c494ebf96317256118bb99f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 396,
                    "digest": "sha256:48102a781b091ed29fdd8eb12c3d48ba89bc4cd4f0a7f48e16627502e0abfece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 428,
                    "digest": "sha256:c5d323f77a5cc77618969d40a2c47be4ac64a9d0a3a6b763b336e8fbabbe2e5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1443,
                    "digest": "sha256:3657cb25801dc958a7721106e10a9f6943d129224ba56b8f057d5ecf755e50db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 552167831,
                    "digest": "sha256:58ea4fa9e5c04b45163f028e6e846c768d9a5141ab656c549ac62262e566da35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11561,
                    "digest": "sha256:36289354f878faeae182683b314bad424d6d9f65ba833d288efc476ef519e164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:94818c5bf4bd8d51f2a18dcb01769379b128d3ddfbda03f232b6aa5e5d5e1326"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172729,
                    "digest": "sha256:3702a6ba3989820dca36286d3c078e430e963d4b0ddee89754ffea4b998df820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 734,
                    "digest": "sha256:413f5d071f231ad6cb51c2e04b290b9858231f6d56c238ce09bd4a152c5acd18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37226138,
                    "digest": "sha256:7c966b142882817504e3436b8f856906bf320d57dcbdb42d34717126cb17e7a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7100408,
                    "digest": "sha256:568636110ba75768fc6c6ca6a1b3a60560b43fcf8cfa71601bbacf57ce298222"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564205,
                    "digest": "sha256:a5dcec56f3713e2420d46948ec132a5b51c951be227feabe70e35c45d70a9707"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4419310,
                    "digest": "sha256:842fcec3dcda6a022f9d7487bd329bdb3d02eb3fefd0b0d177a3862929ed1f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 432,
                    "digest": "sha256:61d02b8a614deb7ca2a8faef612222e484a7399461b55dc072ce445750cc4ff8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:6244992c94e87b4c6c52876a438c3c1ae1b9fbf6473098a3446edd564fa07d18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 372237885,
                    "digest": "sha256:b90145356f514048fbe4eaaae94485958610f22f79159cd083aa5a160f6b11d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45081453,
                    "digest": "sha256:7f73e722229f427adcfab4ea9005907bbf6873c6b8f4c8d0d0b19102713ac196"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37934745,
                    "digest": "sha256:f9994b589ebf313ec085c4d7a8e3a36cfdda9b786c335cf3d238478e6546e65d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 534074457,
                    "digest": "sha256:8b488404e2b57163621b08d76dc2ba6f117e7e8bf7c9842751985bab2311dad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031184,
                    "digest": "sha256:a2944725452db5a8eb21d2ce6a84066b14d60b75ebcac990499f88435990e716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417979,
                    "digest": "sha256:2b06e1f4238f8aa161c23089a31ceec0d85de2c9fc3c7144f4b751c736fc9ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083182,
                    "digest": "sha256:2e6b79c1165e5abb3ddb8219aade4172b896fbbe193d4c5d042b5227a5a146c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:022cd4fe92c4499574af374cf8318be47b17c85598295d1137842c3d2fd6c42c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273,
                    "digest": "sha256:3661d1639fc56400a92411aa73288e07264be79b2816a2b2124304e5e91de1e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78034574,
                    "digest": "sha256:3c51eb15309f9a4bc97da0434dcbf7b1fcbe148b2920e96459da2a72e83a9227"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 418,
                    "digest": "sha256:173ed8d2edc7cde3daa121505cfd1d4513be1177cd871665019281e8474f16f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8074692,
                    "digest": "sha256:4d30780ddf028ed7a4a11163fd5fb167cddbf08f5b9fa00f2379ce2471f04e73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189256415,
                    "digest": "sha256:31397b642e7fc6ae0757bc507d1bf7c786d4bf2af7de5b7f6a93629c7a8a03a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23577281,
                    "digest": "sha256:749c94a8c783471ef2c591cc5e562b68f587e5a45d4d1a373fddbaa4d4d7de5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 474,
                    "digest": "sha256:7fcc943f50b81b33f851e98570f369c9c6f829eac160a3721d14864721e5eb1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 354,
                    "digest": "sha256:d782fa550dbbaa9bd114236853bc3bb177ae86f3ef893fbfd3db6e7177a5ed23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94926343,
                    "digest": "sha256:9a5f2b3413160c8b01ea2882cfde3447048d396a18824c0d2b4ee2060f4435d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5542,
                    "digest": "sha256:cc4f7b8f2efb4afad011f11f51c9ea5d9f502c0b8f91143902d7f8a57a324c00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6191,
                    "digest": "sha256:d05c8f9ed808a9bd15eeebed1755577a831854f2433141e56ae39786135a719c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132163344,
                    "digest": "sha256:8c2d083599630284a56dafdd36c33cb22f1a19e1ded95e45a3133e8d16224f9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461368248,
                    "digest": "sha256:c39cf61ba82106233adc4ce7ddea184c96941786f99ee9c816a5b4179d35f03c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51434068,
                    "digest": "sha256:7de8deab589ae269bb10a837f7faf9ded81d5d863fca1cea1e29a7cfcfacb9ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4325867,
                    "digest": "sha256:6115c4029b05190c7261705d71a25c783c4fccfa7cc169fa1d4748668be83184"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:c60dfee0c48869a511e45baea8497bc0fe017e7453f2f86331be84b39910f0ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11131828,
                    "digest": "sha256:b466ab04456443547bba235b00f45ea8d4d0a3e6db841f717dfe5183cf248a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121483518,
                    "digest": "sha256:2ffe05318f6037ac5929e8cac713ffe66a114137ffedba310d2633eccbf14ed8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1400174,
                    "digest": "sha256:dc1d88a1a9ede032f8f1fbae6b5181619b22996a12e1a37a56081f2b08ef4d66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1141,
                    "digest": "sha256:57eb0ed73af37ccf5f7ad490d68d1fbcb3a4fff2eddea45a70e4c61ee49d33eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:c938839319fb13f4898573d3fdbfb5c32abe9df58b2f926646bc15a8918ee01d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23556696,
                    "digest": "sha256:222baa651062df9e31de911fa134cf993ba7ea1cc04de658d6039628cc441938"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18356929,
                    "digest": "sha256:eb9102762ec28b3afec8feb1255e5e44ec10b0c7d5e40b01cbe0a58ce4328a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41917155,
                    "digest": "sha256:10b3be4ea93c0e97696321e041d03e53285e97e62b1e00e1e1a5cb7979aa83d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12820,
                    "digest": "sha256:2f262426d7aa28763ba8720f7197d485b1b35a4d3d5d16bee72719eed6b28aa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2003,
                    "digest": "sha256:dd2bab92a9272201e12c5b78fde7c81010816b74d7d58ed033b971320910642e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140108,
                    "digest": "sha256:b5e8d4b1f35a3e4451c22f7d0493573195951a9f4610e87557c3019cee8d8db7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33120566,
                    "digest": "sha256:c636cc903225e23a4c44ee37c6d7676f3bc0c4c78af7c9360e7380c4ce046fb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:3dce11afe977b13f6b5aa06ae05f0e960aa680c4493941aa0741d31a74edff21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127763885,
                    "digest": "sha256:bee96615548fed53cf2a2d684c669eba18044f138d62d3e595213c4997757486"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:09742b2e621dc612665500d7a9ea9a48b1d882866ec3a1c0d5d6cf7ddaa48367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 342,
                    "digest": "sha256:98e0e5a045be817176942743f1acbdbcdec4de0c61d69b56a1c73502d78b78a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8610398,
                    "digest": "sha256:5dfa584b5ce25405a6c32f40508d6c40e5ad2a7b1cef305d284128b4c82145ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5459966,
                    "digest": "sha256:b9de7368b9679a30f636b3c48bc379ca996d237140cf1e09b116fea492a7f7df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1704,
                    "digest": "sha256:3f6d4a514d3c82b152f56797f9f302d957c5e570d8238ad67fad7ff85b4f0a3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23038666,
                    "digest": "sha256:44f75618f7f2bb5c1c228ac13cda3f6224e1cfb675652ccb8b6564ae0146eb2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:12b0fe7d785dd0142f0570f9ae32982c9a6158e8d80b7d447cfcc35e35ee0547"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27205,
                    "digest": "sha256:76312294607792b4416269a3ec62da7a8d284196a79c4d97119490083b72a461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 208498,
                    "digest": "sha256:6ec46c65f56aaba5a50de2c4530747002f89eb841055eafefba385c396cf597e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7951198,
                    "digest": "sha256:3868510fa7c8d126c1c22743bf4a280b7e5d57ebefb38c5139c76251871063be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6500,
                    "digest": "sha256:e6c7893b783323fc91f6fc1df6893d432ac260387abd51363cc1ce7e63deb2c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:b499944b48333ece92b5ed4a5ee5f4c245c11511057068d307dc1c6bf19c76a1"
                }
            ]
        },
        "v0.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 46370,
                "digest": "sha256:bdbcfd425ba97100a3d1a9cef58bbfccc28ccf12354229e0c6c2e9f65218fd25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69349885,
                    "digest": "sha256:f3acd799c7569d66d9faa36abe83dd88c4143148e01cf378a9aff3f9a06cadb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 647224278,
                    "digest": "sha256:f9992cab42845dc28d0c687c2eb17831c98d21bbe736ee8de6c6c9c8e7783d34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18811,
                    "digest": "sha256:7dd577f0d8eb971a2e97121c285a3ff292a55d2ceb6bc68ea49701f89e148bf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2733,
                    "digest": "sha256:c1cb011d1b168d86131b36de00ea5881097c7b37c7e1c2fd9e9de3d344013fee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3626,
                    "digest": "sha256:bba943e4f4a53272de809d0c505c0696d9e80737e48c61e3e252c0b9d50711dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135,
                    "digest": "sha256:d628b8e3070d5c8820af59c9d80ec86c536028abae09874aede35e185b5ef8ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:6a0d61137eb5ea9b4e7340921ab9c44d40c59bb29c494ebf96317256118bb99f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 396,
                    "digest": "sha256:48102a781b091ed29fdd8eb12c3d48ba89bc4cd4f0a7f48e16627502e0abfece"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 428,
                    "digest": "sha256:c5d323f77a5cc77618969d40a2c47be4ac64a9d0a3a6b763b336e8fbabbe2e5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1443,
                    "digest": "sha256:3657cb25801dc958a7721106e10a9f6943d129224ba56b8f057d5ecf755e50db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 552167831,
                    "digest": "sha256:58ea4fa9e5c04b45163f028e6e846c768d9a5141ab656c549ac62262e566da35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11561,
                    "digest": "sha256:36289354f878faeae182683b314bad424d6d9f65ba833d288efc476ef519e164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:94818c5bf4bd8d51f2a18dcb01769379b128d3ddfbda03f232b6aa5e5d5e1326"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172729,
                    "digest": "sha256:3702a6ba3989820dca36286d3c078e430e963d4b0ddee89754ffea4b998df820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 734,
                    "digest": "sha256:413f5d071f231ad6cb51c2e04b290b9858231f6d56c238ce09bd4a152c5acd18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37226138,
                    "digest": "sha256:7c966b142882817504e3436b8f856906bf320d57dcbdb42d34717126cb17e7a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7100408,
                    "digest": "sha256:568636110ba75768fc6c6ca6a1b3a60560b43fcf8cfa71601bbacf57ce298222"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 564205,
                    "digest": "sha256:a5dcec56f3713e2420d46948ec132a5b51c951be227feabe70e35c45d70a9707"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4419310,
                    "digest": "sha256:842fcec3dcda6a022f9d7487bd329bdb3d02eb3fefd0b0d177a3862929ed1f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 432,
                    "digest": "sha256:61d02b8a614deb7ca2a8faef612222e484a7399461b55dc072ce445750cc4ff8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:6244992c94e87b4c6c52876a438c3c1ae1b9fbf6473098a3446edd564fa07d18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 372237885,
                    "digest": "sha256:b90145356f514048fbe4eaaae94485958610f22f79159cd083aa5a160f6b11d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45081453,
                    "digest": "sha256:7f73e722229f427adcfab4ea9005907bbf6873c6b8f4c8d0d0b19102713ac196"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37934745,
                    "digest": "sha256:f9994b589ebf313ec085c4d7a8e3a36cfdda9b786c335cf3d238478e6546e65d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 534074457,
                    "digest": "sha256:8b488404e2b57163621b08d76dc2ba6f117e7e8bf7c9842751985bab2311dad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031184,
                    "digest": "sha256:a2944725452db5a8eb21d2ce6a84066b14d60b75ebcac990499f88435990e716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417979,
                    "digest": "sha256:2b06e1f4238f8aa161c23089a31ceec0d85de2c9fc3c7144f4b751c736fc9ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083182,
                    "digest": "sha256:2e6b79c1165e5abb3ddb8219aade4172b896fbbe193d4c5d042b5227a5a146c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:022cd4fe92c4499574af374cf8318be47b17c85598295d1137842c3d2fd6c42c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 273,
                    "digest": "sha256:3661d1639fc56400a92411aa73288e07264be79b2816a2b2124304e5e91de1e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78034574,
                    "digest": "sha256:3c51eb15309f9a4bc97da0434dcbf7b1fcbe148b2920e96459da2a72e83a9227"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 418,
                    "digest": "sha256:173ed8d2edc7cde3daa121505cfd1d4513be1177cd871665019281e8474f16f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8074692,
                    "digest": "sha256:4d30780ddf028ed7a4a11163fd5fb167cddbf08f5b9fa00f2379ce2471f04e73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189256415,
                    "digest": "sha256:31397b642e7fc6ae0757bc507d1bf7c786d4bf2af7de5b7f6a93629c7a8a03a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23577281,
                    "digest": "sha256:749c94a8c783471ef2c591cc5e562b68f587e5a45d4d1a373fddbaa4d4d7de5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 474,
                    "digest": "sha256:7fcc943f50b81b33f851e98570f369c9c6f829eac160a3721d14864721e5eb1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 354,
                    "digest": "sha256:d782fa550dbbaa9bd114236853bc3bb177ae86f3ef893fbfd3db6e7177a5ed23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94926343,
                    "digest": "sha256:9a5f2b3413160c8b01ea2882cfde3447048d396a18824c0d2b4ee2060f4435d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5542,
                    "digest": "sha256:cc4f7b8f2efb4afad011f11f51c9ea5d9f502c0b8f91143902d7f8a57a324c00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6191,
                    "digest": "sha256:d05c8f9ed808a9bd15eeebed1755577a831854f2433141e56ae39786135a719c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132163344,
                    "digest": "sha256:8c2d083599630284a56dafdd36c33cb22f1a19e1ded95e45a3133e8d16224f9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461368248,
                    "digest": "sha256:c39cf61ba82106233adc4ce7ddea184c96941786f99ee9c816a5b4179d35f03c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51434068,
                    "digest": "sha256:7de8deab589ae269bb10a837f7faf9ded81d5d863fca1cea1e29a7cfcfacb9ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4325867,
                    "digest": "sha256:6115c4029b05190c7261705d71a25c783c4fccfa7cc169fa1d4748668be83184"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1135,
                    "digest": "sha256:c60dfee0c48869a511e45baea8497bc0fe017e7453f2f86331be84b39910f0ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11131828,
                    "digest": "sha256:b466ab04456443547bba235b00f45ea8d4d0a3e6db841f717dfe5183cf248a23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121483518,
                    "digest": "sha256:2ffe05318f6037ac5929e8cac713ffe66a114137ffedba310d2633eccbf14ed8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1400174,
                    "digest": "sha256:dc1d88a1a9ede032f8f1fbae6b5181619b22996a12e1a37a56081f2b08ef4d66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1141,
                    "digest": "sha256:57eb0ed73af37ccf5f7ad490d68d1fbcb3a4fff2eddea45a70e4c61ee49d33eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:c938839319fb13f4898573d3fdbfb5c32abe9df58b2f926646bc15a8918ee01d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23556696,
                    "digest": "sha256:222baa651062df9e31de911fa134cf993ba7ea1cc04de658d6039628cc441938"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18356929,
                    "digest": "sha256:eb9102762ec28b3afec8feb1255e5e44ec10b0c7d5e40b01cbe0a58ce4328a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41917155,
                    "digest": "sha256:10b3be4ea93c0e97696321e041d03e53285e97e62b1e00e1e1a5cb7979aa83d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12820,
                    "digest": "sha256:2f262426d7aa28763ba8720f7197d485b1b35a4d3d5d16bee72719eed6b28aa4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2003,
                    "digest": "sha256:dd2bab92a9272201e12c5b78fde7c81010816b74d7d58ed033b971320910642e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1140108,
                    "digest": "sha256:b5e8d4b1f35a3e4451c22f7d0493573195951a9f4610e87557c3019cee8d8db7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138506488,
                    "digest": "sha256:b0097f3bf47b867fd40c35f8086e072bb0533c099d9706e903fc430f86ddf805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:f67b135978f9d85c8450c067502bf47bb43ed0e09b1db03799db7b1f70e3ba26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189370725,
                    "digest": "sha256:6b428e1f20e1b3f24202a4923b5a6c4f3ab5454c796a7f596fb0edfd774f19bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77186369,
                    "digest": "sha256:cc46e8f4e8053f524973e0eed54998737160f9c044f9e1abef3030acb30ae568"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2250694,
                    "digest": "sha256:effef0639a5523bcc0c1e2f57402c31607900c8f0a34606efe032fb0dfd5fbcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592816,
                    "digest": "sha256:5e5df51fb9364cb3d86d3d7dacf73357ef06b5261b919115341f7671201a0d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 359627,
                    "digest": "sha256:9f4a0f154b0b207ed523c3ea97471979ccb7cd8e97fe4129df8b8972623e5ab1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 428954841,
                    "digest": "sha256:dec8893a279659230e65a14636fe848b77273054e0de9d640b38a519a7cd7980"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:3bc2653c648f6a2c14f2ef23e8ab820422083832c9022302b055fdd5528dbc24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 345,
                    "digest": "sha256:e5d910a2970d4931743eced15dba17b83ded1baac2450491565804f27ed921e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8731697,
                    "digest": "sha256:77365cfc9b0ff24f2c9cd2774d6a6e8ad113750e75ab243ec6081df96920b035"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1702,
                    "digest": "sha256:06231b9c7c2f45f03e418c27400ce9710779e66903eb2bd9a0654205ed0fbd96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61303473,
                    "digest": "sha256:0d28b578ee86ac86f45d43b3aed20c3e816f2f9e56b18058cbb7ba48f6e507c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:92d28c95add14241782239bfe38d17a94d66f685c38a4f080e30d4ecb9f7e4d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41202,
                    "digest": "sha256:e438cc1e10e1989c961e5b8863790afefb3499213f9706bd35198e213afbf656"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 580889,
                    "digest": "sha256:594c1cd63a0dfa086149cc53f9db31a56108ca287b9f62c775c59f72dcae3e66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14926912,
                    "digest": "sha256:6e3e7aa7f6502cbfbed100f3ce51e9a70f433a0c1291ef2a6664c41b8cae5ada"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7589,
                    "digest": "sha256:2659e7bcaa1350261ebbb379d3527ebd49dff6292b095fa915fc201a6c2b6071"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 213,
                    "digest": "sha256:a29d2dbda14eb1042155f8d030c95e7fe2ba551ae967c6ae668f69d5ab05bdcd"
                }
            ]
        },
        "v0.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 40176,
                "digest": "sha256:4dbf1ca6d755559e4247e73fff4a86716a40719edfdf5f0a247c515061665dae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9053765,
                    "digest": "sha256:08675124ee65c66fba126e2f112593edbf23218358d93bf85b856396489b26d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9788,
                    "digest": "sha256:258aa4bcaca7b3715c494d5f15a4f5f05eedb375e56c379c38cf30d8da9d680a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 715153961,
                    "digest": "sha256:f2e8775ec207e10dc7879ca9770ff187f5e4ccdfb7e38808f4c83ce6cdc0a5ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2783,
                    "digest": "sha256:bb3550725a1fa7461bb854e7869231bc75c4114205147a3645e73956c221f4d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3706,
                    "digest": "sha256:f4c726f786d0391b06cae68016eeecadc831daba2cf90bc8e6ad0fe6b39d8be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:cf96927fb18897ac72af81dc479fdcf48795679beaf6af28a65b85942e97d11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 394,
                    "digest": "sha256:9537af2e8f6f0f9053f03cd98c53c4dac8fcaf93d0947443484630cd03d0d0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 423,
                    "digest": "sha256:8668f1a839ba5b132d8c70a001b0187c5941237204e94c68040fc371c2f0ea7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1443,
                    "digest": "sha256:d444743ed3ea935b243bd67339e671a369c7de647b913625d183d24074bf4259"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545600854,
                    "digest": "sha256:01aa937676a5e7bae61aafee743baa8af9c23c8ae78a548f7ca83b677dedf40b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89,
                    "digest": "sha256:516929a9775c35882ebea95038d5abfda29fc6f0988de5bb8a70533537aad895"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11540,
                    "digest": "sha256:ae9714d2926f1606050efafaa66bd440975567d292fd0d7c129f3624dd6ed190"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 179,
                    "digest": "sha256:95cfdad6dbc8c7a7facfa40e3d1414cea8b6072a3614a73403ef04339ae82b57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172719,
                    "digest": "sha256:90eccebc7450f55ecf212e08b01f8754471a12f83b5d60d77cac1ab1df45e76e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 730,
                    "digest": "sha256:c0ab30b61c297c952f584ccff3764b6b518bd9b6170d523d8b7eefa2bd76d725"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37223829,
                    "digest": "sha256:4792e4cb1223ba959ed5a8b07ff4fd04eb330509f096958c18eada599d84b67b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5852629,
                    "digest": "sha256:ac543cf9e44da3bfe3a7f3b5f217386d9f7ef4e832f98ddecb2dfb40c63e642b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 562079,
                    "digest": "sha256:66315ab7a057ff542be35a338c7d972a497a1130f916904677473cafd5f62d37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4418967,
                    "digest": "sha256:4495785d114944b506ee90234d5277e1eeaba94ad5bf525791900e0f667111b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 418,
                    "digest": "sha256:ffb0905c698fc768d913b102e85643a6dc19aee5da48745c94e874105bbf870d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9787,
                    "digest": "sha256:d1c16f5f40d6759fc040925539c3de9191d3f16db7c5b998af454ead9e3a8c0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 506,
                    "digest": "sha256:aeb6b53631dd80e78a255d0e8d3043647bf3add70b4b5918f0da643374e79a8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 426853482,
                    "digest": "sha256:687751a58daaa01299ce773bfd58bd35de442933e1da06bcff4428387140f9ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45078594,
                    "digest": "sha256:3234f3c86ddbdd0e5c406a6b01f8a306babefe0b802252f79a3a1e65db75522c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37934352,
                    "digest": "sha256:5b9ae581f1fa20530beaec9fa2fefbb408921d2438ecf73340d9adc190ca5ee7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 533936537,
                    "digest": "sha256:a88c2590530f38739e2bc4676dd2b2409d63e5b5a1ceb1daf4be2d6407216e58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55711005,
                    "digest": "sha256:f0ecd8648826a01d2b00685cfd6c37eed123ef10f458c6915fe52a8d9d4ff51c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417897,
                    "digest": "sha256:0c6d7222139b4f6c98409ba2825bfb8f71179de84798603a8f28b69d33950ead"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083076,
                    "digest": "sha256:29fc859495b24e757817912edaf65025ba1357f40182ac5c02ef4ee7f37f60f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:f66fe766fce7d1c2e823465af52eb0ebb25cb8ba287c1d8dc4002bf9a04c69ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:7d78b7f171a900492a9ca286a65c7334c38e3bccb36c829361e909945232f4f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268,
                    "digest": "sha256:cad233ebf0c4a18b6d4d627bfe8aa7dac597e9e0fde7f384333f6c6199ebf8a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78948264,
                    "digest": "sha256:a16e40a2749c9d3d88614a85f7f29e79a00c3b94e570e9c5d5b6811861f8988e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 412,
                    "digest": "sha256:816e3e9cbb498c77784d2c9a37ef7774c265fd25a834ad1038b26705a0d04f2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8060278,
                    "digest": "sha256:36ddfd01914123030f0534de55a8d187925f32f59d541b6d318afe5f7d645f5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187197457,
                    "digest": "sha256:bcff6e869d2dea3c618209217f71fc9e071fdfbb7c93359f347932d3d8d34e58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23496658,
                    "digest": "sha256:3c0f898560cf8c834b0c58adfee231d1e801697a3491c7574c64266e44bae41c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:c22f1f549f7b27651864674215be81f242fe608a08103518fb7990e6e7cd17d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352,
                    "digest": "sha256:01d289ff3c5ca0af721934135feb25aabc8a557b8d63edbc096c2d4c55a047af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94041453,
                    "digest": "sha256:e5144c7b88162f3d6b36fd3b39d55a09a8d62fb9fb64d06b702575e3255d9887"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6209,
                    "digest": "sha256:e2366d546c44364970a6eec50689e35c1dba988d809ee64a4d0a73e133533aee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36040395,
                    "digest": "sha256:1b055d9a86a3e5e2fbf0082dca83fcf0c3526e491049c0ba9255968d38cc2aae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 366105287,
                    "digest": "sha256:efa1338bde8cdde27389359410218b716f9309a6150463f89dd176ad14fa8af9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43663405,
                    "digest": "sha256:43b226745e6a34c00dee04da47690310ce11c16de7854ef6a0f1c8fc4169e459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4325213,
                    "digest": "sha256:bc9ff7cb4f17cbf88d6e4a7948934989628168b4acccad9e47250e826e531fce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1125,
                    "digest": "sha256:d823b1850706630318a26e2f7e89a8dfb5ea7674ee37cb5be78596951e2a7bb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10618577,
                    "digest": "sha256:0b5262b8dc43b2db3b77de81af89be36d8a6a3b290ceacc05036cf695a37f9f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126940278,
                    "digest": "sha256:e2b57abffdd1f02b75dd796a29149f6a92939c7f439a19f795077984b9d30464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1396784,
                    "digest": "sha256:56e7196f0510ac9f3bd3d90bb3c6f406b87e92401b82fb76576d76ff7d13941a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98,
                    "digest": "sha256:d1735d1cc095ac7c6a0caf2895fcbf39fc1d4a4e1ea1a93c8a5c9e3bf23fa07b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1136,
                    "digest": "sha256:8000c47f3f83fc8ebe2080cabeb41cc68e7edd735ad965e2e010314fac647489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:a152982a6f4461b28b94a1e490bede99397adad29860ef876f493417b0762a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23546763,
                    "digest": "sha256:44a0eaf3f2457d98ba8ba90674c756bf716604dce9ee1c815318ad621f2caae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18354082,
                    "digest": "sha256:15dd47a5c6f33a70803d48842c58657dfa04503ee59f40af69138c7c3eab0607"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41901048,
                    "digest": "sha256:8e654b455002f3fc0c94a26909b45955b6364ac944a605c919b37b2b09011d8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12587,
                    "digest": "sha256:8aac5cd6eeb5db6b620e7ea3daaa59273a0002efb41a48316f8082f5302e5d75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1995,
                    "digest": "sha256:6563df5f22cd9fe7a07e846a4ff90a620b902a9afe63ba5e387fcde2300b420b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9788,
                    "digest": "sha256:4a892faa77156831ddddf1edab3a4f29947337e26074d64105112221953cb39a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1189494,
                    "digest": "sha256:7cf728977e8df402425cd8742930b238053f2d49157a2655daf9d20701bab0c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 766,
                    "digest": "sha256:8f9cae272445694eb8fedf5ac60892f9bea5a535495d0da9a2efd0bd6ac9db17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 457984,
                    "digest": "sha256:7ae31e83fa58753c623a2c768340d3264fd659c80d286356ff2077540ea195c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211,
                    "digest": "sha256:af221e951440b8157b5b2df1680f6e5836c48dd63f158a1f348505449bda14a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20521275,
                    "digest": "sha256:a9f4f38683d19b0eb2b28b8849c7e51c3543829326b3f08744201c55ba868c8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33122275,
                    "digest": "sha256:15753cda701329e9bc66d0d2d34fc0cd8e6f733f53b9b17e1962e51c5f46929a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 695,
                    "digest": "sha256:04070ac3a842449a7c28cf16b1fcd210a2efe6625911602299aff4c72ced9506"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159,
                    "digest": "sha256:7137c01438d65b92ee29fa8a0a8755f52f9da548e6eae2f4d9700764c4067221"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 449,
                    "digest": "sha256:2033aec8f6cfa41c5cf272a112cb30a3621fa30a114838782203378dfce8d103"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25753166,
                    "digest": "sha256:c7b43ad10a4ede52f1b56b9a429e8dbd90bca5cd54f8dd8758b9cd6306a3a18e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:114ec44c0f5d6e09ef063740b3e3b861397e26141d8e6c0bb3c15469c845fc4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 365,
                    "digest": "sha256:7308ac252806100bc78e3738d342057b029d0cbefd424e384c20ee42436a3c46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101222201,
                    "digest": "sha256:ea4b2a574759235b879b6a19412fa787d71d9a5e1164b6beb420d43d84a751ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34927024,
                    "digest": "sha256:cd1e32397db347cf79d42fd99f03efea0103c6ccbafc8179a003a884379ef3be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2754613,
                    "digest": "sha256:d17da4df6503f9444431f27c5f5a9a743c1a29d15505991aaa78a622791e436f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150739,
                    "digest": "sha256:ebf025be547c7fc8513137bf2bb65d2fa9be6b33b2db4ec4f379596a677b23b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 373,
                    "digest": "sha256:c07b504b39d7f4096f20538c957611930484429afb42ceafed4c8eecce665efa"
                }
            ]
        },
        "v1.0.0b1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 45611,
                "digest": "sha256:43820d98babe3077ccf5b0f4e7f7a561ee5fa24f65589f8868260109161943b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26697127,
                    "digest": "sha256:7595c8c21622ea8a8b9778972e26dbbe063f7a1c4b0a28a80a34ebb3d343b586"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35364,
                    "digest": "sha256:d13af8ca898f36af68711cb67c345f65046a78ccd802453f4b129adf9205b1f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:70799171ddba93a611490ba3557d782714b3f4da8963d49ac8726786ba8274a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:b6c12202c5ef07dc9eb8f9d9e71407064684ed70f8c4040b62679b7d30200840"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76805119,
                    "digest": "sha256:c18477ba809402b03779affe3d4fd0950b39210e09d5e341a2a22a4bbe130843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50591165,
                    "digest": "sha256:e5f4c24a8277bd64a3f6be20c488157b170aeca85908428d83d0894499542802"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18840,
                    "digest": "sha256:5ebfbc8411fb46ce3bb0fa2c19ff94f28f4f44ae4fc900f92fb94e518c40a09d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2734,
                    "digest": "sha256:72827fb202854a06733e3d5c49da7b1a75626fde0d3cee1e5f19a076ccda9d0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3627,
                    "digest": "sha256:c28f1a97bef62069f4ab6a3772a46678f5045614f1a9771ba31b19861ea842ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137,
                    "digest": "sha256:e2f6f6ea58fe5ae8004c541712228583f14cc047e87f305d9621218ae0ce0f98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1042,
                    "digest": "sha256:3225ba48c71c625ba7c9697d4fd5afc2729848a8b2ea6c2ab66fc73334508e48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 398,
                    "digest": "sha256:577375486bbcdf742a1a2d4b25567e83ef1c659e6ea0ace0293966083ae0c9cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 434,
                    "digest": "sha256:05aa434db67cfb0212baa3eafa7f89994f84fcbab738b6d21449d95e9cbd159d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1441,
                    "digest": "sha256:3f81f834d888beeeeb7b93a926b39cbc8d136fda569ed24f6a8ae98affc670ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1879601379,
                    "digest": "sha256:661cfc5bcb66827df80e6bec5e1b0bbed81b96b0056fb56298d2b0415dadeed3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11562,
                    "digest": "sha256:21c5c515fb35a0d6f131f831483fe781b3993fec8a7a43c94c9a2b8852c4099c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:4dc96b4ac26de2bf6341b1a0a0bf24b0e1c5e6edefe21caa2e2fbba4d23190bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172726,
                    "digest": "sha256:411571c252fd023c671cfe6932dbcc9d390adf82b78eff6e7437be10e439e25c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 737,
                    "digest": "sha256:4713894a155d04dcf64b5227b0e974d5687a46e1988ee40112c6a492cf76ec2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37244728,
                    "digest": "sha256:2912321dca318bae237ecc392a4fb9144102eff1d119d035e4a6d205ec6dab30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7815172,
                    "digest": "sha256:1b0ae0806c8f566fc0beed81c543c0a9f002e5b42dcb748d62fb8981e0fa373a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 567675,
                    "digest": "sha256:279dbc9cc0d72c917e47c890a227e8f0023d938438158dc83d4f821e211f8917"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12844,
                    "digest": "sha256:363c32870c4bcc0e3b600f9b9c7be0f14f08312803f1cec9c41b117cdb4b65ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11962032,
                    "digest": "sha256:1cfd32279296d27ce05e41e2b456454eab8ec9146aa32b35ef4c9f4cae8b51ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 433,
                    "digest": "sha256:e8003b30597b9de8ac4a5b60907e386555bce6b39eba276582c7a45bcd0a16b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 515,
                    "digest": "sha256:8e0798a706b1bd8c2679b972dc192d8cca8a822da2575f28d326aae3b5203bc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217854686,
                    "digest": "sha256:28df328b9c002e0e9d359085af53d7caaa4885cb7830015cdaad4274d2b09b99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56828151,
                    "digest": "sha256:94b75b11ec034cc726c7cf844ebc2f759f172d6b0902ee05e611eb3500dd2017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933403,
                    "digest": "sha256:93ea423b5d852d8a8515c3fc1aa07ab1164e72751dab61630056ab85578fee4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525358982,
                    "digest": "sha256:087ab604e18d82cdbda9b754f8c5ddba876450683ba191245a9fbdb930341d00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 936791,
                    "digest": "sha256:68962e2b2ffdc3a5777e956d76a806dc9b57466e3d8261ba7801758f21870640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417451,
                    "digest": "sha256:02e9c8929d14984692eec4dd14843cb47e6bb71e801ce5184e3c97c632bc90e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083059,
                    "digest": "sha256:29c2d45d4ead5d506bf1f5705626ae8c7fcb80df3f3593d07cf5db7daa2396ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141350213,
                    "digest": "sha256:de98b16b8dcc731509943f71bc4fff05c8f003294766543a34db3b80b00995bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72533949,
                    "digest": "sha256:899647022675009c6ceccf800e0a355e0ebf4a5dd770de4804ad0bf51931a3a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32918201,
                    "digest": "sha256:7252388852b49e47e05c96da5bfcae7c6f552339ceee121b8fbb0856552a1d71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 416,
                    "digest": "sha256:dc2306bae31636282a953c5324cc8b3c35287c6ef338367c52f8e3c76f029679"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6706,
                    "digest": "sha256:be3890e5a95675d6efdd89a828104f9871459e74d15e321d4c8b16a8d8df8a8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92665256,
                    "digest": "sha256:8f76b37afc687c46949d1cb9149b3cac438c065c792e9f26522a7dc7b5828904"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473,
                    "digest": "sha256:e3363672a86ca8764990b73ad9521747221ee8eefde77399d3e1140a63009b7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5546,
                    "digest": "sha256:c5b34d04c19ff4e96853cbf2db4219551356e9f2f92890ea661c6e73c8fe76c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138520837,
                    "digest": "sha256:2ee859543e0be0ff17694c459d7e45460b818a0fc50c269b5824a64465d69fbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 700793485,
                    "digest": "sha256:9eb6facdb4d0eb9d4b7df0bed4443d6045658eba38af65915140a375c32ebb2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 340787797,
                    "digest": "sha256:3b3bb81cbef6ffcfbe9fc331b4a8ccb6c176fecfe4b2713f5a97564b48542da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4326696,
                    "digest": "sha256:bb74ac7a951cb7725c8a0f334df3ef6d152cc1e72d5f1563c84063f0b713c42e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:d043f7864d3bb1f63a6e2f098963c94608f6f60f3aa91bd023589ec9efbbefae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10954806,
                    "digest": "sha256:93810a5b40b4afc543e70711a0eee727a88d3a709ba0e26bbb3531b7f5c22141"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4213,
                    "digest": "sha256:3636091ff1f12db09a0ebd9fda3542db9245fcd50f189c9b42ea2c0ace4a30f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169215483,
                    "digest": "sha256:1ac961f39b4b688626ddb4d877b8ff6ffdecc04245964ff2bd883772840866bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1400579,
                    "digest": "sha256:502de1bc11dbc9cf7c94bbcdb2c65065e8b9e2b8abfb23418ac0c1af77bdea96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1138,
                    "digest": "sha256:bb26d8f495239c8e7ace55c30c39a790529dc890707290b0d659795019753ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1029,
                    "digest": "sha256:2171687b33c4483cb9104709deb0eb19f999e119e0dfa4dd69fb6bb3f668fc52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28742406,
                    "digest": "sha256:3e7870c20f5d2658ab9b6ed4f68a3212e640e1f5e7bd243caac13a742177af19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28118087,
                    "digest": "sha256:8fb8da5be2fcc62f41f49b3209011e61b97ce2f4a8f311c45bfbd26263fd9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56866777,
                    "digest": "sha256:e62f50a33fb4e98fd6423eb8eb464b34da8878dbe34c9c30511095eb8ce9a5fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13425,
                    "digest": "sha256:d0450b3ed08234d4847f18f985fb4a408490faedeea899cf5e7ab39dd509bf78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1999,
                    "digest": "sha256:c4fd299d413f2fe807d5fca5c9e1a1c6991b984a611dc9dcbfd96f339c37d63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1163556,
                    "digest": "sha256:6e1f6e131bdd4a1ea15cbc3932a352310b81da288f6d92cd9a448950e3b7017e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 133323248,
                    "digest": "sha256:045d331d9da5e9863827a70f6525a1f4281e1720db33a624e86805628a3a28e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b24c6aac28978deab2f52fef5ad64843ba191e35f7b668a808060461a981b1dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7172379,
                    "digest": "sha256:e086489d9f7c5234eb72d85ad2735046c23df0a9c2346a44b25b446c6a58236a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151,
                    "digest": "sha256:b8c63cea15a2760e41d26bb2659a00b07837dded31545f219c501ad7584184aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 763,
                    "digest": "sha256:6829f6b0c2234fb51b4f6909727f28c4cc152e0786069f522fd29afd4dbd9887"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1665,
                    "digest": "sha256:0eb8b585748d0c8e9149a54a156ce8706551d29cc3f52cb9c8678d0e44079da4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80744383,
                    "digest": "sha256:194d366de06ff69bb35cb766e47ed3bf99ae6ae6afb4c019f716a1e655851956"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:8a470eb774223310475cc54d2ca87131d45c59066ec3a4f1036bcfa902a9f736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20977,
                    "digest": "sha256:bb655e0992ad71e6dc5baacfef21d14c8fa10d19cec7fa2fc87bf9f436b96b89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53484,
                    "digest": "sha256:752d9d56ed886d80f8a5ef6b5cde538af52cad96394ae7cd0f8d267e34adbf45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20508,
                    "digest": "sha256:70b55f78432080d5ff3ae83ffaecfbfcaf11720d33d807c99ba9a29a32108460"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 389493,
                    "digest": "sha256:3c7f7fc54d30465c4ceb844fe15c282e8db508432d0eede7c588b37e864cece2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:6d47becb4213273f9e7e5555a82b6cd1bdffb74f23d9c7fa119fa716c6811a04"
                }
            ]
        },
        "v1.0.0b2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 46314,
                "digest": "sha256:4e14b76d5c2c6f377e01a5c63b0285ee91f3cc389c829e2da9ac49658c09d7da"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26700095,
                    "digest": "sha256:f08d8e2a3ba11bea23cf5c17e8e1c620057412ed05c32d1114640e18d6dd0a43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35364,
                    "digest": "sha256:3baa9cb2483bd9c5329a44d9c2fe72535625bbd4308bca95785dd58e72c06365"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:94e5ff4c0b1526abf77c236655f21c8f67a23313291c8b970fe6b469549d8153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:1860925334f940c3145808527480b4f0cba7f01279087fdb27679e4354fba967"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76809461,
                    "digest": "sha256:c6b364205fad9034ce6cbf439da0d4a7c0cc290b4c8d3ad1eabfc81b04b7e8b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50591509,
                    "digest": "sha256:ffcd5dc3448dfb808c9117252c4f1fbbeb20128707d7b9c6b53c29d6f2b988a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18816,
                    "digest": "sha256:13cf13e5ce72f7ff8419042d6d9ea22fa94c18b94c4985269339bb7eaa229e9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2734,
                    "digest": "sha256:7202bec79e4143bda783391ae8cbaf210306c344350f892e9ffd77ba218cf063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3626,
                    "digest": "sha256:fdfbe893941b3876d9e8c3e411178b3bf9f4a316363a98b9181a2c46c6f5e2f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 137,
                    "digest": "sha256:f73bfa0e0e1718cab44daf35ff2045a57df7d993f83812c95916bb0c42d081e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:36aade146566f729b04737087ae3302fb8bfca68f02b74f4ba542c53da41bbe6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 397,
                    "digest": "sha256:0cf8254e1bfeb99899238126562204641d0152a417c5f75c8457a29fda84cc10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 429,
                    "digest": "sha256:40ff6c34e5e5179007060a7d9b0916d80e827ad0eac05933d13f4d9b94546b1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1442,
                    "digest": "sha256:0adeec2cfe741e924ea7c35ca95d6dc0fb08861268e50415e7153851715cabd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1899022840,
                    "digest": "sha256:895d871af5fda54cf858b531272369c3d42c63ae37da075ae7d32f71ddfd9c16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11559,
                    "digest": "sha256:71c97f6ac83cefd4d6c3020f909de20166e25ad0fcab9c19b519c8aa0190e2d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 186,
                    "digest": "sha256:281aa21cb81222304da410b309545b393c8daf5281d6440de38a15bb7cd84ab9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 172726,
                    "digest": "sha256:9c7e46bb4080abaae52fac2d3dba4ffffe2383a60911071c74430220e22d1caf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 736,
                    "digest": "sha256:150dfb1677cd0f25666657bdbc203c7f638e50bcbfd986815ac0b6d73d2120a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37244916,
                    "digest": "sha256:3ce488e63cd39ebbb9c42f581c4fe24feb5b57f9220694e8199714ead733397f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7815145,
                    "digest": "sha256:0f6e3807a6dc22c33448ed4127391b494656eca8ea3e6ddbc4b8c500fc44739d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 568028,
                    "digest": "sha256:3585c705a7d04fde836f985ac28893d8207325669f359f961ed9a8aa15c94b89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12841,
                    "digest": "sha256:de81ad6998228a35c0dea2dffddb0845562ba941a1bde89e6a3a05f2606b52be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11961927,
                    "digest": "sha256:bb1a224031d930789559694e1dab05fe12dda7f18b33b2e8eeb915d714af3e15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 432,
                    "digest": "sha256:de7308abc9b3a5397bdf18f3e2aefcc6c8609aef730327b0f825a35070a46112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:07620b1781c27a8f08b59cc4757797049648490f14f5d92984e97eea8c359d1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217854946,
                    "digest": "sha256:dbc3331c85c9801958b1136996a594b5eed49b40debcebd80b26d2b70c727fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56828145,
                    "digest": "sha256:3176a059494ff4a1cca8ba68e1da75c11c52d844529921bf69ad14c99a242917"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37933403,
                    "digest": "sha256:8bec2a5043ad4394eded88de76c54452c542bda6387d65cd36e768ce5395ce75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525598774,
                    "digest": "sha256:7416e66d534cdf38bd9ecd4f378cf75b817ad2d891723f1e056d4ee957ffe2cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 941112,
                    "digest": "sha256:2e58647ede62d67ab649c4ff016c19d8a4c7ed67d27121cfafeb82fa9756a9f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12417454,
                    "digest": "sha256:9fdc8a046d90acafcc80e8e9824f5996f9750955cbbffac277cc771c8512f6ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1083020,
                    "digest": "sha256:5a09baa92fa0889ba0421560ed31f0327dd4bc30ab3f25d5500634dceeabc543"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141472829,
                    "digest": "sha256:f4288a68bb4414e8fa06a34a3bf20c5610566e342af78d90a370c1e129ada126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72649442,
                    "digest": "sha256:7ca760cd89397855e64aee70b93bc85d35c7d91af76973c7a33d98cedeb4c1eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33416994,
                    "digest": "sha256:58fab20f5c7cc9776ae55700f99ef475885ca6cf5050339ba073286e790324ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 417,
                    "digest": "sha256:bf25175a403b8150c7d84c94b496ff2eec1c8a13e436590a51d11e0757d469bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6707,
                    "digest": "sha256:903998a9f9ccc7f91468144c8b614938cfe525b4c664aa135e13d95be1491a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93020890,
                    "digest": "sha256:9a6764326ce18826d1ac0d86d1ce456f0aacc1909937ee0d7b0c9c90a35965bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 477,
                    "digest": "sha256:aa7c3f74e41956a882b7ed0a5fd9c73de689e94b91a92e7747d0f6c7649ab1bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5555,
                    "digest": "sha256:47c54eb24e4dea0c539d4b7f0ae26b05aa6d1812f856a09391b9eca2261e5f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 138564958,
                    "digest": "sha256:ff874e66daeccf44c768a83ce09549b928c0c5f7b8ba3294334986b05f4d049d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 633564483,
                    "digest": "sha256:eeb92aec4ebf2a1937a98ebf7790ec913f02a2012723182a9d4022431c18a15b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 350812464,
                    "digest": "sha256:4b9737b34ece67efb9644f73e18aadd35b41e30ab417c50443a5c92cbba24bea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4326120,
                    "digest": "sha256:86f288894a1af9cf96f4a24f6ad33cf6061ab9285ad81c9b10e3d19e30af4957"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1134,
                    "digest": "sha256:bc0b2bc7f043477a0289b2e627aee70e49d662432745ed1cc4150c53d375e0e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10950846,
                    "digest": "sha256:a9fec2d46846b44292d6fa4c21888d654f3250f0dbe46a4b95b2fb1090b5a770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4217,
                    "digest": "sha256:566bce734eee20d4263b8c73deff5854b35f5d3816bd520f6102ca32cb4035c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171207344,
                    "digest": "sha256:2d230786f0a26c22ca7791c9fff430aeeb31f7e2e8c71f2979a0af1d63dfbd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1400581,
                    "digest": "sha256:b3222b1a77990c42cf9e6ee32692aada71c8753b434f8658a9ed5eba82cab280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1139,
                    "digest": "sha256:9b45a6232d14f55867c626782e8927005c375014c528095c533a049aafd57302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1033,
                    "digest": "sha256:5e7d51247d7f51df6fa8f65e059fb8f84987e497bb633c1baa3258bf07cfe473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28877241,
                    "digest": "sha256:4f5157f98b1fda292ecce4eb5cd35a3953c79b128b581d3a7396d4956c3a9360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28118115,
                    "digest": "sha256:b3f54aabf5f85aae9fab0dd421be93c6b98d2dc2c002a2f337dc5e2411c9b63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56997555,
                    "digest": "sha256:95ee1f9488e110bacd4e7c6dc9986b34237c36eeb40d238bc1b73a4c7d168c95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13380,
                    "digest": "sha256:2c97b8ccfa66f26ed2d181c7b9e9fe48c58a65b70b932b0f4086619337c362b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2243,
                    "digest": "sha256:d59ebad2bc08b0d4745fd1358e9425eb442e71a09ae745727bccbab62533f8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1163530,
                    "digest": "sha256:0ba43f612fecf8277eeea7eb4d7e83932d7f8166bb097c191e8147a24732a832"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142279941,
                    "digest": "sha256:68a7582c796508ec5379dd4672aca677d44425ce2da525fb00568ccb100ed80a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:a86b8a7569bf087ace8209e3d6e605f75613b11338c55a9313e7eea918dcf025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7137665,
                    "digest": "sha256:50f2a70ac57d5b4c0a8811dcb003dc70f8ad4858c33673db37da40a336b22eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150,
                    "digest": "sha256:990ba2fffebb2fcd6fc28832748d96b629995188240955d8f64e9a65752b541d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 777,
                    "digest": "sha256:246fe6cdaacc15a5a8b377b4d852e40cd895f920efeb865264484f9e27b632e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 267,
                    "digest": "sha256:d7aabc91e6415a1ddf8ff69941eeda8da1e2edc696b3593abd226312bdae285a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64246303,
                    "digest": "sha256:fb90cf67839303394c28c796bdca81439ff30f5abdddd37d564dc8e1696b5f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1674,
                    "digest": "sha256:5b92e53e5c203466aeb9ae106d1cd3ad7e41b825fb5be40a41b9315e835e5245"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103440787,
                    "digest": "sha256:292b71c61d57a9fe65dc2856970ecabc050ab05937608c1ac7e71c13bae9542b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:1e2986c68e0f3f5a8a087ba42fff9e8307d892ebed9bfc2bc1bf7567ee35a5d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23244,
                    "digest": "sha256:5ac7c9262d6d437097f2df47ec6e2584d97af76cb1b3a4077c92725f8465a261"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95585,
                    "digest": "sha256:60a758e8599a0a508a2d2db1433a0f6fbe9ccc35dc498efb010d4a94c644b7c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9276828,
                    "digest": "sha256:5a263be31f632e3938486d98db36ec7801041b53e59ea3f4dda5e9885255df92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66603767,
                    "digest": "sha256:f5c5088ffd25e142a557d18435a1b52d223507f5d5fa44a5ffba43da69851d96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214,
                    "digest": "sha256:efe51a222638855e0c5c4a8d135b94930b1299e871ccdddd6fc351a99531815f"
                }
            ]
        }
    },
    "tags": [
        "1.0.0b3",
        "1.0.0rc1",
        "1.0.1",
        "1.1.0",
        "1.2.0",
        "1.3.0",
        "1.4.0",
        "1.5.1",
        "1.6.1",
        "22.01",
        "22.03",
        "22.04",
        "22.05",
        "22.07",
        "22.08",
        "22.09",
        "22.11",
        "22.12",
        "23.01",
        "23.02",
        "23.03",
        "23.04",
        "23.06",
        "23.08",
        "23.10",
        "23.11.framework",
        "24.01.01.framework",
        "24.01.01",
        "24.01.framework",
        "24.01.gemma",
        "24.01.speech",
        "24.01.starcoder2",
        "24.03.01.framework",
        "24.03.codegemma",
        "24.03.framework",
        "24.03",
        "dev.framework",
        "dev",
        "sha256-14708a0bf0033f8a8c7509be52802b9243c7eb3b782ab00460798530807a0a61.sig",
        "sha256-2b09641dc4176b0d8b42639d00d61a0451b6da5ebe814edd09b0c2ce38f2bc32.sig",
        "sha256-3170bd8c50ac99d151f6dc2ac08a98edcd45e1d8b7ed2473022567d709beccc8.sig",
        "sha256-85f82832f16bc3bcbbb6909fbb0ff61073888cfd2425a6eac840564936035b09.sig",
        "sha256-9de33d04a668edaf47d66508c0a501bf324bfc304ed2fac4bd2507d18ce45432.sig",
        "sha256-bd937f4bdebd7970bd0ab3574efde6079980c2bad185ad926dec52fdc20a7859.sig",
        "sha256-c99f9ec4a27525de46c7e8a084cc6b44b0b97f705cac652825f326db77761e9e.sig",
        "sha256-e2190cd6060913f56cb3e40f203808ab006ad660d3c3574a36e9eeef13c06e04.sig",
        "sha256-e329a90775135a511b7d26b187f964006f2e6b013b765361f64f20e359e9c973.sig",
        "sha256-e6af316b86c8eb1cfc772aa19ec39bec3a3007e485c0e6cc9e317e031a1d3686.sig",
        "sha256-e9eb4d9e5308ad15e4c1912d9fddd99a8546c1d7b4a84ea24ee1bc24b82f8af9.sig",
        "sha256-ee02076c3c35d744b38cad1e35624c6b343cee0cd932e8baca6477829c9bf7d9.sig",
        "v0.10",
        "v0.11",
        "v0.9",
        "v1.0.0b1",
        "v1.0.0b2"
    ],
    "configs": {
        "1.0.0b3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.0.221",
                    "CUDA_DRIVER_VERSION=450.51.06",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.7.8",
                    "CUBLAS_VERSION=11.2.0.252",
                    "CUFFT_VERSION=10.2.1.245",
                    "CURAND_VERSION=10.2.1.245",
                    "CUSPARSE_VERSION=11.1.1.245",
                    "CUSOLVER_VERSION=10.6.0.245",
                    "NPP_VERSION=11.1.0.245",
                    "NVJPEG_VERSION=11.1.1.245",
                    "CUDNN_VERSION=8.0.4.12",
                    "TRT_VERSION=7.1.3.4",
                    "TRTOSS_VERSION=20.09",
                    "NSIGHT_SYSTEMS_VERSION=2020.3.2.6",
                    "NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "DALI_VERSION=0.25.1",
                    "DALI_BUILD=1612461",
                    "DLPROF_VERSION=20.09",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.6-1.0.1",
                    "IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "OPENUCX_VERSION=1.6.1",
                    "OPENMPI_VERSION=3.1.6",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.09",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "COCOAPI_VERSION=2.0+nv0.4.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=16003719",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "16003719",
                    "com.nvidia.build.ref": "274fff44becb9e96ab3e4d344dad2c05c56138e8",
                    "com.nvidia.cublas.version": "11.2.0.252",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.0.4.12",
                    "com.nvidia.cufft.version": "10.2.1.245",
                    "com.nvidia.curand.version": "10.2.1.245",
                    "com.nvidia.cusolver.version": "10.6.0.245",
                    "com.nvidia.cusparse.version": "11.1.1.245",
                    "com.nvidia.nccl.version": "2.7.8",
                    "com.nvidia.npp.version": "11.1.0.245",
                    "com.nvidia.nsightcompute.version": "2020.1.2.4",
                    "com.nvidia.nsightsystems.version": "2020.3.2.6",
                    "com.nvidia.nvjpeg.version": "11.1.1.245",
                    "com.nvidia.pytorch.version": "1.7.0a0+8deb4fe",
                    "com.nvidia.tensorrt.version": "7.1.3.4",
                    "com.nvidia.tensorrtoss.version": "20.09",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2020-12-11T11:06:09.437229408-08:00",
            "history": [
                {
                    "created": "2020-08-19T21:13:50.365403739Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c125b7f411566e9daa738d8cb851098f36197810f06488c2609074296f294b2 in / "
                },
                {
                    "created": "2020-08-19T21:13:52.155890193Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:13:53.836167983Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:13:55.267773342Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:13:55.60892786Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:48.563694713-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ENV CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:00:59.535084544-07:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:00.646126284-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:01.746149019-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:02.787129419-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:03.741007121-07:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:04.430597304-07:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:05.066610849-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ENV NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.7.8 com.nvidia.cublas.version=11.2.0.252 com.nvidia.cufft.version=10.2.1.245 com.nvidia.curand.version=10.2.1.245 com.nvidia.cusparse.version=11.1.1.245 com.nvidia.cusolver.version=10.6.0.245 com.nvidia.npp.version=11.1.0.245 com.nvidia.nvjpeg.version=11.1.1.245 com.nvidia.cudnn.version=8.0.4.12 com.nvidia.tensorrt.version=7.1.3.4 com.nvidia.tensorrtoss.version=20.09 com.nvidia.nsightsystems.version=2020.3.2.6 com.nvidia.nsightcompute.version=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ENV DALI_VERSION=0.25.1 DALI_BUILD=1612461 DLPROF_VERSION=20.09",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:26.067359444-07:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:27.382263266-07:00",
                    "created_by": "RUN |18 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 DALI_VERSION=0.25.1 DALI_BUILD=1612461 DLPROF_VERSION=20.09 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:27.382263266-07:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:28.278192958-07:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:29.050477242-07:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:41.664073841-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:43.073960325-07:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "ARG MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "ENV MOFED_VERSION=4.6-1.0.1 IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "RUN |1 MOFED_VERSION=4.6-1.0.1 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "COPY openpmix-pmi1.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ARG OPENUCX_VERSION=1.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ARG OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ENV OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:20:09.33362069-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c wget -q -O - https://github.com/openucx/ucx/releases/download/v${OPENUCX_VERSION}/ucx-${OPENUCX_VERSION}.tar.gz | tar -xzf -  && cd ucx-${OPENUCX_VERSION}  && ./configure --prefix=/usr/local/ucx --enable-mt  && make -j\"$(nproc)\" install  && cd .. && rm -rf ucx-${OPENUCX_VERSION}  && echo \"/usr/local/ucx/lib\" >> /etc/ld.so.conf.d/openucx.conf  && wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ( cd opal/mca/pmix/pmix2x/pmix && patch -p1 < /tmp/openpmix-pmi1.patch && rm -f /tmp/openpmix-pmi1.patch )  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --with-ucx=/usr/local/ucx --with-ucx-libdir=/usr/local/ucx/lib --enable-mca-no-build=btl-uct                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:20:09.33362069-07:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:20:10.311378343-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:20:11.022321132-07:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:23:00.474752623-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && if [ ! -f /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h ]; then cp /nvidia/build-scripts/cudnn_backend.h /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h; ln -s /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h /usr/include/x86_64-linux-gnu/cudnn_backend.h; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:23:00.474752623-07:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYTORCH_VERSION=1.7.0a0+8deb4fe PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.09",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.7.0a0+8deb4fe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:14:23.749832158Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:14:23.749832158Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:14:48.406311121Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:15.055055131Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:55.029907304Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:55.029907304Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:22:41.183014537Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:24:08.821509591Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.2.14 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:14.444569704Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir tensorboard-*  && pip install --no-cache-dir tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:14.807133991Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:18.161360797Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:18.161360797Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:50.371977717Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir jupyter_tensorboard==0.2.0  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && ( cd node_modules/libnpx            && npm install update-notifier@^4.1.0 --production            && npm install yargs@^15.3.1 --production --force            && cd ../..            && npm install update-notifier@^4.1.0 --production )       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.598898623Z",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:12:43.480641038Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:12:43.480641038Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:04:57.760793231Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:10.283351614Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:10.283351614Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:05:34.586094024Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:35.012061967Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:49.060933044Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:49.425955207Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c patch -p0 < apex_sm80.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:58:59.287416598Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd pyprof && pip install --no-cache-dir -v .)  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:59:32.409605835Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:33.699345172Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:36.068674849Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:37.25331325Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:00.148975309Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:00.972903963Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:01.355010604Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:01.355010604Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=16003719",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "LABEL com.nvidia.build.id=16003719",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "LABEL com.nvidia.build.ref=274fff44becb9e96ab3e4d344dad2c05c56138e8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-10T17:23:30.53068615-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-10T17:23:30.53068615-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:23:30.645733854-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:28:48.085185175-08:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.6 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:28:48.195706385-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:28:48.335636062-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:28:48.965563252-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements/*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-10T17:28:48.965563252-08:00",
                    "created_by": "ARG NEMO_VERSION=1.0.0b3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T11:05:13.87799241-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=v1.0.0b2-2-g93a3d8b7 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:07.286808157-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=v1.0.0b2-2-g93a3d8b7 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:07.340984965-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:07.43563686-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:08.619584654-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:08.735596338-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:08.85165385-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-12-11T11:06:09.437229408-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=v1.0.0b2-2-g93a3d8b7 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79bde4d54386664324ce9b6179a3265ca96e6c8f05c06ded53856a670874c715",
                    "sha256:2f37d11021878811b25cc6a3c6d48a0eb6f57a0b0d42f954123a18c17e2abf56",
                    "sha256:2ba5b91ca2b0c27b8ca3503b93164e9ec29ef5ae72e5272192839347e9f951dd",
                    "sha256:001e4a80973b4bc154292425871684a0c1fa422c344186516dd6f792606ed9d6",
                    "sha256:103b2366deb90ace8862004394afe46bc75ba6b1884a74889f5216cf787047e8",
                    "sha256:673d2e71c352f8e576febc45dedf2d09f2be3c846299aca87711778a3e7b3c24",
                    "sha256:6cdd3f5c0c4772191874a82f2a51ae7acd8d5f1e8686780de410342c9a621629",
                    "sha256:9cb9bbdf26c764ceb1e43746afbad1cb7c00081ef7eaa34815c4b5c8daf7fc50",
                    "sha256:3c88796a316a292a4e0d23506ab0f7bc1a028df3caf72509e23f0ef3e877910f",
                    "sha256:7e406f205b51ebbc546b70f85a1198a75eb7f9cedd968659e0859e414aa0e9fc",
                    "sha256:8ca008540bf67adf2ebcbaa114328e3880cec5bcc510e4870c3c23895be03ad0",
                    "sha256:7cc099a5180a7ef9db482abe386f212af4f47d29d888d154568c19b61d1065a0",
                    "sha256:7ccd2ebdfbd9c6d8131cd52ee46d62fe05968c0614ed956587439bef758ef835",
                    "sha256:55529d514af9914921058f02c1e4c73251eef4ddbeee656801afeb5b408011d4",
                    "sha256:aa80a21342cbf1282858579a5497359c6190ad81b925282013c74d7d30de2e6a",
                    "sha256:3d6f4e939f523d94c01868371ef4474d8a4cb0db0597563348dd30a5bbcd126d",
                    "sha256:59a3e34640487f5ca0339ce01cdd13a0aee2b354c69a9ad3ceb17fb9c8c5a999",
                    "sha256:be7aa80d83c6f0b0ed33fddb705dedbead1c13413863eda50a19082b02e6a7e3",
                    "sha256:e464e35a7e2755cec80f4f08f07aba0070486b9334ab9339a3ae30b8e550b3e0",
                    "sha256:07e00fb9a50420ea6eb1c9ac44028335693e6f37a4e0e63d65e2be757ccdab74",
                    "sha256:1b8fe36779c8439102c6f8e12c025a6238077d5bd05007faeb50c4e7fdaa6873",
                    "sha256:8703b41846a4e4ad7b95268df3d49ab3702e3ff6bcf6cbce423ad33d7b117a91",
                    "sha256:df45a1d0ab62f79061698c33bdd7de3b47f3b335e858545b6b9dd1bf225c7afd",
                    "sha256:492f93eff8c5528f91f32dcde495b7fb29ac694c9278e1911941a13b00099334",
                    "sha256:27d83e489ae575c345b625fda58d7fc9512c629a3317658b3f64806d83bd8a7b",
                    "sha256:59d833a95ec42b496ff74e23a3cc0093ddbb6d3aad1ea7f7981d65c8eab29f62",
                    "sha256:c2cc1342212061cb919e945d076a38ccf48f5703cabba44fc2f923b9064a4bb6",
                    "sha256:136744e2d2d033027ef19d8a6f6fff047fa361534cca0939aefe525b387bec89",
                    "sha256:3a4d7dd80641b0cd8ea5a7113c61207dbdc45f69abbc5f7f8f5e67a242fe4f62",
                    "sha256:ee413f311bd0154b1050028749ed2df682c752ecc1e1c4585052c0ef68734d2b",
                    "sha256:b9c72692e9f58d740628de02840759954f12271ab8a8435116f39b5cc6f7fc3c",
                    "sha256:71d5929dd334693526aa02efa3ea23fed9b3a19e78ca4d3dc04b9748cd1c0313",
                    "sha256:7a5edbb3a3b6fbd466187db395ca904f149859fedf4e9a9de61807f0a6e49976",
                    "sha256:13e630d9c7cc5fc12d54030b2bed559fdd00af32cdf349d815d26f601da41024",
                    "sha256:1dc92ee1883cfef35421a2178815c0dce057e540615ba099365eb4ba4f9bfe51",
                    "sha256:f0926799772f4308794908181fde293f04f849d6348fa8664b50ea7c21d21a10",
                    "sha256:86befe175c1500fcb990cf57c7ceca4a4e825f9aa8dd43d27b29fd19cb51cd39",
                    "sha256:73e2ce40fc1c3d701cec0c042706cf3c35ac05e9a25142df31d9bf570f6487fd",
                    "sha256:632b08b9e97609666427022c6fad9e7bb38f5938a418ff0834cc5a5de2c156f9",
                    "sha256:54b2cad44a0563156e5b821efaa142ace4cbf0173cb9c858240cc5d9f4de5698",
                    "sha256:67a27083b7e939cf291d209fc734b9fb7c8716d35117aab616d6c276cb355a0f",
                    "sha256:734592521cf5401a1503b5419e0fa043cd98698f69c3b19a537874af248bb161",
                    "sha256:711495c4ccae94240c6a80b51cf72df63df5167fff9c0967b498135b9ce12526",
                    "sha256:5ba8d7b881317f6bcce0d7cabc0d1ed77f233dcdac8cd7fabfee0257eaf5d349",
                    "sha256:198d0c99ad360c10c81376beaf66c5d02382138413bf19a74788546999c57737",
                    "sha256:669ebd7d2be2618ed12b120e57b8655c078de77ef613de31c77c6568ca26b0c6",
                    "sha256:2dd9e80f85623b894631a4d1d2dc09c784ae437ece9da06918af1f6a5ad720f2",
                    "sha256:bd8da533b7bc0670ad4dd4a5ab917a0ac92138dff75e6043bcf83201ffca526e",
                    "sha256:a770f2e2a7783a503fef3b333e98a29264dd3aeffcf350e9867c15796416e0f0",
                    "sha256:81c13de9fc30a03ea2560ee4b8cd536d367484b00148a6278a5419f524eee8f6",
                    "sha256:60e9127fdb2f750f52b1609e0c2c42581b1450b8201b1ea69bb20bb7cd2fadb8",
                    "sha256:4384af49a52a372ed2db916cbf7f1af6648ddc51e08bccb93ab00a9d88cda4bd",
                    "sha256:af598e1a5e94a8506e626c02521156fe71a9debf58aed4620684c213cd8fa95f",
                    "sha256:9bda65e014b20cbfd8319f39552878fe8a2541c653f52906033766a45e568fb6",
                    "sha256:5b7f27e61382bbc65384db4385ac99fc27dab1254d34cf5b584480fce2ddbc8b",
                    "sha256:2d019f42b7a481d2f58b2c201b448ece608982453ca859b635785e4ee90925ef",
                    "sha256:a20990e2cf5f17bbd62629e4b342da8591bc76a01ebb1300fa2aabd9b0a91988",
                    "sha256:076b98ac822c630de572ed03a0b56dd501e14a016182b3f207f517f04857cab5",
                    "sha256:c060625ac07bef0fa4a8b397de2237edcb6ca7832d8b37047e0c1d477ec8bae8",
                    "sha256:201fda910a460eb258bd05884c9b7e6834fccf7678eb200041ec69b295bc41c5",
                    "sha256:b53b5739dacbfabb043b8175ffee11381f562cbfb94f858dc0991f72543adc2f",
                    "sha256:11dd73a4bd2d7dace66f660db84825deb434301654d7868d8bf0062760f849ce",
                    "sha256:4fdaba9bd8ebfc44f234ae0481a1cf3c35ce068c8143ff79047de23bdfe7caba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07d7160785ea9900e0b03779ea83a08344e2909add844cc72351c8ee891a44ac",
                    "sha256:f39af7a12ea6bb9e189895c4d1fe11404743a20f61949246561fb101140a4c3d",
                    "sha256:7415bf7b725b314db88980079c0ad5892a5d22488f3920d90ff50215fcea784f",
                    "sha256:25ae62912ec80e125aff3dec0c58c5e23d58f9e4250f55cf912d681554934205",
                    "sha256:88663c6699b277bc35efbe97433d15ad953c4138ab3d1a7da5f68ef7ef268038",
                    "sha256:08dc7913a037b5e948abba93e9b743532b5eb74869dc65a79cb3dcc9da80e3d6",
                    "sha256:fb4b8a6e58fb6cb38501a94d355a6496a1e3d36314b6f28c93c77f63e4bd0404",
                    "sha256:fc30f447adbe4e7426eba581efb0af3071461d358bc11b3b0492171565d79473"
                ]
            }
        },
        "1.0.0rc1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.1.0.024",
                    "CUDA_DRIVER_VERSION=455.23.05",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.8.2",
                    "CUBLAS_VERSION=11.2.1.74",
                    "CUFFT_VERSION=10.3.0.74",
                    "CURAND_VERSION=10.2.2.74",
                    "CUSPARSE_VERSION=11.2.0.275",
                    "CUSOLVER_VERSION=11.0.0.74",
                    "NPP_VERSION=11.1.1.269",
                    "NVJPEG_VERSION=11.2.0.74",
                    "CUDNN_VERSION=8.0.4.30",
                    "TRT_VERSION=7.2.1.6",
                    "TRTOSS_VERSION=20.11",
                    "NSIGHT_SYSTEMS_VERSION=2020.3.4.32",
                    "NSIGHT_COMPUTE_VERSION=2020.2.0.18",
                    "DALI_VERSION=0.27.0",
                    "DALI_BUILD=1699648",
                    "DLPROF_VERSION=20.11",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=5.1-2.3.7",
                    "OPENUCX_VERSION=1.9.0",
                    "OPENMPI_VERSION=4.0.5",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32",
                    "PYTORCH_VERSION=1.8.0a0+17f8c32",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.11",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "COCOAPI_VERSION=2.0+nv0.4.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=17345815",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "17345815",
                    "com.nvidia.build.ref": "501c7d3385d765f39dd16fd37ce92bb5d24d9de1",
                    "com.nvidia.cublas.version": "11.2.1.74",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.0.4.30",
                    "com.nvidia.cufft.version": "10.3.0.74",
                    "com.nvidia.curand.version": "10.2.2.74",
                    "com.nvidia.cusolver.version": "11.0.0.74",
                    "com.nvidia.cusparse.version": "11.2.0.275",
                    "com.nvidia.nccl.version": "2.8.2",
                    "com.nvidia.npp.version": "11.1.1.269",
                    "com.nvidia.nsightcompute.version": "2020.2.0.18",
                    "com.nvidia.nsightsystems.version": "2020.3.4.32",
                    "com.nvidia.nvjpeg.version": "11.2.0.74",
                    "com.nvidia.pytorch.version": "1.8.0a0+17f8c32",
                    "com.nvidia.tensorrt.version": "7.2.1.6",
                    "com.nvidia.tensorrtoss.version": "20.11",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2021-04-06T14:30:26.42057742-07:00",
            "history": [
                {
                    "created": "2020-09-25T22:33:49.531664713Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4974bb5483c392fb54a35f3799802d623d14632747493dce5feb4d435634b4ac in / "
                },
                {
                    "created": "2020-09-25T22:33:50.472187951Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-25T22:33:51.37343796Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:33:52.240104873Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-25T22:33:52.495173292Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:00.208591497-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:10.015127216-07:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:10.015127216-07:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:10.015127216-07:00",
                    "created_by": "ENV CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:10.015127216-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:11.05544067-07:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:11.899441742-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:12.924334938-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:13.968876942-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:14.871395451-07:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:15.504223743-07:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:16.083665967-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:30:16.897196766-07:00",
                    "created_by": "ENV NCCL_VERSION=2.8.2 CUBLAS_VERSION=11.2.1.74 CUFFT_VERSION=10.3.0.74 CURAND_VERSION=10.2.2.74 CUSPARSE_VERSION=11.2.0.275 CUSOLVER_VERSION=11.0.0.74 NPP_VERSION=11.1.1.269 NVJPEG_VERSION=11.2.0.74 CUDNN_VERSION=8.0.4.30 TRT_VERSION=7.2.1.6 TRTOSS_VERSION=20.11 NSIGHT_SYSTEMS_VERSION=2020.3.4.32 NSIGHT_COMPUTE_VERSION=2020.2.0.18",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 NCCL_VERSION=2.8.2 CUBLAS_VERSION=11.2.1.74 CUFFT_VERSION=10.3.0.74 CURAND_VERSION=10.2.2.74 CUSPARSE_VERSION=11.2.0.275 CUSOLVER_VERSION=11.0.0.74 NPP_VERSION=11.1.1.269 NVJPEG_VERSION=11.2.0.74 CUDNN_VERSION=8.0.4.30 TRT_VERSION=7.2.1.6 TRTOSS_VERSION=20.11 NSIGHT_SYSTEMS_VERSION=2020.3.4.32 NSIGHT_COMPUTE_VERSION=2020.2.0.18 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.8.2 com.nvidia.cublas.version=11.2.1.74 com.nvidia.cufft.version=10.3.0.74 com.nvidia.curand.version=10.2.2.74 com.nvidia.cusparse.version=11.2.0.275 com.nvidia.cusolver.version=11.0.0.74 com.nvidia.npp.version=11.1.1.269 com.nvidia.nvjpeg.version=11.2.0.74 com.nvidia.cudnn.version=8.0.4.30 com.nvidia.tensorrt.version=7.2.1.6 com.nvidia.tensorrtoss.version=20.11 com.nvidia.nsightsystems.version=2020.3.4.32 com.nvidia.nsightcompute.version=2020.2.0.18",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:21.218574689-07:00",
                    "created_by": "ENV DALI_VERSION=0.27.0 DALI_BUILD=1699648 DLPROF_VERSION=20.11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:22.087406707-07:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:33:22.939589463-07:00",
                    "created_by": "RUN |18 CUDA_VERSION=11.1.0.024 CUDA_DRIVER_VERSION=455.23.05 NCCL_VERSION=2.8.2 CUBLAS_VERSION=11.2.1.74 CUFFT_VERSION=10.3.0.74 CURAND_VERSION=10.2.2.74 CUSPARSE_VERSION=11.2.0.275 CUSOLVER_VERSION=11.0.0.74 NPP_VERSION=11.1.1.269 NVJPEG_VERSION=11.2.0.74 CUDNN_VERSION=8.0.4.30 TRT_VERSION=7.2.1.6 TRTOSS_VERSION=20.11 NSIGHT_SYSTEMS_VERSION=2020.3.4.32 NSIGHT_COMPUTE_VERSION=2020.2.0.18 DALI_VERSION=0.27.0 DALI_BUILD=1699648 DLPROF_VERSION=20.11 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:33:22.939589463-07:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:33:23.592073732-07:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:33:24.367380124-07:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:40:19.695637114-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:40:21.048896058-07:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "ARG MOFED_VERSION=5.1-2.3.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "ENV MOFED_VERSION=5.1-2.3.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "RUN |1 MOFED_VERSION=5.1-2.3.7 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "ARG OPENUCX_VERSION=1.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "ARG OPENMPI_VERSION=4.0.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:40:22.893813956-07:00",
                    "created_by": "ENV OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:53:05.973301689-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=5.1-2.3.7 OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5 /bin/sh -c wget -q -O - https://github.com/openucx/ucx/releases/download/v${OPENUCX_VERSION}/ucx-${OPENUCX_VERSION}.tar.gz | tar -xzf -  && cd ucx-${OPENUCX_VERSION}  && ./configure --prefix=/usr/local/ucx --enable-mt  && make -j\"$(nproc)\" install  && cd .. && rm -rf ucx-${OPENUCX_VERSION}  && echo \"/usr/local/ucx/lib\" >> /etc/ld.so.conf.d/openucx.conf  && wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' contrib/platform/mellanox/optimized.conf  && sed -i 's/^\\(btl = self\\)$/#\\1/' contrib/platform/mellanox/optimized.conf  && ./configure --with-pmi --with-pmix=internal                 --with-ucx=/usr/local/ucx --with-ucx-libdir=/usr/local/ucx/lib                 --with-platform=contrib/platform/mellanox/optimized                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:53:05.973301689-07:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-28T13:53:06.795489561-07:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:56:09.835696643-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=5.1-2.3.7 OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && if [ ! -f /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h ]; then cp /nvidia/build-scripts/cudnn_backend.h /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h; ln -s /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h /usr/include/x86_64-linux-gnu/cudnn_backend.h; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-28T13:56:09.835696643-07:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:53:44.186492565Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:53:44.186492565Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:53:44.186492565Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYTORCH_VERSION=1.8.0a0+17f8c32 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:53:44.186492565Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.8.0a0+17f8c32",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:53:44.186492565Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T21:54:01.514528839Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T21:54:01.514528839Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:54:01.514528839Z",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:55:06.995781501Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T21:55:06.995781501Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-29T21:55:10.553336105Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T21:59:17.81320216Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T22:00:11.729714351Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-29T22:00:11.729714351Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:25:24.660393967Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:27:24.77313994Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.2.14 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:29:46.97942769Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir nvidia_tensorboard-* tensorboard-shim/  && pip install --no-cache-dir nvidia_tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:29:47.235900941Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:29:48.004746624Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:29:48.004746624Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:33:40.841722325Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip install --no-cache-dir jupyter_tensorboard==0.2.0  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.0.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install libnpx       && ( cd node_modules/libnpx            && npm install update-notifier@^4.1.0 --production            && npm install yargs@^15.3.1 --production --force            && cd ../..            && npm install update-notifier@^4.1.0 --production )       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:33:41.255937197Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:33:41.255937197Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:33:41.255937197Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:33:41.255937197Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:33:41.255937197Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T17:33:41.572483432Z",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:45:16.994255853Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T17:45:16.994255853Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T18:51:58.722583102Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T18:52:19.580636678Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T18:52:19.580636678Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T18:52:50.175181918Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T18:52:50.424049889Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T18:53:00.288311241Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T18:53:05.080683064Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c cd /opt/pytorch && pip install \"git+https://github.com/NVIDIA/PyProf@r${DLPROF_VERSION}\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T19:59:42.315299974Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:22.441281661Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v7.0.0.post3  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:22.441281661Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:22.441281661Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:23.048640449Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:23.580294237Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:24.756479402Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:25.304229403Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:31.318374925Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:31.942309602Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:32.404689435Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:32.404689435Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:45.127362318Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 QAT=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:45.127362318Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.11 PYTORCH_BUILD_VERSION=1.8.0a0+17f8c32 PYVER=3.6 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=17345815",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "LABEL com.nvidia.build.id=17345815",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-05T20:00:54.663124255Z",
                    "created_by": "LABEL com.nvidia.build.ref=501c7d3385d765f39dd16fd37ce92bb5d24d9de1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-05T17:32:18.056016827-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-05T17:32:18.056016827-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     node-ssri node-y18n libssl1.0 libssl1.1 openssl     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:32:18.139492572-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:35:49.650810407-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.6 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:35:49.734568949-07:00",
                    "created_by": "WORKDIR /workspace/deps/rnnt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:47.239193657-07:00",
                    "created_by": "RUN /bin/sh -c COMMIT_SHA=f546575109111c455354861a0567c8aa794208a2 &&     git clone https://github.com/HawkAaron/warp-transducer &&     cd warp-transducer &&     git checkout $COMMIT_SHA &&     sed -i 's/set(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS} -gencode arch=compute_30,code=sm_30 -O2\")/#set(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS} -gencode arch=compute_30,code=sm_30 -O2\")/g' CMakeLists.txt &&     sed -i 's/set(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS} -gencode arch=compute_75,code=sm_75\")/set(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS} -gencode arch=compute_80,code=sm_80\")/g' CMakeLists.txt &&     mkdir build &&     cd build &&     cmake .. &&     make VERBOSE=1 &&     export CUDA_HOME=\"/usr/local/cuda\" &&     export WARP_RNNT_PATH=`pwd` &&     export CUDA_TOOLKIT_ROOT_DIR=$CUDA_HOME &&     export LD_LIBRARY_PATH=\"$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\" &&     export LIBRARY_PATH=$CUDA_HOME/lib64:$LIBRARY_PATH &&     export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH &&     export CFLAGS=\"-I$CUDA_HOME/include $CFLAGS\" &&     cd ../pytorch_binding &&     python3 setup.py install &&     rm -rf ../tests test ../tensorflow_binding # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:48.937294616-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:49.008433801-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:49.102515924-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:49.653403377-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements/*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:36:49.730637371-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-05T17:39:05.555188859-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T11:20:32.032907167-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T11:20:32.032907167-07:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-06T14:28:52.473959239-07:00",
                    "created_by": "RUN /bin/sh -c curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && nvm use 15.12.0  && nvm ls  && nvm alias default 15.12.0  && nvm uninstall 15.0.1  && npm update ssri  && npm update y18n # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:28:52.473959239-07:00",
                    "created_by": "ARG NEMO_VERSION=1.0.0rc1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-06T14:28:53.193784891-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0rc1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.034824122-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0rc1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.122777488-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.259417492-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.369416416-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.531862438-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:25.874601591-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-06T14:30:26.42057742-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0rc1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80580270666742c625aecc56607a806ba343a66a8f5a7fd708e6c4e4c07a3e9b",
                    "sha256:3fd9df55318470e88a15f423a7d2b532856eb2b481236504bf08669013875de1",
                    "sha256:7a694df0ad6cc5789a937ccd727ac1cda528a1993387bf7cd4f3c375994c54b6",
                    "sha256:fa1ea42d9bbd3382ee13ef03daf24695810d461d68810410ff9926b727ded40d",
                    "sha256:1157082f46a808603e14a591d84135d996d673c362d14c9ce2f449be66ecaaca",
                    "sha256:f9ec1859ab388ea55cc6b9f84ed0cc85f30c1499ab0a95c34847ebec62b3a0db",
                    "sha256:29f6da1967e29d4cd6e7d9e6b3799b6e148ebd0f770e8666810477ecbf6abfe2",
                    "sha256:703f8423a9203993bb418d9233018d9f5aeee7f2996eaa7b9ff570564d7011f0",
                    "sha256:31e9c892c7df2f78c8950e66eb82ab82a9d44d50ea70438071fa9338e21b7ae4",
                    "sha256:33227d3ef271e307a5332da4154a7113985ceced83a30d8559eed85f13954471",
                    "sha256:78b78a17038f6280f513c61fc438ec210ea2bc1eee9fb881b5c577f410715816",
                    "sha256:d4f94ae8cd71cc9972a3f5be81f72e17c625c8e9312a8cf9598869879c54898f",
                    "sha256:5828f296d3624468068be84de70873922c06fd6d012e1b8f0a123760d618c871",
                    "sha256:79a238d97382c7ec65dce96e5a1cc784b70be5697af41264f7d3a30fd0ab1cd7",
                    "sha256:e677fd7a872378069de72ea618aeee20d28734a0fafd8464b8729f86eb996f8f",
                    "sha256:ab5cc21043414c818ad818cdeba6d74c2fc843977c2c3c59d32ecee156690aec",
                    "sha256:6af8ce9bd8bed5966af0459433bcd99d9209206c52f528966ea711ae35be9847",
                    "sha256:dfc4e2944a669e9f5f6eff491889b3e395310a305e2260553184766e0f2ca8e3",
                    "sha256:73a34e3ed42540d0af5fdebef8525c8f48359d8e852e0f6dcd14e0e678692939",
                    "sha256:b39f9567ebb600e2e7f08724241eb1812d96b06ccbf463aae3d8ef6d14ecf5bf",
                    "sha256:c5fd8d709782832b5afeccaa1c0be2f8fb8fb38bbcb5c1a1c094a27ddf2c2468",
                    "sha256:27331341e7ef0d31511a80e4c77fbbeda09f58b4f6688a2da32aa9e44c073a44",
                    "sha256:f798c4c1d481756721610a24dbff5acc273dd5a2b35d58fe0fe9a8cc724669f1",
                    "sha256:764441c67984a087e9ca19567c946b43c54c37fd151ac77e0449044d81871ac7",
                    "sha256:6941ef17798c262560d8d950389c5956085f5bbdbeb35f5f4a3e17fff2a085bd",
                    "sha256:91678f9fffcd64a60c9ab7f62463006bbca6dd645a65c2f9dfbc02b9df47009c",
                    "sha256:ffa59fe9d57e3687d902ce15c7133e45175c76cb89982e63e5d4521bd245a028",
                    "sha256:cc6a7ee7728d8df1a1b1388a33003b260a8e63cfe9a61ac8446ac68cefef18c2",
                    "sha256:381dbb74165616db0a8172680d1ee2f00600283e94ae05e03c52adf4b0552109",
                    "sha256:d61cc81c9408620fa233dd6e1cb19b6a979e4fc03e49892792d35ae8a2b69ae5",
                    "sha256:ffe32a37a31b2d3bab7291c2abe6bdcd3e2dd435e8dfea060c7d596152595718",
                    "sha256:7ab6670ab8b41072ab823f083521f19a6e47f52a392e29d101206bab77e17160",
                    "sha256:8752d0a673403aa30fe2da30f70b827e724c34d4bacbf27d45d8af5c383bbe21",
                    "sha256:0e502ea4b275cf70b397eeab100a9c4dee075516b7da0a52cf2c0631c8c98f1e",
                    "sha256:5ae3eaef3d604fd55fd980f2d41015e91348cf6ce2b2a4a5695f22b2cd9cedb2",
                    "sha256:b73864a575e4aff8fe32a3e1953c0cef62be83bde9afbe7a59c68854522880d9",
                    "sha256:48d0e2915595d45d5d3006342e4a7abe66f814e10687ca53a67a0807defb07c2",
                    "sha256:820c73e070d03d7d59e2a7c6af64f86bcd7aad6b1165d00a092b6e1eb26f7f98",
                    "sha256:02703b2bb9151266af4be3569101ee6b6fd4b6c110725796391d7d50b92b9649",
                    "sha256:63b50907e07ca51bfc8c29450be387c38a7c81e1e45c809eba78760f77aa4644",
                    "sha256:eb64cf5360870b84a2506b0d021b167baf60fbbebceb9000d8d9e5c6c056119b",
                    "sha256:cfc96a079e8db14f9b9c3301371dc3965d6f8aee8c67a2a3a82d8bc22a5c467b",
                    "sha256:d68393cb455dc694c52cbd96629845ebb644022d7870b5a0820f6dd3f4308307",
                    "sha256:9e730ec72c74618601276197527daf196255bde88ad2b86403e24b52a79ba0d2",
                    "sha256:d3cfda716e47848023c56fc8060e22e3f7c76263806ab899be76600855a3b6c8",
                    "sha256:cd0eae70d0afc23d15b13d000a415c888264cea4871433014c24f01df46c91be",
                    "sha256:42ae2c481d35a7e83a1922bbaa642e3aee0887f0f008f07b0e79e2a359a9b7c3",
                    "sha256:4e4e4be6cbfd02f0f940e02eec09758a5e52264554ce9b3e6cfe5ab36322df06",
                    "sha256:cce1ae003e64497085c11e10cfeefa1bc126ed2583668e34f65d6b0d88765683",
                    "sha256:16034132dfc5138d9115b4ba0c104ce8252edbc58e7f243798310303b8b4f8be",
                    "sha256:82555094f0e5b963adff44ceedc4049f76c974092d161e09d720d7a128f853a8",
                    "sha256:2853be574ce74335196adc249b4862ccd8e01a291785198bcdeafc5058e25580",
                    "sha256:7c1655c5f319bad0e2c78c4567b3a6c7e6b787f882281816d6f1f1d702de5767",
                    "sha256:b6d59163375964c19fda23e29f62fbfdd81e68b16e9aa1d3d3c5e31a6ff72e6d",
                    "sha256:d1b79b56ebf679182ff0d169d16f2171868ba77410ff5b025f5b9d10e4171b30",
                    "sha256:63709c86c2eb3b552039f370cf601383ceef9a27ac193dbe58e8c71a328490d8",
                    "sha256:bcc77fa4ae7131ebd4d8add0e25ae571b49e5fe3b62195f167dd009eccd14dfe",
                    "sha256:6cd55f267dc421121534121aa49e0e619b3ce83b2096ba60b0ccb313d6b08e20",
                    "sha256:6384831aa7b1707773ffd011dd1a37de72d1b80578b62d6e0c867835cc1531f1",
                    "sha256:8590f2e18584d8e9df1e033c0e99341d426badb01d641d0eea12b737d61e4725",
                    "sha256:bd84a612d8b128f394828208c48baeef330635905d796b6b7561e28029ee7320",
                    "sha256:5023c0b366c4060f7d2be5413700b923c95b49baa82b621513e0b1b73129ef5e",
                    "sha256:97763d2e234f820939e65170c482b1e498e58848d6f8aab056c3f2ae3c96a759",
                    "sha256:d8bae6a599ecfb0bc2af93576deaf686c31acb427efb08530cb0cf6dacce5e69",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0dbe23421a0ae54af253ec348045eab1fc62572d00b76e4d038ed95cf734024c",
                    "sha256:7dba7db6ab5ffbf00bfb02d773eb982aa15e98c9525b008e90cde01016836f7d",
                    "sha256:9ea5d0b9a322b7d93dd41c1edb6e37ebafc4c8223e31364cb908e70a28c80517",
                    "sha256:5a1eb80a70f256befbffd82cc288730fd9cdeb14efab8fdaeecfb74106c30c6d",
                    "sha256:756819627045fffbad4cb5ad8653a3ece0311b64bcdf854efd710ffe8f28e9fc",
                    "sha256:112f3bc5f824bcf358aeadac5d15f9c5f8cc7eb4be3700bb51cb93c76135276a",
                    "sha256:cd4f42ad4932612a9032ec257e15fabf36d2342dab3c1cb61bd7d236a9a34f32",
                    "sha256:89d70c30a5839365db8c7f6f8643e59839d7a4fba3035ff0982bf6d36ac8ed5f",
                    "sha256:2aed9e9115459e3407a6f95123520c5728a01d119a1a64d4d1638c9b8e530e09",
                    "sha256:13dff04e973544b4ed356ec62dd6cafa29211201f8c92e7b06cf1b9741ff36a0",
                    "sha256:2e2e3f10e42e8c89429b55fb9fb22a7650c48a6769afc8ef9778f7bbd0a69c27",
                    "sha256:95e8357bd1dfddaebc1fb802fb80592eab48b6d4dc23366b8f1d511707640436"
                ]
            }
        },
        "1.0.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.2.1.007",
                    "CUDA_DRIVER_VERSION=460.32.03",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.8.4",
                    "CUBLAS_VERSION=11.4.1.1026",
                    "CUFFT_VERSION=10.4.0.135",
                    "CURAND_VERSION=10.2.3.135",
                    "CUSPARSE_VERSION=11.4.0.135",
                    "CUSOLVER_VERSION=11.1.0.135",
                    "NPP_VERSION=11.3.2.139",
                    "NVJPEG_VERSION=11.4.0.135",
                    "CUDNN_VERSION=8.1.1.33",
                    "TRT_VERSION=7.2.2.3+cuda11.1.0.024",
                    "TRTOSS_VERSION=21.03",
                    "NSIGHT_SYSTEMS_VERSION=2020.4.3.7",
                    "NSIGHT_COMPUTE_VERSION=2020.3.1.3",
                    "DALI_VERSION=0.31.0",
                    "DALI_BUILD=2054952",
                    "DLPROF_VERSION=21.03",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=5.1-2.3.7",
                    "OPENUCX_VERSION=1.9.0",
                    "OPENMPI_VERSION=4.0.5",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.9.0a0+df837d0",
                    "PYTORCH_VERSION=1.9.0a0+df837d0",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.03",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "COCOAPI_VERSION=2.0+nv0.4.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=21060478",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "21060478",
                    "com.nvidia.build.ref": "b8c8e4e4a0105e697e84364fac28ae7d8024e4e5",
                    "com.nvidia.cublas.version": "11.4.1.1026",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.1.1.33",
                    "com.nvidia.cufft.version": "10.4.0.135",
                    "com.nvidia.curand.version": "10.2.3.135",
                    "com.nvidia.cusolver.version": "11.1.0.135",
                    "com.nvidia.cusparse.version": "11.4.0.135",
                    "com.nvidia.nccl.version": "2.8.4",
                    "com.nvidia.npp.version": "11.3.2.139",
                    "com.nvidia.nsightcompute.version": "2020.3.1.3",
                    "com.nvidia.nsightsystems.version": "2020.4.3.7",
                    "com.nvidia.nvjpeg.version": "11.4.0.135",
                    "com.nvidia.pytorch.version": "1.9.0a0+df837d0",
                    "com.nvidia.tensorrt.version": "7.2.2.3+cuda11.1.0.024",
                    "com.nvidia.tensorrtoss.version": "21.03",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-06-09T17:56:47.404881039-07:00",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:30.790506237-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:45.671236252-08:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:45.671236252-08:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:45.671236252-08:00",
                    "created_by": "ENV CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:45.671236252-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:46.564384516-08:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:47.152491017-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:48.03678809-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:48.928591093-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:49.47374092-08:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:50.032402432-08:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:50.832415803-08:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:51:51.636651997-08:00",
                    "created_by": "ENV NCCL_VERSION=2.8.4 CUBLAS_VERSION=11.4.1.1026 CUFFT_VERSION=10.4.0.135 CURAND_VERSION=10.2.3.135 CUSPARSE_VERSION=11.4.0.135 CUSOLVER_VERSION=11.1.0.135 NPP_VERSION=11.3.2.139 NVJPEG_VERSION=11.4.0.135 CUDNN_VERSION=8.1.1.33 TRT_VERSION=7.2.2.3+cuda11.1.0.024 TRTOSS_VERSION=21.03 NSIGHT_SYSTEMS_VERSION=2020.4.3.7 NSIGHT_COMPUTE_VERSION=2020.3.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 NCCL_VERSION=2.8.4 CUBLAS_VERSION=11.4.1.1026 CUFFT_VERSION=10.4.0.135 CURAND_VERSION=10.2.3.135 CUSPARSE_VERSION=11.4.0.135 CUSOLVER_VERSION=11.1.0.135 NPP_VERSION=11.3.2.139 NVJPEG_VERSION=11.4.0.135 CUDNN_VERSION=8.1.1.33 TRT_VERSION=7.2.2.3+cuda11.1.0.024 TRTOSS_VERSION=21.03 NSIGHT_SYSTEMS_VERSION=2020.4.3.7 NSIGHT_COMPUTE_VERSION=2020.3.1.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.8.4 com.nvidia.cublas.version=11.4.1.1026 com.nvidia.cufft.version=10.4.0.135 com.nvidia.curand.version=10.2.3.135 com.nvidia.cusparse.version=11.4.0.135 com.nvidia.cusolver.version=11.1.0.135 com.nvidia.npp.version=11.3.2.139 com.nvidia.nvjpeg.version=11.4.0.135 com.nvidia.cudnn.version=8.1.1.33 com.nvidia.tensorrt.version=7.2.2.3+cuda11.1.0.024 com.nvidia.tensorrtoss.version=21.03 com.nvidia.nsightsystems.version=2020.4.3.7 com.nvidia.nsightcompute.version=2020.3.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.056497563-08:00",
                    "created_by": "ENV DALI_VERSION=0.31.0 DALI_BUILD=2054952 DLPROF_VERSION=21.03",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:23.536483059-08:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:54:24.208738506-08:00",
                    "created_by": "RUN |18 CUDA_VERSION=11.2.1.007 CUDA_DRIVER_VERSION=460.32.03 NCCL_VERSION=2.8.4 CUBLAS_VERSION=11.4.1.1026 CUFFT_VERSION=10.4.0.135 CURAND_VERSION=10.2.3.135 CUSPARSE_VERSION=11.4.0.135 CUSOLVER_VERSION=11.1.0.135 NPP_VERSION=11.3.2.139 NVJPEG_VERSION=11.4.0.135 CUDNN_VERSION=8.1.1.33 TRT_VERSION=7.2.2.3+cuda11.1.0.024 TRTOSS_VERSION=21.03 NSIGHT_SYSTEMS_VERSION=2020.4.3.7 NSIGHT_COMPUTE_VERSION=2020.3.1.3 DALI_VERSION=0.31.0 DALI_BUILD=2054952 DLPROF_VERSION=21.03 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:54:24.208738506-08:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:54:24.729281986-08:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:54:25.192481105-08:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:59:41.030897728-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:59:41.788443653-08:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "ARG MOFED_VERSION=5.1-2.3.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "ENV MOFED_VERSION=5.1-2.3.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "RUN |1 MOFED_VERSION=5.1-2.3.7 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "ARG OPENUCX_VERSION=1.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "ARG OPENMPI_VERSION=4.0.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T08:59:43.438945971-08:00",
                    "created_by": "ENV OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T09:12:43.41524169-08:00",
                    "created_by": "RUN |3 MOFED_VERSION=5.1-2.3.7 OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5 /bin/sh -c wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --no-check-certificate -q -O - https://github.com/openucx/ucx/releases/download/v${OPENUCX_VERSION}/ucx-${OPENUCX_VERSION}.tar.gz | tar -xzf -  && cd ucx-${OPENUCX_VERSION}  && ./configure --prefix=/usr/local/ucx --enable-mt  && make -j\"$(nproc)\" install  && cd .. && rm -rf ucx-${OPENUCX_VERSION}  && echo \"/usr/local/ucx/lib\" >> /etc/ld.so.conf.d/openucx.conf  && wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --no-check-certificate -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' contrib/platform/mellanox/optimized.conf  && sed -i 's/^\\(btl = self\\)$/#\\1/' contrib/platform/mellanox/optimized.conf  && ./configure --with-pmi --with-pmix=internal                 --with-ucx=/usr/local/ucx --with-ucx-libdir=/usr/local/ucx/lib                 --with-platform=contrib/platform/mellanox/optimized                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T09:12:43.41524169-08:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T09:12:43.888333867-08:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T09:15:44.180034181-08:00",
                    "created_by": "RUN |3 MOFED_VERSION=5.1-2.3.7 OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-02-26T09:15:44.180034181-08:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-26T09:15:45.754712547-08:00",
                    "created_by": "RUN |3 MOFED_VERSION=5.1-2.3.7 OPENUCX_VERSION=1.9.0 OPENMPI_VERSION=4.0.5 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-05T08:47:43.515729201Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-05T08:47:43.515729201Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-05T08:47:43.515729201Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYTORCH_VERSION=1.9.0a0+df837d0 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.03",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-05T08:47:43.515729201Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.9.0a0+df837d0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-05T08:47:43.515729201Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-05T08:47:49.267601809Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-05T08:47:49.267601809Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-05T08:47:49.267601809Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:22:22.125423445Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.4 mkl-include=2019.4 ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:22:22.125423445Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:22:26.575178984Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:22:53.691967241Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:28:46.684095781Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:29:21.71010214Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:29:21.71010214Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:29:48.326530663Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:30:31.696976613Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.2.9 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:31:04.959298911Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir nvidia_tensorboard-* tensorboard-shim/  && pip install --no-cache-dir nvidia_tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:31:05.46350181Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:31:06.705543565Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:31:06.705543565Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:34:03.717705331Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.2.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:34:04.638514047Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:34:04.638514047Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:34:04.638514047Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:34:04.638514047Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:34:04.638514047Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-18T23:48:26.035081045Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-18T23:48:26.035081045Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T01:06:33.080557566Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T01:06:49.596475676Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T01:06:49.596475676Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T01:07:19.646510844Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T01:07:24.918531952Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T01:07:34.344612031Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T01:07:38.472798659Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c cd /opt/pytorch && pip install \"git+https://github.com/NVIDIA/PyProf@r${DLPROF_VERSION}\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:18:25.335506981Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:04.32349988Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v7.0.0.post3  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:04.32349988Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:19:04.32349988Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:19:04.746372716Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:05.210308158Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:09.21913911Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:10.99648388Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:30.565899635Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:32.897033098Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:33.336165008Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:19:33.336165008Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:19:33.770660988Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:20:08.635744535Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:20:08.635744535Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.03 PYTORCH_BUILD_VERSION=1.9.0a0+df837d0 PYVER=3.8 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy pytorch-quantization # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=21060478",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "LABEL com.nvidia.build.id=21060478",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-19T02:20:13.694434193Z",
                    "created_by": "LABEL com.nvidia.build.ref=b8c8e4e4a0105e697e84364fac28ae7d8024e4e5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T22:20:47.37898818-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T22:20:47.37898818-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get purge node-ssri node-y18n node-url-parse &&     apt-get install -y     libssl1.0 libssl1.1 openssl     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-08T22:20:49.43309116-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-08T22:20:49.546155446-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-08T22:24:41.662115938-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.7 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-08T22:24:41.910546181-07:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-08T22:27:27.919494351-07:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.8.1 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T13:09:27.022101623-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T13:11:40.719113629-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T13:11:50.553785936-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --upgrade notebook jupyterlab python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T13:11:50.553785936-07:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-09T15:26:52.345742587-07:00",
                    "created_by": "RUN /bin/sh -c curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && which npm  && nvm install 16.3.0 node  && nvm use 16.3.0  && nvm ls  && nvm alias default 16.3.0  && nvm uninstall 15.2.1  && nvm ls  && npm install ssri  && npm install y18n  && npm install url-parse # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:50:21.833240964-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:50:22.214781767-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:53:52.344005564-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:53:52.645744917-07:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:55:23.6047769-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:55:23.6047769-07:00",
                    "created_by": "ARG NEMO_VERSION=1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-09T17:55:24.249259737-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:55:49.392081212-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:45.114296707-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.1 /bin/sh -c conda update -c numba numba -y && pip install --upgrade PyYAML # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:45.422766928-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:45.736255077-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:46.049884084-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:46.356876425-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:46.692043093-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-09T17:56:47.404881039-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:6a1a28e58f443afd7da47f1229bf0ea40d55deee6d44af21729371bc2948a5de",
                    "sha256:d397179399250b2c5a777ecccca40c86b22b315261669a0f103351eca85d6f27",
                    "sha256:2c676006c31556df3b893018f67571265f54e2f254500e193078ed7d46b5cef0",
                    "sha256:99469e4cb0064afc6c6d23aac195313524732ab35a6d6489646777fbaf4c1c51",
                    "sha256:ad300916f8b1adc0603720f8f2af48e823f0b95161b670c8e1c1a8beb647f6fc",
                    "sha256:a8a05cb28860ace3c6b67c7213c7cdcfb329fa8aa20902bf54921fc2e059c236",
                    "sha256:f446ab3640277963de8474667f40dbd02de134ede62f648876719ceca656ceda",
                    "sha256:b55ccb8c388d2b89d14df280edf4442c9d5adc2cccc3db998dbf1e152dd1ebd2",
                    "sha256:6367bf25d327ca9c685c21c7e1b5661a51a0ce29f9c551132c95ac4a6025dcc6",
                    "sha256:2d11ab05799123c0cd813559ff715cd5d14f57f970eb1dc04159ba5f7089821b",
                    "sha256:97715a4a205fbd5c5c77302f02eb9775878f359b0e270bda329d915166d7680e",
                    "sha256:036b4dbd1b1bee06d8e6b635819249142aee7bfded5b4335824deae5edf3ce0d",
                    "sha256:4653e65ca2331b4083da08d463bb27b306d15faa831f180d3c35c783ddc5f827",
                    "sha256:bba1560fd1c19f5c1c8b393c134c9c06bfbf796b3c93f3ba6ed3b4273c80bc1f",
                    "sha256:e47adcc2d384fb30c8456493275be8ea85ef0e3de609e00e42d708e64dc69674",
                    "sha256:1e9bdf72a37e252a336423d2d6b04887f779172bfd90fd2550b0c93817ab6089",
                    "sha256:c74def3244dd70b855017e75872fccaa5cef4467067a31879c2ad517acd5b91e",
                    "sha256:f426be53f6a5eb8b43db11e62989118833cf2aca1b30fe62aa8ea336c35bc19c",
                    "sha256:ab3ecd216b6f9f16962bdf8d2dd2deefbae94ca0e61deb649f40a48c2506277b",
                    "sha256:850c7e106fedf576f1bfb3184342bb5eda25ed14760bd850e5c7c41eca88d282",
                    "sha256:fa1d582e7c41b260ad4fa188ea5598520734d4ba21a9f8ca1c2c91b1fdc7be29",
                    "sha256:2edaad1914bd1e77b49e4f6dc5ee77c1b310dcf7b886c8ac86a41b5ab640b36f",
                    "sha256:19d1eea6e5e4c9e9ff770c2b6a28746c108ab8d0f4eb6600a8b531d41ed7d9d2",
                    "sha256:8cc2232f06c71b142c0ddcae7df364a0fe963e7b896f712e6111a2502b0ec121",
                    "sha256:951f1ee90eb41ab1e90d5d744e019508393c49c95e625f4ff61686b74e60d93c",
                    "sha256:694fd041a873f9e2f41fb89f6b30d71b0a39304a2bcd6e9225b9654e1826a145",
                    "sha256:4957c282a241b4956f8decf79caf3cd4ed5b7957877e6d57b3b2b91d7cacf73a",
                    "sha256:3779b9846f41411dd4630d2706254a312154c33c3c3ab614141655ab39085938",
                    "sha256:022ecd3af37c421c3baabd732988932c3ae30c070b094282d854e09d3c0e2e56",
                    "sha256:a911b025bd43e90d613f8c946c1025ab2ae51c0f26852bf7514ddf0d4872e64f",
                    "sha256:78c5cdc0b7f7db68f68b95f4383e172c8b3d489ae656db4c92ab1cd0494aaf02",
                    "sha256:c5967fa68f029259f2e934be4174b0cf7f3382451e275fdff43946b639291f10",
                    "sha256:11353157720e21aec4e95b76dad3056afc3625c91d43e1833ab2362c8c8cc3f4",
                    "sha256:8f27b7f924082de16b8d28a4bcf81b9b66adb7978417f330919952c786d6a4ce",
                    "sha256:1edaeb1de6df4157ff2b0c6a5ed6f28d5861c7353a6c9ed885a7e7d474fc97fa",
                    "sha256:358873490080b56cb278c0b9522f778a7843cf9bb589b80d1176bfc5f46310ef",
                    "sha256:82ae784d6831bde3e1895659ca792a340e2568bfe8184b2857db0611264b1b9e",
                    "sha256:2dddca50c533156f46415279153f86c376bc48655151e38c25fbbe8f42d24e01",
                    "sha256:0bf99d1c955bd25f3576ab1dcaa38f3f3c577cf083cf024c2e3ba13958bcf082",
                    "sha256:4452d3899ed1ed49cb45275852e2b7f1447d4201164aa673cd81f1588ba6982c",
                    "sha256:0a6c91112e137023d525f10bad813f10913d8c04141aba5a5165cc40fb3a101d",
                    "sha256:29366d655d64fa8ff60b79bbee92b826fb1aeb70853d466334ed34bd5f290f1a",
                    "sha256:962e8718c50c4159326d07be35ed3c52b6c90deb1fdf107c4109165c131f1780",
                    "sha256:26393964d25502aefa5d1c746bc952bfb84a352cfa26cea2b7d5b9b3f994f58b",
                    "sha256:c21c068acee556bb610d68553cf036c8b9b0138b872df037b140ef9ba541f9ea",
                    "sha256:46f372bc8c2eab17f2930a7051db441cec95cd9d5dfe6a22263aeefbc47b640f",
                    "sha256:4cf8848529b4048f62cdbc424c554ec23042cb9f1874acea54d22994d31db70c",
                    "sha256:1bf7d58fae2434cb2e5fdec6b1a1173edb67db7a161d8bf390dada29bc6a7951",
                    "sha256:bb81ab0f9234f614011a59b2dc9a123a2118e960bf9a9b37e497e82a268cb24c",
                    "sha256:1286cdd2a28d4ab14569f2d8f59980b7bd51a99c85d7ca81253bfffbfca1d3aa",
                    "sha256:307279137829da72d5fd236d387701b872feef696205ed38870eb78a62e441be",
                    "sha256:597614a37602bedcab3ba9ce76819a98107b46f1341912aa74977bc5b5f9396c",
                    "sha256:340bc62db13a1d420970324e1cb1fd6d68968aac98b2b6015b589fc88745d9d0",
                    "sha256:72cb6c15253fcc4590e2076c902b9c793bd9cb1cc0203973301ab3926ed27a27",
                    "sha256:80c01a888daa752532f355b1e33d3c3d1ed31677fe2dd3ea351cd5df7af49bae",
                    "sha256:efac8781bbccf60dafbbef2172f2892c0570c69da23b39ce97ddafd91f0f7f94",
                    "sha256:f71ff777da74aaf22d034e04b5b32ae1bdf76be8dc772c627c58b5ecf0f9469d",
                    "sha256:2d4697ce16439a42428cf13ddfa5612d4edc6d43a943fc2fcd3ae4edd3246647",
                    "sha256:0b839b942f280dc438148e3d0b26f4eb94cbccb33e0b592033c0c557ada0d0f8",
                    "sha256:70cc1b0df8a40f5bbd7b51c2963794f1b45ebddffa8ca6ff64c2e6bdc5160c4e",
                    "sha256:605af26f66a54e93b7a3950b8e899d1a3a0d0e7b53e59bdbf018b2ad10079129",
                    "sha256:717b66b762a31cb85ba48cb052343aefc4c356bb4db38ab8d3c3ca096b7dc29a",
                    "sha256:1f45280e921e8c334cef071dddab001d3f802c57b4eadf816eb0ee7750f07738",
                    "sha256:e00c6cc3f20793bbb9a85679bcf0f6353101f46ad56c3e0a0df53d4dcb564a5a",
                    "sha256:bcecbd5de8f7f4656f175667d4f47472b0138cf054386d16e164f14c1404410b",
                    "sha256:0d38c84c803e44ecfb23ab1961245330d1608223a3a681c057a9c879f589834d",
                    "sha256:07974e4942b10b5ec4a3c46ba91277a9ac3c523a657c63d75e37fb87de4bbe32",
                    "sha256:0e3d0d97675c2f93742491ab5655f9311218bb168133d6f01368337c8df2f9d5",
                    "sha256:e3b3253de1552067f0c0f1d186e93f067c24aabe66dc3af0c5688f4ef0e78675",
                    "sha256:0fee8a2e07968fa8c2cc1fd36ca3624de1dcb6b11fad6e63aa0a79a1f32cf42b",
                    "sha256:f58fcc4853382aa39a71fd83c374e5af82bc6e343a1a2f6ba2479538ba881f77",
                    "sha256:88622a0189693381e9d03592fc4b2dc14c59642e19cd6e9ed6c5c59bccd2044f",
                    "sha256:ad9f7155f144ed78f85b8267c2f191ef9f02dd35eda4b8130af9e9fbd82a6fa2",
                    "sha256:ff424582e2256460367145f14ab6dbbcfc75c96d42f3c548a4fc1627b3f59e89",
                    "sha256:95a3a906a8ca51ac4de9efaa7afd51303961185365d1b8fd2113d51c0c11a015",
                    "sha256:d72f7b9cfd5543060fd098a86f7332df9d2f530b55ecd1479447937c8ab70699",
                    "sha256:10d2459f4d649706ddf3fc87523f0b5ca31d0f2ac6c2bb2559f885191004edbf",
                    "sha256:56d16c96ca1fab31c7333d1422667c8f247f532cd7ce32e36d84f10c1ef7f550",
                    "sha256:9a6957dc194a1680d3f22184832c7a7ba55d92a00e569e6a8638849479a70807"
                ]
            }
        },
        "1.1.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.3.0.016",
                    "CUDA_DRIVER_VERSION=465.19.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.9.8",
                    "CUBLAS_VERSION=11.5.1.101",
                    "CUFFT_VERSION=10.4.2.58",
                    "CURAND_VERSION=10.2.4.58",
                    "CUSPARSE_VERSION=11.5.0.58",
                    "CUSOLVER_VERSION=11.1.1.58",
                    "NPP_VERSION=11.3.3.44",
                    "NVJPEG_VERSION=11.4.1.58",
                    "CUDNN_VERSION=8.2.0.51",
                    "TRT_VERSION=7.2.3.4+cuda11.1.0.024",
                    "TRTOSS_VERSION=21.05",
                    "NSIGHT_SYSTEMS_VERSION=2021.1.3.14",
                    "NSIGHT_COMPUTE_VERSION=2021.1.0.18",
                    "DALI_VERSION=1.0.0",
                    "DALI_BUILD=2054952",
                    "DLPROF_VERSION=21.04",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "GDRCOPY_VERSION=2.2",
                    "HPCX_VERSION=2.8.2rc3",
                    "MOFED_VERSION=5.2-rdmacore32.1",
                    "OPENUCX_VERSION=1.10.0",
                    "OPENMPI_VERSION=4.1.1rc1",
                    "RDMACORE_VERSION=32.1",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7",
                    "PYTORCH_VERSION=1.9.0a0+2ecb2c7",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.05",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "COCOAPI_VERSION=2.0+nv0.5.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=22595835",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "22595835",
                    "com.nvidia.build.ref": "870e57ef3f56266c8d0d0cb5bdc6e4c15c39e835",
                    "com.nvidia.cublas.version": "11.5.1.101",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.2.0.51",
                    "com.nvidia.cufft.version": "10.4.2.58",
                    "com.nvidia.curand.version": "10.2.4.58",
                    "com.nvidia.cusolver.version": "11.1.1.58",
                    "com.nvidia.cusparse.version": "11.5.0.58",
                    "com.nvidia.nccl.version": "2.9.8",
                    "com.nvidia.npp.version": "11.3.3.44",
                    "com.nvidia.nsightcompute.version": "2021.1.0.18",
                    "com.nvidia.nsightsystems.version": "2021.1.3.14",
                    "com.nvidia.nvjpeg.version": "11.4.1.58",
                    "com.nvidia.pytorch.version": "1.9.0a0+2ecb2c7",
                    "com.nvidia.tensorrt.version": "7.2.3.4+cuda11.1.0.024",
                    "com.nvidia.tensorrtoss.version": "21.05",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-07-16T16:51:41.628137662-07:00",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:16:43.461120701-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:56.631252958-07:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:16:56.631252958-07:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:16:56.631252958-07:00",
                    "created_by": "ENV CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:16:56.631252958-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:57.383597378-07:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:57.979560447-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:58.595648782-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:59.451473406-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:16:59.887471093-07:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:17:00.527363619-07:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:17:00.971357203-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:17:01.543452563-07:00",
                    "created_by": "ENV NCCL_VERSION=2.9.8 CUBLAS_VERSION=11.5.1.101 CUFFT_VERSION=10.4.2.58 CURAND_VERSION=10.2.4.58 CUSPARSE_VERSION=11.5.0.58 CUSOLVER_VERSION=11.1.1.58 NPP_VERSION=11.3.3.44 NVJPEG_VERSION=11.4.1.58 CUDNN_VERSION=8.2.0.51 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.05 NSIGHT_SYSTEMS_VERSION=2021.1.3.14 NSIGHT_COMPUTE_VERSION=2021.1.0.18",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.8 CUBLAS_VERSION=11.5.1.101 CUFFT_VERSION=10.4.2.58 CURAND_VERSION=10.2.4.58 CUSPARSE_VERSION=11.5.0.58 CUSOLVER_VERSION=11.1.1.58 NPP_VERSION=11.3.3.44 NVJPEG_VERSION=11.4.1.58 CUDNN_VERSION=8.2.0.51 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.05 NSIGHT_SYSTEMS_VERSION=2021.1.3.14 NSIGHT_COMPUTE_VERSION=2021.1.0.18 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.9.8 com.nvidia.cublas.version=11.5.1.101 com.nvidia.cufft.version=10.4.2.58 com.nvidia.curand.version=10.2.4.58 com.nvidia.cusparse.version=11.5.0.58 com.nvidia.cusolver.version=11.1.1.58 com.nvidia.npp.version=11.3.3.44 com.nvidia.nvjpeg.version=11.4.1.58 com.nvidia.cudnn.version=8.2.0.51 com.nvidia.tensorrt.version=7.2.3.4+cuda11.1.0.024 com.nvidia.tensorrtoss.version=21.05 com.nvidia.nsightsystems.version=2021.1.3.14 com.nvidia.nsightcompute.version=2021.1.0.18",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.293288155-07:00",
                    "created_by": "ENV DALI_VERSION=1.0.0 DALI_BUILD=2054952 DLPROF_VERSION=21.04",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:31.875388481-07:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:19:32.495649096-07:00",
                    "created_by": "RUN |18 CUDA_VERSION=11.3.0.016 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.8 CUBLAS_VERSION=11.5.1.101 CUFFT_VERSION=10.4.2.58 CURAND_VERSION=10.2.4.58 CUSPARSE_VERSION=11.5.0.58 CUSOLVER_VERSION=11.1.1.58 NPP_VERSION=11.3.3.44 NVJPEG_VERSION=11.4.1.58 CUDNN_VERSION=8.2.0.51 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.05 NSIGHT_SYSTEMS_VERSION=2021.1.3.14 NSIGHT_COMPUTE_VERSION=2021.1.0.18 DALI_VERSION=1.0.0 DALI_BUILD=2054952 DLPROF_VERSION=21.04 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:19:32.495649096-07:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:19:32.939462016-07:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:19:33.41938334-07:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:22:52.265120152-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG MOFED_VERSION=5.2-rdmacore32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ENV GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.0 OPENMPI_VERSION=4.1.1rc1 RDMACORE_VERSION=32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.0 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                        && dpkg -i libibverbs1_*.deb                        libibverbs-dev_*.deb                     librdmacm1_*.deb                         librdmacm-dev_*.deb                      libibumad3_*.deb                         libibumad-dev_*.deb                      ibverbs-utils_*.deb                      ibverbs-providers_*.deb       && rm $(dpkg-query -L                                libibverbs-dev                           librdmacm-dev                            libibumad-dev                        | grep \"\\(\\.so\\|\\.a\\)$\")       )                                     && ( cd opt/gdrcopy/                          && dpkg -i gdrcopy_*.deb               )                                     && ( cp -r opt/hpcx /opt/ )              && ( cp -r usr/local/ucx /usr/local/ )   && ( cp -r usr/local/mpi /usr/local/ )   && ( cp etc/ld.so.conf.d/hpcx.conf    /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openucx.conf /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openmpi.conf /etc/ld.so.conf.d/ )  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:23:02.812168458-07:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:23:09.151404182-07:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:26:19.65751168-07:00",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.0 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T11:26:19.65751168-07:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T11:26:20.487697034-07:00",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.0 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:35:33.031230271Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:35:33.031230271Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:35:33.031230271Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYTORCH_VERSION=1.9.0a0+2ecb2c7 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.05",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:35:33.031230271Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.9.0a0+2ecb2c7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:35:33.031230271Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:39:24.899415153Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:39:24.899415153Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:39:24.899415153Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:39:30.183079539Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.4 mkl-include=2019.4 ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:39:30.183079539Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:40:46.790651652Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:41:22.67509749Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:41:25.948812393Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:46:44.714075422Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:46:44.714075422Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:47:28.444347016Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:47:58.630677655Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:48:46.113551829Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir nvidia_tensorboard-* tensorboard-shim/  && pip install --no-cache-dir nvidia_tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:49:32.551977869Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:49:33.160440871Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:49:33.160440871Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:49:34.205385269Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:52:30.12058014Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:52:30.12058014Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:52:30.12058014Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:52:30.12058014Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:52:30.12058014Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:52:31.036728415Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T19:52:31.036728415Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T19:52:31.036728415Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T20:05:46.082498558Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:05:48.625765104Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T20:05:48.625765104Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T21:26:42.086081253Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:26:58.189384548Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:34.344139219Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:34.806093186Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c cd /opt/pytorch && pip install \"git+https://github.com/NVIDIA/PyProf@r${DLPROF_VERSION}\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:44.101663228Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:48.083295996Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:48.594038098Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v7.0.0.post3  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T21:27:48.594038098Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T21:27:48.594038098Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:48:37.479278672Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:18.812391013Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:19.28812898Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:19.680272653Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:22.543074044Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:23.766854838Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:43.695458184Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:43.695458184Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:44.411719881Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:44.839978572Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:44.839978572Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.05 PYTORCH_BUILD_VERSION=1.9.0a0+2ecb2c7 PYVER=3.8 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy pytorch-quantization # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=22595835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "LABEL com.nvidia.build.id=22595835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-28T22:49:45.237129057Z",
                    "created_by": "LABEL com.nvidia.build.ref=870e57ef3f56266c8d0d0cb5bdc6e4c15c39e835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-16T14:28:10.062579763-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-16T14:28:10.062579763-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T14:32:06.393262114-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T14:32:08.918153303-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T14:32:08.918153303-07:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-16T16:34:07.573534431-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm ls  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm install url-parse@^1.5.0 --production       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && nvm ls  && nvm use 15.12.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:34:09.236359793-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:34:09.318246545-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:37:55.458421218-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.7 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:37:55.542257336-07:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:40:43.441699341-07:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.8.1 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:40:43.534172406-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:42:59.024902323-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:43:01.788969291-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:43:04.39219679-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:43:04.39219679-07:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-16T16:45:20.327196822-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:45:20.406162808-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:45:20.506250761-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:48:49.565143436-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:48:49.677429007-07:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:50:21.098010405-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:50:21.098010405-07:00",
                    "created_by": "ARG NEMO_VERSION=1.0.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-16T16:50:21.645478027-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:50:47.882043971-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:40.308470832-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c conda update -c numba numba -y # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:40.45430829-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:40.611221448-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:40.77724994-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:40.927993771-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:41.124722499-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-16T16:51:41.628137662-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:b78b40b7e814057957218252c7e84f07bdefb8db93907520b346035a432c4c5a",
                    "sha256:77e1d9762454f1cb05bca452a00f04165fc2ada6b026cba23cf45491a1ca552c",
                    "sha256:d56bb86e263cb03c6abc7d1a1a34d45191ad7ea682a82d8cc8e3a7bdf8af64ad",
                    "sha256:5d9049f681f4bc5caec7cb05bb55064b985580a65168e5ad50465b75f42ff42c",
                    "sha256:0f57c75edd2988866fc08a8eddee72889bfb1024f3673de10cabc8ef2ae451e6",
                    "sha256:ee6d407480f3f832fde71d7f11c47a53f4ccafe11a69d3e6a468744bb9ff5d4e",
                    "sha256:35de24a6074728023353de60e0c3cc490fc792f2a710f709b6936688b52567b1",
                    "sha256:032bc0763826b30c23a46229b14ce2ef93bc6b2d4fc5ec78f679b126b0355456",
                    "sha256:a7531a7b4e1b23f1a050ad65d24c2017a30324cc1b5e8115730cfc448c5b1ad6",
                    "sha256:443418657c5a8f33060597fe06816f2cefe9f67c079a0820f5e599a319ca466a",
                    "sha256:c797196aad5217433482ded263c5c991bec9e939d36540a0f05d31b3ba12294b",
                    "sha256:34d19c82e7c4e8897641103050f71d3c52e8fae2f186b1d036b1e96630fda8c1",
                    "sha256:c3e82d4ff200c93373279ed0ffc0cc782943204c2d6ee12797b81dc23401448c",
                    "sha256:ac9d80fd7c664026bf00a9d857826874338a81f74224062d767c65ebf588aa96",
                    "sha256:3bcf85abafad73849df1a6b064b06ef7c1f33469f6aacc9725742e4accc6c4e9",
                    "sha256:3318f19d4d6874b72008e0bbc06544ca5c46decce645960c392d0600ca029b3f",
                    "sha256:0d1d492f7327b52a3c57cd4f2d348b413691f8a2b12fc81c9e2c07fbe50e5e76",
                    "sha256:746cd0ec972108af1b1f9ee45be7fd35a750255b12915f0038da96b27f45ce20",
                    "sha256:4c0c0e17ba13f8b65700e35adb456a587894d8d8701998694a900445422b0998",
                    "sha256:05d9ad52d6ff887d17cba3d5934ab24fb5d067ee2755a2ec530dd20d224c65b1",
                    "sha256:54a87a9f306988270607411d0299646f311a28636a3caa5f93be08e776a89101",
                    "sha256:b4ad34f008386a8dd44e305c55d9d0beb351fb89f4a637e25d9647bfa7c2ab8a",
                    "sha256:5d97aacaab56980e955e1bc1ec9278ce3739e7e5dde54d1572768d442634dec7",
                    "sha256:a31c0123d58b90d56ab09a20d7163bd725c46da94b2d979a442f3c912fcd38f3",
                    "sha256:80fa006d5526e5684d5000fcae6c998aa224938a2c79e2799cf857d27c5e4ff4",
                    "sha256:4dcf7bc547bcbf8268f4399c6879f3b41b22ca6a5389d1b5ce2ce60d02baba63",
                    "sha256:5e183e9af1ac9b2ea3ae40ee88909179d48939073f04e097412dcd9879a8e3e0",
                    "sha256:8d41061c165a393a887a371ade5f47883344715d5a3d56a0bf464f43a7199e07",
                    "sha256:32c9bbfe5569dafb3a2f5bf7d96fa2d074b2d3fc7e781a1d96171c2a6b0788dc",
                    "sha256:270b2df0b9ff9da469c05bc04fe0ba46f35ccc803d0ac621d233dfcb5b93a281",
                    "sha256:45cdb0dbb543b749b2fd6697448812bed40b7a0894875fc6239ab6d2aa448bb6",
                    "sha256:1f599ce264efa22b719268594f314a1703b781affe496c3040a4105d9aabc95a",
                    "sha256:122d6d5ee7a91b3159ac57c0df8729dbf361fcc86659c1f2ef2c9165e4939ca3",
                    "sha256:4ba2ee86cd40386f55bcac29503313b1e7b93638f3c904fcdcfd9bf69e67f6e8",
                    "sha256:7742cbb414f52906bdcfcd4d7086f5a35d12d4fe975e71213145a9b36632433b",
                    "sha256:a17a519937ddc2544fddd86226df39890ff0902a981ef075252aff3875727a29",
                    "sha256:fc9eeebf03fc207db2f34ee8971bb4bba421c56744bedd04723f9432c13af9a7",
                    "sha256:2d400917be898be1deb05a35163b815480ef1c9fa508d13b3466558649528a1d",
                    "sha256:8e9664abf8a962c31ed301a14e0813cfb0f3ac5493151abe58fec76b3ea11fd0",
                    "sha256:2db36f15ac8601381dc08e31788bcfc13f5f74ab569e9e1324ed0db5869e1cbb",
                    "sha256:d5632e7378bda085e42e18d319327092def7c28285172d3d0356d9150409790b",
                    "sha256:9ea31e98c97b7a44b1b701fe27a2e48b472eade3da032de9f9cb4eb85bd6574a",
                    "sha256:5dd52aed22d1361fc2c431849a1fb5151682bd8e9cbfab4e79f36c9556b1ee1d",
                    "sha256:93de6b630219bddbe8c545db090ecdc40de031a1c97baf509d483e3d462792f5",
                    "sha256:d58231e4f3dc43621625c15c2d4deebf162844116ed32f1b1b18e7be4e4b793f",
                    "sha256:ac4b15d3574618203a5889b33bcfe0112c3b22899aeee0163e47f44671072550",
                    "sha256:5555fb4adc136a91e9e2d728c4c8c105a1f18a52e5d8b59ad5bb28560547df2f",
                    "sha256:430955082c7a0e2f895faed66dbaf84dbad75dbd0224bf999c4c44a53b077bfe",
                    "sha256:ed28d46a6d549054bbd09af2dc4a169574010c187447f4a30a837a89d079ed82",
                    "sha256:7933f80ed2b09adc0e44899d76524e6b26d05be475ed3fa4a20167005e251033",
                    "sha256:ea6f2706b87ace5966904e73f490c1146835aa8b236cafa9af5416a3ebcc7fdc",
                    "sha256:518ac882ee6f04b51de20f6c30b0e90bdfb54198eefd910e2329adcf0ccdad5f",
                    "sha256:f9d38c6fad57ec6861070aa4c2ce23a9cf7c07b2aae33db705db443997809426",
                    "sha256:bafc60f8150b60497ffb0e554ddca041f9190bc766efb76ae892ab6cd899e4dc",
                    "sha256:bf73b1cb06dcb62f8dce469cd72e553e9c6ae83b00d727bf86c6fecfac5fa361",
                    "sha256:eebf6d9022d324b9439b13a1f782b310d328019047eaeeeed18cb9cd4c2299ec",
                    "sha256:0a16912efa5c304f094ca83e43fa644e491ca63f70b4b1fdac74b7e9dacf6421",
                    "sha256:18a998122ecb3bec6f30a22a77596487d191e1485ccac6b6904f875ca75946a3",
                    "sha256:e80723276188856da16de350d6dd0eeed769ec33e62c04b60dded4c5a73aa205",
                    "sha256:0f613a8315f200831c154c94cb575af9b7a27c799b105a34e48c29c1bbd1f337",
                    "sha256:d5f644180615dc0e7ab9cdab91b85f219a94f14d70fcd1c0cdf6034c5dfa48ac",
                    "sha256:a64b8f4ae07032c1fa88614ccc8bc759bf68d0ec0e34ed6adc5c767f675114d1",
                    "sha256:ce37d1071d1e67e7329b70ae5de4c54e85e097b75691b2cb12e8ed9149495b35",
                    "sha256:47f0044f4682b0c50e9fe696411433c0c968573936f5ccb6b00fe673845fec59",
                    "sha256:9f41dee52ef3fdc45a0605b17d29c52ed55b632c2efe230bdb02009a0c3448d8",
                    "sha256:20d5ca4d30597dbdeb162bec87c32bcc7965be4d727785973f22f56509cc05b3",
                    "sha256:afe43b4542105cee3258284e2217a943fb67fd70eee8af285d4c84a23ea66982",
                    "sha256:150fd64a6e0511b0d27130e6d75ddc5e2c93be16e5f25a52bb01d8b9e0ebb8db",
                    "sha256:553a5521f2090a329d4a86daacf99e854bde1aa37b121b943c4442ba37dfd030",
                    "sha256:8db30e69234cf8d69ba2854779ecaf1968222b89546c75d67814d24348f76411",
                    "sha256:48455dc2d4609db5d033abcbced8ea374e9202ffe750629bc90813dfdafac2c3",
                    "sha256:bdad03c5ba166e3e93528078a2a2e670487b89a89b07c1f024d0a01d5f4eacdd",
                    "sha256:37eaf79bb2048bf5efc831c3ca1edb9134b9bf5c310810dd1fe38d86e9f5f915",
                    "sha256:4a0407fc84fbdeb54848ff9f48bce120f0c8257de8a1b6787a33fbdfe9d7684a",
                    "sha256:d9590691aeb60a9783d33bda2fc62bcaa3dad898e1c5726fbb0131b5ae065d5d",
                    "sha256:8391220fcd92221a3a5058e28b56e2ad5210c8e2e17295a92b002657b9b86a22",
                    "sha256:c71107deb4460a0e0c86f3297cd6f4d0bffb598cfda5c55823268a52397df10c",
                    "sha256:6cc03bdbe6aa9b304a02a89e7807c6601db234eff7f27b035e93e39f1954e0d3",
                    "sha256:4be6ea38619bf6d992675f9bbff6954d62ae5cefc6b401a9b0c3e844f17d0404",
                    "sha256:9895537a75d6aea083ca73c7f83c11021e8a4de486885a98cc9e7b6290394c02",
                    "sha256:6fa0bd558cfe58b9bfd162fa88ad08bca67ef3a40827fcce077775af99e98917"
                ]
            }
        },
        "1.2.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.3.1.005",
                    "CUDA_DRIVER_VERSION=465.19.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.9.9",
                    "CUBLAS_VERSION=11.5.1.109",
                    "CUFFT_VERSION=10.4.2.109",
                    "CURAND_VERSION=10.2.4.109",
                    "CUSPARSE_VERSION=11.6.0.109",
                    "CUSOLVER_VERSION=11.1.2.109",
                    "NPP_VERSION=11.3.3.95",
                    "NVJPEG_VERSION=11.5.0.109",
                    "CUDNN_VERSION=8.2.1.32",
                    "TRT_VERSION=7.2.3.4+cuda11.1.0.024",
                    "TRTOSS_VERSION=21.06",
                    "NSIGHT_SYSTEMS_VERSION=2021.2.1.58",
                    "NSIGHT_COMPUTE_VERSION=2021.1.1.5",
                    "DALI_VERSION=1.2.0",
                    "DALI_BUILD=2356513",
                    "DLPROF_VERSION=21.06",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "GDRCOPY_VERSION=2.2",
                    "HPCX_VERSION=2.8.2rc3",
                    "MOFED_VERSION=5.2-rdmacore32.1",
                    "OPENUCX_VERSION=1.10.1",
                    "OPENMPI_VERSION=4.1.1rc1",
                    "RDMACORE_VERSION=32.1",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd",
                    "PYTORCH_VERSION=1.9.0a0+c3d40fd",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.06",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "COCOAPI_VERSION=2.0+nv0.5.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=24129275",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "24129275",
                    "com.nvidia.build.ref": "706dbb20f62dd16a38ecdf747ebc479c614b8722",
                    "com.nvidia.cublas.version": "11.5.1.109",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.2.1.32",
                    "com.nvidia.cufft.version": "10.4.2.109",
                    "com.nvidia.curand.version": "10.2.4.109",
                    "com.nvidia.cusolver.version": "11.1.2.109",
                    "com.nvidia.cusparse.version": "11.6.0.109",
                    "com.nvidia.nccl.version": "2.9.9",
                    "com.nvidia.npp.version": "11.3.3.95",
                    "com.nvidia.nsightcompute.version": "2021.1.1.5",
                    "com.nvidia.nsightsystems.version": "2021.2.1.58",
                    "com.nvidia.nvjpeg.version": "11.5.0.109",
                    "com.nvidia.pytorch.version": "1.9.0a0+c3d40fd",
                    "com.nvidia.tensorrt.version": "7.2.3.4+cuda11.1.0.024",
                    "com.nvidia.tensorrtoss.version": "21.06",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-07-30T15:51:39.357637163-07:00",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:13.826906072Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ENV CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:29.983280545Z",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.305136285Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.594219608Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.920476953Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:31.274188254Z",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:31.626460779Z",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.036219844Z",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ENV NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "RUN |15 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.9.9 com.nvidia.cublas.version=11.5.1.109 com.nvidia.cufft.version=10.4.2.109 com.nvidia.curand.version=10.2.4.109 com.nvidia.cusparse.version=11.6.0.109 com.nvidia.cusolver.version=11.1.2.109 com.nvidia.npp.version=11.3.3.95 com.nvidia.nvjpeg.version=11.5.0.109 com.nvidia.cudnn.version=8.2.1.32 com.nvidia.tensorrt.version=7.2.3.4+cuda11.1.0.024 com.nvidia.tensorrtoss.version=21.06 com.nvidia.nsightsystems.version=2021.2.1.58 com.nvidia.nsightcompute.version=2021.1.1.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ENV DALI_VERSION=1.2.0 DALI_BUILD=2356513 DLPROF_VERSION=21.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.72478706Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.056339394Z",
                    "created_by": "RUN |18 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5 DALI_VERSION=1.2.0 DALI_BUILD=2356513 DLPROF_VERSION=21.06 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.056339394Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:27:00.445922996Z",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.817202047Z",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:41.27479392Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG MOFED_VERSION=5.2-rdmacore32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 RDMACORE_VERSION=32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                        && dpkg -i libibverbs1_*.deb                        libibverbs-dev_*.deb                     librdmacm1_*.deb                         librdmacm-dev_*.deb                      libibumad3_*.deb                         libibumad-dev_*.deb                      ibverbs-utils_*.deb                      ibverbs-providers_*.deb       && rm $(dpkg-query -L                                libibverbs-dev                           librdmacm-dev                            libibumad-dev                        | grep \"\\(\\.so\\|\\.a\\)$\")       )                                     && ( cd opt/gdrcopy/                          && dpkg -i gdrcopy_*.deb               )                                     && ( cp -r opt/hpcx /opt/ )              && ( cp -r usr/local/ucx /usr/local/ )   && ( cp -r usr/local/mpi /usr/local/ )   && ( cp etc/ld.so.conf.d/hpcx.conf    /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openucx.conf /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openmpi.conf /etc/ld.so.conf.d/ )  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.900832369Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYTORCH_VERSION=1.9.0a0+c3d40fd PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.9.0a0+c3d40fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:05:57.140769542Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.5 mkl-include=2019.5 ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:05:57.140769542Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:06:02.167005989Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:06:04.074222802Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:06:04.074222802Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:06:27.591162269Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:10:54.899717191Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     patch -p0 < /opt/pytorch/opencv_protobuf.patch &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DBUILD_PROTOBUF=ON -DWITH_PROTOBUF=ON .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:11:29.045509737Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:08.995492962Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:54.016583748Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /nvidia/opt/dlprof_viewer_install  && pip install --no-cache-dir nvidia_dlprofviewer-*  && rm -rf /opt/conda/lib/python3.8/site-packages/qa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:59.836852207Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:13:00.797868226Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:13:00.797868226Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:12.458460172Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:42.144147181Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir --disable-pip-version-check . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:35:21.392254557Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:35:21.392254557Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T21:35:49.370338756Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:25.262089361Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:25.821051348Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:34.01880074Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:34.406835612Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v7.0.0.post3  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:01:13.1991051Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:14.047876009Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:14.467989099Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:17.149499178Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:18.877589198Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:38.799568167Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:39.641057438Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:39.641057438Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:01:40.066623622Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:40.466188362Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:40.466188362Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy pytorch-quantization # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=24129275",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "LABEL com.nvidia.build.id=24129275",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "LABEL com.nvidia.build.ref=706dbb20f62dd16a38ecdf747ebc479c614b8722",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T15:35:22.595174801-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T15:35:22.595174801-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends     libsndfile1 sox     libfreetype6     libsystemd0 libudev1     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:35:32.612008677-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext &&     pip install --upgrade websockets Django urllib3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:35:32.699497044-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:41:28.592176358-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.7 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:41:28.671298736-07:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:44:27.668324263-07:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.8.1 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:44:27.759570888-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:46:54.403219272-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:46:54.656614924-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:46:54.948306285-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:48:35.841865558-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:48:36.165556773-07:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:50:15.302941592-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:50:15.302941592-07:00",
                    "created_by": "ARG NEMO_VERSION=1.0.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T15:50:16.268787105-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:50:47.673164901-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:37.131669903-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c conda install -c numba numba=0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:37.355709178-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:37.645232171-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:37.899348834-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:38.238504495-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:38.585141261-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T15:51:39.357637163-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.2 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:90719e284d52b168b18a8cf0ac7ad811c0fdaff3e4df3a556d1094cbc42e9196",
                    "sha256:881c35a806592977d38e97950b5f0e56224c5ff0bbecadd9868327556ff7257c",
                    "sha256:f7d1f6bddfd77c6e6b0f2dc51d770f14537490f98e8e35ac0fafbd17df9875eb",
                    "sha256:59dba682095c3131094307d1622ef948e336208c4a92cd80b6ba685ea1996dd1",
                    "sha256:054075a2c0fd4a857efcd41126ab8bba76790f62d2e2c2cd7d495327c8f5dac8",
                    "sha256:b8e9c633a194403986df77300a90f3a88aba4495def06629cbaee760c7d14c23",
                    "sha256:2885fb319143a01b133f7a56933718d78411356802a8fc8c64238f80078468fb",
                    "sha256:0230ea6e2be2b85f6b5c096f4e3627f9aa7e8bfbcf800d0bbb8e08788ad26bb1",
                    "sha256:1203b9eb65ce473fe23bd4b9a59a686abae39cf36282dccadaaff8c276851e7e",
                    "sha256:19828fdef2337e1d808876e8b2e0812e3350625d5b5e95968cfc56a4d098fb00",
                    "sha256:6b1a299252cd3be48cec47c35a726cd61b9d27ca8d626b9f34e59762b8d30dbc",
                    "sha256:6884aa15bf0115f324b3ae7957a2734daa9939ef9223c66d47f2ef4172575b61",
                    "sha256:69cd10f48fffa8465e2d92f81116070924a96de8151bad938216c5dd86461680",
                    "sha256:1945d70825efac6b015d5b98cfe5d8620ed1710d6b92a36793e8e18222dd555c",
                    "sha256:eff82618afb147606642c7ae4c7b3221b24a024165f96a2bfa7e513aeae83bb1",
                    "sha256:a82f91d19843813716b1f97e27ab1915f753fce0dc3065fcf49798c2b99432ab",
                    "sha256:86b096791d3d540af217db9e09d05d19725fb738bdff46c5286ffb4b8830b39b",
                    "sha256:3f482b26704ca5b17e39e73e9db5b77772056899a4eb88f968ae27ac9dcb0afa",
                    "sha256:9d0564e10f13a2aab1932f862dcd69080b78622f51a88587f4893d8505f5b260",
                    "sha256:4d606ba65dcc0d0d3aaf113fb65781e4a9dfeee11e94736d9d0eb6d813a786fc",
                    "sha256:b33803e5e2c478831131da0f85fada284cb2f7c180ad150dd76b948d841016d3",
                    "sha256:fb8576b18e2cfdb5c26f619f42cb030c262c95b45e0e59a56e1b97c9a4b53489",
                    "sha256:c2d4e5a49fba3773c0fc5681a9b4121114aaacab3cfbbb8d26d56989ef24e026",
                    "sha256:1a0253c4c75220659bfe5ff7304f269446c879e0bbcfd08b385801f570b8f8cd",
                    "sha256:44cf0ee6dbf0db18e55f9f31639171194e89b072c9fca35153bdf20d0ebbef0f",
                    "sha256:044d08a86a1586f3d7cff8f94156425c7addd669789c73d31f5a286d3c147add",
                    "sha256:ebfa3c1743bca1a2253d130ae4cf3dd605028e1dd0a06471aa34aab2750ec5b6",
                    "sha256:2171466fc866246cbfe8731375edddbb5002c1501d0116cb94c8e94c5443d4c8",
                    "sha256:31858aa6cc34beec680683d9968585f07f0e39ec46eaccc4de826a0eb739713b",
                    "sha256:612e73cdebdc11a9badc536cb5a71927a85587bf36a9b7b41c8e0904ad8a7c8f",
                    "sha256:d261c6696eafd66680eeb7de43f3513dc3bcf720142f791cb4431f5f7b21da95",
                    "sha256:09f927ae6e5ab3edda03a2a157a8161ba7dcb6636a6ca80aad79951d0258aaee",
                    "sha256:fce77dd3c8264b5a8814e03cc3b4c1276744d092141eafdee224e861b29545d2",
                    "sha256:1ac70acfcd1d7a4f4b0044ddaa71f57fd4d3231979f46150e141241344d708dd",
                    "sha256:db4906533dd909e068e90f3d69a3848b6648873686eac800f8d9dfb26fcaf1cf",
                    "sha256:5686b106454ba36a37b26e58cc5687da30c297b110c120083934af609839cf4c",
                    "sha256:a1d7bf216b2a8a275ec2824309084e239901849aff62f36fceaf921c62344dbe",
                    "sha256:4db5143fccd42bd2651faaa491e59ac293ce985bbd00854a7fc6d99ff4eed147",
                    "sha256:4438f9e1b80f8f5cc648aea20db4da3a35de3ce7bfa22ca77cad4411c1f3a269",
                    "sha256:de644b9c3fa91c033a4aa4b549b7d1574f834e7f71eaafb1f94cbaf0297fba74",
                    "sha256:7ffda5fabef8d0d6105b0f20f7d2245a27a3257d835a992d46ab2eb783bbdd28",
                    "sha256:6285b13da50ce84a14ea64ad78f4f614b1821947c3b8c942a802027ed1d12205",
                    "sha256:9b3a19c2433f932b49890841c2f6e4e33d1bd427c914481cfe62f6f4c08dedb3",
                    "sha256:7414c4006395599a39bd32389c5d2375cb2147f43b432a4853d8cbdb96d00f9f",
                    "sha256:3de21c0573a268c4ed4a535fb404b722eb3d6da4478d438204baee02fa0af10c",
                    "sha256:2428f501b2a0526524abc43187ffdd8e78ebf0040958ad6a7271e2dc8f984e91",
                    "sha256:33f4bcdef72654585a945519f9600fbefce388847b592c14aaf82b775220b539",
                    "sha256:cd1575ebecd4038b1106be8036b95335ae9f5bf49326f2e8f253e1e3a9b9b8be",
                    "sha256:e6ec517cf8668280e4714e95573a510872d4c6d23115b158c09c3677a0b128d5",
                    "sha256:0390b6d79f9b33229a453305d55e01e14d277ade87d7f3c84253e5b5b0da3a96",
                    "sha256:83d4db8096cfe57347198ea96f76db016e8d8df91f5c403fead053c1206c409a",
                    "sha256:04994d4739a6b5098f15f16f8f34225244de23a38fbd1eb85b60b88a92441b25",
                    "sha256:d8bab89ea2fb04524de7cb2fd24238a41542f6898b983c1c361802ab969f0eef",
                    "sha256:1b56d90cef5ab8274ac47f91761ece2f58c2575056baa420befca14631ee1743",
                    "sha256:34ffe88d8f989a9a8ac08006e5a9031c1aa71ef4bd768003bfff8529001e2de2",
                    "sha256:50e63c581381e358016036924acb87ba3069b1714894e7de816e1d5fbc525d92",
                    "sha256:cf079cf86d1fc9ece8468cd67b01487fff554a91f9b56568e377e759273f056b",
                    "sha256:b225c597cf8a3021b41c0e7df7a2033574b69bf779cf8d64837b017f9183dd29",
                    "sha256:77870b508d3e9304fc4340abe7ea3ed374bbdfb819f84f0948f15e64d40f528f",
                    "sha256:18a414cccc3a75c4b098ebc14a0a052339521d8a6db45af5a4e19cfcc24b7c73",
                    "sha256:d04d4f4a65344ad2423c70afe5813e1d02e0dfb41f587c398ba09c0fa0403b7b",
                    "sha256:a19635c35f0b37f784cdd9ce94105f9ade7d494f42111aa796cab1496323be47",
                    "sha256:1320a78d16b4110b45e1ac56d34badf72112876a926fb8d49d7c78972a024a11",
                    "sha256:e2158fe81282e5d6cf4c5c39caaf28d9a85ccbac30ab30b871615b9eac2907bf",
                    "sha256:72ef0c6ff819f81e8b22e407521027094dbeede57257ca7f3054742d5472606c",
                    "sha256:0b31379222cda9131b16b2b52f67137e967b7c951e214c2420a939662aee9e9f",
                    "sha256:65c6d14fcf8defa9dcc485a58451d8fc615290429cf243f2764afafc6992470d",
                    "sha256:102791897cac24f81d539a024ad8342cb57d5f1959d7aa8e7acc12474840f681",
                    "sha256:4abba65513df06330a07e583ffcf54b656b73738262c5d6273433b0489ce3673",
                    "sha256:0705b1ed947fe071ee7bc3982382c4e043fb1da879496f423fbf57c9575daca4",
                    "sha256:7e0943acb07676a5e2276c8b9b22a1a89301e32aa8c02a384fc84fb7490a8c84",
                    "sha256:74fe82d61e8fc5735fc7a2325bc8e2f77066d9cb17a028f2ac50b36ca0cc6cdd",
                    "sha256:1cefde9d48e937668a240d3bab0d8ef5696744d4dc436ba0752a03673e1a6573",
                    "sha256:2c078948036196ede9c3a5cd1726e5017151fdf1fd790fc4219bdc28c3223a56"
                ]
            }
        },
        "1.3.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.3.1.005",
                    "CUDA_DRIVER_VERSION=465.19.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.9.9",
                    "CUBLAS_VERSION=11.5.1.109",
                    "CUFFT_VERSION=10.4.2.109",
                    "CURAND_VERSION=10.2.4.109",
                    "CUSPARSE_VERSION=11.6.0.109",
                    "CUSOLVER_VERSION=11.1.2.109",
                    "NPP_VERSION=11.3.3.95",
                    "NVJPEG_VERSION=11.5.0.109",
                    "CUDNN_VERSION=8.2.1.32",
                    "TRT_VERSION=7.2.3.4+cuda11.1.0.024",
                    "TRTOSS_VERSION=21.06",
                    "NSIGHT_SYSTEMS_VERSION=2021.2.1.58",
                    "NSIGHT_COMPUTE_VERSION=2021.1.1.5",
                    "DALI_VERSION=1.2.0",
                    "DALI_BUILD=2356513",
                    "DLPROF_VERSION=21.06",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "GDRCOPY_VERSION=2.2",
                    "HPCX_VERSION=2.8.2rc3",
                    "MOFED_VERSION=5.2-rdmacore32.1",
                    "OPENUCX_VERSION=1.10.1",
                    "OPENMPI_VERSION=4.1.1rc1",
                    "RDMACORE_VERSION=32.1",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd",
                    "PYTORCH_VERSION=1.9.0a0+c3d40fd",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.06",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "COCOAPI_VERSION=2.0+nv0.5.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=24129275",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "24129275",
                    "com.nvidia.build.ref": "706dbb20f62dd16a38ecdf747ebc479c614b8722",
                    "com.nvidia.cublas.version": "11.5.1.109",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.2.1.32",
                    "com.nvidia.cufft.version": "10.4.2.109",
                    "com.nvidia.curand.version": "10.2.4.109",
                    "com.nvidia.cusolver.version": "11.1.2.109",
                    "com.nvidia.cusparse.version": "11.6.0.109",
                    "com.nvidia.nccl.version": "2.9.9",
                    "com.nvidia.npp.version": "11.3.3.95",
                    "com.nvidia.nsightcompute.version": "2021.1.1.5",
                    "com.nvidia.nsightsystems.version": "2021.2.1.58",
                    "com.nvidia.nvjpeg.version": "11.5.0.109",
                    "com.nvidia.pytorch.version": "1.9.0a0+c3d40fd",
                    "com.nvidia.tensorrt.version": "7.2.3.4+cuda11.1.0.024",
                    "com.nvidia.tensorrtoss.version": "21.06",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-09-03T15:45:29.145211026-07:00",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:13.826906072Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "ENV CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:29.563816729Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:29.983280545Z",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.305136285Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.594219608Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:30.920476953Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:31.274188254Z",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:31.626460779Z",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.036219844Z",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:24:32.348453379Z",
                    "created_by": "ENV NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "RUN |15 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.9.9 com.nvidia.cublas.version=11.5.1.109 com.nvidia.cufft.version=10.4.2.109 com.nvidia.curand.version=10.2.4.109 com.nvidia.cusparse.version=11.6.0.109 com.nvidia.cusolver.version=11.1.2.109 com.nvidia.npp.version=11.3.3.95 com.nvidia.nvjpeg.version=11.5.0.109 com.nvidia.cudnn.version=8.2.1.32 com.nvidia.tensorrt.version=7.2.3.4+cuda11.1.0.024 com.nvidia.tensorrtoss.version=21.06 com.nvidia.nsightsystems.version=2021.2.1.58 com.nvidia.nsightcompute.version=2021.1.1.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.341966781Z",
                    "created_by": "ENV DALI_VERSION=1.2.0 DALI_BUILD=2356513 DLPROF_VERSION=21.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:26:59.72478706Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.056339394Z",
                    "created_by": "RUN |18 CUDA_VERSION=11.3.1.005 CUDA_DRIVER_VERSION=465.19.01 NCCL_VERSION=2.9.9 CUBLAS_VERSION=11.5.1.109 CUFFT_VERSION=10.4.2.109 CURAND_VERSION=10.2.4.109 CUSPARSE_VERSION=11.6.0.109 CUSOLVER_VERSION=11.1.2.109 NPP_VERSION=11.3.3.95 NVJPEG_VERSION=11.5.0.109 CUDNN_VERSION=8.2.1.32 TRT_VERSION=7.2.3.4+cuda11.1.0.024 TRTOSS_VERSION=21.06 NSIGHT_SYSTEMS_VERSION=2021.2.1.58 NSIGHT_COMPUTE_VERSION=2021.1.1.5 DALI_VERSION=1.2.0 DALI_BUILD=2356513 DLPROF_VERSION=21.06 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.056339394Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:27:00.445922996Z",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:27:00.817202047Z",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:41.27479392Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG MOFED_VERSION=5.2-rdmacore32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 RDMACORE_VERSION=32.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                        && dpkg -i libibverbs1_*.deb                        libibverbs-dev_*.deb                     librdmacm1_*.deb                         librdmacm-dev_*.deb                      libibumad3_*.deb                         libibumad-dev_*.deb                      ibverbs-utils_*.deb                      ibverbs-providers_*.deb       && rm $(dpkg-query -L                                libibverbs-dev                           librdmacm-dev                            libibumad-dev                        | grep \"\\(\\.so\\|\\.a\\)$\")       )                                     && ( cd opt/gdrcopy/                          && dpkg -i gdrcopy_*.deb               )                                     && ( cp -r opt/hpcx /opt/ )              && ( cp -r usr/local/ucx /usr/local/ )   && ( cp -r usr/local/mpi /usr/local/ )   && ( cp etc/ld.so.conf.d/hpcx.conf    /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openucx.conf /etc/ld.so.conf.d/ )  && ( cp etc/ld.so.conf.d/openmpi.conf /etc/ld.so.conf.d/ )  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:37:44.082442236Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:37:44.900832369Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T18:41:15.352925912Z",
                    "created_by": "RUN |6 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.8.2rc3 RDMACORE_VERSION=32.1 MOFED_VERSION=5.2-rdmacore32.1 OPENUCX_VERSION=1.10.1 OPENMPI_VERSION=4.1.1rc1 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYTORCH_VERSION=1.9.0a0+c3d40fd PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.9.0a0+c3d40fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:40.01440951Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:01:45.698750734Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:05:57.140769542Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.5 mkl-include=2019.5 ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:05:57.140769542Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:06:02.167005989Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:06:04.074222802Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:06:04.074222802Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:06:27.591162269Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:10:54.899717191Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     patch -p0 < /opt/pytorch/opencv_protobuf.patch &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DBUILD_PROTOBUF=ON -DWITH_PROTOBUF=ON .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:11:29.045509737Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:08.995492962Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:54.016583748Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /nvidia/opt/dlprof_viewer_install  && pip install --no-cache-dir nvidia_dlprofviewer-*  && rm -rf /opt/conda/lib/python3.8/site-packages/qa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:12:59.836852207Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:13:00.797868226Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:13:00.797868226Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:12.458460172Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:16:13.401534706Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:38.269323442Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T19:31:42.144147181Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir --disable-pip-version-check . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:35:21.392254557Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:35:21.392254557Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T21:35:49.370338756Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:25.262089361Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:25.821051348Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:34.01880074Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T21:36:34.406835612Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v7.0.0.post3  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:00:24.402401279Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:01:13.1991051Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:14.047876009Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:14.467989099Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:17.149499178Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:18.877589198Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:38.799568167Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:39.641057438Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:39.641057438Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:01:40.066623622Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:40.466188362Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:01:40.466188362Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.06 PYTORCH_BUILD_VERSION=1.9.0a0+c3d40fd PYVER=3.8 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy pytorch-quantization # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=24129275",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "LABEL com.nvidia.build.id=24129275",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-17T23:02:14.702559427Z",
                    "created_by": "LABEL com.nvidia.build.ref=706dbb20f62dd16a38ecdf747ebc479c614b8722",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T15:30:59.292227233-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T15:30:59.292227233-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     libudev1     libsystemd0     libssl1.1     openssl     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:31:16.111661729-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext   && pip install --upgrade urllib3 notebook jupyterlab django # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:31:16.195590714-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:35:11.216963417-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.7 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:35:11.299641205-07:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:37:59.367191737-07:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.8.1 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:37:59.455615435-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:40:20.873296431-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:40:20.951353275-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:40:21.047393147-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:42:45.55921923-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:42:45.707150594-07:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:44:20.695762235-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:44:20.695762235-07:00",
                    "created_by": "ARG NEMO_VERSION=1.3.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T15:44:21.415723844-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.3.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:44:49.340094394-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.3.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.059520781-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.3.0 /bin/sh -c conda install -c numba numba=0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.139821129-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.239582314-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.346514228-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.490242652-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:28.667373874-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-09-03T15:45:29.145211026-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.3.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:90719e284d52b168b18a8cf0ac7ad811c0fdaff3e4df3a556d1094cbc42e9196",
                    "sha256:881c35a806592977d38e97950b5f0e56224c5ff0bbecadd9868327556ff7257c",
                    "sha256:f7d1f6bddfd77c6e6b0f2dc51d770f14537490f98e8e35ac0fafbd17df9875eb",
                    "sha256:59dba682095c3131094307d1622ef948e336208c4a92cd80b6ba685ea1996dd1",
                    "sha256:054075a2c0fd4a857efcd41126ab8bba76790f62d2e2c2cd7d495327c8f5dac8",
                    "sha256:b8e9c633a194403986df77300a90f3a88aba4495def06629cbaee760c7d14c23",
                    "sha256:2885fb319143a01b133f7a56933718d78411356802a8fc8c64238f80078468fb",
                    "sha256:0230ea6e2be2b85f6b5c096f4e3627f9aa7e8bfbcf800d0bbb8e08788ad26bb1",
                    "sha256:1203b9eb65ce473fe23bd4b9a59a686abae39cf36282dccadaaff8c276851e7e",
                    "sha256:19828fdef2337e1d808876e8b2e0812e3350625d5b5e95968cfc56a4d098fb00",
                    "sha256:6b1a299252cd3be48cec47c35a726cd61b9d27ca8d626b9f34e59762b8d30dbc",
                    "sha256:6884aa15bf0115f324b3ae7957a2734daa9939ef9223c66d47f2ef4172575b61",
                    "sha256:69cd10f48fffa8465e2d92f81116070924a96de8151bad938216c5dd86461680",
                    "sha256:1945d70825efac6b015d5b98cfe5d8620ed1710d6b92a36793e8e18222dd555c",
                    "sha256:eff82618afb147606642c7ae4c7b3221b24a024165f96a2bfa7e513aeae83bb1",
                    "sha256:a82f91d19843813716b1f97e27ab1915f753fce0dc3065fcf49798c2b99432ab",
                    "sha256:86b096791d3d540af217db9e09d05d19725fb738bdff46c5286ffb4b8830b39b",
                    "sha256:3f482b26704ca5b17e39e73e9db5b77772056899a4eb88f968ae27ac9dcb0afa",
                    "sha256:9d0564e10f13a2aab1932f862dcd69080b78622f51a88587f4893d8505f5b260",
                    "sha256:4d606ba65dcc0d0d3aaf113fb65781e4a9dfeee11e94736d9d0eb6d813a786fc",
                    "sha256:b33803e5e2c478831131da0f85fada284cb2f7c180ad150dd76b948d841016d3",
                    "sha256:fb8576b18e2cfdb5c26f619f42cb030c262c95b45e0e59a56e1b97c9a4b53489",
                    "sha256:c2d4e5a49fba3773c0fc5681a9b4121114aaacab3cfbbb8d26d56989ef24e026",
                    "sha256:1a0253c4c75220659bfe5ff7304f269446c879e0bbcfd08b385801f570b8f8cd",
                    "sha256:44cf0ee6dbf0db18e55f9f31639171194e89b072c9fca35153bdf20d0ebbef0f",
                    "sha256:044d08a86a1586f3d7cff8f94156425c7addd669789c73d31f5a286d3c147add",
                    "sha256:ebfa3c1743bca1a2253d130ae4cf3dd605028e1dd0a06471aa34aab2750ec5b6",
                    "sha256:2171466fc866246cbfe8731375edddbb5002c1501d0116cb94c8e94c5443d4c8",
                    "sha256:31858aa6cc34beec680683d9968585f07f0e39ec46eaccc4de826a0eb739713b",
                    "sha256:612e73cdebdc11a9badc536cb5a71927a85587bf36a9b7b41c8e0904ad8a7c8f",
                    "sha256:d261c6696eafd66680eeb7de43f3513dc3bcf720142f791cb4431f5f7b21da95",
                    "sha256:09f927ae6e5ab3edda03a2a157a8161ba7dcb6636a6ca80aad79951d0258aaee",
                    "sha256:fce77dd3c8264b5a8814e03cc3b4c1276744d092141eafdee224e861b29545d2",
                    "sha256:1ac70acfcd1d7a4f4b0044ddaa71f57fd4d3231979f46150e141241344d708dd",
                    "sha256:db4906533dd909e068e90f3d69a3848b6648873686eac800f8d9dfb26fcaf1cf",
                    "sha256:5686b106454ba36a37b26e58cc5687da30c297b110c120083934af609839cf4c",
                    "sha256:a1d7bf216b2a8a275ec2824309084e239901849aff62f36fceaf921c62344dbe",
                    "sha256:4db5143fccd42bd2651faaa491e59ac293ce985bbd00854a7fc6d99ff4eed147",
                    "sha256:4438f9e1b80f8f5cc648aea20db4da3a35de3ce7bfa22ca77cad4411c1f3a269",
                    "sha256:de644b9c3fa91c033a4aa4b549b7d1574f834e7f71eaafb1f94cbaf0297fba74",
                    "sha256:7ffda5fabef8d0d6105b0f20f7d2245a27a3257d835a992d46ab2eb783bbdd28",
                    "sha256:6285b13da50ce84a14ea64ad78f4f614b1821947c3b8c942a802027ed1d12205",
                    "sha256:9b3a19c2433f932b49890841c2f6e4e33d1bd427c914481cfe62f6f4c08dedb3",
                    "sha256:7414c4006395599a39bd32389c5d2375cb2147f43b432a4853d8cbdb96d00f9f",
                    "sha256:3de21c0573a268c4ed4a535fb404b722eb3d6da4478d438204baee02fa0af10c",
                    "sha256:2428f501b2a0526524abc43187ffdd8e78ebf0040958ad6a7271e2dc8f984e91",
                    "sha256:33f4bcdef72654585a945519f9600fbefce388847b592c14aaf82b775220b539",
                    "sha256:cd1575ebecd4038b1106be8036b95335ae9f5bf49326f2e8f253e1e3a9b9b8be",
                    "sha256:e6ec517cf8668280e4714e95573a510872d4c6d23115b158c09c3677a0b128d5",
                    "sha256:0390b6d79f9b33229a453305d55e01e14d277ade87d7f3c84253e5b5b0da3a96",
                    "sha256:83d4db8096cfe57347198ea96f76db016e8d8df91f5c403fead053c1206c409a",
                    "sha256:04994d4739a6b5098f15f16f8f34225244de23a38fbd1eb85b60b88a92441b25",
                    "sha256:5b3a91a16e3bd5a44559cac48d5f7ab30e62684e963fba081cdba868d7405550",
                    "sha256:77cf9c2b7b9f7ee6d96cc6ca7560b30e825466b9b9e0e83720b0c568bba78c61",
                    "sha256:8fc630ec615287f02d58473c323e0f2ed5a60a6af671eefd28cdf959aef78e59",
                    "sha256:2d43df322c303ebf64ad1ee86759a3c212d20b1941c0a99e7cfad169073e0ac5",
                    "sha256:1e3baf4ede3a89cbec63b3cb31dde2476cfa6057581f845533dfcb16c29262b6",
                    "sha256:1ea5874e04514a9cf21f055d68bafe6dc3fc4298bde4d4e5ac11286b6f8e83b8",
                    "sha256:70d35b5898ce04cd2eb2bea09e5868a1d8a77f67b81d321775b1aeba3ddb35d5",
                    "sha256:5d63f66ca46105ee108db04131c8dc52622714521911539b4c845ffef07cff7c",
                    "sha256:90384c55dde3dd638e3ffd09e9c0e63d24a3d2a53d2188826dedf028060a49b2",
                    "sha256:c83ed3aedffc7c64c4153413afee0a4952692dd20a5c84e4371fcaba428635bd",
                    "sha256:2485df1fa2a97304d18a4dea75bdc47907719fa1d576109aa5de394b9a156c9d",
                    "sha256:3242129d438b81e2da0dd85d9b597e81a9cf68f8ae699cf53799cdafc79d5915",
                    "sha256:7c521e9f869853ade57a0975a796b45bce80372ffd5602851fe41b4957cb36db",
                    "sha256:8bb0d0699d6440b1d863bf5ce94ecda52a822ead4b132adf12e190dbe1de0238",
                    "sha256:f607d6a616d6474c48a91446431f22d5d0cc952bcab4f32186900f566c1474dc",
                    "sha256:ab6afd6b60a5c3f9b6bf8e1bbfef59fb3d222414dcc194d2af156b26c6f3af3d",
                    "sha256:5b152d6339e8006bc913b58c65817a570cd729d676fe4260b17566d587706765",
                    "sha256:8b2bca7a41f047230c0013c4877e2ffb40c79e387c2a7273d8484032b639f92e",
                    "sha256:03ca11f6bd5baff8efaf5b110e00e9bbc95b8bf380631072d67ff128449cc933",
                    "sha256:d573d322e28c7e1477f1031ed00f3c20a55013c24de5bfb23f4fa54658916bbb",
                    "sha256:99c5cdb738f3eed650142c25e7f3182ad17cf4e9cd18f9ad1ad77c95e528f768",
                    "sha256:42ddea09e9fe89e070aabb1ccef437f35dd2a91669da3c3b5605b5fa00281f06"
                ]
            }
        },
        "1.4.0": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.4.1.004",
                    "CUDA_DRIVER_VERSION=470.57.02",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.10.3",
                    "CUBLAS_VERSION=11.5.4.8",
                    "CUFFT_VERSION=10.5.1.100",
                    "CURAND_VERSION=10.2.5.100",
                    "CUSPARSE_VERSION=11.6.0.100",
                    "CUSOLVER_VERSION=11.2.0.100",
                    "NPP_VERSION=11.4.0.90",
                    "NVJPEG_VERSION=11.5.2.100",
                    "CUDNN_VERSION=8.2.2.26",
                    "TRT_VERSION=8.0.1.6+cuda11.3.1.005",
                    "TRTOSS_VERSION=21.08",
                    "NSIGHT_SYSTEMS_VERSION=2021.2.4.12",
                    "NSIGHT_COMPUTE_VERSION=2021.2.1.2",
                    "DALI_VERSION=1.4.0",
                    "DALI_BUILD=2575285",
                    "DLPROF_VERSION=21.08",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "GDRCOPY_VERSION=2.2",
                    "HPCX_VERSION=2.9.0",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.11.0-rc1",
                    "OPENMPI_VERSION=4.1.1",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf",
                    "PYTORCH_VERSION=1.10.0a0+3fd9dcf",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.08",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "COCOAPI_VERSION=2.0+nv0.5.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=26011915",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "26011915",
                    "com.nvidia.build.ref": "3561108f6296fbe6ddb606a26a40a2e8bea97458",
                    "com.nvidia.cublas.version": "11.5.4.8",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.2.2.26",
                    "com.nvidia.cufft.version": "10.5.1.100",
                    "com.nvidia.curand.version": "10.2.5.100",
                    "com.nvidia.cusolver.version": "11.2.0.100",
                    "com.nvidia.cusparse.version": "11.6.0.100",
                    "com.nvidia.nccl.version": "2.10.3",
                    "com.nvidia.npp.version": "11.4.0.90",
                    "com.nvidia.nsightcompute.version": "2021.2.1.2",
                    "com.nvidia.nsightsystems.version": "2021.2.4.12",
                    "com.nvidia.nvjpeg.version": "11.5.2.100",
                    "com.nvidia.pytorch.version": "1.10.0a0+3fd9dcf",
                    "com.nvidia.tensorrt.version": "8.0.1.6+cuda11.3.1.005",
                    "com.nvidia.tensorrtoss.version": "21.08",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-10-01T14:08:34.640397447-07:00",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:48:39.347009307Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:48:59.40964872Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:48:59.40964872Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:48:59.40964872Z",
                    "created_by": "ENV CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:48:59.40964872Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:00.090209167Z",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:00.585240345Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:01.056786244Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:01.498400498Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:02.072543536Z",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:02.646224543Z",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:03.453523113Z",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:49:03.982513727Z",
                    "created_by": "ENV NCCL_VERSION=2.10.3 CUBLAS_VERSION=11.5.4.8 CUFFT_VERSION=10.5.1.100 CURAND_VERSION=10.2.5.100 CUSPARSE_VERSION=11.6.0.100 CUSOLVER_VERSION=11.2.0.100 NPP_VERSION=11.4.0.90 NVJPEG_VERSION=11.5.2.100 CUDNN_VERSION=8.2.2.26 TRT_VERSION=8.0.1.6+cuda11.3.1.005 TRTOSS_VERSION=21.08 NSIGHT_SYSTEMS_VERSION=2021.2.4.12 NSIGHT_COMPUTE_VERSION=2021.2.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "RUN |15 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 NCCL_VERSION=2.10.3 CUBLAS_VERSION=11.5.4.8 CUFFT_VERSION=10.5.1.100 CURAND_VERSION=10.2.5.100 CUSPARSE_VERSION=11.6.0.100 CUSOLVER_VERSION=11.2.0.100 NPP_VERSION=11.4.0.90 NVJPEG_VERSION=11.5.2.100 CUDNN_VERSION=8.2.2.26 TRT_VERSION=8.0.1.6+cuda11.3.1.005 TRTOSS_VERSION=21.08 NSIGHT_SYSTEMS_VERSION=2021.2.4.12 NSIGHT_COMPUTE_VERSION=2021.2.1.2 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.10.3 com.nvidia.cublas.version=11.5.4.8 com.nvidia.cufft.version=10.5.1.100 com.nvidia.curand.version=10.2.5.100 com.nvidia.cusparse.version=11.6.0.100 com.nvidia.cusolver.version=11.2.0.100 com.nvidia.npp.version=11.4.0.90 com.nvidia.nvjpeg.version=11.5.2.100 com.nvidia.cudnn.version=8.2.2.26 com.nvidia.tensorrt.version=8.0.1.6+cuda11.3.1.005 com.nvidia.tensorrtoss.version=21.08 com.nvidia.nsightsystems.version=2021.2.4.12 com.nvidia.nsightcompute.version=2021.2.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:05.302277381Z",
                    "created_by": "ENV DALI_VERSION=1.4.0 DALI_BUILD=2575285 DLPROF_VERSION=21.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:06.032637657Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:52:06.53840394Z",
                    "created_by": "RUN |18 CUDA_VERSION=11.4.1.004 CUDA_DRIVER_VERSION=470.57.02 NCCL_VERSION=2.10.3 CUBLAS_VERSION=11.5.4.8 CUFFT_VERSION=10.5.1.100 CURAND_VERSION=10.2.5.100 CUSPARSE_VERSION=11.6.0.100 CUSOLVER_VERSION=11.2.0.100 NPP_VERSION=11.4.0.90 NVJPEG_VERSION=11.5.2.100 CUDNN_VERSION=8.2.2.26 TRT_VERSION=8.0.1.6+cuda11.3.1.005 TRTOSS_VERSION=21.08 NSIGHT_SYSTEMS_VERSION=2021.2.4.12 NSIGHT_COMPUTE_VERSION=2021.2.1.2 DALI_VERSION=1.4.0 DALI_BUILD=2575285 DLPROF_VERSION=21.08 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:52:06.53840394Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T16:52:07.517084953Z",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T16:52:08.147664479Z",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-06T17:11:53.344696874Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.2 HPCX_VERSION=2.9.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i gdrcopy_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T16:13:23.480920304Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:13:24.178904323Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T16:18:40.000542509Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T16:18:40.000542509Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T16:18:40.000542509Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.2 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:01.607546206Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:01.607546206Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:01.607546206Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYTORCH_VERSION=1.10.0a0+3fd9dcf PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:01.607546206Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.10.0a0+3fd9dcf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:01.607546206Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:31:11.624198935Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:31:11.624198935Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:31:11.624198935Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:35:27.947901111Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy==1.6.3 ipython mkl=2019.5 mkl-include=2019.5 ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:35:27.947901111Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:35:32.467282666Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:35:34.86209732Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:35:34.86209732Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:35:57.960249195Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:39:58.429722353Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:40:32.984641029Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:41:31.289394122Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.2.0 jupyterlab==2.3.1 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:41:42.5707197Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:41:44.225049009Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:41:44.225049009Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:45:09.554443788Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 15.12.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:45:10.650794094Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T19:45:10.650794094Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:45:10.650794094Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:45:10.650794094Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T19:45:10.650794094Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T20:00:59.566620081Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T20:00:59.566620081Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T20:01:14.71963962Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T20:01:31.855786399Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T20:01:31.855786399Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T20:01:31.855786399Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T20:01:35.654291588Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T21:25:38.615481017Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T21:25:38.615481017Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T21:26:25.255008882Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T21:27:00.848416559Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T21:27:01.501011641Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T21:27:01.983997681Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:48:27.064100733Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/8.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:48:27.064100733Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:48:27.064100733Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:49:19.463927348Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:20.160733443Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:20.760788908Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:21.823676865Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:23.781848554Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:32.337639869Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:35.252677791Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:35.252677791Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:49:35.889360921Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:36.570101452Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:49:36.570101452Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:50:32.555272224Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c pip install --no-cache-dir   --extra-index-url https://pypi.ngc.nvidia.com   --extra-index-url https://tensorrt-read-only:Tensorrt\\@123@urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple   polygraphy pytorch-quantization # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.08 PYTORCH_BUILD_VERSION=1.10.0a0+3fd9dcf PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && mkdir -p /opt/dlprof_viewer_install  && cp /nvidia/tmp/pip/* /opt/dlprof_viewer_install/  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /opt/dlprof_viewer_install  && pip install --no-cache-dir nvidia_dlprofviewer-*  && rm -rf /opt/conda/lib/python3.8/site-packages/qa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=26011915",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "LABEL com.nvidia.build.id=26011915",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-16T22:50:39.330863693Z",
                    "created_by": "LABEL com.nvidia.build.ref=3561108f6296fbe6ddb606a26a40a2e8bea97458",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-01T13:54:34.44693378-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-01T13:54:34.44693378-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     openssl     libssl1.1     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T13:54:36.131529541-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T13:54:36.394418704-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T13:57:33.344103935-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.9 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T13:57:33.572572845-07:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:00:37.248464237-07:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.8.1 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:00:37.518317077-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:03:22.986421907-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:03:23.070035714-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:03:23.170348938-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:05:53.954349597-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:05:54.129161134-07:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:07:18.811648012-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:07:27.833992814-07:00",
                    "created_by": "RUN /bin/sh -c pip install --upgrade notebook jupyterlab sqlparse # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:07:27.833992814-07:00",
                    "created_by": "ARG NEMO_VERSION=1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-01T14:07:28.514590971-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.4.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:07:56.816339334-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.4.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:33.473258238-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.4.0 /bin/sh -c conda install -c numba numba=0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:33.566150972-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:33.663094564-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:33.789404216-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:33.973095354-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:34.134226418-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-01T14:08:34.640397447-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.4.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:780a3582aff483c37ab552c1adcd9555f1158ffaf9abbb05ed474fd14b0b5389",
                    "sha256:897b016c57cae7a21616a4e8b455b683e86aaa9caf68d235339c98c7492a7937",
                    "sha256:e245110f4cd5f4d92f2bed802d77966d515e44308e057a6871ca12a8210c3ee5",
                    "sha256:d9230c3208a1e675742648a6fffbbc637f90f94ec7c3c90949bc0901fd69c135",
                    "sha256:c4ac0de61e502411caa1d6caf05d36f4ec722cc3fcf2428d5386687e0d193ae7",
                    "sha256:df45adac04fd307b9eae48a281ad942c549a54c34bd0ade2ed4d046b46151360",
                    "sha256:8a86dcb942a08417e706c3040f2183bb6613432da0eace2b44a13812c196f65f",
                    "sha256:4938aec16cb1c054907ff874a9cef148aa770b3eee5bd13165f8a5aa934cb4ee",
                    "sha256:41db41c49a2e23e808b87533dbe3ee72de56b50c64005045d6984b616362ce6e",
                    "sha256:93576ce8634c86918bd900c68c9cb1075edc530dc4df08b6f61a54f8f6ec9ec2",
                    "sha256:1a62730e0411097377b4c34031c4570b728e8912ecafcdbc7d6f84f904735048",
                    "sha256:103ab0c22213ae5b37fb12744ceabc80680fc7ed86ce379ea6372101376a4505",
                    "sha256:13e7314b42017effc4aad5f0f0f5807bfa3b5072cdce08dc39dd9c79c2b96f75",
                    "sha256:6223e500896d395a29393190e513fcf76cbdf8d3d99dcd465135857be799668b",
                    "sha256:c91a873344760722e0427ffa8408bbccea6ef80cd298ab8c8dd47b4167fbcb10",
                    "sha256:4246ff7d95068ae47cdc1d75209b3e5100ac6e0a097b65e18c4111a092352f5a",
                    "sha256:d627d760bedf5c9541b440db0a32bf3c760a12a37405269f35d530cb218bec82",
                    "sha256:0a707fb87820a9e2481b6e72a3cb62ce84fe60cf160ca7afa6560ee7705a91f5",
                    "sha256:d9c26ffe1c13e21c623accf7e48d414b73dcf7fcae83915e6be4524d532a6386",
                    "sha256:87f807bad8cbfa316797fbdba235477d6156a90b5f145d20c5484e1b1e20c528",
                    "sha256:454adcfe53da05cbe20b86866496dc06dc115a54f1d8140b98d5c5e3ff5cbe0f",
                    "sha256:11d01f535ae595334237708080d5a24d87f6ccae06862aceac2dc7d821ecf577",
                    "sha256:0f55410715cb40780b82bc2fc9ea2c05ea6adf8f3f7967ac45d0799def5290b1",
                    "sha256:92aa41c2b0294825afe92e76ebe93a0ededaac5b3db795b1290621dbdea8c10f",
                    "sha256:5417d67f276dac69ff419e091334fe2c09203c1faf4de399bff919fc30a69a0b",
                    "sha256:c82349415b95c51e86e636dc0a77c322c091c457910f0462915a9167052fcc74",
                    "sha256:9b0214bd6d2f524dc44d332ee990529cb407db7f215feb34ff84257705fb286f",
                    "sha256:edb7a88b663be8c9505ee8332af81449efa1185e16862078aa7d022afc7515fb",
                    "sha256:d75bc1c014f3407d24ea880b2cccddae9374649a455389a255055ef17cafc0c4",
                    "sha256:ae1de3e5131e2a59fd07d0fce71176633ca2adf8980b53243fe883f241b9f039",
                    "sha256:acbf2ca10adca5d6a03b53042c22a8113f8ccb12c7b1f8cb2ab992a320efd7a9",
                    "sha256:ada5bcc3c4d37f887260ebb0adb9b8a00b411e9cf5aa8ce5d0ac4f481d637474",
                    "sha256:2d1fa6743bf3eb7e8123c68cb96de16f6a3122d01f56d5d5384aaaef246dd28f",
                    "sha256:6ad51905abf019864ef09cb6f0504489245b9776e50e8e18f93882d8c4e1444f",
                    "sha256:ec47225f9ea7ee283649106666bcbcef932550062507ddef2ced81457c157e11",
                    "sha256:c5ad7bf5117e7e2349c12adeb965478b31f9b4c093637b387b12977953a60cce",
                    "sha256:b4513de6118a9eace13b1a057235a6cd9a589e6ac15e7deb8c8512b74e73f9f2",
                    "sha256:5a6f7cc6acb040e9408f1dca8428378d6583b5d2cbda66baeb0df680afe0516b",
                    "sha256:982f20170f5649cd9f5f99a245887212ca8e380a569f9f09554632674cf84576",
                    "sha256:0f7b61fa5a5e5694b5854d217795440bcbf0129e7b3eb7ed8db271bfa763c5f4",
                    "sha256:baedaca6bff911013ca95b5cddbb77ea4b98614bc628a43f36471c8881f71fc9",
                    "sha256:51310c3e6e238274da43514e5e57e0e5b1ef6feab0dd68dcb927632cd0f456d2",
                    "sha256:08698b5e773b598c4cb49667637cf3ef4c1e937630e58478b2ca24ccbbbeb735",
                    "sha256:63fcfaa3ffa0c37734b5f83a0e1a30ad22f1d174e8df88539c961306c94100e1",
                    "sha256:bcc6cc604df155f3fd09dc983bb8869296e9e624f99fb9fca71c14766fe8c20d",
                    "sha256:a6db114c45fe998aff9c0a5e99d67a996792ee7e7739ba96072a9d1f04da9587",
                    "sha256:0027cc333a29ff27c43aa0a53432372874eaaaebe5f26af7fe2175a6c176a1d2",
                    "sha256:1333690e0bc9a69569b8ef0fa49dfc67efc89fb227b8273491fbcb80e8e3a4f8",
                    "sha256:db35e7fcd0534e0dbf0391ea084298aa3212c283a61cd4c07e5a3c26bb8d6ec8",
                    "sha256:1e6b89c0e32ea28b116d16f93116f51e5806fafbbe3be9f47485d13188c23116",
                    "sha256:7e54d2739ebc172e36d13157ab51ddd69b4c5ffea5f511e8469d52add3009d1b",
                    "sha256:1c30d25f174d1fdee41ffa40ee8fc2e4fb87558a5a4102ba341a9bf6cac7f536",
                    "sha256:3343e49560f4958177031208749693383d8b44e5b05d600c19b1956f4ab926e4",
                    "sha256:4b15ebb5df928e383f706909db4cc2dbcc1841dde03003e2ae5f9c9a293dca37",
                    "sha256:711cb8de6166e8e7cf29647edba43d34cb232e073c766b83ebec1eea3cae7e5d",
                    "sha256:8761dfa9c184a7f76bf80910621c8772d59da7c18259f8851cf770d0d8364f49",
                    "sha256:18c856598202ec432f00d836f09ba3a4f0aef124cf2dd81fdb645c3f01bf200c",
                    "sha256:12582b20e9e3c3f92502c0a2bca13e91ebf3a3b2111bd3d4b01a24459d08e731",
                    "sha256:41ee9c23cea7c1144f16d6daab61d5c59b86daa895d97fdf53620554bd773b36",
                    "sha256:2f1536249a315e58dad4ad2c20b650e25f112f4cae4c71130dd7dec1fc6b39bc",
                    "sha256:cd5e3d1aa9c65fcadce56cafdf980905fd766dc9c0686a575501f55175b811ca",
                    "sha256:eab0e8248fa6ee948cac62b3f9898a474fbe3fddc65a4ecdc3a592e962638594",
                    "sha256:f734a4613c04ceda2f572e898547e9c0af27c32c288a4cab2e13601f02d81f6b",
                    "sha256:27469fcd997069dd4373c73e44202275eaa6de4a0402614b15bfb38966519f84",
                    "sha256:dc5ac803a10535d91ca337f4265b99b1455c6da51c8b12008fc0d0736dbf8f9c",
                    "sha256:c264cbbe87aaadf85ef10adfb4290e116e9d681a94253742d85191e878955d53",
                    "sha256:6dfcb9eb336f238bbebb762cb81f6e739d4c2aa99dd87ca742923bea928ff949",
                    "sha256:f5010aae803ce89318210660789c9019994e1b52dbb01ca9dafa54a15b5baecd",
                    "sha256:d312fa77e62c450aa7ade7ac613bb9dc11e464eea77a9b595e7a442e4f5d70ff",
                    "sha256:0148f005d60431f0250f2806c069629add091fc1857721e148560f2a8908b3a7",
                    "sha256:45445417a8ebf5ce7dca859f6c7264de1c3bb34594f047c6a456a9c774852879",
                    "sha256:448757fd48c8b034e5c3c71ca974e45544bab810fe790267eaa200b5428ed1b4",
                    "sha256:ac1d7c4e13d7c6356579cec5b1577a688280b9d710a93b09368f3bf948d19396",
                    "sha256:3490ea0e88e4eae5bf00679b1321eb2a119419a8f7674dfd2fe49070941b9d97",
                    "sha256:61d66fd65b3e4b9827af952b8ce928a166d14b2462fd7f37a652c32b6f49fa1d",
                    "sha256:38594dd89c48d0dce712c0fb6823692cad101ffd4c0a9e6354d14e7af78e5dcc"
                ]
            }
        },
        "1.5.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.19.3-Linux-$(uname -m)/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.4.3.001",
                    "CUDA_DRIVER_VERSION=470.57.02",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.11.4",
                    "CUBLAS_VERSION=11.6.5.2",
                    "CUFFT_VERSION=10.5.2.100",
                    "CURAND_VERSION=10.2.5.120",
                    "CUSPARSE_VERSION=11.6.0.120",
                    "CUSOLVER_VERSION=11.2.0.120",
                    "CUTENSOR_VERSION=1.3.2.3",
                    "NPP_VERSION=11.4.0.110",
                    "NVJPEG_VERSION=11.5.2.120",
                    "CUDNN_VERSION=8.2.4.15",
                    "TRT_VERSION=8.0.3.4+cuda11.3.1.005",
                    "TRTOSS_VERSION=21.10",
                    "NSIGHT_SYSTEMS_VERSION=2021.3.2.4",
                    "NSIGHT_COMPUTE_VERSION=2021.2.2.1",
                    "DALI_VERSION=1.6.0",
                    "DALI_BUILD=2993096",
                    "DLPROF_VERSION=21.10",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.9.0",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.11.0-rc1",
                    "OPENMPI_VERSION=4.1.1",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c",
                    "PYTORCH_VERSION=1.10.0a0+0aef44c",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.10",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYT_CFLAGS=-fno-gnu-unique",
                    "COCOAPI_VERSION=2.0+nv0.5.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=28019337",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "28019337",
                    "com.nvidia.build.ref": "6d4991c62d8a77a9530a39ada807ae3fa9872fbf",
                    "com.nvidia.cublas.version": "11.6.5.2",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.2.4.15",
                    "com.nvidia.cufft.version": "10.5.2.100",
                    "com.nvidia.curand.version": "10.2.5.120",
                    "com.nvidia.cusolver.version": "11.2.0.120",
                    "com.nvidia.cusparse.version": "11.6.0.120",
                    "com.nvidia.cutensor.version": "1.3.2.3",
                    "com.nvidia.nccl.version": "2.11.4",
                    "com.nvidia.npp.version": "11.4.0.110",
                    "com.nvidia.nsightcompute.version": "2021.2.2.1",
                    "com.nvidia.nsightsystems.version": "2021.3.2.4",
                    "com.nvidia.nvjpeg.version": "11.5.2.120",
                    "com.nvidia.pytorch.version": "1.10.0a0+0aef44c",
                    "com.nvidia.tensorrt.version": "8.0.3.4+cuda11.3.1.005",
                    "com.nvidia.tensorrtoss.version": "21.10",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2021-12-08T18:10:38.68420124-08:00",
            "history": [
                {
                    "created": "2021-10-01T02:23:40.163413701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d2f4a45a58b3f5426c89e2ef57164824fbf0e4d17b8a90fffa0d5ff3b4e5114 in / "
                },
                {
                    "created": "2021-10-01T02:23:40.619312769Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:24.174542841Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:39.919620355Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:39.919620355Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:39.919620355Z",
                    "created_by": "ENV CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:39.919620355Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:40.690724426Z",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:41.071976191Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:41.319133928Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:41.600947949Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:41.958447647Z",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:42.311731207Z",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:42.676960427Z",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:48:43.212467325Z",
                    "created_by": "ENV NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.6.5.2 CUFFT_VERSION=10.5.2.100 CURAND_VERSION=10.2.5.120 CUSPARSE_VERSION=11.6.0.120 CUSOLVER_VERSION=11.2.0.120 CUTENSOR_VERSION=1.3.2.3 NPP_VERSION=11.4.0.110 NVJPEG_VERSION=11.5.2.120 CUDNN_VERSION=8.2.4.15 TRT_VERSION=8.0.3.4+cuda11.3.1.005 TRTOSS_VERSION=21.10 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.2.2.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.6.5.2 CUFFT_VERSION=10.5.2.100 CURAND_VERSION=10.2.5.120 CUSPARSE_VERSION=11.6.0.120 CUSOLVER_VERSION=11.2.0.120 CUTENSOR_VERSION=1.3.2.3 NPP_VERSION=11.4.0.110 NVJPEG_VERSION=11.5.2.120 CUDNN_VERSION=8.2.4.15 TRT_VERSION=8.0.3.4+cuda11.3.1.005 TRTOSS_VERSION=21.10 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.2.2.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.11.4 com.nvidia.cublas.version=11.6.5.2 com.nvidia.cufft.version=10.5.2.100 com.nvidia.curand.version=10.2.5.120 com.nvidia.cusparse.version=11.6.0.120 com.nvidia.cusolver.version=11.2.0.120 com.nvidia.cutensor.version=1.3.2.3 com.nvidia.npp.version=11.4.0.110 com.nvidia.nvjpeg.version=11.5.2.120 com.nvidia.cudnn.version=8.2.4.15 com.nvidia.tensorrt.version=8.0.3.4+cuda11.3.1.005 com.nvidia.tensorrtoss.version=21.10 com.nvidia.nsightsystems.version=2021.3.2.4 com.nvidia.nsightcompute.version=2021.2.2.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:53.850376381Z",
                    "created_by": "ENV DALI_VERSION=1.6.0 DALI_BUILD=2993096 DLPROF_VERSION=21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:54.753122151Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:55.264688352Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.4.3.001 CUDA_DRIVER_VERSION=470.57.02 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.6.5.2 CUFFT_VERSION=10.5.2.100 CURAND_VERSION=10.2.5.120 CUSPARSE_VERSION=11.6.0.120 CUSOLVER_VERSION=11.2.0.120 CUTENSOR_VERSION=1.3.2.3 NPP_VERSION=11.4.0.110 NVJPEG_VERSION=11.5.2.120 CUDNN_VERSION=8.2.4.15 TRT_VERSION=8.0.3.4+cuda11.3.1.005 TRTOSS_VERSION=21.10 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.2.2.1 DALI_VERSION=1.6.0 DALI_BUILD=2993096 DLPROF_VERSION=21.10 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:55.264688352Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:55.866970396Z",
                    "created_by": "COPY /usr/local/bin/deviceQuery /usr/local/bin/deviceQuery # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:56.316944234Z",
                    "created_by": "COPY /usr/local/bin/checkSMVER.sh /usr/local/bin/checkSMVER.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:56.735728633Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T04:51:56.735728633Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:56.735728633Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T04:51:57.441283813Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T05:13:03.710170964Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:09.604565905Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:13:10.131606386Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T05:17:53.375652476Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-02T05:17:53.375652476Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-02T05:17:53.375652476Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c PYTORCH_VERSION=1.10.0a0+0aef44c PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.10.0a0+0aef44c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:00.526679532Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-07T21:22:15.55507955Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 /bin/sh -c curl -L -k -o /opt/cmake-3.19.3-Linux-$(uname -m).tar.gz https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-Linux-$(uname -m).tar.gz &&         pushd /opt &&         tar -xzf cmake-3.19.3-Linux-$(uname -m).tar.gz &&         rm cmake-3.19.3-Linux-$(uname -m).tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-07T21:22:15.55507955Z",
                    "created_by": "ENV PATH=/opt/cmake-3.19.3-Linux-$(uname -m)/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:22:15.55507955Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:27:37.63387545Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.52.0 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-07T21:27:37.63387545Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.19.3-Linux-$(uname -m)/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T21:27:41.136893947Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-07T21:27:42.821426912Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-07T21:27:42.821426912Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:33:53.692499499Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:37:49.979986783Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:38:23.572437756Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c JPEG_TURBO_VERSION=1.5.3 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:39:20.295591823Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir 'nltk>=3.6.4'  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:39:31.687040054Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:39:32.913165097Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:39:32.913165097Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:43:25.717933263Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.1 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:43:26.635887981Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:43:26.635887981Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:43:26.635887981Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:43:26.635887981Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:43:26.635887981Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:36.56594132Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:59:36.56594132Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:41.08248258Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:59:53.46502194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:59:53.46502194Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:53.46502194Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:53.46502194Z",
                    "created_by": "ENV PYT_CFLAGS=-fno-gnu-unique",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:53.46502194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [[ $TARGETARCH = \"amd64\" ]]; then export PYT_CFLAGS=\"-fno-gnu-unique\"; fi     && if [[ $TARGETARCH = \"arm64\" ]]; then export PYT_CFLAGS=\"-fno-gnu-unique -fsigned-char\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T21:59:56.850153236Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS=$PYT_CFLAGS     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:59:57.478098519Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T21:59:57.478098519Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T23:25:16.490840264Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T23:25:52.415250219Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T23:26:28.296273283Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T23:26:29.031427052Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T23:26:29.526590757Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/8.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && sed -i 's#JPEG_ROOT = None#JPEG_ROOT = \"/usr/lib\"#' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-09T23:26:29.526590757Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-09T23:26:29.526590757Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:34:47.606010514Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:41.744519097Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:42.299262266Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:42.834121915Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:43.944256678Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:45.955359839Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:35:45.955359839Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.19.3-Linux-$(uname -m)/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:35:54.899785854Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.0; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:36:47.712101813Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && mkdir -p /opt/dlprof_viewer_install  && cp /nvidia/tmp/pip/* /opt/dlprof_viewer_install/  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /opt/dlprof_viewer_install  && pip install --no-cache-dir nvidia_dlprofviewer-*  && rm -rf /opt/conda/lib/python3.8/site-packages/qa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:37:04.998542925Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.10 PYTORCH_BUILD_VERSION=1.10.0a0+0aef44c TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=28019337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "LABEL com.nvidia.build.id=28019337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-10T00:37:21.661506379Z",
                    "created_by": "LABEL com.nvidia.build.ref=6d4991c62d8a77a9530a39ada807ae3fa9872fbf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-22T15:52:45.400664986-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-22T15:52:45.400664986-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:52:46.386761326-08:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:52:46.391514503-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:55:12.008385935-08:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.10 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:55:12.0138076-08:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:57:32.122432765-08:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.11.0-rc3 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:57:32.128017499-08:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:59:57.025801634-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-22T15:59:57.138171684-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T15:08:10.611546609-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T15:10:08.305116557-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T15:10:08.344218618-08:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T15:11:18.110463725-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T15:11:18.110463725-08:00",
                    "created_by": "ARG NEMO_VERSION=1.5.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-08T18:09:44.091601434-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.5.1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:06.333463217-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.5.1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:37.638055512-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.5.1 /bin/sh -c conda install -c conda-forge numba=0.54.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.161870612-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.5.1 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.166670459-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.174986999-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.232766706-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.307829175-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.365313543-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T18:10:38.68420124-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.5.1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:da55b45d310bb8096103c29ff01038a6d6af74e14e3b67d1cd488c3ab03f5f0d",
                    "sha256:aa52050c370d3d7bfe4544cf016253129765ada1a028bcdfa903826630744fb1",
                    "sha256:41c8f8f9279bb2408345ed8fa97477c17540069b52863a58247fd85c14c65e08",
                    "sha256:9ace6acda497136408a796df582b2d408118b04fb0b6fefe86e41572a29d41ce",
                    "sha256:422a6877917676451e678b328f280f089da5db89d25cdb3fa6212e5253246890",
                    "sha256:d6b42408a5cf61d244baa8eecb7c8ff30ff83f47caa1bb4b6ee30cb3ef424d4c",
                    "sha256:a33b6bbde9d45ac251d8d283d1a294748416177f8d7378856a20133e1cc3a735",
                    "sha256:f0f7e28d05f2008d7e9048a1c0507565543677f6995e68c195ed7ebb4e199c43",
                    "sha256:1b548163cd107e29582791ecd980d7240a50b5b609b4a260ee50f76b34931d66",
                    "sha256:ae70e300bdb5579711b65fb2147f3f3d211d451a8aab1f2819638094cc2f88bd",
                    "sha256:b85730dafc1f0327d11a45a3c280a92f1d0f49b45b640bcabca6f86d91224fdd",
                    "sha256:f1de1b7eef1f30e6e99e7bbdbe3eda9fd7fe4d86899f44fb57fa5eb6a9935c40",
                    "sha256:5fc8a72a640caed016b8bc0bedc44d041bbf67e01354b690b5e888820bf5bcf0",
                    "sha256:82ef1083a8815ff98f41ccacec6e7110d25b34ef2eeddb28705e9be62eb738b2",
                    "sha256:2bf4f7a423744632a51ea6d5b94d67af8816b4a9ebc363b226cbc87c497b5367",
                    "sha256:901c8940db6735b5d15ddb41e6d13e6029e4d69c836ceb71fb95f5a39b1c79a9",
                    "sha256:16fe0630f74c00bf906f8d6538f1b5f3b4d33f4c230cd112704973b3cb6e057e",
                    "sha256:c695310163baa4880a0d42dc0299d7b91d16a848d1321e1a04c24a4ebecfb5ab",
                    "sha256:d5a8e494ae7a70865c41d8e612928d6252f5a24509f0b929764b59eb01fc2ea8",
                    "sha256:18690565e7e88d1b0f9a1a9acb61d58133e4b97d87557187fe67b6cd4e87d665",
                    "sha256:b7871e54a04489a2dd73f62cf66ab93faf9d0808af4108fa869918efff13b481",
                    "sha256:45c6aceb9bfbad569167f5a03bb649cffc2c6750148e62f59cac07dcaf63dff1",
                    "sha256:e16d35e0e5c1b7d4fba0a4d0b06a4b4a53400912c46e644d5a5d961275d5b4fc",
                    "sha256:829593d41fa70a6b5cb8783b8866764ee807b25c4f483512e609994f7a304e9d",
                    "sha256:9bbfc47992e93496b7a4222dab721bb16d31901931d1524f97f8a7089dd31d8e",
                    "sha256:efdb10c9b9a5feec2167fba7088a47fa4aff2e023b1b61124a5c30da66189f9b",
                    "sha256:12042dd768328577f59267003a1f061d8f4bddb75eedbd4bb11e807b38f369bf",
                    "sha256:53dfbbfbf57f4bdf093d431052fe7970ece60877df5972ae7b675895eaf15ca6",
                    "sha256:d3f322bd9dc56745b252a738188e8ea7512e65b56e0999a010eeb7362ba2ee7f",
                    "sha256:10221e29aa14867cdd3809508da533798b95e9d4bba4c22ac416315c64c8733f",
                    "sha256:351e17916e1abc11f0944fa3e598e57dd596c91880cdcb352edced4e370370c9",
                    "sha256:c4230e528cd45cde511801688748cf900be3bba7dab97defa151adefe1e92fc2",
                    "sha256:dbe16ce660fa17b00f3dc9ccbd7c737385f7c063080db2e69a260abda46fc445",
                    "sha256:9642109b6e35e212934ba5e81973c05ed021aefd6267ae6ae4c05939d01500c7",
                    "sha256:c7dbe406e0ebde3778c201de7724e7385123a36556ad3aa8b8dd1d39c8ef9398",
                    "sha256:35723d868f3788bf4dd273df3be6bcd7c510e73d685809bc26892727caef5ca6",
                    "sha256:81efd80d211b389b2377f9c896376c753990218cbdb889303b480ae4f9d64eb6",
                    "sha256:a3d4e2d2995e5c95dfc62e0ae56d1b013f8ff86910f3afe033e68bfc4b7e3b71",
                    "sha256:a73a43dd116693d862e092eb36b85e0a9b93b53a948c158dd0b33646d8f3ca3b",
                    "sha256:a5be0c1d1706dd1b8555820f892f890792c8a967f551da2b67892bbba5c1dfde",
                    "sha256:0b0064b5ddf397d8209077f777433253812ea6859e70d3c0362ec0a9f60c9373",
                    "sha256:95207d570ece00f59a6ea9fc0c3fa76f278c8f5471447e52b88b2bce639b5c7a",
                    "sha256:e4e7a564963eb83c8dc3eea76c5ec9598ee65ea42d89981e3b26e7bad8795014",
                    "sha256:da697a639933e606bae0502c0d7f468b5acfea85e7e9222d3630d48793d135a5",
                    "sha256:9cae9a212b275417144f50d14b5230bc8921fff75f88783552431818466b4e2c",
                    "sha256:ae1105bdbcccd3a90beee6a6faf76d23c724f6951dded1bdd0fcbae41dfe3cd7",
                    "sha256:b6504e6abc4d71fa7ff51ebea3a3d612bfc431409302a3552ba8d0cd4d52e669",
                    "sha256:36eaa6b7565f1d049c107914a077c391cfe05380857dffbbb6bd114872ce2790",
                    "sha256:4b570a3de77516a588f0fda7a52ca5610e75364b0f406b05c8b7ed22a3c34352",
                    "sha256:d713d1ef31c3f2a5752645b14b67bd7cee5461f609cd36e0f3aadba4d30a3417",
                    "sha256:bf9bcbdcde53660aa4a085586a812ece311e252c8ab00d87cc484d1f50a38623",
                    "sha256:f1a516f624fdaecc71846ad944313fbab2844005f8efe4676b0b04cce780ad27",
                    "sha256:36ce24af77cefab026b46670429d888f6787eda379d6cd05f9f78f9eca5e0127",
                    "sha256:74b7dcbc481f1ffc7ec152fa74f982df3f03e8f5fc28c0b73f3385187bb18613",
                    "sha256:12e3cb42f45d69d95a20d86ab4ef1de474f0f1a90b1e8d07bc45a2a18ecf2e46",
                    "sha256:d6afb953b56793a8093f568f6d36bddf1a7d7f820d15eb4def3e9796830a34d9",
                    "sha256:b4a215e83cf297370bd581ab347164cbab95f5e08bb57eca5cabc1b70ed940bb",
                    "sha256:1d284235023e9f8c5b6e4251da822d423b5ce9662274ca66d587dd2f836b09da",
                    "sha256:43fc3b2fa64cc3fb720bcb396e61be4aea53388b19aa64cf8ae4ab40a6c63887",
                    "sha256:4dd057b93eeb197ab0712756bd1c86979f4c10b20cdc576f6bec4ff303f3cff5",
                    "sha256:1b134064a4533ed586f2b017ead25058aa8895bb9680889c088b054b50ba3df2",
                    "sha256:8b33592561670f867ff7cf3b5dfa8e609bfe4a54858773de7d02fda3f01586cf",
                    "sha256:cd68834b5bd128558cb2bfe371b25d8d822f4f57b9706407ff3376c02983f7ae",
                    "sha256:6319f048a6fcf3fcae396d76d25ca7b7ca3523845d0e8e47d6adf9bdc5b0874a",
                    "sha256:c866a2c0f92f80e02bd6394ae43b78c9e42029587e8bf052ed9656b4535afcf8",
                    "sha256:739aa142b35327e9dd593a643a1fd9a26acf526c82fbc563fadd30c69525a0b1",
                    "sha256:09917738085fc69849c11a12073f2bf769472694cc8e92c1bcf6a16f713afaeb",
                    "sha256:5c5aa237f01fb351f5e30ef375eb85c1e7e9dc1c43a6c3f60c914da7efef89d6",
                    "sha256:f81bded060613f297ea61af16acb85258dc451e2a38bc2863ff4f3bd1067d235",
                    "sha256:a67f5f3f9a55ec1d78048b3139ba36c3519acca6357a748b707c9d4050a3ad94",
                    "sha256:3b0e854c39bca14522da179c4c747eaa7d80041837aa4b946dfc4d7e5ff97fe5",
                    "sha256:10342513e7dbd37a8a7669e2f26b22c751aebda5e70ad75d03362172899cc001",
                    "sha256:fa924ed930f21fc0d46375fd98ee6ec6fa7f4f2831069cde9518a3e678480d7d",
                    "sha256:058b7e099e3184a6a46a3b45b4419a29d98207bafec8bd9bf56f5a308b365098",
                    "sha256:ad7afb3b577195a254b42d7d258e1e52b5c10b6599cc6e2b7124cefa02051a82",
                    "sha256:04f83615730a19d68831b46ecceeac61f2f99742e28bab6163a482cafc2c4c7d",
                    "sha256:dffe8d7f561a46650cc0eb550936ea4b6d647be03d06e4c5ba6492ac047ad97a",
                    "sha256:f20b4effe2bc26d403c6cae94544a397912826e2a69b0842a0375ec020cd87b8"
                ]
            }
        },
        "1.6.1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.5.0.029",
                    "CUDA_DRIVER_VERSION=495.29.05",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.11.4",
                    "CUBLAS_VERSION=11.7.3.1",
                    "CUFFT_VERSION=10.6.0.54",
                    "CURAND_VERSION=10.2.6.48",
                    "CUSPARSE_VERSION=11.7.0.31",
                    "CUSOLVER_VERSION=11.2.1.48",
                    "CUTENSOR_VERSION=1.3.3.2",
                    "NPP_VERSION=11.5.1.53",
                    "NVJPEG_VERSION=11.5.3.48",
                    "CUDNN_VERSION=8.3.1.22",
                    "TRT_VERSION=8.2.1.8+cuda11.4.2.006",
                    "TRTOSS_VERSION=21.12",
                    "NSIGHT_SYSTEMS_VERSION=2021.3.2.4",
                    "NSIGHT_COMPUTE_VERSION=2021.3.0.13",
                    "DALI_VERSION=1.8.0",
                    "DALI_BUILD=3362434",
                    "DLPROF_VERSION=21.12",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.9.0",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.11.0-rc1",
                    "OPENMPI_VERSION=4.1.1",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.11.0a0+b6df043",
                    "PYTORCH_VERSION=1.11.0a0+b6df043",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=21.12",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=29870972",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "29870972",
                    "com.nvidia.build.ref": "8402d940f8ded3113c2c0ca85c9eb06163c399bf",
                    "com.nvidia.cublas.version": "11.7.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.3.1.22",
                    "com.nvidia.cufft.version": "10.6.0.54",
                    "com.nvidia.curand.version": "10.2.6.48",
                    "com.nvidia.cusolver.version": "11.2.1.48",
                    "com.nvidia.cusparse.version": "11.7.0.31",
                    "com.nvidia.cutensor.version": "1.3.3.2",
                    "com.nvidia.nccl.version": "2.11.4",
                    "com.nvidia.npp.version": "11.5.1.53",
                    "com.nvidia.nsightcompute.version": "2021.3.0.13",
                    "com.nvidia.nsightsystems.version": "2021.3.2.4",
                    "com.nvidia.nvjpeg.version": "11.5.3.48",
                    "com.nvidia.pytorch.version": "1.11.0a0+b6df043",
                    "com.nvidia.tensorrt.version": "8.2.1.8+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "21.12",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-02-03T15:32:03.032088431-08:00",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T02:36:02.615606472Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:38.059475083Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:38.059475083Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:38.059475083Z",
                    "created_by": "ENV CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:38.059475083Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:39.168722648Z",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:39.868230367Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:40.533245655Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:41.09745683Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:41.407154176Z",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:41.77500682Z",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:42.255210692Z",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:39:42.551699267Z",
                    "created_by": "ENV NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.7.3.1 CUFFT_VERSION=10.6.0.54 CURAND_VERSION=10.2.6.48 CUSPARSE_VERSION=11.7.0.31 CUSOLVER_VERSION=11.2.1.48 CUTENSOR_VERSION=1.3.3.2 NPP_VERSION=11.5.1.53 NVJPEG_VERSION=11.5.3.48 CUDNN_VERSION=8.3.1.22 TRT_VERSION=8.2.1.8+cuda11.4.2.006 TRTOSS_VERSION=21.12 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.3.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.7.3.1 CUFFT_VERSION=10.6.0.54 CURAND_VERSION=10.2.6.48 CUSPARSE_VERSION=11.7.0.31 CUSOLVER_VERSION=11.2.1.48 CUTENSOR_VERSION=1.3.3.2 NPP_VERSION=11.5.1.53 NVJPEG_VERSION=11.5.3.48 CUDNN_VERSION=8.3.1.22 TRT_VERSION=8.2.1.8+cuda11.4.2.006 TRTOSS_VERSION=21.12 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.3.0.13 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.11.4 com.nvidia.cublas.version=11.7.3.1 com.nvidia.cufft.version=10.6.0.54 com.nvidia.curand.version=10.2.6.48 com.nvidia.cusparse.version=11.7.0.31 com.nvidia.cusolver.version=11.2.1.48 com.nvidia.cutensor.version=1.3.3.2 com.nvidia.npp.version=11.5.1.53 com.nvidia.nvjpeg.version=11.5.3.48 com.nvidia.cudnn.version=8.3.1.22 com.nvidia.tensorrt.version=8.2.1.8+cuda11.4.2.006 com.nvidia.tensorrtoss.version=21.12 com.nvidia.nsightsystems.version=2021.3.2.4 com.nvidia.nsightcompute.version=2021.3.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:24.780942294Z",
                    "created_by": "ENV DALI_VERSION=1.8.0 DALI_BUILD=3362434 DLPROF_VERSION=21.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:25.175607537Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:25.487195Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.5.0.029 CUDA_DRIVER_VERSION=495.29.05 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.7.3.1 CUFFT_VERSION=10.6.0.54 CURAND_VERSION=10.2.6.48 CUSPARSE_VERSION=11.7.0.31 CUSOLVER_VERSION=11.2.1.48 CUTENSOR_VERSION=1.3.3.2 NPP_VERSION=11.5.1.53 NVJPEG_VERSION=11.5.3.48 CUDNN_VERSION=8.3.1.22 TRT_VERSION=8.2.1.8+cuda11.4.2.006 TRTOSS_VERSION=21.12 NSIGHT_SYSTEMS_VERSION=2021.3.2.4 NSIGHT_COMPUTE_VERSION=2021.3.0.13 DALI_VERSION=1.8.0 DALI_BUILD=3362434 DLPROF_VERSION=21.12 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:25.487195Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:25.801927811Z",
                    "created_by": "COPY /usr/local/bin/deviceQuery /usr/local/bin/deviceQuery # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:26.097074594Z",
                    "created_by": "COPY /usr/local/bin/checkSMVER.sh /usr/local/bin/checkSMVER.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:26.436514012Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:42:26.436514012Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:26.436514012Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:42:26.764054735Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:56:28.072869553Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:56.055137594Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T03:56:57.022463231Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T04:01:02.567362075Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T04:01:02.567362075Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:01:02.567362075Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.9.0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 PYTORCH_VERSION=1.11.0a0+b6df043 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=21.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.11.0a0+b6df043",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T04:55:44.666956141Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:01:33.828665246Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:01:33.828665246Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:01:39.786985371Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:01:42.004414081Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:01:42.810714157Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c CONDA_VERSION=$(conda --version | grep -oE \"[0-9]+\\.[0-9]+\\.[0-9]+$\") &&     rm -r /opt/conda/pkgs/conda-${CONDA_VERSION}*/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:01:42.810714157Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:02:11.384503664Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:06:07.575564166Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:07:18.199689443Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:07:30.864701183Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:07:31.940113781Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:07:31.940113781Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:11:28.721402948Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:11:30.165385171Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:11:30.165385171Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:11:30.165385171Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:11:30.165385171Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:11:30.165385171Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:27:48.823696031Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:27:48.823696031Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:27:52.12541935Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:28:05.234165357Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T05:28:05.234165357Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:28:05.234165357Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:28:05.234165357Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:28:05.234165357Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T05:28:09.225863919Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T06:44:43.109278619Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T06:44:43.109278619Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T06:45:23.496768242Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T06:45:59.78334517Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T06:46:00.373215443Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c patch -p0 < apex_mha.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T06:46:00.875725661Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T07:58:04.308760445Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/8.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T07:58:59.759174239Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         scikit-learn==0.24.0         cupy-cuda114==9.3.0         dask-cuda==21.10.0         dask-ml==1.9.0         treelite==2.1.0         treelite-runtime==2.1.0         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/xgboost-*.whl  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T07:58:59.759174239Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T07:58:59.759174239Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:00:27.903223341Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:29.593683995Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:30.23777525Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:31.530082633Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:32.865311063Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:41.596886887Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:00:41.596886887Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:01:28.703216028Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:01:50.455548688Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=21.12 PYTORCH_BUILD_VERSION=1.11.0a0+b6df043 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c mkdir -p /opt/dlprof  && mkdir -p /opt/dlprof_viewer_install  && cp /nvidia/tmp/pip/* /opt/dlprof_viewer_install/  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/dlprof/bin/  && pip install --no-cache-dir nvidia_dlprof_pytorch_nvtx*  && cd /opt/dlprof_viewer_install  && pip install --no-cache-dir nvidia_dlprofviewer-*  && rm -rf /opt/conda/lib/python3.8/site-packages/qa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:02:10.062242697Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:02:10.062242697Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:02:15.568623851Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:02:15.568623851Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:02:15.568623851Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:07:47.351402802Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=29870972",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "LABEL com.nvidia.build.id=29870972",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T08:07:48.096146333Z",
                    "created_by": "LABEL com.nvidia.build.ref=8402d940f8ded3113c2c0ca85c9eb06163c399bf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T00:51:27.860908228-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T00:51:27.860908228-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:51:28.663706924-08:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:51:28.668321819-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:54:59.690487557-08:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.10 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:54:59.695704804-08:00",
                    "created_by": "WORKDIR /tmp/torchtext_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:57:30.814584701-08:00",
                    "created_by": "RUN /bin/sh -c git clone --branch v0.11.0-rc3 https://github.com/pytorch/text.git &&     cd text &&     git submodule update --init --recursive &&     python setup.py clean install &&     cd .. && rm -r text # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T00:57:30.819572293-08:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:00:01.030424367-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:00:01.03581365-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:00:01.041904563-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:02:11.702991176-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:02:11.74549802-08:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:03:17.044168104-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-02T01:03:17.044168104-08:00",
                    "created_by": "ARG NEMO_VERSION=1.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-02T01:03:18.005115384-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.6.1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:31:24.479270794-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.6.1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:01.909542459-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.6.1 /bin/sh -c conda install -c numba numba=0.54.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.41288397-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.6.1 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.459648082-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.537412812-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.606806298-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.666032206-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:02.726330726-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-02-03T15:32:03.032088431-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.6.1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:95a41114d0ba8627493bd2aa6187235a1d32176175286ef269e4ddada944ccfb",
                    "sha256:99f06efb7418af420d863c45a62d3ac396b53c89d1538ca9db76add1c5c15349",
                    "sha256:ad4c3fb4691b8c8ab26ef0475917629dee60e881435e3bec87c61fde151f6448",
                    "sha256:4822117e69020060da0f0c48639737b6f2c6e7f29f15b380f2eb07560f7dbeaf",
                    "sha256:cb097467c2e6bce8e8c67cf7223c7acdd2dafd53c4963d14841d28ecf9e369ac",
                    "sha256:bbbb1fb4c945d5708b5775c31ec7a4b033ab5f7fb9573f1c45bdf08eda0ad692",
                    "sha256:67bf16bd6841d4fdca8fa6ebf889696cd1a15e41cc94869e5e42f74e452fa58e",
                    "sha256:40962364553d12abb666aec75ee1fe8763c1215e20dd1d0d5333636d2a7e1cd6",
                    "sha256:e6dd3b790906771ea5e21798dfe44a9f2e825f3a1cba4b1ca1d75c19312186b3",
                    "sha256:96d1d63ed60ec2749c644a30928d9c89b4dd0e1e1282d200d842af49740f723c",
                    "sha256:d6d2065227510587408b1f71240cb959ace18c6d534263e63f214308e12ad39c",
                    "sha256:2ffac028502b8b1cbd5eddac12808236cec43b245adbd17681ae2e104ff2400d",
                    "sha256:2d03e19fdd90bc05c4663ea4a88c774fce7c31d51d19afe24d8aeeaaba31a0aa",
                    "sha256:fb28f03e5fe849ff2c797f87f82e1f656b9c6467756237f60c2e31f0e8cc5547",
                    "sha256:125ace385f7867e620b965c863097d1e86fbe6cb17fe13418f9d7712d7bc1772",
                    "sha256:a6bc029bd7edfb29de49c83d5bd8b69c7cf7a52d08074db0d51e1626aee8357d",
                    "sha256:ec65d0dc039ca7e2068fb48f20df9600d9e889c12ad2dcc7059988fb06fc3349",
                    "sha256:7394ab65c509c9644fea92f1ec71be1cfc336cdc39dfd75194618f9a06ec2bd3",
                    "sha256:8aee4cd2c8483f8762614f676233972c31a4c494242b0e86fb8367a594ec5408",
                    "sha256:0be7a4a1cf8e729b5c67636637365b4eab0d9a3e9b52eee3e970cea6ff1049d2",
                    "sha256:31958061ac1cd59248fb236170d89b1c52b6639acf7667fe6f88873efc26b3bb",
                    "sha256:5391ee7be265b98fe4912d31a7d7a6a1b8db79b67fdb94185c3ed5a5776966ad",
                    "sha256:6027d8caed19426cbe711c4aa5f2a78bdc2b03c5e070a235746b1f95618c21a1",
                    "sha256:3bcab05d72bb739f7deb074852c04bc43e683996018d8903ff59df30daf3256b",
                    "sha256:027fb7d1421ca802963dc0d5cd1b4115cd3353c25b00c63d27da0cb01b8f67d7",
                    "sha256:a0277199c44ec1d6a59c96ff0f3ee7e7f044f8913d224af93d523db4a79d1379",
                    "sha256:f75540aee3e4ab3ad383ce5b18e1d139e840c18bd81ed2770c0417cb9dd1d9a6",
                    "sha256:6374b88927e15ecab1c312b3b40b1b593d059baa4e488536bbebb2851da333f3",
                    "sha256:f05ca5051dc8abff838b4d084eabbf26126631b9b369de631fec30be5ef515b3",
                    "sha256:65e944221bf63de1fc40da4c669edd53306df921140469bed7b1aa371eed9a86",
                    "sha256:eb6f2e66dbd3a9336963fa3e79250c8cdae608dd014b0a505beda35d4f20bc30",
                    "sha256:ad8447d5b875a0861fa90d222397e24dab774b0d02ecb8b39396075a8a99f2f1",
                    "sha256:caf7efc43ea100d288f683f61f3950151e59c4d881131badc9c113641545ae6d",
                    "sha256:f3f03c1f403f5c893be48eccc59a8d117069b6d7fd7e7524fcf28e73f8c1cc13",
                    "sha256:acacf2d12af3e19194d27a7e408833601ec115de91427b5e3ad461dc65903cbc",
                    "sha256:3fddde4438d6653644abf2de399589c04140e4391801ba395a65104cdd771ece",
                    "sha256:1256e4767e3ed11e338487ed17b658474454a2bbeca30e41e2b3daad67136824",
                    "sha256:bb56380b4b2f1fa7e81ae77d4dd3003edddb0a380db6b32a251cf00692475a27",
                    "sha256:c260c6052058b92de2a0afa3fe9c2ea1c3a46543b51f4934218c56b320ed54ae",
                    "sha256:dbdb48f7335bd353d1e49d24fd02f2166646088b54400db356b96a0603886b13",
                    "sha256:49dce9e40652fb68aca238f0a5ada0a748b47aae7c8447d9c3e5e8d51668af29",
                    "sha256:7ca6162ff7d56ffb37eff555949f4829de29760ec9e738f561170af6dfed15c9",
                    "sha256:d3690535dc3fd58a492f56b9f76defed927aca9416f6d03128fd67472476c7bb",
                    "sha256:d095eacab6b75f61e34aba9d54bfaa80b38abfc2e237be2ab283fb18e6f43001",
                    "sha256:55c10378fa747d25a643f885aaa9d7bc47affb32767c5347099b642bb8752e00",
                    "sha256:1c1772ac50a8bedd39e454a20e6ed33e37bdf811b01456365ffa5135ce65c073",
                    "sha256:0616384b811e52bd28ae653d6fb34a35f6ca661f532a6596252cbd7072bdbc07",
                    "sha256:c87be00ec00979fea8e7efdb9d7f58a3a23d1c3901f37b4544c597dd25fce2d9",
                    "sha256:a411ff8ff31c4e0a63e250cd901c2d2033930bcdbbde2154848b5fce38a5ca62",
                    "sha256:4faab67e050f1858fb1b4d664a15416f18ced2c9fece7f674d2d65d54e7a2b27",
                    "sha256:237d11b04497f95e91e466e8672764b15de182731a03ad2da0e64051a0046716",
                    "sha256:6f001f90abd80c75b4de38e01b8a8da1a62eeee4c20ae3022d81af2b074ed68a",
                    "sha256:2bbf5b83bfde83a6f6d7c63df1131cd272fb938d6e43171d7f40ff03a72c8a14",
                    "sha256:720a61c051b60138aebf5e8eff69a5310d9fa1da3cdaea97b3bea30103db55c7",
                    "sha256:da4c3c1702a68807a3c4e43f89d16f2a46bf8ce74150355b567b3eea9500c6b1",
                    "sha256:a1aa27f04516100b65db492f00e72b7be7fb476a51a3c7fc5d81539d78cc142f",
                    "sha256:ba54d05c0dd997b575e6c15f50a36bf355ed768abdf5aa04c947fffbcff6aa7b",
                    "sha256:6b4a72b87af064123b2524c483eee1300086b4bc788758da55f9fd91e480583a",
                    "sha256:c4c1a1fe1642303a32b90029f7ef2cb802a6727958611835bb9c30e1b3504815",
                    "sha256:61bebe4d966cb09993fdde53d2f097d1c1dafc858bd11e223903a0c5c08a6020",
                    "sha256:5087c4d0a70bee7bf539f914347e26bdb21a9185ffba154dfe55763ab17369c8",
                    "sha256:450fafd8a107832a79f2e8d2646f184611a226358218bccde3d3fc9c7ee686d8",
                    "sha256:bae453eeeac39dcb4302786b60df8d30b0bca67a29ccc9e61f7e645fceefbc16",
                    "sha256:ec03a31a348e32f572138955c13fb39b0868de8efc40c4b3d50f4d1f7d391652",
                    "sha256:5f0ed9a59372d741479a6b50bd32e6023e1d9ea0dfd69dc82044f243026fb0d3",
                    "sha256:6c148aacc36381246958c5824fd58442f9f618e0c02ece09a7a284d066e311f1",
                    "sha256:dd965d0d5c2f7b5d7b01fd2c65b492b25bbd48b4ef5a5ac710309d8e70a5e05c",
                    "sha256:9a58f924257cbe2a5eff1fe7eb0ac749bc5a819bdceb6ad3f35d65303732ae15",
                    "sha256:4ea4d2b5c790b6cb66c72294478dfc8da2939c226a7fd55461c09494bca7fc9d",
                    "sha256:61280cee36c0b4509f2f4c949cb5ec3a319a47259e94fff32b97f408eab2f333",
                    "sha256:2812fd299821cb0177c6ffab8bba39d66cc42c6d30ce3eb7b160f230205758db",
                    "sha256:fa574512745194349fdd4c7ad130dc2d801df75781b5ee4068ecbbb9ad873981",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e4036281d19dc15076c54cb56f9fa70f71d9ac8139b75178eb990fb5044d0c1b",
                    "sha256:8fcc39af2fa11908161ae483e5bf8f0ce49c9777abf4ce459ae9098d49e33e3c",
                    "sha256:726a2aee3a4b915ef6a5b5c9977312ddfa826ace27729eeda295197c0d590db3",
                    "sha256:8162963d13eb59ec20ffd735b6f7fff85caf58f838de7178ba37f84238b064f0",
                    "sha256:fa44a51d7d1c61f920d90618f176e9eee17a07b9bc88cbb17421d6df968d69cd",
                    "sha256:041124208c05c14a93038e226c597de95b37eeda3f81822170847bc0edcfdd30"
                ]
            }
        },
        "22.01": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.6.0.020",
                    "CUDA_DRIVER_VERSION=510.39.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.11.4",
                    "CUBLAS_VERSION=11.8.1.74",
                    "CUFFT_VERSION=10.7.0.55",
                    "CURAND_VERSION=10.2.9.55",
                    "CUSPARSE_VERSION=11.7.1.55",
                    "CUSOLVER_VERSION=11.3.2.55",
                    "CUTENSOR_VERSION=1.4.0.6",
                    "NPP_VERSION=11.6.0.55",
                    "NVJPEG_VERSION=11.6.0.55",
                    "CUDNN_VERSION=8.3.2.44+cuda11.5",
                    "TRT_VERSION=8.2.2.1+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.01",
                    "NSIGHT_SYSTEMS_VERSION=2021.5.2.53",
                    "NSIGHT_COMPUTE_VERSION=2022.1.0.12",
                    "DALI_VERSION=1.9.0",
                    "DALI_BUILD=3647997",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.11.0-rc1",
                    "OPENMPI_VERSION=4.1.1",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2",
                    "PYTORCH_VERSION=1.11.0a0+bfe5ad2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.01",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=31424411",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "31424411",
                    "com.nvidia.build.ref": "ed0a15aa420fe4d708dd9b5574fdb1af65824cab",
                    "com.nvidia.cublas.version": "11.8.1.74",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.3.2.44+cuda11.5",
                    "com.nvidia.cufft.version": "10.7.0.55",
                    "com.nvidia.curand.version": "10.2.9.55",
                    "com.nvidia.cusolver.version": "11.3.2.55",
                    "com.nvidia.cusparse.version": "11.7.1.55",
                    "com.nvidia.cutensor.version": "1.4.0.6",
                    "com.nvidia.nccl.version": "2.11.4",
                    "com.nvidia.npp.version": "11.6.0.55",
                    "com.nvidia.nsightcompute.version": "2022.1.0.12",
                    "com.nvidia.nsightsystems.version": "2021.5.2.53",
                    "com.nvidia.nvjpeg.version": "11.6.0.55",
                    "com.nvidia.pytorch.version": "1.11.0a0+bfe5ad2",
                    "com.nvidia.tensorrt.version": "8.2.2.1+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.01",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-03-08T17:47:03.035074777-08:00",
            "history": [
                {
                    "created": "2022-01-07T02:25:29.849530323Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:122ad323412c2e70b3138d8eb62648c4692989de91be1ffb6b4bf086c8311b62 in / "
                },
                {
                    "created": "2022-01-07T02:25:30.389665393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:09:47.920681025Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:10:13.942599903Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:13.942599903Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:13.942599903Z",
                    "created_by": "ENV CUDA_VERSION=11.6.0.020 CUDA_DRIVER_VERSION=510.39.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:13.942599903Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.0.020 CUDA_DRIVER_VERSION=510.39.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.0.020 CUDA_DRIVER_VERSION=510.39.01 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:10:14.674156568Z",
                    "created_by": "ENV NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.2.1+cuda11.4.2.006 TRTOSS_VERSION=22.01 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.6.0.020 CUDA_DRIVER_VERSION=510.39.01 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.2.1+cuda11.4.2.006 TRTOSS_VERSION=22.01 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.11.4 com.nvidia.cublas.version=11.8.1.74 com.nvidia.cufft.version=10.7.0.55 com.nvidia.curand.version=10.2.9.55 com.nvidia.cusparse.version=11.7.1.55 com.nvidia.cusolver.version=11.3.2.55 com.nvidia.cutensor.version=1.4.0.6 com.nvidia.npp.version=11.6.0.55 com.nvidia.nvjpeg.version=11.6.0.55 com.nvidia.cudnn.version=8.3.2.44+cuda11.5 com.nvidia.tensorrt.version=8.2.2.1+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.01 com.nvidia.nsightsystems.version=2021.5.2.53 com.nvidia.nsightcompute.version=2022.1.0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:23.436731219Z",
                    "created_by": "ENV DALI_VERSION=1.9.0 DALI_BUILD=3647997 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:24.144893784Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:13:24.63391459Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.6.0.020 CUDA_DRIVER_VERSION=510.39.01 NCCL_VERSION=2.11.4 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.0.55 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.1.55 CUSOLVER_VERSION=11.3.2.55 CUTENSOR_VERSION=1.4.0.6 NPP_VERSION=11.6.0.55 NVJPEG_VERSION=11.6.0.55 CUDNN_VERSION=8.3.2.44+cuda11.5 TRT_VERSION=8.2.2.1+cuda11.4.2.006 TRTOSS_VERSION=22.01 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.0.12 DALI_VERSION=1.9.0 DALI_BUILD=3647997 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:13:24.63391459Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:25.358672821Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:13:25.358672821Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:25.358672821Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:13:26.277918227Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:31:04.34139397Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.0172994Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:31:09.355229119Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:35:45.750534966Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T05:35:45.750534966Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T05:35:45.750534966Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.11.0-rc1 OPENMPI_VERSION=4.1.1 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 PYTORCH_VERSION=1.11.0a0+bfe5ad2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.11.0a0+bfe5ad2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T06:15:55.958982142Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:22:07.94046202Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T06:22:07.94046202Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T06:22:13.169556019Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T06:22:15.665666804Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T06:22:16.448652067Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c CONDA_VERSION=$(conda --version | grep -oE \"[0-9]+\\.[0-9]+\\.[0-9]+$\") &&     rm -r /opt/conda/pkgs/conda-${CONDA_VERSION}*/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T06:22:16.448652067Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:33:08.329061059Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:37:12.326313626Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:38:20.394988169Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:38:31.367035319Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:38:32.572713056Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:38:32.572713056Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:42:18.274411281Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:42:19.418519378Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:42:19.418519378Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:42:19.418519378Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:42:19.418519378Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:42:19.418519378Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:26.446343397Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:59:26.446343397Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:32.211028153Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:59:45.008900423Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T20:59:45.008900423Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:45.008900423Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:45.008900423Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:45.008900423Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T20:59:48.275028675Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     BUILD_CAFFE2=1     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:12:57.751898657Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:12:57.751898657Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T22:13:39.110549487Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:14:15.926849184Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:14:16.488934675Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" . )  && ( cd text && pip install --no-cache-dir --disable-pip-version-check . )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:55:12.772190019Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/8.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:57:30.412212184Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/xgboost-*.whl  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:57:30.412212184Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T22:57:30.412212184Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T22:58:48.227931072Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:58:49.69460219Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:58:50.307918123Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:58:51.58822475Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:58:53.19454784Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:59:01.445338602Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T22:59:01.445338602Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T22:59:51.003280983Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.01 PYTORCH_BUILD_VERSION=1.11.0a0+bfe5ad2 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T23:00:11.972431906Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T23:00:11.972431906Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:00:15.744621572Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T23:00:15.744621572Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:00:15.744621572Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:05:54.817607714Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=31424411",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "LABEL com.nvidia.build.id=31424411",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-25T23:05:57.015412817Z",
                    "created_by": "LABEL com.nvidia.build.ref=ed0a15aa420fe4d708dd9b5574fdb1af65824cab",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T17:38:55.708635104-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T17:38:55.708635104-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:38:56.828913796-08:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:38:56.834492483-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:42:03.181207758-08:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.11 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:42:03.186676146-08:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:44:26.211669465-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:44:26.217684937-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:44:26.223727151-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:46:28.667360889-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:46:28.710135118-08:00",
                    "created_by": "COPY nemo_text_processing /tmp/nemo/nemo_text_processing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:46:36.867666555-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/nemo_text_processing/setup.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:46:36.867666555-08:00",
                    "created_by": "ARG NEMO_VERSION=1.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T17:46:37.206566037-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.7.1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:01.989175286-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.7.1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.466678399-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.7.1 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.472167898-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.486605674-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.509271285-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.530207126-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:02.55355623-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-08T17:47:03.035074777-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.7.1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0eba131dffd015134cb310c284b776c1e44d330146cd2f0e30c4e464d0b76d24",
                    "sha256:dafa6d18613765f73be178cbcf7fae1b14333a672a993ff07501c12d9c2c7a9a",
                    "sha256:46481fe283a83cfda9f5535ac674c7958331804b8f414b7e45135d6f1f626ff7",
                    "sha256:25e565306eb392764280f4621cfc15dc8c9391eb753faf0e3e0ab29ff9338710",
                    "sha256:443046eeb9c378d767311fbf72c9c9af6c4295bbbf2a872603092d6c771c85ee",
                    "sha256:6f8e6ee487f72f0d137ce45e8a3c6231b6783f69c074cc7f167deffa84272c06",
                    "sha256:2dc8262b816c2df5a30f03543c267943f2872c360528a5167a19679df8f284bd",
                    "sha256:f7ff94bde60b93db9bf1bfb8fc0484f3dbc6a4b80d9e245eb23572ce96f07b7b",
                    "sha256:96ebee343cb8ef6c8843b95d717b689790713e8e9601c12ba1cce416d75a8dfb",
                    "sha256:a4b8e0bb437cffcfa31fdd25435a4c588697fb9f6fa4de8a413e03c72bc90b0a",
                    "sha256:b03019722fae6889443ab592545e07d6de10dfbbc416307ecbfc266fd0e45119",
                    "sha256:3d1f6fef3119e400e25bd5aab2d99159dd8c16465f6dbc8e2b52fae7edc58a82",
                    "sha256:65fbdcb16d7faac9675bd8c3cfd866213850208685bfceee1c4c901851924c14",
                    "sha256:149901bfe93f26aa89c95f0e4bb9d14d61a1e2c79fa7a8e4eeec23d9d5509212",
                    "sha256:66948622429eb54a0a7b865f156672542356742389b30ac1d6353c14e07fe405",
                    "sha256:41dc653ed8eca7ecfd8852abe75b0f84eac58f5dab78868b0029c3c07827bb8e",
                    "sha256:2f4efdbb353aedbc4c1488c970494791d5497068a950cb151c9df3f2c36279f3",
                    "sha256:1388ccd5efc1bd5c33508352811d8ae77b750f71e310cff846e98254570c8b8f",
                    "sha256:c0b3943c95ab2bf2cd757080dd842ec73fcecdf24bb6d7269e23d888651ef486",
                    "sha256:7d6db50101afa20c4179b0d320f0e318efb6bffc04aeb1f76974a039088e5319",
                    "sha256:619cbac32cd4a5da92a18fe5b781a1c4b31d63ec30c5ae1fd34700105f711573",
                    "sha256:4a75f7038af753580aa2fbfb57ba7ad2055b29c4f5156a245adbfaa033ca4121",
                    "sha256:cc651f6f26e058572c1950c5baa40cd4aa1682b390a391314b55b422c4b6cc6f",
                    "sha256:e5312b9722aa1cf0e5efb3baf677eca7f4d00dc5d37631c0fef5744f38bd7e25",
                    "sha256:17ad9d06345382d98d58205de9c8a52e62875b43186f61f87c7921e286f8182b",
                    "sha256:51421238822affea5e91474f4b10da4076d0ee834538dcf108e9c3ee822bec07",
                    "sha256:5ec46b442893bb8afc8663142bbc30eeca00c8257fe928776bd71e3f14839cef",
                    "sha256:cdcf1958ec065bea7c046ce34c1f7c8103cf60845cc5338aecfad4f3917b6491",
                    "sha256:70df0d197d1bf4b5cafb6068960b6c67760a9d010d1d87a0af5820c8d89e7a4f",
                    "sha256:caf59a27c09bb64c6d71aaef4c06dd341a60d3b740a504dce618c3eeba08947e",
                    "sha256:cadb7b7d3bbbe800a2010772093568125ce7fa2f1b66d91ad7be10084c615319",
                    "sha256:eb402bfc23435547aae960a124b3ab1a058cfcc48df6f5b63e13a2474f92b045",
                    "sha256:180864dce3f2909c8d57b57f29c6b55538bdd2cfd158eb693f129e57fb6c4d1f",
                    "sha256:683555d897c73cc16aef157919a61b44bd3fa72e152b19a9a4dc8f7172c28e83",
                    "sha256:299507cb00e22f7f6a3f632c6367355e368e511fc7f07655b427c512e55d1aef",
                    "sha256:3a615b9318c97a70c9c77cca6562e67a68481df8f5b5d1c8395e2cd87a7c54be",
                    "sha256:754abf1732d60d321877d5949f38c1abe73c1f8f8cc3704067c2cda6fa7fbd24",
                    "sha256:e30a63f618cbcab9efd62cd3b68bbf70e959af6b90a6d9897ecaf98516899c1e",
                    "sha256:790cf5156ae167ad29dbc304829d4c23ee945623ab4b59fe29db3748e39a18cb",
                    "sha256:bf3db32f4da0fbb01318c712cfd52c515dfd7387f14110741252c921fb30dd9f",
                    "sha256:b7e60c5704d73713e8e63b8a1d9996a07a02f037d56d49e8e3a4bdc5269fce21",
                    "sha256:5f324319e5e1805651958d0cd8997a0ea1ddc220d0c643f902c49e07b9d2c03a",
                    "sha256:8525021e4abf0bdfc87b6ba9af71bb932febb6f8e8048b0a3ad25107c4193516",
                    "sha256:833e36a1b2bdad029bf22eb36e62c235d47b70c30bc891a7c10c9db1fc22a5dc",
                    "sha256:a0b7f34c492e0d4cc7ae39bd32963e190f3d94d67a3aa56bbc01b78b8443289e",
                    "sha256:26f5016eb3bbb8876e251a2213551e5d97f861f9a4c141fdb6b7901bd6b297c3",
                    "sha256:d012fca99e76bac4c241ab3fe47f1dad288808ba056de3f3d9b60b3dade2f0f6",
                    "sha256:cbf5a0b012f25efadf099f3c370768c7772e54ad77cfc60bb67710fa8a7ea2f0",
                    "sha256:2b80c08c3b59c11cca64e556bb5d9f0f3e8ab521ff6db866102577d2b9d969b8",
                    "sha256:65ced8732cecf96087d80d22e3652ec259fa17745c4689803f927b073e4f3a69",
                    "sha256:4912f48e6a289015f671ca9856eaf687c1978c3336a29847ec6516eafb869dbe",
                    "sha256:5a2bda47266bd2fc45acc4f939b3c773c1cc1060c62d097305f705d934ccada7",
                    "sha256:7c6f35c696dd8b4ef3d62a84f44ab0a342e4cac1715d7423eca5a20d176c41e5",
                    "sha256:f6915fec8048548c96eef6d36ca0ce8f616c2721b2263be16bb86a604a9dbe96",
                    "sha256:80ac1fb254594fa0351c0fd4cc265053fdf833ec0caf3035e46a08c08fd3bbc8",
                    "sha256:39868716027fb2b0941b5f2af3e5f62c91408d487d538d954f71b2a467a03827",
                    "sha256:cbbaa33379ef70e33e6d3b402582e46feadb2d75caac7162b5e13fac62192f0e",
                    "sha256:1b9d7596dd6d3f2f0f3fd8db3af436782d6d3d325f1eb00a44986e0ec1831f2a",
                    "sha256:744a60d7ba47d0414a77d4b3367f00c544cceb50f3791f0f9dd502cac6cb3f4b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:349c8f2a1b689e0e66bf1f1288a3a547530a80a7e04f9ffddfbec58c70d0574b",
                    "sha256:e706417596509cfa7c3b370ea10399a1035efe4d3d84fcf642d8fb27d2862e6e",
                    "sha256:c438f87721b3548bf056e2057728290f62819b77a678ed991b398425d6319070",
                    "sha256:3f582e8af6abeee0fc3452b68dda3203fec8000a157911a2228692df59212bc9",
                    "sha256:c7cb45360f51d1ea530924a6e08a55f0c3b4bdf1c498d91913d169626bdedd9b",
                    "sha256:024b9eb16765b13f6cd4359f77030e2e9af429f635a64b5ea95f4a69123f42e5"
                ]
            }
        },
        "22.03": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.6.1.005",
                    "CUDA_DRIVER_VERSION=510.47.03",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.9",
                    "CUBLAS_VERSION=11.8.1.74",
                    "CUFFT_VERSION=10.7.1.112",
                    "CURAND_VERSION=10.2.9.55",
                    "CUSPARSE_VERSION=11.7.2.112",
                    "CUSOLVER_VERSION=11.3.3.112",
                    "CUTENSOR_VERSION=1.5.0.1",
                    "NPP_VERSION=11.6.2.112",
                    "NVJPEG_VERSION=11.6.1.112",
                    "CUDNN_VERSION=8.3.3.40+cuda11.5",
                    "TRT_VERSION=8.2.3.0+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.03",
                    "NSIGHT_SYSTEMS_VERSION=2021.5.2.53",
                    "NSIGHT_COMPUTE_VERSION=2022.1.1.2",
                    "DALI_VERSION=1.11.1",
                    "DALI_BUILD=4069477",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef",
                    "PYTORCH_VERSION=1.12.0a0+2c916ef",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.03",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=33569136",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "33569136",
                    "com.nvidia.build.ref": "e8f85235e9f68dd2395b328c55e571cbf6e1ab53",
                    "com.nvidia.cublas.version": "11.8.1.74",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.3.3.40+cuda11.5",
                    "com.nvidia.cufft.version": "10.7.1.112",
                    "com.nvidia.curand.version": "10.2.9.55",
                    "com.nvidia.cusolver.version": "11.3.3.112",
                    "com.nvidia.cusparse.version": "11.7.2.112",
                    "com.nvidia.cutensor.version": "1.5.0.1",
                    "com.nvidia.nccl.version": "2.12.9",
                    "com.nvidia.npp.version": "11.6.2.112",
                    "com.nvidia.nsightcompute.version": "2022.1.1.2",
                    "com.nvidia.nsightsystems.version": "2021.5.2.53",
                    "com.nvidia.nvjpeg.version": "11.6.1.112",
                    "com.nvidia.pytorch.version": "1.12.0a0+2c916ef",
                    "com.nvidia.tensorrt.version": "8.2.3.0+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.03",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-04-27T16:21:53.119112468-07:00",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T16:29:42.487479479Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:00:18.497998438Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.497998438Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.497998438Z",
                    "created_by": "ENV CUDA_VERSION=11.6.1.005 CUDA_DRIVER_VERSION=510.47.03 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.497998438Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.1.005 CUDA_DRIVER_VERSION=510.47.03 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.1.005 CUDA_DRIVER_VERSION=510.47.03 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:00:18.838406056Z",
                    "created_by": "ENV NCCL_VERSION=2.12.9 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.1.112 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.2.112 CUSOLVER_VERSION=11.3.3.112 CUTENSOR_VERSION=1.5.0.1 NPP_VERSION=11.6.2.112 NVJPEG_VERSION=11.6.1.112 CUDNN_VERSION=8.3.3.40+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.03 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.6.1.005 CUDA_DRIVER_VERSION=510.47.03 NCCL_VERSION=2.12.9 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.1.112 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.2.112 CUSOLVER_VERSION=11.3.3.112 CUTENSOR_VERSION=1.5.0.1 NPP_VERSION=11.6.2.112 NVJPEG_VERSION=11.6.1.112 CUDNN_VERSION=8.3.3.40+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.03 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.1.2 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.9 com.nvidia.cublas.version=11.8.1.74 com.nvidia.cufft.version=10.7.1.112 com.nvidia.curand.version=10.2.9.55 com.nvidia.cusparse.version=11.7.2.112 com.nvidia.cusolver.version=11.3.3.112 com.nvidia.cutensor.version=1.5.0.1 com.nvidia.npp.version=11.6.2.112 com.nvidia.nvjpeg.version=11.6.1.112 com.nvidia.cudnn.version=8.3.3.40+cuda11.5 com.nvidia.tensorrt.version=8.2.3.0+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.03 com.nvidia.nsightsystems.version=2021.5.2.53 com.nvidia.nsightcompute.version=2022.1.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:02.761666229Z",
                    "created_by": "ENV DALI_VERSION=1.11.1 DALI_BUILD=4069477 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:03.194364863Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:03:03.494148286Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.6.1.005 CUDA_DRIVER_VERSION=510.47.03 NCCL_VERSION=2.12.9 CUBLAS_VERSION=11.8.1.74 CUFFT_VERSION=10.7.1.112 CURAND_VERSION=10.2.9.55 CUSPARSE_VERSION=11.7.2.112 CUSOLVER_VERSION=11.3.3.112 CUTENSOR_VERSION=1.5.0.1 NPP_VERSION=11.6.2.112 NVJPEG_VERSION=11.6.1.112 CUDNN_VERSION=8.3.3.40+cuda11.5 TRT_VERSION=8.2.3.0+cuda11.4.2.006 TRTOSS_VERSION=22.03 NSIGHT_SYSTEMS_VERSION=2021.5.2.53 NSIGHT_COMPUTE_VERSION=2022.1.1.2 DALI_VERSION=1.11.1 DALI_BUILD=4069477 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:03:03.494148286Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:04.035852379Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:03:04.035852379Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:04.035852379Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:03:04.606840063Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:15:22.284773468Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.639502042Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:15:24.972698332Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:20:03.969477381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-21T22:20:03.969477381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-21T22:20:04.283388125Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef PYTORCH_VERSION=1.12.0a0+2c916ef PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.03",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.12.0a0+2c916ef",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:15:57.238369924Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:22:00.453426785Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:22:00.453426785Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:22:05.537503283Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:22:08.118795288Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:22:08.118795288Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:22:32.17808268Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:26:25.241148681Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:27:21.597135496Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:27:32.383934125Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:27:33.402693425Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:27:33.402693425Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:31:33.827538876Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:31:34.948512299Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:31:34.948512299Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:31:34.948512299Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:31:34.948512299Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:31:34.948512299Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:48:17.634519394Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:48:24.355356872Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:48:36.20842823Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir librosa # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:48:39.4747503Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T16:48:39.4747503Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:48:39.4747503Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:48:39.4747503Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T16:48:39.4747503Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T17:50:40.828438645Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T17:51:48.388902337Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T17:51:48.388902337Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T17:52:24.685536203Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T17:52:25.564744204Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:34:38.711913825Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--permutation_search\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:35:31.382564162Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:36:46.781357081Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/xgboost-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:36:46.781357081Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T18:36:46.781357081Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T18:36:48.439055972Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:36:49.112817652Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:36:50.009747931Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:36:52.594739329Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:37:01.072279153Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:37:47.619950808Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:37:47.619950808Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T18:38:10.531793507Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.03 PYTORCH_BUILD_VERSION=1.12.0a0+2c916ef TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:38:15.634008926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T18:38:15.634008926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:56.13214855Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T19:02:56.13214855Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:56.13214855Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:57.241025298Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=33569136",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "LABEL com.nvidia.build.id=33569136",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-22T19:02:57.845667275Z",
                    "created_by": "LABEL com.nvidia.build.ref=e8f85235e9f68dd2395b328c55e571cbf6e1ab53",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-27T16:02:50.197913566-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-27T16:02:50.197913566-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:02:51.38763989-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:02:51.392918737-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:05:14.515198535-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.11 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:05:14.521616891-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:07:49.471376881-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:07:49.476668129-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:07:49.483700298-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:09:56.770248363-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:09:56.786360249-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:27.152844341-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh; exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:27.152844341-07:00",
                    "created_by": "ARG NEMO_VERSION=1.8.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-27T16:21:27.5232361-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.8.2 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.326317755-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.8.2 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.331679262-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.345332197-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.371411955-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.39574388-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.433031338-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:52.752109185-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.8.2 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-27T16:21:53.119112468-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.8.2 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:01e996931197162c4d65bfc6867f243df01e5f70f877c1c9beccd6978297e643",
                    "sha256:2ff0ade8d3c97b175cf6be4658d30fc655fa86b0198224c8f5b18e39cdd97e5f",
                    "sha256:fec6965e7a6b67b61a1337a169d91dcbb93ebeee67bb5d38a241f7fa4fa048ea",
                    "sha256:83cdade3c9b5e8313ab6d74bcfcc0492a4ae4b9fbf3d09a35ab52abaaf492d9d",
                    "sha256:a060c5cefec7f091c555e77e46d0130a49dfc39023365e216c154613603f456a",
                    "sha256:2df8c0a32afe2d088aafe59dc368643b14ddd15f9673cac769548c28ec384e04",
                    "sha256:899455397741dac157e85ecf485ec909e52ce1ada5d37853c93544c13e7f5f81",
                    "sha256:2f175b794573ab5e137bd2f5f52a2c1716bb5287ca8755ea8ad166fa9b1ee898",
                    "sha256:85f49f4e6923e73ae6c3ab79d4b7f1f8156141952f3f69535ca49f6a543f9e24",
                    "sha256:6a1014d46250ad84e998df518cecf334cf4dc3255d8da2107f5b14adb0137638",
                    "sha256:b9dfd77f5b0a234bacf98a6f9b5dd833dae4bd2acda78ee715a41e057669316d",
                    "sha256:850236713495eb5c9272fff0a67a72d80954d308cf530db88f5d238810b77530",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6fb2a344ac89c7580001056daa9aaee6e145a046b503c35a9a3b5c04039ef30b",
                    "sha256:f89ef356505ebbde71244b0328031d581f807e9649fbc16ae9bad8c0b5044070",
                    "sha256:abf81ae6f4c8f107d399013c0f18ec8bd260f7b3fb25f19406102245bc0f01fe",
                    "sha256:852255d743c1a984be0c79a398f85c6f1c65c9ecd09ccb19ca4dd028ec34a84c",
                    "sha256:8fb729c89bb442004e39e13ee49ea0389bee5d241cb5e950af6160bcfd241e61",
                    "sha256:5ec341fc8fe7788009c830779035a302135c6df37450d0b5bd7c3fee12061d48",
                    "sha256:f7655918bfe60f5e7d7e95fd5887b490a251c72cf7fc070ca3bf081aee1d9b50",
                    "sha256:489f24d7d38164360790608a0da985125b4d69f41d63245974a9a904fc939c1e",
                    "sha256:1ee80d85e1cfefe604d95e7bcb45bf8cf0a117536f298cbde50da54329e679d7",
                    "sha256:fc3209a87194def474449b37b7ef0dae252e2452ecb5a5ffc2d81e12216005bf",
                    "sha256:5342e89df8e3a76605e7fe8c2a5db18fa28f757d0ab0c2fdcda0f42e9b6373c2",
                    "sha256:6ba71d233b759f8399a3a8a47dc829198bee3ad8eb3502c3069cbd9b53a48453",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3b1792efdad9259661dfc30826f29abf456fa8b5ddac96bda338f282f5e115e1",
                    "sha256:3b720402b8abae528e3d207a876fed9f2c5e9de4e5f2e6f8bf46d0257710041e",
                    "sha256:e1aa1f9ee97ed771d635717edb0ff12757ce266966f399759e68d2d1f0d2fdab",
                    "sha256:7a7051e759c4f2325854116fc9b21dcfaa58f9b4aebe743ee8d78fb758c39c88",
                    "sha256:77a776e8014b011fc8858f05204f698998cc030966d13ae9f485a5f426040259",
                    "sha256:7821737d952f1296d580cb17965c84a2be8264feb3be91c967b74445c98a937b",
                    "sha256:14e6ddddf256545200fb3a2f8e9881624b2774359d1662b6ccdcbb2348ad364a",
                    "sha256:65c14c7eaf47324e28a04724c252becd2088583d39559a2c5dc946fcf296ee55",
                    "sha256:40f364efa84f1962030597fe2c218819b6615086fd65c653e18a53fb88c297e6",
                    "sha256:8456d4967bfe7d1a3f1c5812040fca36a0c07823425c278007993e552e0a9525",
                    "sha256:e94fa5c9c51822fa5b28c320c14ce8ee9942c59e954662a1e073acc782b9aea9",
                    "sha256:ea54ed1c9d39b17fabdf13617bfa0d94fa3a1691ef4a3847533f2e404e6d21fd",
                    "sha256:b92c6f3cf8ba79699a2607fc6010d0cc0599da479dce176332b6f03e1f2225f8",
                    "sha256:c68289e5466ac392537384b1d1994716e30bfe200558434067ff00c758d64b07",
                    "sha256:4995463ed504e50c7094525768f55bcf4c1b77e3fe720e2a350a514ad22bf904",
                    "sha256:80df8233699ef1706496708ee09b4f0e3681119c63cec14feac5e4b0e20f3959",
                    "sha256:0f010943c2be8f878e5165b682577d20ccdcefe2e5e52f873416e79648972b45",
                    "sha256:6d24369f9726e691bb2cae68f65dc604996d1d72194fb5e7ffbac365c8fa27cd",
                    "sha256:fe48bfeac91d74749aa282e68bdb462f53eb1414812c1e684a5075470c99cadf",
                    "sha256:9c7a2e08fe4cab75c768008df33cd4a1f5cb925bff73738cb3adc25f71a12220",
                    "sha256:c64283ce03834421f63ebf3b6314204c636b1a5793261a3bd42f04067664c947",
                    "sha256:763c50417468477ad10a9cc416564d007028d7b9be5c2c108cca48f5a10e04e3",
                    "sha256:53a6089623cc7f8bcc7667e6146d12575a206e6dfca0acd1e67d3a38e14ec990",
                    "sha256:7be2bd353df17ea4af7da06f7e89050cdd5bb5d22a1d9e25bf53c92946fd0c14",
                    "sha256:5c7abccbacf18536141180e081496cc0486a45a3684695679a2af8af23f7377d",
                    "sha256:dac79e65b21c3ce389b2e181a7d9de58fca5f78505678e8ac77d386cd5ff26a1",
                    "sha256:dac82f39ed1ff572133b646cb713653427a8929e51661ee33de603ad449b4655",
                    "sha256:4fa7059b09c98e257f10d9279b18f73024630054f6c8a3f0a1a2672f8746fe8f",
                    "sha256:4f33a2f909489869d0ce578af00f5caefbced77acfe3543f86c3d5e38d98986a",
                    "sha256:580d854dae47598cb4c04a6314fb77967b9420ce1181bfad8231e7c1aa7befc8",
                    "sha256:c37bd6649c83f8000dd41dabc96912e2c4341e2986fd06391aa4c3ef1f62b9ab",
                    "sha256:9b7bda2bbf29149737d78e725259ca80ac2a54c341eedecb0434e9dac88a3a4b",
                    "sha256:0410ba376ba48de2fb67446a2798d6e241361668224a57195742b4d54d764cf5",
                    "sha256:559505acbf4b15ab1587b8723ee5f431c9aab684947e28af4058bfe84a00ab33",
                    "sha256:9c3ccfc5a257b3259c0b44af73049529863a80357b12bcfdcdcdd99a93d43ef6",
                    "sha256:eb323f02e3e05d5f8141202c5d77a8fe2788cfa45366866119d38f2b5c590b07",
                    "sha256:084511f73944caad7ed82437013dfcd94a90175c1426aac5ec838b753cb491a9",
                    "sha256:d3ed95551b109b2d9064470fcded8043cc95ffccb7d78867d05cac2c159e1fee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a03069f1af4827d6c1055606bcad52b56a493450837493f749eb76f1079608d7"
                ]
            }
        },
        "22.04": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.6.2.010",
                    "CUDA_DRIVER_VERSION=510.47.03",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.10",
                    "CUBLAS_VERSION=11.9.3.115",
                    "CUFFT_VERSION=10.7.2.124",
                    "CURAND_VERSION=10.2.9.124",
                    "CUSPARSE_VERSION=11.7.2.124",
                    "CUSOLVER_VERSION=11.3.4.124",
                    "CUTENSOR_VERSION=1.5.0.3",
                    "NPP_VERSION=11.6.3.124",
                    "NVJPEG_VERSION=11.6.2.124",
                    "CUDNN_VERSION=8.4.0.27",
                    "TRT_VERSION=8.2.4.2+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.04",
                    "NSIGHT_SYSTEMS_VERSION=2022.2.1.31",
                    "NSIGHT_COMPUTE_VERSION=2022.1.1.2",
                    "DALI_VERSION=1.12.0",
                    "DALI_BUILD=4144197",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6",
                    "PYTORCH_VERSION=1.12.0a0+bd13bc6",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.04",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=36527063",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "36527063",
                    "com.nvidia.build.ref": "c80c372d5366ad38038bbca10b6e31589e76e5ea",
                    "com.nvidia.cublas.version": "11.9.3.115",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.4.0.27",
                    "com.nvidia.cufft.version": "10.7.2.124",
                    "com.nvidia.curand.version": "10.2.9.124",
                    "com.nvidia.cusolver.version": "11.3.4.124",
                    "com.nvidia.cusparse.version": "11.7.2.124",
                    "com.nvidia.cutensor.version": "1.5.0.3",
                    "com.nvidia.nccl.version": "2.12.10",
                    "com.nvidia.npp.version": "11.6.3.124",
                    "com.nvidia.nsightcompute.version": "2022.1.1.2",
                    "com.nvidia.nsightsystems.version": "2022.2.1.31",
                    "com.nvidia.nvjpeg.version": "11.6.2.124",
                    "com.nvidia.pytorch.version": "1.12.0a0+bd13bc6",
                    "com.nvidia.tensorrt.version": "8.2.4.2+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.04",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-06-06T10:46:20.941760201-07:00",
            "history": [
                {
                    "created": "2022-04-05T22:20:50.696744314Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b83df51ab7caf8a4dc35f730f5a18a59403300c59eecae4cf5779cba0f6fda6e in / "
                },
                {
                    "created": "2022-04-05T22:20:51.04675426Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:31:59.01861072Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:32:09.260950955Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.260950955Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.260950955Z",
                    "created_by": "ENV CUDA_VERSION=11.6.2.010 CUDA_DRIVER_VERSION=510.47.03 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.260950955Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.2.010 CUDA_DRIVER_VERSION=510.47.03 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.6.2.010 CUDA_DRIVER_VERSION=510.47.03 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:32:09.597362213Z",
                    "created_by": "ENV NCCL_VERSION=2.12.10 CUBLAS_VERSION=11.9.3.115 CUFFT_VERSION=10.7.2.124 CURAND_VERSION=10.2.9.124 CUSPARSE_VERSION=11.7.2.124 CUSOLVER_VERSION=11.3.4.124 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.6.3.124 NVJPEG_VERSION=11.6.2.124 CUDNN_VERSION=8.4.0.27 TRT_VERSION=8.2.4.2+cuda11.4.2.006 TRTOSS_VERSION=22.04 NSIGHT_SYSTEMS_VERSION=2022.2.1.31 NSIGHT_COMPUTE_VERSION=2022.1.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.6.2.010 CUDA_DRIVER_VERSION=510.47.03 NCCL_VERSION=2.12.10 CUBLAS_VERSION=11.9.3.115 CUFFT_VERSION=10.7.2.124 CURAND_VERSION=10.2.9.124 CUSPARSE_VERSION=11.7.2.124 CUSOLVER_VERSION=11.3.4.124 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.6.3.124 NVJPEG_VERSION=11.6.2.124 CUDNN_VERSION=8.4.0.27 TRT_VERSION=8.2.4.2+cuda11.4.2.006 TRTOSS_VERSION=22.04 NSIGHT_SYSTEMS_VERSION=2022.2.1.31 NSIGHT_COMPUTE_VERSION=2022.1.1.2 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.10 com.nvidia.cublas.version=11.9.3.115 com.nvidia.cufft.version=10.7.2.124 com.nvidia.curand.version=10.2.9.124 com.nvidia.cusparse.version=11.7.2.124 com.nvidia.cusolver.version=11.3.4.124 com.nvidia.cutensor.version=1.5.0.3 com.nvidia.npp.version=11.6.3.124 com.nvidia.nvjpeg.version=11.6.2.124 com.nvidia.cudnn.version=8.4.0.27 com.nvidia.tensorrt.version=8.2.4.2+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.04 com.nvidia.nsightsystems.version=2022.2.1.31 com.nvidia.nsightcompute.version=2022.1.1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.088454476Z",
                    "created_by": "ENV DALI_VERSION=1.12.0 DALI_BUILD=4144197 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:26.480790191Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:34:26.738806198Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.6.2.010 CUDA_DRIVER_VERSION=510.47.03 NCCL_VERSION=2.12.10 CUBLAS_VERSION=11.9.3.115 CUFFT_VERSION=10.7.2.124 CURAND_VERSION=10.2.9.124 CUSPARSE_VERSION=11.7.2.124 CUSOLVER_VERSION=11.3.4.124 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.6.3.124 NVJPEG_VERSION=11.6.2.124 CUDNN_VERSION=8.4.0.27 TRT_VERSION=8.2.4.2+cuda11.4.2.006 TRTOSS_VERSION=22.04 NSIGHT_SYSTEMS_VERSION=2022.2.1.31 NSIGHT_COMPUTE_VERSION=2022.1.1.2 DALI_VERSION=1.12.0 DALI_BUILD=4144197 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:34:26.738806198Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:27.110507476Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:34:27.110507476Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:27.110507476Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:34:27.478407875Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:49:00.850191705Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.077509363Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:49:03.448682489Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:52:34.281713083Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-11T18:52:34.281713083Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-11T18:52:34.554443784Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 PYTORCH_VERSION=1.12.0a0+bd13bc6 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.04",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.12.0a0+bd13bc6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:07:08.582986993Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:13:30.902994157Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake==3.22.3 conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:13:30.902994157Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:13:36.030005967Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:13:38.518978535Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:13:38.518978535Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:14:01.974565603Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:18:55.352425819Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:19:56.90647194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:20:07.726850694Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:20:08.846396706Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:20:08.846396706Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:24:47.159153323Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:24:48.032318842Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:24:48.032318842Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:24:48.032318842Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:24:48.032318842Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:24:48.032318842Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:41:27.815297618Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:41:33.755390884Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:41:46.259112367Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2,<0.9.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T00:41:49.494017331Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T01:43:20.553118747Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T01:43:45.564018802Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T01:43:45.564018802Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T01:44:12.648424293Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T01:44:13.335406511Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T01:44:13.823134202Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c patch -p1 --directory apex/apex/contrib/csrc/cudnn-frontend < apex_cudnn_frontend.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:35:57.133554929Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--peer_memory\" --global-option=\"--nccl_p2p\"  . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:36:39.155473985Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:01.561489813Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/xgboost-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:01.561489813Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T02:38:01.561489813Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T02:38:02.979674761Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:03.715060893Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:04.754314628Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:06.279048876Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:14.852322851Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:58.237562454Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)deb.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:38:58.237562454Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T02:39:17.311504857Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.04 PYTORCH_BUILD_VERSION=1.12.0a0+bd13bc6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:39:21.354027273Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T02:39:21.354027273Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:05.193704013Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T03:02:05.193704013Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:05.193704013Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:05.967112889Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=36527063",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "LABEL com.nvidia.build.id=36527063",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-17T03:02:06.660036713Z",
                    "created_by": "LABEL com.nvidia.build.ref=c80c372d5366ad38038bbca10b6e31589e76e5ea",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-06T10:26:55.986736898-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-06T10:26:55.986736898-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:26:57.16906705-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:26:57.175742184-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:30:29.016633891-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.11 https://github.com/pytorch/audio.git &&     cd audio &&     git submodule update --init --recursive &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:30:29.02277603-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:33:07.317725224-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:33:07.34464105-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:33:07.351962384-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:34:57.287551213-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:34:57.307076743-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:45:55.327765423-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:45:55.327765423-07:00",
                    "created_by": "ARG NEMO_VERSION=1.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-06T10:45:55.676557478-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.9.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.085263196-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.9.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.091796503-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.109141094-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.134279944-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.155947218-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.186343455-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.538141352-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.9.0 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-06T10:46:20.941760201-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.9.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c5ec52c98b3193052e15d783aca2bef10d8d829fa0d58fedfede511920b8f997",
                    "sha256:b721794c6807bf458dab0eb378f247b3c413e60305358040d0209318f3eda80d",
                    "sha256:b7d529f6243ffc5ffb9d742721badadb9360b1f3975fa16488dbf3f3a70383fa",
                    "sha256:c9d511e9e4b0f10c14c0c51b1aa2e96e5942998c9add6d6167f43312af84b910",
                    "sha256:897d845cfdc79cafc870f065aca199eade6f2099ab0b70d060d5cb76e8127597",
                    "sha256:b7c697d89b91783bce4611fb375c4e6e15e28ec91d4432bb3be7afa80531df02",
                    "sha256:f3007439db8b76a1c4d7f5f8498169a60c3964529aa2f3d8aaef73d3fa1b6293",
                    "sha256:e73731e8df5d13229609e3382fbb48d4d07234e4904e2a06b7a526df06542246",
                    "sha256:e0b87c649be0164127ed0758631868ae782ae517deeb079c24b8a107ffa5f199",
                    "sha256:d43d930bfd8d7c08c01e90f3ce163fb4a2917bb275a979d842ef35d296f7a1c1",
                    "sha256:185c6e77d37e52d39ef12c6011699bec465ad903ff0fc59a0f1e8bc73c9b2354",
                    "sha256:b927936ddcc0fd5761350cec63f1a60cfbd27268cb62c9aa7fdd260b1906614a",
                    "sha256:1fdf8d1c7c2b1c03433ee58f610fdd6a9d359b0e373ecd97ea737d00677d9737",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d4fbf5c4dcd80c6ac4487090fd4796d5f8d4ea3db80b7f0299b76d092735b2f",
                    "sha256:30b46ae71ba03738266de4508a5463a079c3d707c975c8415b17eb65b9b2693f",
                    "sha256:650d4b75c7de8a7d6c471970d0bca17d191327821b7600067efb0dcd97b4510f",
                    "sha256:1eb483e5f7d31f87bc84dc49e02945a2388fa030b54b8bc2398e4a1cb0b5e513",
                    "sha256:90aaacce038a4f7a0fbe3716d5691929ea35ee41252ba68180fdad27695f67a8",
                    "sha256:7b533c2bf84dedc5e29546809f3b6f32072fb0dd8593e1470812ba4b178c6529",
                    "sha256:a77c48fbae9ed02e40db71a2f8f99141e04a2c04dea8fc55babc0f3efb1520c0",
                    "sha256:48eaa2e968c71c9df13f7f87a38a67fbca9bede4349e700b0639bc06d0be8ffb",
                    "sha256:74255a555afac5d4fd3820d14bd923169d647c8c3d7657d3853f022bcb3d75d5",
                    "sha256:e64282aa52c5ea3fb5394046ea22b889097efda755b48a8a71938fc625fb0054",
                    "sha256:871cb4e969b77fb6db6522c9ed0f91e2ddc9290aaf60f80fdc9b3aa5cae7b0e8",
                    "sha256:ebb6f75ed1038a85440d2600eda847067dab7ca057a925708dd18415fb13bf75",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9a510fbf1c31cb00cafcc3972269905c7f44d8659b4e40c18a0857c0cb335a54",
                    "sha256:f79e9560b5bee444be334996e53654053ef06af553f1ab12653e30d030dd3b65",
                    "sha256:9e07841789ffcc3fc5de23bad16042c32959d6feed5ea43e7b5bb58461d573ad",
                    "sha256:fa8e94efb5ce84718f3d1e72b795a45e3f3795af461ec8ab76a01140f8de35f6",
                    "sha256:e87d727deb2de98ede8d89cd7d8581c834acb7b24e458d81c258624c1ef397e1",
                    "sha256:3581b07a9c9a76a3a17f2243805fb0d0eb4e735472ede5bf49b580ace7e72e3f",
                    "sha256:68b0d4e0ae5beb64da68558bd7a3eb840e4912cdfe3d9aee30f813be2deae306",
                    "sha256:c3995ad09b63434edfff822836dbac0907808f852e328a67f021cd3f3cbc7a86",
                    "sha256:ff4d6e38b207cfdd6b52ba575e21b158b78e90c2179372d73b8b06e0005aa995",
                    "sha256:bedb4d434e18220efc0eda0e2c16bd18f0d1a8a3f4926d06a4031a65558a0b12",
                    "sha256:1e8c753aa4e24e6af0d2b4045dc7998446ec466dfbf41f8bd6607349032b053a",
                    "sha256:c214aa4df4a5d7f3f2b660102ecad00e6893ec513302438fe92dfd03390f4603",
                    "sha256:ef9c39e3727e623cc4ffd2a2b1866b14b8c068a8aeeb0875481c03d188f08b2a",
                    "sha256:681caa10c33a57a9e660faf12e1ef9bbf930f1d3ac11607afa282ca47bfd01b7",
                    "sha256:eee1c173bc58be3324755fb1ec8c753a768735eb18d3434af1d72d5e1e13a59f",
                    "sha256:5afa6ce5ad27eba8562a8a40266c088bd21f8a8339a457c16d2eb45db1e6fa30",
                    "sha256:3f68a9bd7d07f65cfbabe4c571709e76a4cdac9101137f885c81d43cb3b0245d",
                    "sha256:170d3482e667a49b7093c41d7b14d90f6b3d3d243203868924d0fc91c7c05498",
                    "sha256:f4381097be226c25e62a3591e75630fc133c9939f975cbb63153b7cbffb651b8",
                    "sha256:5015e0dcc7d7ffe5541e20d0721f03607714352a4854839799efdd06d9ea3035",
                    "sha256:aac5e5887fa4af99cbe20482558009628354d2efd1cfc75c55c351abb6e42d55",
                    "sha256:967d0f7aac4ab3bcd645cb1b4189579843e58c646edfd5138d569610c984c941",
                    "sha256:bb78ba6dba741b5adfe7dd016a3cf5e2839762f6f563e49a6b058410879472b7",
                    "sha256:4a34cff6157f589400bec66ea89306ef9602ecc62c6ccf40e418479927f2739d",
                    "sha256:e86910385fce5e2ed150f55dddb1c618baad7da714b4394bced3f88643ccf01c",
                    "sha256:713bcd9c7f09989377ce944503d9d40cbd96b6e2480e4d57d90993a4df69b034",
                    "sha256:6eef5e9e239e993ed5fe4b292fc57834bca764fcc4f95f024cbc63095e6e2a80",
                    "sha256:edf2083c9b4c4e51253ca3d44b2638fda7349dd3512e515728957cb4e825a324",
                    "sha256:c8546fdf4a85f0e8c4cc1d63d8ec00e2d6f09227022b8991aecc1e1e1ef75fda",
                    "sha256:111890a6db6c410c88c6d2d3029bb6d99b0b7c8e8e4ff9ef452da4bbd07c1241",
                    "sha256:856f28bd08bafdaa4bd93db882e16cd0d5d8fef88c724fc9033d05b8f91b1aad",
                    "sha256:9b3fe1b5773998065bb6e3bb39359709dceac47599162642cd9ccd97219bc5ad",
                    "sha256:d7aa73340a6a98c9ddd540d80f859c516afac5bfbfe80293487852b30c6241f5",
                    "sha256:340ca68454806acfaeb42c9d0f1b634915b3d88e795d7197ba99e35d832c5560",
                    "sha256:b93654a7f8ec7b9146b996bcc46c96d6a131b04824452970a3bff193a819f2d8",
                    "sha256:2afefed762640d65857ae8afc95cceaaa9c7ad3b0ddb7da09890ecf9885a84e4",
                    "sha256:f0ff67dfbbd8fd97fc08f6b404693da1fc55fc49cd3e32f494c0ebbe37ab4a3d",
                    "sha256:fd5fd94cfde722f655da7d5398dd51e23025cb5bb02733553298c48413992833",
                    "sha256:46f1b7f29b632972098d83cc0907c4e3faa651374df0838ce280e65cbbcac6a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:292eeb12683dd29379b06200dc56965933bd3c997fd0c9a4bf49a99fa6a3a834"
                ]
            }
        },
        "22.05": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.0.022",
                    "CUDA_DRIVER_VERSION=515.43.04",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.10+cuda11.6",
                    "CUBLAS_VERSION=11.10.1.25",
                    "CUFFT_VERSION=10.7.2.50",
                    "CURAND_VERSION=10.2.10.50",
                    "CUSPARSE_VERSION=11.7.3.50",
                    "CUSOLVER_VERSION=11.3.5.50",
                    "CUTENSOR_VERSION=1.5.0.3",
                    "NPP_VERSION=11.7.3.21",
                    "NVJPEG_VERSION=11.7.2.34",
                    "CUDNN_VERSION=8.4.0.27+cuda11.6",
                    "TRT_VERSION=8.2.5.1+cuda11.4.2.006",
                    "TRTOSS_VERSION=22.05",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.3",
                    "NSIGHT_COMPUTE_VERSION=2022.2.0.13",
                    "DALI_VERSION=1.13.0",
                    "DALI_BUILD=4481327",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_VERSION=1.12.0a0+8a1a93a",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.05",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=37432893",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "37432893",
                    "com.nvidia.build.ref": "724a0e76963d7c0d323d6e0b6020cbd06ac72400",
                    "com.nvidia.cublas.version": "11.10.1.25",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.4.0.27+cuda11.6",
                    "com.nvidia.cufft.version": "10.7.2.50",
                    "com.nvidia.curand.version": "10.2.10.50",
                    "com.nvidia.cusolver.version": "11.3.5.50",
                    "com.nvidia.cusparse.version": "11.7.3.50",
                    "com.nvidia.cutensor.version": "1.5.0.3",
                    "com.nvidia.nccl.version": "2.12.10+cuda11.6",
                    "com.nvidia.npp.version": "11.7.3.21",
                    "com.nvidia.nsightcompute.version": "2022.2.0.13",
                    "com.nvidia.nsightsystems.version": "2022.1.3.3",
                    "com.nvidia.nvjpeg.version": "11.7.2.34",
                    "com.nvidia.pytorch.version": "1.12.0a0+8a1a93a",
                    "com.nvidia.tensorrt.version": "8.2.5.1+cuda11.4.2.006",
                    "com.nvidia.tensorrtoss.version": "22.05",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-07-05T13:58:27.539338995-07:00",
            "history": [
                {
                    "created": "2022-04-29T23:20:59.079732432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7009ad0ee0bbe5ed7f381792e07347e260e6896aeee0d80597808065120fa96b in / "
                },
                {
                    "created": "2022-04-29T23:20:59.430653302Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-02T16:04:50.681970565Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "ENV CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:40.803389864Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:05:41.162620077Z",
                    "created_by": "ENV NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.10+cuda11.6 com.nvidia.cublas.version=11.10.1.25 com.nvidia.cufft.version=10.7.2.50 com.nvidia.curand.version=10.2.10.50 com.nvidia.cusparse.version=11.7.3.50 com.nvidia.cusolver.version=11.3.5.50 com.nvidia.cutensor.version=1.5.0.3 com.nvidia.npp.version=11.7.3.21 com.nvidia.nvjpeg.version=11.7.2.34 com.nvidia.cudnn.version=8.4.0.27+cuda11.6 com.nvidia.tensorrt.version=8.2.5.1+cuda11.4.2.006 com.nvidia.tensorrtoss.version=22.05 com.nvidia.nsightsystems.version=2022.1.3.3 com.nvidia.nsightcompute.version=2022.2.0.13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.083144121Z",
                    "created_by": "ENV DALI_VERSION=1.13.0 DALI_BUILD=4481327 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:46.453988814Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.760879468Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.7.0.022 CUDA_DRIVER_VERSION=515.43.04 NCCL_VERSION=2.12.10+cuda11.6 CUBLAS_VERSION=11.10.1.25 CUFFT_VERSION=10.7.2.50 CURAND_VERSION=10.2.10.50 CUSPARSE_VERSION=11.7.3.50 CUSOLVER_VERSION=11.3.5.50 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.3.21 NVJPEG_VERSION=11.7.2.34 CUDNN_VERSION=8.4.0.27+cuda11.6 TRT_VERSION=8.2.5.1+cuda11.4.2.006 TRTOSS_VERSION=22.05 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.0.13 DALI_VERSION=1.13.0 DALI_BUILD=4481327 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:46.760879468Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.122806683Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:07:47.475243541Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:21.073242374Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.491449129Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:19:22.869477081Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:22:45.010957185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-05T18:22:45.010957185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-05T18:22:45.314246756Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a PYTORCH_VERSION=1.12.0a0+8a1a93a PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.05",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.12.0a0+8a1a93a",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T00:57:04.175787816Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:21.875768185Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl=2019.5 mkl-include=2019.5 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:21.875768185Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:26.778179967Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:28.670401922Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:03:28.670401922Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:03:38.216546313Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:07:24.72065486Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:19.351548456Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.1 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.009307353Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.740651194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:08:27.740651194Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.264508934Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.6.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && npm install tar@^6.1.9 --production       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/jsprim       && npm install json-schema@0.4.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && rm package-lock.json       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging/node_modules/@jupyterlab/coreutils       && npm install url-parse@^1.5.0 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/string-width        && npm install ansi-regex@^3.0.1 --production )  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm/node_modules/cli-table3        && npm install ansi-regex@^5.0.1 --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:15:39.720373456Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:34.103346799Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:37.028138181Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:47.192635812Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2,<0.9.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T01:26:49.540569654Z",
                    "created_by": "ENV CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T02:26:39.311711778Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:26:55.086027172Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:26:55.086027172Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T02:27:19.597431931Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T02:27:20.056498613Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:11:57.162804878Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:13:32.157672907Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if [ \"${TARGETARCH}\" = \"amd64\" ] ; then     export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*.whl         /rapids/scikit_learn*.whl         /rapids/treelite_runtime*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:15:05.182358193Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:15:05.81208576Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:06.170569673Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:07.316268337Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:09.386316097Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:11.169947671Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:50.154565985Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:15:50.154565985Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:16:07.210402499Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.05 PYTORCH_BUILD_VERSION=1.12.0a0+8a1a93a TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:16:12.461576178Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:16:12.461576178Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.235417175Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:20.746749658Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=37432893",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "LABEL com.nvidia.build.id=37432893",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-06T03:22:21.071418101Z",
                    "created_by": "LABEL com.nvidia.build.ref=724a0e76963d7c0d323d6e0b6020cbd06ac72400",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T13:33:26.078655447-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T13:33:26.078655447-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:33:27.1901333-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:33:27.195310314-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:33:27.200070942-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:38:33.638143223-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:38:33.643947039-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:41:24.606496905-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:41:24.611622029-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:41:24.617246776-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:43:13.375284125-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:43:13.399471079-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:03.710907369-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:03.710907369-07:00",
                    "created_by": "ARG NEMO_VERSION=1.10.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T13:58:04.181782347-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.10.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.729164154-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.10.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.735862724-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.756198238-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.784133856-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.815077974-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:26.851677102-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:27.206507356-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.10.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T13:58:27.539338995-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.10.0 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf8cedc62fb3ef98ad0dff2be56ca451dd3ea69abd0031ad3e0fe5d9f9e4dfff",
                    "sha256:979009f82e6f6944472ab9c6c57b939862c01f3de0a5b3aff4c3038768904e9c",
                    "sha256:2f18d4805d63283df4a489a49f5d7e8977c1e760ea28f01d650aed39378734fc",
                    "sha256:149d62157aac1900d0c963ed8236792d1a44e7a4c02e9c2263cc01a550e09c42",
                    "sha256:bee10d69b7dd5ab345c2e57d614704ae6fe1e4192b4b083227aa0ea17537a7d2",
                    "sha256:1034036385ff796d6513debbaee01a0b39aa1841b0948274d8df49d4e6efd874",
                    "sha256:7c230966ecdffd80165205b4328634d1596c854bdcfb2a4594e01e6b91f5ac4c",
                    "sha256:647065511ca3ec6cf8c2c8f2e4b8d465e8bd18b3419fbed4b86b87ffbbbbdccb",
                    "sha256:170bec34566b21f2582ec01189f661990d8b3b9f4cc2f3057b00affdd33e0931",
                    "sha256:8368cb2987aedad498dff5caab2d6601b49cf9e1424ed0ed99721f81493f4880",
                    "sha256:e5d229e3d42976f1a061aaad92a60c0df93603871ff22dc2740e66da4ba3c88f",
                    "sha256:8a19beacae1a52dc44d63751fe9e779e5b584e45e9f1b36840ea2144907080b5",
                    "sha256:58c0c8f4179db9caa80affa0ea90e9b96c3c9941671fc47cb2950718fc648345",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b8ee891c1c546483fd1d16d0f142fc654e832a8a75b8ff5c105168de77581b1",
                    "sha256:35a84e382741d11a8079f1382dae1b31f415a67a1eb9312bced4c5e0ba052945",
                    "sha256:95321926e07470573a27f59ecd837fdbda41173321254cb1451bc1d492211c84",
                    "sha256:49e879ccc355ddd0dbcc8486666a958bdaec84b5e7d9e097b8570df7c7104f81",
                    "sha256:69fa15adee333693885ec663494279484dabd5addfd3d8a907d5d233d8e46473",
                    "sha256:f0535f9fa71adad8190911cb3537a07c1c59415672ce4e0d48e4efd72ec3996e",
                    "sha256:87a329e8aed5ea87a09cd67fa3ce3b21f86cdbf4db7376329602b005fab877b0",
                    "sha256:f94ad05329b3f0486a26d45c155668e321248da568d90b7e867e9b3ab3a24ef1",
                    "sha256:4e6bd8acdd132438862a388ca932a04ee1755aabf3841e5126d0f50b9c8289e9",
                    "sha256:4f66b25354b0eea759f635f0d3b4ee500f522ce929f33f084b4d0b929aa6f595",
                    "sha256:59646d833c52033a0e24a3f297f4ab3c6ef2134d52c67e22ba014710c3b83e39",
                    "sha256:ab30aad1c66fcef62f26404e6c35ece848da9eb76d6e5cfac81140e9fe546e37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bfee3ec9224c5acfec6dbd8fa8b960e08e24ed6543c58ebc9f92da75cf3fbd1b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f3983a403fca1982534118a4d0027977571d7e5ed038d9dcb60fc17959ac724",
                    "sha256:5f20207b08f75ec27865ff79c4948677ca2dc19e86acb5a6cc78912f51c0ee13",
                    "sha256:60a90d02e246cf467d9384f9ece8076708e9a644467c16d05f410be264a74b2c",
                    "sha256:80dd3bd52322b95387df076f09980f64243fb55ebe9fd55b089e175e5beee935",
                    "sha256:77e471f99bea0ecb219b904ce8aed1a06a9151b200e2d89be1b7376632588418",
                    "sha256:5c0fa889e3b3506e3fa18465d3024329b377e5ee0ea82b51cb524c883b222de4",
                    "sha256:2bcabc8199021ba5817f1924ff350d134e73dd911251d8f7b3498ff1701efcbf",
                    "sha256:f649d8c4f6635395b410f86d79cb361e834fda7385ca89709e8425037dceb795",
                    "sha256:92c32bb7e0f4d4434709bc1beeaf17802bea2b53c3a83fcce98f949a7dbcbbc4",
                    "sha256:4bb38d21c9a5e42bfdc4f9576a0770037fbcca1ddaee9abb36ec87d8c66f02eb",
                    "sha256:8781623460d5f0aa56668945d07773ddf373d1dde0a94e34b0598a3601f21f71",
                    "sha256:770252d6231899fd7f4616194f2b7e61fc4ac906ba0990dee7f19efa968043ed",
                    "sha256:806a4f82008f08716b9686add46af14d965fb87c99b1e074fc884bbc620ce5ea",
                    "sha256:7f3c1f95832c68e8d1a6b137bd37cb3c4f9db63e77d724c0c93a0a01bcbf7d97",
                    "sha256:74db918f96738c951571b8a492b3dc47cb0285693ce5d5b9c200b68f41ccfa54",
                    "sha256:4f898e91ad93c0c3450fba63752c833869b31f21e1467dfe14865bbe422879d5",
                    "sha256:682c8d50284bdfc30011d3b42a5fce8a49ae1ad9f6812d823abb30eae5b8cd81",
                    "sha256:070b0b612187e8d411095ab681f67fe4136df8654522e12ec91458be1c431c64",
                    "sha256:9c0aead898e86f776d8a71feb195d69d3a2622cf32a8db65ee19820c9c74b8a2",
                    "sha256:daaa6eaa418c7bec98c21f175d043896cc3b8504cc5163bf78c597a275344903",
                    "sha256:cbc2117b4c7a20fd76ccb7b75349790bc55b6236c1bad1fcbf9f50116a0cf123",
                    "sha256:bc0d5eb0b70e6c77142fd1af1cdb0ccd1d26ad604e0a911c1ebcd25a79dbf81f",
                    "sha256:f47958074e38dda9ca5fb6a4bac8ba8a79a8628d9795373034cf4822910cdf64",
                    "sha256:3d92adf64c0ec6a91202ff1bcb000b2a5d932fa586a7d0710fd5d77408055441",
                    "sha256:a44541392cf1953ebf99b1f49aa034b1646eb43c5e8505facb738b4418c49718",
                    "sha256:28678cf99d2b4e8050f8487181269042baecd0efd357ef565f7a72791758bbfd",
                    "sha256:ec56573b239a755d2f9e671faaf30b4e5d6cbd77b5cdc92b1c3aa589d84ec341",
                    "sha256:39714c351cca1ab76b7e0ffd18f7f3473e16b7c3ebc317557e983c1ae530e45b",
                    "sha256:1b59d05e026fedec3a410d5a917baf54a9140152185d9bcd5e8f5c7f34592fa8",
                    "sha256:cd6ad9fa323e729e9b99ec27c413cd28b9602ab9e9de54235d3af5513b8343f7",
                    "sha256:b7da0e1daa258ecc41da375975094920ac5ec191fe2ad9cdbc7c54ec7b27c9a0",
                    "sha256:3774f2fdcbf1d324879b7d7141ee84508344e59aac302b12af4afdb66e79eb76",
                    "sha256:bd90b8587183a045a9ac4748a49b23a4ba70ac33b5464317f40c1d6e295e20e7",
                    "sha256:b15b0b28ff67fb8c0ac0951c9a704560a014c27a3f978426de019aacd66b2d89",
                    "sha256:01ba148cbe2cd60abd5494598c51db9c77421566102ae6fb674d3b43d1f23ea6",
                    "sha256:b34697e4f6900cfa41b310a73619fe8c8df4f3716bee2530104304b74cdf9052",
                    "sha256:4801d4799cda31af421b5a1a9e8b57341d73b73e948796f81295235c154a6e84",
                    "sha256:ec314eb4740b928946d5e9ce96634865ca1b6a553d02c3cb5174fb79aaa7dfc8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "22.07": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.1.014",
                    "CUDA_DRIVER_VERSION=515.48.08",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.12",
                    "CUBLAS_VERSION=11.10.3.66",
                    "CUFFT_VERSION=10.7.2.91",
                    "CURAND_VERSION=10.2.10.91",
                    "CUSPARSE_VERSION=11.7.4.91",
                    "CUSOLVER_VERSION=11.4.0.1",
                    "CUTENSOR_VERSION=1.5.0.3",
                    "NPP_VERSION=11.7.4.75",
                    "NVJPEG_VERSION=11.8.0.2",
                    "CUDNN_VERSION=8.4.1.67+cuda11.6",
                    "TRT_VERSION=8.4.1.5+cuda11.6.2.010",
                    "TRTOSS_VERSION=22.07",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.3",
                    "NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "DALI_VERSION=1.15.0",
                    "DALI_BUILD=5080390",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+08820cb",
                    "PYTORCH_VERSION=1.13.0a0+08820cb",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.07",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "TORCH_CUDNN_V8_API_ENABLED=0",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=40241807",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "40241807",
                    "com.nvidia.build.ref": "33af6b134f1ac712b7c697cc66f218e97c360ded",
                    "com.nvidia.cublas.version": "11.10.3.66",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.4.1.67+cuda11.6",
                    "com.nvidia.cufft.version": "10.7.2.91",
                    "com.nvidia.curand.version": "10.2.10.91",
                    "com.nvidia.cusolver.version": "11.4.0.1",
                    "com.nvidia.cusparse.version": "11.7.4.91",
                    "com.nvidia.cutensor.version": "1.5.0.3",
                    "com.nvidia.nccl.version": "2.12.12",
                    "com.nvidia.npp.version": "11.7.4.75",
                    "com.nvidia.nsightcompute.version": "2022.2.1.3",
                    "com.nvidia.nsightsystems.version": "2022.1.3.3",
                    "com.nvidia.nvjpeg.version": "11.8.0.2",
                    "com.nvidia.pytorch.version": "1.13.0a0+08820cb",
                    "com.nvidia.tensorrt.version": "8.4.1.5+cuda11.6.2.010",
                    "com.nvidia.tensorrtoss.version": "22.07",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-09-26T00:42:29.563282846-07:00",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-07T23:33:01.786804877Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T16:58:24.445636772Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.445636772Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.445636772Z",
                    "created_by": "ENV CUDA_VERSION=11.7.1.014 CUDA_DRIVER_VERSION=515.48.08 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.445636772Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.014 CUDA_DRIVER_VERSION=515.48.08 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.014 CUDA_DRIVER_VERSION=515.48.08 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T16:58:24.730554044Z",
                    "created_by": "ENV NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.4.1.67+cuda11.6 TRT_VERSION=8.4.1.5+cuda11.6.2.010 TRTOSS_VERSION=22.07 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.7.1.014 CUDA_DRIVER_VERSION=515.48.08 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.4.1.67+cuda11.6 TRT_VERSION=8.4.1.5+cuda11.6.2.010 TRTOSS_VERSION=22.07 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.1.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.12 com.nvidia.cublas.version=11.10.3.66 com.nvidia.cufft.version=10.7.2.91 com.nvidia.curand.version=10.2.10.91 com.nvidia.cusparse.version=11.7.4.91 com.nvidia.cusolver.version=11.4.0.1 com.nvidia.cutensor.version=1.5.0.3 com.nvidia.npp.version=11.7.4.75 com.nvidia.nvjpeg.version=11.8.0.2 com.nvidia.cudnn.version=8.4.1.67+cuda11.6 com.nvidia.tensorrt.version=8.4.1.5+cuda11.6.2.010 com.nvidia.tensorrtoss.version=22.07 com.nvidia.nsightsystems.version=2022.1.3.3 com.nvidia.nsightcompute.version=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.013483982Z",
                    "created_by": "ENV DALI_VERSION=1.15.0 DALI_BUILD=5080390 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:36.406816191Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T17:00:36.656782904Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.7.1.014 CUDA_DRIVER_VERSION=515.48.08 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.5.0.3 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.4.1.67+cuda11.6 TRT_VERSION=8.4.1.5+cuda11.6.2.010 TRTOSS_VERSION=22.07 NSIGHT_SYSTEMS_VERSION=2022.1.3.3 NSIGHT_COMPUTE_VERSION=2022.2.1.3 DALI_VERSION=1.15.0 DALI_BUILD=5080390 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T17:00:36.656782904Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:37.029947001Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T17:00:37.029947001Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:37.029947001Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-21T17:00:37.373599649Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-21T17:13:40.809367581Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.143191911Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:17:09.513459368Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-30T23:20:21.27134874Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-30T23:20:21.27134874Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-30T23:20:21.542007608Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.13.0a0+08820cb PYTORCH_VERSION=1.13.0a0+08820cb PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.07",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.13.0a0+08820cb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:49:52.387672489Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:56:51.623500638Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy==1.22.4 pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl==2020.4 mkl-include==2020.4 ; fi &&      if [[ $TARGETARCH = \"amd64\" ]] ; then export LIBRARY_PATH=/opt/conda/lib:$LIBRARY_PATH ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:56:51.623500638Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:56:56.15698698Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:56:57.899530376Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:57:00.441075414Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir protobuf==3.20.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T07:57:00.441075414Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T07:57:09.894334868Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:01:00.19535957Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:01:49.786212236Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:01:58.801007395Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:01:59.488519549Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:01:59.488519549Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:05:42.540841245Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:05:42.906761477Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:05:42.906761477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:05:42.906761477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:05:42.906761477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:05:42.906761477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:07.323298112Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:17:09.87596893Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:17:18.776324594Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2,<0.9.0\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T08:17:21.153802561Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T09:20:09.583674636Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T09:20:36.227560008Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T09:20:36.227560008Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T09:23:08.963228805Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T09:23:09.314674071Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:12:10.467028911Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:12:46.588468636Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:37.852321235Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir --ignore-installed llvmlite  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:37.852321235Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:14:37.852321235Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:14:38.665885011Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:38.997172284Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:40.071915635Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:41.018445512Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:14:43.122633896Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:15:22.495629421Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:15:22.495629421Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:15:38.717917173Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.07 PYTORCH_BUILD_VERSION=1.13.0a0+08820cb TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:15:41.899397678Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:15:41.899397678Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:57.667780049Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:20:57.667780049Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:57.667780049Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:58.386940592Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=40241807",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "LABEL com.nvidia.build.id=40241807",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-05T10:20:58.704328971Z",
                    "created_by": "LABEL com.nvidia.build.ref=33af6b134f1ac712b7c697cc66f218e97c360ded",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-14T13:51:07.883687666-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-14T13:51:07.883687666-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T13:51:07.890552206-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:00:29.811356252-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&     cd apex &&     git checkout 3c19f1061879394f28272a99a7ea26d58f72dace &&     pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:00:30.91464954-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:00:30.920522905-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:00:30.926262396-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:05:37.05682413-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:05:37.063194087-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:08:28.076285517-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:08:28.083142175-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:08:28.09048907-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:10:26.57690196-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:10:26.583768638-07:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:10:36.013817405-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:10:36.038188546-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:26:10.969177055-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-14T14:26:10.969177055-07:00",
                    "created_by": "ARG NEMO_VERSION=1.11.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-14T14:26:11.423526613-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.11.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.632875055-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.11.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.638605129-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.660062496-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.688308726-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.718580589-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:28.75034609-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:29.106045621-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.11.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-26T00:42:29.563282846-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.11.0 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:cd6183efb7c9ed812480fd17935fb72265ced2ccb1695e661a7a7d76fafc5244",
                    "sha256:1834bc6922fa20f1c1a6cb47b8432b8628137ebd18efd8e3069ca48353cc0498",
                    "sha256:0829e277cd3e56daaf31ff2418a5161d51646db65733fa6cf3b17a617c0be538",
                    "sha256:80402894e37a28d881ce92b96fdd67b43c2ce11eedf216a8bee85fb13bd2fadc",
                    "sha256:47cd83dd64c4c836183d93ccf7b5a2357ca8c401c8709d9806b0998cef20ed07",
                    "sha256:2e174238e18e1cec95a8796809cdfe2afba68014780f427a899290b107e4b5d7",
                    "sha256:efc1b11d7653b209a13b968864fd9499bcb5ea7c1ea59467e1ac01ec65301386",
                    "sha256:369d4940e72e588672fc75b32ef918bc62604f14a7a5cbbcfbaf64fcdeb4fafb",
                    "sha256:3bbf379551ad6db32d9309aa16b54793354bbb657203ee229129d76eeffff775",
                    "sha256:938ced7f4457a10d5aee6d6b9bc1336fdee19c2273220111ffd28ffa0b6044a0",
                    "sha256:f97b985d6c9061cfb9cd4b1e4888882bfb84bef5279fe93473d63cb5d8dd2f86",
                    "sha256:4ef76321a7a1ec23e288eda0918100fe1459522ce4b94bd1983c7c16cce43006",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8337f4db5f770f4777648791f41da764c0f5b61da6a3158bcce055ad811c5e84",
                    "sha256:af4b6df84adbdbe3a512a4dcbe0a3e5da48e30c090809d77ac6bae82f34755a8",
                    "sha256:2e30dfcd93836f84525dae0fbe5fa03ebf30950a3040a0b4d7a423909d539c24",
                    "sha256:669595f017d2d1863a199e88fab5a0fe52a79cecde64fe4ea9a815395d22d1e9",
                    "sha256:d46caac9fa8605c070db2cf308f4db25337f1ee6a3e10f7d8072a0bb5ba0d9a1",
                    "sha256:5b81bd2f8852c02f8d13ec8e69463a8868e087652af1aeeb02f9183cea865460",
                    "sha256:aa5957785ff0925fe6c635949b47102fe950b26d749abb9e44f8e71d6374e2c6",
                    "sha256:bdf7fee45679f3a012cf1bc9d6e428ad54d00fed2b45567cf5386cfaf0d85426",
                    "sha256:adf368f24b390965114b44806d8107c6f4709ae5af1554462cec3a9c232a4972",
                    "sha256:8ab35740523fd5fc644b3a42f661fcc196e958c1c988125c82b550dcd4f4d0ff",
                    "sha256:ce9de3c2306467f4a7abc3bda7b8e8a933b4ac8006587873a07b93034fdd1769",
                    "sha256:c5a612f045066463ed7693dbeb4dad0c5f37433f71a72d8fee098dad7d254437",
                    "sha256:a129250ee28e2c6661407cb0b9043ed830b4b67d587769dd9dd3dd44ed9bbaa2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8bffaea35aea6cf79bbcae7b055cc06eb6f9761b135e7f6feeda5c13859c4b45",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:96b8d897215b17f27ff86fb56df46ad2d8141aaa53ba0f427b7159414f1de4a0",
                    "sha256:6de485df73538d4806153f52854a844ab42323b278a04d5249e09dc11e06c9ad",
                    "sha256:ef59eb08bdf423cead70e15c384e9ae4ae655d947780b69c5886e6972fd8a488",
                    "sha256:ee2263bc2e901e4ea3393001cd81bcf53c03de071d5f3cb2ae924df260bbff0c",
                    "sha256:0d878663269fcf265bc64c58d90df001dfd5af2cf3a6ce09e6b968cd4fddf1dd",
                    "sha256:7405663e7f5fb75082502e6aaeb300f9b6638cd23c0cb23906b0257ee100533a",
                    "sha256:e21f099ff697552b8dc6632d8edc236cf8e97c3cf069956d21f5768c4c7ef30b",
                    "sha256:ff5db81d7e007f18c0b5879461924c07e80e2fac31dc12b6949f8824fcf02d49",
                    "sha256:15f0df620c541d99d57832f6767f7ac3a3fa897c128de74c1e42e7ea4b845589",
                    "sha256:ad0ceb3f335d3f808fe5b50191e9a84cb3009c820568e802a5ccec10fc17159c",
                    "sha256:eab4866baad993113b5f6d4c5764cfb167b6ef0bec89debfb7247677e5407ad2",
                    "sha256:9effee3b57c7b80ac240151eaec31a15cfc35d402f1187869392ff37967be172",
                    "sha256:be5421feda00d023ea3dd7e9d6ea3737e2cbc900e6468a29359cdf2651d719e0",
                    "sha256:96896c9420ee04f5c217f9ff81360f84daff22e56019ab76e20821fe4c2110d5",
                    "sha256:7275ea78ff4956c8a164551dd4d77b626bd59e407aa7884d731e5148e7f21229",
                    "sha256:01fb4b4fc82e61394213290a7a917763c8c3d99938d8633c2d2a29eccf1850e6",
                    "sha256:8405b9b24779953e20a3c83f0af09994a16c265da109d40ba8409e04e12a0f37",
                    "sha256:2c3cf67bc1429fb5ba71fd0aaaad4738d539c3ea40313c7685f4402e32d8934e",
                    "sha256:ea7ba7309903bb35f989a4664a537f4bd7d30ea15ccdbfd78c74770409e3affc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e54ccf47b0a5785d8994405006c31332747c3e670dbb7a2444c435ebf0aed9b",
                    "sha256:1a40b81c51ed704ddbf03b3a3be7123ffc955bff767700ad0de028286fdccb3f",
                    "sha256:929115d0b361d7503b56ca7410681a5628d295ae38be7375641395ffd00e7b5e",
                    "sha256:6d5780de52714a2ff7ba5cbdbcbcbf7bdacc57bb9702b74a8acb173690fd65f8",
                    "sha256:e28d7341f716f46e23d4d4a53a426098839946058787fc500d78ed73a2d69fd0",
                    "sha256:aad28708c468cec89fb3e0d0e4d7b8c46b4ca124c18f90f38e2c750a13e01d68",
                    "sha256:c32326aa2dfc4b404237e567b05cf81308c3f7145c79e355ade8871e55601ab1",
                    "sha256:af663f1d6563cc8f647a04a5f150a2e8c3b763ca9a438fb0380fe31906a43dc3",
                    "sha256:29f84179dfd74d6ede812da9799fbf8f43230fdd504072a0def052c996c21f39",
                    "sha256:ac63132898e6d94dd7fe11797a418ef3205eb6e49334e833d294f2c6dac6e2b1",
                    "sha256:642ebb9b17aae384764ab9576d5f43b4b46e6f9a3dcee71e2b8371d3daf32f6e",
                    "sha256:d189c886e57e138b25fa193b774d0232cd10e52ff6711218b0d1e54c24fdea6a",
                    "sha256:668790d8b77b5457a9d33002cd168f3e11a90c7c497f321c9d98b31adfec306d",
                    "sha256:314d3965430085961fa0f7c635e5b7c1ac42fdac488133dbfa0d49fb392889f4",
                    "sha256:a1f5a966969e30fab50f77f5d0984947b85d9b865480021e8667e5af77bbebdb",
                    "sha256:95f08d97e643435839b629e4539ee97b830021697d1a8094fcd8aa796f6b68de",
                    "sha256:1df586b77a725200fba374e3c099c1967fdc707234c9ce977efc0a5f5f2c64e6",
                    "sha256:cc69366c852c438d802247c847037c0a4f9ee20bca0de927199006c99b4165a7",
                    "sha256:1fec327007638f0e9b4b6817d70d3dba78e5a747a90398891dab16d9a91d693c",
                    "sha256:0968b0e1836bbe1e54df7044ca9867b924057278250ff3e8ecd8adbc76a2821b",
                    "sha256:a8c715fd3f5c2a6cbcfeecfd0bc893e68c6222c105da2777c9cdd2dd803fad3f",
                    "sha256:01937cc6978b9ca6d81f007fa887c3076cfd260e754d088e0a5ed2b675597094",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "22.08": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.7.1.017",
                    "CUDA_DRIVER_VERSION=515.65.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.12.12",
                    "CUBLAS_VERSION=11.10.3.66",
                    "CUFFT_VERSION=10.7.2.91",
                    "CURAND_VERSION=10.2.10.91",
                    "CUSPARSE_VERSION=11.7.4.91",
                    "CUSOLVER_VERSION=11.4.0.1",
                    "CUTENSOR_VERSION=1.6.0.2",
                    "NPP_VERSION=11.7.4.75",
                    "NVJPEG_VERSION=11.8.0.2",
                    "CUDNN_VERSION=8.5.0.96",
                    "TRT_VERSION=8.4.2.4+cuda11.6.2.010",
                    "TRTOSS_VERSION=22.08",
                    "NSIGHT_SYSTEMS_VERSION=2022.1.3.18",
                    "NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "DALI_VERSION=1.16.0",
                    "DALI_BUILD=5322998",
                    "DLPROF_VERSION=",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.10",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.12.0",
                    "OPENMPI_VERSION=4.1.2rc4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_VERSION=1.13.0a0+d321be6",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.08",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "TORCH_CUDNN_V8_API_ENABLED=0",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=42105213",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "42105213",
                    "com.nvidia.build.ref": "77ddbc1eeb37f30914b0f15067f584147275477b",
                    "com.nvidia.cublas.version": "11.10.3.66",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.5.0.96",
                    "com.nvidia.cufft.version": "10.7.2.91",
                    "com.nvidia.curand.version": "10.2.10.91",
                    "com.nvidia.cusolver.version": "11.4.0.1",
                    "com.nvidia.cusparse.version": "11.7.4.91",
                    "com.nvidia.cutensor.version": "1.6.0.2",
                    "com.nvidia.nccl.version": "2.12.12",
                    "com.nvidia.npp.version": "11.7.4.75",
                    "com.nvidia.nsightcompute.version": "2022.2.1.3",
                    "com.nvidia.nsightsystems.version": "2022.1.3.18",
                    "com.nvidia.nvjpeg.version": "11.8.0.2",
                    "com.nvidia.pytorch.version": "1.13.0a0+d321be6",
                    "com.nvidia.tensorrt.version": "8.4.2.4+cuda11.6.2.010",
                    "com.nvidia.tensorrtoss.version": "22.08",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-10-11T14:07:04.240481324-07:00",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:21.186335149Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "ENV CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:32.800903116Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T16:55:33.225837492Z",
                    "created_by": "ENV NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.12.12 com.nvidia.cublas.version=11.10.3.66 com.nvidia.cufft.version=10.7.2.91 com.nvidia.curand.version=10.2.10.91 com.nvidia.cusparse.version=11.7.4.91 com.nvidia.cusolver.version=11.4.0.1 com.nvidia.cutensor.version=1.6.0.2 com.nvidia.npp.version=11.7.4.75 com.nvidia.nvjpeg.version=11.8.0.2 com.nvidia.cudnn.version=8.5.0.96 com.nvidia.tensorrt.version=8.4.2.4+cuda11.6.2.010 com.nvidia.tensorrtoss.version=22.08 com.nvidia.nsightsystems.version=2022.1.3.18 com.nvidia.nsightcompute.version=2022.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:14.639633316Z",
                    "created_by": "ENV DALI_VERSION=1.16.0 DALI_BUILD=5322998 DLPROF_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:15.531435331Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:15.874235571Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.7.1.017 CUDA_DRIVER_VERSION=515.65.01 NCCL_VERSION=2.12.12 CUBLAS_VERSION=11.10.3.66 CUFFT_VERSION=10.7.2.91 CURAND_VERSION=10.2.10.91 CUSPARSE_VERSION=11.7.4.91 CUSOLVER_VERSION=11.4.0.1 CUTENSOR_VERSION=1.6.0.2 NPP_VERSION=11.7.4.75 NVJPEG_VERSION=11.8.0.2 CUDNN_VERSION=8.5.0.96 TRT_VERSION=8.4.2.4+cuda11.6.2.010 TRTOSS_VERSION=22.08 NSIGHT_SYSTEMS_VERSION=2022.1.3.18 NSIGHT_COMPUTE_VERSION=2022.2.1.3 DALI_VERSION=1.16.0 DALI_BUILD=5322998 DLPROF_VERSION= /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:15.874235571Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:16.715352489Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:12:17.763368974Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:24:57.42158022Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:02.621244999Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:25:03.298551278Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:28:14.230845156Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T04:28:14.230845156Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T04:28:14.534672218Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.10 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.12.0 OPENMPI_VERSION=4.1.2rc4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 PYTORCH_VERSION=1.13.0a0+d321be6 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.13.0a0+d321be6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:15:03.953414695Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:22:43.831216048Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy==1.22.4 pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas!=0.3.6 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl==2020.4 mkl-include==2020.4 ; fi &&      if [[ $TARGETARCH = \"amd64\" ]] ; then export LIBRARY_PATH=/opt/conda/lib:$LIBRARY_PATH ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:43.831216048Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:22:48.343918852Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:50.216797932Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:53.030059519Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir protobuf==3.20.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:22:53.030059519Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:23:02.484033338Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:26:50.489996866Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:48.058294581Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:57.707882835Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:58.469269835Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:27:58.469269835Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.038189009Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:31:46.495457799Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:42:47.670285415Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:42:50.489384725Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:00.453863338Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T05:43:03.319154323Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T06:40:41.260307749Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:01.320407804Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:01.320407804Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T06:41:26.75251741Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T06:41:27.145559594Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:35:41.926183459Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:36:18.268835436Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir --ignore-installed llvmlite  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:38:08.40203354Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:38:08.929464037Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:09.286724609Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:10.29874269Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:11.322066459Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:13.437145508Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:53.976231797Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:38:53.976231797Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:39:09.810731729Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.08 PYTORCH_BUILD_VERSION=1.13.0a0+d321be6 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==0.33.0     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:39:12.95634325Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:39:12.95634325Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:05.760654491Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.540044086Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=42105213",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "LABEL com.nvidia.build.id=42105213",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-04T07:45:07.961322139Z",
                    "created_by": "LABEL com.nvidia.build.ref=77ddbc1eeb37f30914b0f15067f584147275477b",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-11T13:33:18.777808266-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-11T13:33:18.777808266-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     espeak-ng     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:33:18.783350515-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:42:42.279617105-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&     cd apex &&     git checkout 3c19f1061879394f28272a99a7ea26d58f72dace &&     pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:42:43.537479288-07:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:42:43.543648479-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:42:43.549788865-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:45:20.165884868-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:45:20.171632773-07:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:48:11.661482483-07:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:48:11.672296153-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:48:11.679341185-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:50:17.245932132-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:50:17.257802443-07:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:50:36.022901989-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T13:50:39.832976209-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:06:14.449142725-07:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:06:14.449142725-07:00",
                    "created_by": "ARG NEMO_VERSION=1.12.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-11T14:06:14.910814218-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.12.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.735622032-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.12.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.741373456-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.764131528-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.800093299-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.829822237-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:03.861680073-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-11T14:07:04.240481324-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.12.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:c5b9544e7743500701cf6a8aead7ae283a55a658d7b76aac1d8ad3bf48b1e2b6",
                    "sha256:57f574ab1503092af7b3d1f188993218c91459b2eaf966cdb133bba722b103ff",
                    "sha256:4cf9aed48cdac8ea9c94be60b1aebea60304e26d67f5d6dc8f41d791bfd0f6cb",
                    "sha256:9af2b05f2c3b7eb06f34baa4850cf264d8e8eeccf309fe1a8911a269d246dbe1",
                    "sha256:b470f3b3096aa4544b77b02d70a20a51172d68be52592aef8dab5e01f8278ee2",
                    "sha256:8fd21a588646dea1b311c4f4c8348fe8a7ccd58641d0b959540169a0d428c2a9",
                    "sha256:d1cc4baf7a9399e6dc4890deb4ea95b346011451e9371ce328fc805657554a44",
                    "sha256:ae5c80704277e9e72db51835af44d47244d0e161879dfd448be2c5a30e11c3d3",
                    "sha256:aa57b43dc9e03c2a58fc4245cfeb08698311e9ec6925a0b0ed9641a18932f706",
                    "sha256:54beb86c2dbe9e6e91790a0fa353a7cde6a5afaadb0371c28865b96b56849036",
                    "sha256:06f02804b89d4bb11540ae7f1614964799a27dd8a9219891aba203a663a08201",
                    "sha256:913f47d5362df52af57265ff5dd85f951c4e0003ca9963ace873c0ed7ff77aaf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a2f69efab07f6db4ba72d153cd7d22f9070b589a0cab4460c773dbfb1e605d98",
                    "sha256:7c848cf812b2d4e11c9fed26886d4d150a87ce7f987fb01f8103fdc1a5729800",
                    "sha256:82ca3ce3f76956c986723663873aca9e337a91b84fb785bf52097672730d8ef9",
                    "sha256:e75795dab160daf9777f255193e9fe7f1727d6108b954d025a05fb4d913a97c2",
                    "sha256:4ac5f43e33015ee5c67a19ac57c5eecaf8deeb57b5d1b01224c237f69db4e670",
                    "sha256:ad6d4de2ce8ddad87ceab7484790f40d11a499560808b907cef1c41451a73b5f",
                    "sha256:cb2bc8909cf388775801f4d581927240586147685269390cc388eed8293a4311",
                    "sha256:d720726c2ec3b0945bd27832b888f7c49dc3d5bc85ec3768fadd7fb60a2e32ac",
                    "sha256:34a96c5f1f09f92800b94064f952441ce6fba3859f84a986eb7f5ef12c9655fb",
                    "sha256:8a0c9edf9f21447c8c5f73bfeace1bb9907b6be52849990f9488c73126fd93de",
                    "sha256:f8b9a809bfdd624d52b6c74362c60260bb1a25abdc460320aded36975264a5d0",
                    "sha256:e658091bb048944d857d6fffce9af08030466cfd01a20dfe03d4f8e3c7fbda1a",
                    "sha256:e4c02d57641d3fa6ce8ab5f4bdd44708fe6d55225083ab4289c2dc34edf69eb3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c98724c51fc542364a409971babc0027183fd3641d2d5f6b772706772cfee745",
                    "sha256:6fe363652823f083fcffd9bd325ba4dff667021c41b82647bf3b71d55af59366",
                    "sha256:7a56e33272d27f5016ebe9159fbeb960f596376dd7bff9a8bdfb980e2c2ed6db",
                    "sha256:b392832ee6051fb7beefec386612fe3fae144c8954b5c1f4fb131f7639248848",
                    "sha256:42472d8935f44473f51dc3f14ea2dcbd63065f773a57e94db9e979de61027333",
                    "sha256:bd38dcdcce419f412adeb6c0bf574b573f0a1b7421c7e8d6d80b1a487b1f1825",
                    "sha256:3c87651d118f5a130fd52ae9cedfd839a961ec0a1665ac9912302983f33ea26c",
                    "sha256:f878dddd44577ca03c603ce3e41d840bdf4eb98ccb5609b1566e96ca05b5e013",
                    "sha256:b6e87bf9a6d2713278b0c456fdfb427da160bfdd9838da2db48a1798eaa818eb",
                    "sha256:e2480d66c78208c399c0e41e9bd69834845be31d72bf687372007e846938d588",
                    "sha256:af6b8515305b977b6bb302b333db273a13fa8810e2eb07b3cbdd67730b314f62",
                    "sha256:5ded7848bc9abe6cae70d81b75d92a5aa169eabfb2d1431bb19ed0f760453c4e",
                    "sha256:c54d4f5fc674bb427c86fd005cc82f0bc0ace319a2417e3f629134e02ac0d2fd",
                    "sha256:156bc65c35fc71b9f41acb57d5776d7789aad064e8cc7a1a9b27bc2d8a839f1d",
                    "sha256:096c86f3dd9f3f596161bd701cb28b53563a0c0bf381bc0ddbb1d1ecd6a2ee74",
                    "sha256:433e78384da748dee2789829bd36bf6b051e18e95991e15316136a0e5c3877e8",
                    "sha256:55b9d0373575539755f4efac09fba7e538605b90647f52e846f2e4751e962fee",
                    "sha256:18f3b93fdbf44925fd00a457cff526dd58b97cc11af18ad7384233888ee40ca3",
                    "sha256:04c0de02f552913546050d0af9024a47e177ed682d42c56c3e5dfc3ba68bf296",
                    "sha256:a4f2c837a9adab9e546a98133631aea94475f04e3d50d22443cbb447bc25025e",
                    "sha256:6fd30727ebf0f477639e774ded843d45c5f32a8e0446da96c00fad4b133e724f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7450936259d5bbf1712763e3b8a1fbbfa249aec9c2b2c388fab75e73cadbf4a",
                    "sha256:f1227df13d2defe5a174e803767f0b17f6bd00cdfa3dedf5c43926c5a28f0aa8",
                    "sha256:e44d3c8b84f15d9902682ca6c0f526d085f542097ed7ae608f73912429f4d830",
                    "sha256:c0353006ef81257c93142cab58f5b7ad87c364ddb94a472e92d6a776c1fcc04c",
                    "sha256:d223d8552305565d23cc759bbb8d583c84492e03e32924e085119e982ee69dab",
                    "sha256:9af73189e50a752db0937b373d651d97bff09e14f4986cd536cb7aeae342d3fa",
                    "sha256:39cfd22227de2bfe3061d4934d2eb9e882dafb9ad3c5cfada2f39ca24f0fd45c",
                    "sha256:1684290bc3984ee70b77998fb7ef641d1be0ba129d005dd662cae437c5e58ac8",
                    "sha256:9479ecc26a6c1c0a7cc285d7af7f9cdc2915c7be4beee10753247f1a7e22713b",
                    "sha256:30cb397b3011b3dc70a220950903ec6d447f72b15a1e35c78ca1fa07d47cbc77",
                    "sha256:b774ec46171f7c5688240b7f1dcb2ce66224f0ab54528427937ddca53f2cdf00",
                    "sha256:b53b9dd6ca15569f8a593c6f167def90127386d703f3280d80a4f78964b247d3",
                    "sha256:6ff424f3dbfe41121ccb980d80836cdaa19bbf43d06a0c1f569ab52870b16b9a",
                    "sha256:c2c3aa28cc5563b0886ead8d213174c3ac5d16b36cbfa5b9e003894455275af6",
                    "sha256:485292b15c0ee912146563fe25614490869b05cff5e4c7a13c565d8f06a845ac",
                    "sha256:b05b3dac802d29342a257c163a43e87c165decc71801a056bda56965d0342007",
                    "sha256:5508e3b40d7cf84c68e22126f0111d0ec23fbca5784101ed6f8f76c24cad312d",
                    "sha256:f2519b86daf8502117b98a8c40b4884e5fcac5fd3ee74b72fd29a7369d5527ad",
                    "sha256:ffa9b0bd6bfdf2cba3a3522b9686dd455a295032505808cac4c726b6ccd398c6",
                    "sha256:2ffc85b9862d48113ad0ca12ba948087181959d37ad39d338dac505c455263f1",
                    "sha256:8facd24755e039a5f9270aa46982b948ca85f50d317c06205fc5a676b7091f2d",
                    "sha256:cb048a43e6a0481590c6291a520a8339a70acad329c173185caefbb504d44a62"
                ]
            }
        },
        "22.09": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.8.0.062",
                    "CUDA_DRIVER_VERSION=520.61.03",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.15.1",
                    "CUBLAS_VERSION=11.11.3.6",
                    "CUFFT_VERSION=10.9.0.58",
                    "CURAND_VERSION=10.3.0.86",
                    "CUSPARSE_VERSION=11.7.5.86",
                    "CUSOLVER_VERSION=11.4.1.48",
                    "CUTENSOR_VERSION=1.6.1.5",
                    "NPP_VERSION=11.8.0.86",
                    "NVJPEG_VERSION=11.9.0.86",
                    "CUDNN_VERSION=8.6.0.163",
                    "TRT_VERSION=8.5.0.12",
                    "TRTOSS_VERSION=",
                    "NSIGHT_SYSTEMS_VERSION=2022.3.1.43",
                    "NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "DALI_VERSION=1.17.0",
                    "DALI_BUILD=5838886",
                    "POLYGRAPHY_VERSION=0.38.0",
                    "LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.12.1a0",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "SHARP_COLL_ENABLE_CUDA=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f",
                    "PYTORCH_VERSION=1.13.0a0+d0d6b1f",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.09",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.6.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=44877844",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "44877844",
                    "com.nvidia.build.ref": "971f80cb919db17dd9109526e3f85ee6d3a663a5",
                    "com.nvidia.cublas.version": "11.11.3.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.6.0.163",
                    "com.nvidia.cufft.version": "10.9.0.58",
                    "com.nvidia.curand.version": "10.3.0.86",
                    "com.nvidia.cusolver.version": "11.4.1.48",
                    "com.nvidia.cusparse.version": "11.7.5.86",
                    "com.nvidia.cutensor.version": "1.6.1.5",
                    "com.nvidia.nccl.version": "2.15.1",
                    "com.nvidia.npp.version": "11.8.0.86",
                    "com.nvidia.nsightcompute.version": "2022.3.0.22",
                    "com.nvidia.nsightsystems.version": "2022.3.1.43",
                    "com.nvidia.nvjpeg.version": "11.9.0.86",
                    "com.nvidia.pytorch.version": "1.13.0a0+d0d6b1f",
                    "com.nvidia.tensorrt.version": "8.5.0.12",
                    "com.nvidia.tensorrtoss.version": "",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2022-12-08T22:38:30.892068207-08:00",
            "history": [
                {
                    "created": "2022-09-01T23:46:26.800519282Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff6963f777661fb16cc12fb04a97c558bd94768a6e4ab5bd90e01f3086818853 in / "
                },
                {
                    "created": "2022-09-01T23:46:27.150780363Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-20T03:41:39.37433507Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:06:25.096041083Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.096041083Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.096041083Z",
                    "created_by": "ENV CUDA_VERSION=11.8.0.062 CUDA_DRIVER_VERSION=520.61.03 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.096041083Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.8.0.062 CUDA_DRIVER_VERSION=520.61.03 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "RUN |2 CUDA_VERSION=11.8.0.062 CUDA_DRIVER_VERSION=520.61.03 /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:06:25.397590199Z",
                    "created_by": "ENV NCCL_VERSION=2.15.1 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.6.0.163 TRT_VERSION=8.5.0.12 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.3.1.43 NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "RUN |16 CUDA_VERSION=11.8.0.062 CUDA_DRIVER_VERSION=520.61.03 NCCL_VERSION=2.15.1 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.6.0.163 TRT_VERSION=8.5.0.12 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.3.1.43 NSIGHT_COMPUTE_VERSION=2022.3.0.22 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.15.1 com.nvidia.cublas.version=11.11.3.6 com.nvidia.cufft.version=10.9.0.58 com.nvidia.curand.version=10.3.0.86 com.nvidia.cusparse.version=11.7.5.86 com.nvidia.cusolver.version=11.4.1.48 com.nvidia.cutensor.version=1.6.1.5 com.nvidia.npp.version=11.8.0.86 com.nvidia.nvjpeg.version=11.9.0.86 com.nvidia.cudnn.version=8.6.0.163 com.nvidia.tensorrt.version=8.5.0.12 com.nvidia.tensorrtoss.version= com.nvidia.nsightsystems.version=2022.3.1.43 com.nvidia.nsightcompute.version=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:51.79865986Z",
                    "created_by": "ENV DALI_VERSION=1.17.0 DALI_BUILD=5838886 POLYGRAPHY_VERSION=0.38.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:52.153720913Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:08:52.391884673Z",
                    "created_by": "RUN |19 CUDA_VERSION=11.8.0.062 CUDA_DRIVER_VERSION=520.61.03 NCCL_VERSION=2.15.1 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.6.0.163 TRT_VERSION=8.5.0.12 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.3.1.43 NSIGHT_COMPUTE_VERSION=2022.3.0.22 DALI_VERSION=1.17.0 DALI_BUILD=5838886 POLYGRAPHY_VERSION=0.38.0 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:08:52.391884673Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:52.74190239Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:08:52.74190239Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:52.74190239Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:08:53.089962575Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:22:14.884620358Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.1a0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.1a0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.214914144Z",
                    "created_by": "ENV SHARP_COLL_ENABLE_CUDA=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:22:17.568660497Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:27:20.005801732Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.1a0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T18:27:20.005801732Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T18:27:20.276685014Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.1a0 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f PYTORCH_VERSION=1.13.0a0+d0d6b1f PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.09",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.13.0a0+d0d6b1f",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          unzip          sox          libsndfile1          libpng-dev          libhdf5-103          libhdf5-dev          libblas3          liblapack3          rapidjson-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:10:09.625395399Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:17:40.517242856Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -O ~/miniforge.sh https://github.com/conda-forge/miniforge/releases/download/4.13.0-1/Miniforge3-Linux-$(uname -m).sh  &&      chmod +x ~/miniforge.sh &&      ~/miniforge.sh -b -p /opt/conda &&      rm ~/miniforge.sh &&      /opt/conda/bin/conda install -y python=$PYVER libstdcxx-ng==9.4.0 pip==21.2.4 cmake conda-build setuptools==59.5.0 numpy==1.22.2 pyyaml scipy==1.6.3 ipython ninja spacy mock numba==0.53.1 openblas==0.3.20 &&      if [[ $TARGETARCH = \"amd64\" ]] ; then /opt/conda/bin/conda install -y mkl==2020.4 mkl-include==2020.4 ; fi &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:17:40.517242856Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:17:45.092883628Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:17:47.050903801Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install tqdm --upgrade # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:17:51.281318164Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir protobuf==3.20.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:17:51.281318164Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:17:57.511106184Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:25:22.537146503Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=3.4.11 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import *; print(get_python_lib())\")           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:26:11.482683812Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github  && pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:26:21.33129299Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir tensorboard # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:26:21.925228028Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\")  && sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\"  && test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:26:21.925228028Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:29:46.923676113Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:29:47.457920976Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:29:47.457920976Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:29:47.457920976Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:29:47.457920976Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:29:47.457920976Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:42:18.814358746Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:42:21.286028676Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir typing_extensions # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:42:40.242178917Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir \"librosa>=0.6.2\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir expecttest # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T19:42:42.632883192Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T20:46:04.268453496Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     CFLAGS=\"-g0\"     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install &&     python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T20:46:20.468622231Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T20:46:20.468622231Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T20:46:43.316716773Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T20:46:43.619710141Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:47:51.562182003Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( cd text && python setup.py install && python setup.py clean)  && ( cd pytorch/functorch && python setup.py install && python setup.py clean )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:48:19.655395025Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:09.625759743Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /opt/conda --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && pip install --no-cache-dir --ignore-installed llvmlite  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:09.625759743Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T21:50:09.625759743Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T21:50:10.105289775Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:10.418121473Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:11.683285655Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:12.772929351Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:14.843186586Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:57.186770885Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh 2>/dev/null | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL 2>/dev/null | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget --quiet $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:50:57.186770885Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T21:51:11.546489605Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.09 PYTORCH_BUILD_VERSION=1.13.0a0+d0d6b1f TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:51:14.768220065Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:51:14.768220065Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T21:57:09.942153133Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T21:57:09.942153133Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/conda/lib/python3.8/site-packages/torch/lib:/opt/conda/lib/python3.8/site-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T21:57:09.942153133Z",
                    "created_by": "ENV PATH=/opt/conda/lib/python3.8/site-packages/torch_tensorrt/bin:/opt/conda/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:02:59.943057143Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /tmp/te_wheel/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T22:02:59.943057143Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:02:59.943057143Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:03:02.91009155Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=44877844",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "LABEL com.nvidia.build.id=44877844",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T22:03:03.240588583Z",
                    "created_by": "LABEL com.nvidia.build.ref=971f80cb919db17dd9109526e3f85ee6d3a663a5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-08T21:49:51.377219025-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-08T21:49:51.377219025-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T21:49:51.383358112-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:02:28.548885649-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&     cd apex &&     git checkout 2b0e8371113fe70758f1964c40bf7dbe304fd9e6 &&     pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:02:30.346939767-08:00",
                    "created_by": "RUN /bin/sh -c pip uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:02:30.353381745-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:02:30.359711002-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:05:08.317136481-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:05:08.323487648-08:00",
                    "created_by": "WORKDIR /tmp/trt_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:08:43.231225226-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/TensorRT.git &&     cd TensorRT/tools/onnx-graphsurgeon && python setup.py install &&     cd ../pytorch-quantization &&     python setup.py install &&     rm -fr  /tmp/trt_build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:08:43.23762653-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:08:43.244854658-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:10:37.953469548-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:10:37.960550224-08:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:10:46.165499099-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:10:46.196378337-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:37:59.407039812-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:37:59.407039812-08:00",
                    "created_by": "ARG NEMO_VERSION=1.13.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-08T22:38:00.391765455-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.13.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.305816479-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.13.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" &&     sed -i \"s/_module_available(\\\"torchtext\\\")/False/g\" /opt/conda/lib/python3.8/site-packages/pytorch_lightning/utilities/imports.py &&     python -c \"import nemo.collections.asr as nemo_asr\" &&     python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.312682932-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.336685922-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.370260846-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.409974458-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:29.446151469-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:30.115136158-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.13.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-08T22:38:30.892068207-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.13.0 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b40ed86654e59e1012e1716d5384910f8c3bb58274b7b00fca564a53e9897ba3",
                    "sha256:321273f9331a1ad48394d75423ac4ef4b607741429d70f803045535169ebdbba",
                    "sha256:83572e1db3f35ed54890a1bd26e7a5d13550a0a4f98999ec7bc20ce24cccc652",
                    "sha256:93b81035820478db56e12a99b93698fa032a9b897bf4c9ffd23eda635513327a",
                    "sha256:81aa0f3f59d295039e67d7440325a6c103c1a78de080311e2fa2e76902eb50b3",
                    "sha256:c7b0ee60af2ecbe5fd4aee9892f55ebf05493f7481ba37f3d24baa79d35b7a6e",
                    "sha256:0f3fb11223173204d5ab0d14214cc5af5ce3356dbf9d97a157f8971ce8525bb1",
                    "sha256:e1b4af2ae5b435a827ae2c2957dafc965174e21c494b20bbe605f9e015bb5bd0",
                    "sha256:29e53d028fecf70fa7a3ace7e3174cc7396cf69ea9fa2aa0a2bae00953a358d5",
                    "sha256:d16ae764051f58dc6fb0a08d71503fbb448f06616a191669a970f352a8bbc9d4",
                    "sha256:2e92a0c3c6b553322bc217d9e6e2b3c928a39e7d837f345113af52126e8cfc5c",
                    "sha256:c1a92b14e682dfdc88f51cff9986b256689638c659fa7f09f9a32ed49f96210e",
                    "sha256:481248ac5b5220f2cce665c2616b0e848a854885a948b4843a4e545db7f19eac",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:efa0a84769f0337d142bf14c6077381dcb8e54ec558f7e2d7c4edff521646a9c",
                    "sha256:6cb09c35866d29162ff772dcad9156c2d9f21540b38ccd36571702e7dfa9bf37",
                    "sha256:598c7225b9b1d1e33e8adcd400ffe5452106b6592e59414e0289a4047a7a90a6",
                    "sha256:4bbb87f69b084dd97139553d8c5fb167fb3f416849a2534fa8278756af637997",
                    "sha256:c9bb7032ddbc6a8b7d3d94b4c65d655d8ad7ce22e3b35be208636bb688f52b74",
                    "sha256:9252f258b43a1857cea47e3ea70bc994da984a03bff6417659907d82978106d6",
                    "sha256:8fb6469351c7abd8f8b2855305aa28837fe818c7d98573bf0d14ee7f8bad76f7",
                    "sha256:4fb91d206f8b51a747905843ae3901d3943fd3988555442e12865e33be067a9e",
                    "sha256:eec52f349d2f027bed4728af78b20c25475abc6aa7a51481db4d5ec6076d9c01",
                    "sha256:908a2f5ad5990b5370c4cf026240fa3161944f004763381021e7fe173820cbc2",
                    "sha256:c32d2d0b011d03c7e178d7d1de0e9d0b4378e45302034d58687dbe69d1473937",
                    "sha256:06ecfedd8359ab71a66a3ec9cf93086327d8ca9529c9fe36daf4e482aa61cede",
                    "sha256:8cc2e0216f344fe5ef2954b630ff1347154aa0e99bda65e5f0303b013bcab0ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f8933938666c0049c1aa73955276b2e2866b87dcc6cc8390f0a3bc8332bac48",
                    "sha256:c24fcf55ecc7467b1e719e4a648617d2a22fe29896cfccd6e9bedbb1511994e6",
                    "sha256:2d8a499acc92132f2bf3c87d719095f3b91a31aae184107bbdf81f9d48ee0a4d",
                    "sha256:291f618d0eb029a9b339561afc7562e7727d8ed5c6d29d0df697213d9d70e96d",
                    "sha256:1f2950d19dff4f7642890acb0e5e335a6fe25f091784849400f8e9cdb1ad0433",
                    "sha256:252286039c8a25186cee097795ddf450cb002738e9c9fca5acadc1b04ab26ac8",
                    "sha256:efefebb371e348c30c7cb814c3f5181f8a6e6ba3884a1d4b1dcf030eeda88618",
                    "sha256:33e61729955f80105798e258dfbcdf4848e1391260a00daefd9a840f3bad7e5c",
                    "sha256:7eb8a3b403e2b57c35ac371142c08ca3514b77fb1dbd7846de7d7499c9b90885",
                    "sha256:7730fc6aeed0f7f6f4911dae8f3ce7dc8e8bdcf84107e9a10ecd43940ee9b733",
                    "sha256:c9e37f2449ab7a3631115340d6ea46d77c5677a95a5829574c672fcc68d44470",
                    "sha256:bd7a410d698f41a9c5aa160720a5548773abb71f158d6d34e47c3364ee2ac21c",
                    "sha256:0986f20ee9ec3c4a151d71e8b9b586e678ce7dcda46fcc9d966daca819eaa434",
                    "sha256:9b06cdb8675e2ec7a8e45a51840966011d5ecbeac5cc5ef7c60e1c7e4f5973e8",
                    "sha256:5afc0b4f098d1b346450734d973e5938c891169f69124d2fbe21397f24d929a0",
                    "sha256:d3deb371ad901fcbc4900c43d8fe3e810fac1e463ee6bb90207db30dba4c0e02",
                    "sha256:61ea88eaf4430e1c86f08a6368601e61a96ef5a8177b20133dd4e601684232d4",
                    "sha256:73ffbbfe38e94b0ae2a3548f3a069a40ec32177cd4135ddb196a67377aef2707",
                    "sha256:b19eda204399bf9112138fadd16f787996b742f752861212206111617eca7d54",
                    "sha256:f3f2cfdbbee7f64f2a4b3599d29dbacee9d3428fd5b24258f025abea0bf922e6",
                    "sha256:2d18d42fc8e5bbfed6ca4eef51a67f4d61565408349ae4484bab8773fe7839f4",
                    "sha256:f21641159cb1607c481add0091f96b4955f17ebd181f34d69c81fdfb998d7298",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe27f19d7618cbea21766b5452ba19f3d8876cd543be57fe30dd99040e6a8dbe",
                    "sha256:1df2e7f878334f8f3bcc756c8d957ac323c7dc4b02eac5d4e4bf5f18bc26f9ec",
                    "sha256:e302efb9013c6e8b79413b44c0a5cf10f92f30e95ef08b5375d8a294257c5654",
                    "sha256:6245a73b0b02088f104dc0acab85213885a33eb062fa9cc7cb7de1650ced783c",
                    "sha256:acf7fb80db0f0c181f02f1748813845378eea150237d227554b744f4947b0b48",
                    "sha256:a7bd269273d282f53c6632b0a0bfedceef919e3c0e472697a7cd8cef3360b8c8",
                    "sha256:39783257efd1e66234e7aea2def0b4f28ba074827bfc25dc36b007c23f4f51a4",
                    "sha256:61ef55cf708ca791fa80718855af29fe29bf7cd0bc3987e87a11fc9bb06a8cbc",
                    "sha256:832c08471714e8eb802c8b6007189431e29e1bacea447da9eb7f728055089fb1",
                    "sha256:9af571cc94dc89363a0575f025758fd6d134b0f321782b20a1d0b1a93be284f1",
                    "sha256:78c70f68451383ad694285fe86d87b7d00f8349b3d7270bbe737d704c5d71ea1",
                    "sha256:94648ba5a3573eea81b17c56fd067cb148f5c276138fa9386ef7aaf80684b20e",
                    "sha256:47a95ffaf37bb0749038802deb11e4e53c1c098aa3a132c516097494b9712af6",
                    "sha256:ec67c55c9a65f6335bae52edf45656612c1b4c7183966ed5cb21658114f52296",
                    "sha256:efe05a4bcf30f65f0b64f3d308a848bd8ecb5a059df1c3ba4e93cb162ecfa4ae",
                    "sha256:48577cf9d68e144e1e2bbed4c616627c628b9d834d7cc25a5e76b56bae232d88",
                    "sha256:05f28baef2095f0e8f35981ee0bfbd8df73e866a0dd54572f08152606234c4ea",
                    "sha256:0b83b7db9dc34825b40697fc8098753579d88153375f8f50c29afcf5f536f281",
                    "sha256:6cd61dd21f3ecdbb531820f2e7be211f2b4b14101bede20f9e5a877324a60556",
                    "sha256:ba97204fe9cdb9712541fd1bf7a25b4bead93bb927fc5b622aa9cd931bac52d6",
                    "sha256:bcea5715755559ef87ed944dfe2da806f4ccca233c3035148e07867f9ff052b1",
                    "sha256:bc6ce9f431aeaf0fdfdab3fb90b32baaae8f58f51ed9d040a5e8fee464aa66f2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "22.11": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.8.0.065",
                    "CUDA_DRIVER_VERSION=520.61.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.15.5",
                    "CUBLAS_VERSION=11.11.3.6",
                    "CUFFT_VERSION=10.9.0.58",
                    "CURAND_VERSION=10.3.0.86",
                    "CUSPARSE_VERSION=11.7.5.86",
                    "CUSOLVER_VERSION=11.4.1.48",
                    "CUTENSOR_VERSION=1.6.1.5",
                    "NPP_VERSION=11.8.0.86",
                    "NVJPEG_VERSION=11.9.0.86",
                    "CUDNN_VERSION=8.7.0.80",
                    "TRT_VERSION=8.5.1.7",
                    "TRTOSS_VERSION=22.10",
                    "NSIGHT_SYSTEMS_VERSION=2022.4.2.1",
                    "NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "DALI_VERSION=1.18.0",
                    "DALI_BUILD=5920076",
                    "POLYGRAPHY_VERSION=0.42.1",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.12.2tp1",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.13.0a0+936e930",
                    "PYTORCH_VERSION=1.13.0a0+936e930",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.11",
                    "PYVER=3.8",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "DEFAULT_INTEL_MKL_DIR=/usr/local",
                    "INTEL_MKL_DIR=/usr/local",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TRANSFORMER_ENGINE_VERSION=0.2",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=48503342",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "48503342",
                    "com.nvidia.build.ref": "c7c5f2eb39226877ab8b81bf80c6c99a8f9be062",
                    "com.nvidia.cublas.version": "11.11.3.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.80",
                    "com.nvidia.cufft.version": "10.9.0.58",
                    "com.nvidia.curand.version": "10.3.0.86",
                    "com.nvidia.cusolver.version": "11.4.1.48",
                    "com.nvidia.cusparse.version": "11.7.5.86",
                    "com.nvidia.cutensor.version": "1.6.1.5",
                    "com.nvidia.nccl.version": "2.15.5",
                    "com.nvidia.npp.version": "11.8.0.86",
                    "com.nvidia.nsightcompute.version": "2022.3.0.22",
                    "com.nvidia.nsightsystems.version": "2022.4.2.1",
                    "com.nvidia.nvjpeg.version": "11.9.0.86",
                    "com.nvidia.pytorch.version": "1.13.0a0+936e930",
                    "com.nvidia.tensorrt.version": "8.5.1.7",
                    "com.nvidia.tensorrtoss.version": "22.10",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2023-01-04T11:14:23.646039265-08:00",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-31T20:27:51.825118799Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-17T23:31:17.167317838Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.167317838Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.167317838Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.167317838Z",
                    "created_by": "ENV CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.167317838Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-17T23:31:17.496452129Z",
                    "created_by": "ENV NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.80 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.10 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "RUN |17 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.80 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.10 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.15.5 com.nvidia.cublas.version=11.11.3.6 com.nvidia.cufft.version=10.9.0.58 com.nvidia.curand.version=10.3.0.86 com.nvidia.cusparse.version=11.7.5.86 com.nvidia.cusolver.version=11.4.1.48 com.nvidia.cutensor.version=1.6.1.5 com.nvidia.npp.version=11.8.0.86 com.nvidia.nvjpeg.version=11.9.0.86 com.nvidia.cudnn.version=8.7.0.80 com.nvidia.tensorrt.version=8.5.1.7 com.nvidia.tensorrtoss.version=22.10 com.nvidia.nsightsystems.version=2022.4.2.1 com.nvidia.nsightcompute.version=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.338395079Z",
                    "created_by": "ENV DALI_VERSION=1.18.0 DALI_BUILD=5920076 POLYGRAPHY_VERSION=0.42.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:03.715345014Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:19:03.974519627Z",
                    "created_by": "RUN |20 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.80 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.10 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 DALI_VERSION=1.18.0 DALI_BUILD=5920076 POLYGRAPHY_VERSION=0.42.1 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:19:03.974519627Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:04.351842283Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:19:04.351842283Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:04.351842283Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:19:04.736510593Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:31:15.727001956Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.2tp1 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.2tp1 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:17.992316556Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:31:18.389111594Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:36:23.02881144Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.2tp1 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T00:36:23.02881144Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T00:36:23.303588592Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.12.2tp1 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.13.0a0+936e930 PYTORCH_VERSION=1.13.0a0+936e930 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.13.0a0+936e930",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:23.31748157Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:30:30.826777164Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:30:38.90683462Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==59.5.0 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:30:38.90683462Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:30:38.90683462Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:32:23.1626761Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:32:23.1626761Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:32:30.98720169Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-19T01:32:30.98720169Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:32:30.98720169Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-19T01:32:30.98720169Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:21:50.105818288Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi &&     if [[ $TARGETARCH = \"amd64\" ]] ; then find /usr/local/ -name libmkl_gnu_thread.so.2 -type f -exec rm {} \\; ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:22:24.27577963Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:22:25.013581535Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:22:25.013581535Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:26:17.22392716Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:26:17.780838916Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:26:17.780838916Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:26:17.780838916Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:26:17.780838916Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:26:17.780838916Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:32:23.042756069Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV DEFAULT_INTEL_MKL_DIR=/usr/local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV INTEL_MKL_DIR=/usr/local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T03:44:46.655338086Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T05:16:15.373862255Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T05:16:32.191467879Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T05:16:32.191467879Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T05:17:07.051033907Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T05:17:07.438141289Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:10:04.257748627Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/functorch && python setup.py install && python setup.py clean )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:10:43.652023308Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.0.1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:25.62973435Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /usr --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/raft-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3 && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:25.62973435Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:12:26.183559107Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:26.532808521Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:27.680977033Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:31.709695301Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:12:33.443070506Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:13:29.266104138Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:13:29.266104138Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:13:46.646242314Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.11 PYTORCH_BUILD_VERSION=1.13.0a0+936e930 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:14:02.113216911Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:14:02.113216911Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:19:54.377327793Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:19:54.377327793Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:19:54.377327793Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:19:54.377327793Z",
                    "created_by": "ENV TRANSFORMER_ENGINE_VERSION=0.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:52.749423443Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --upgrade git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:30:52.749423443Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:52.749423443Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:55.655229895Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=48503342",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "LABEL com.nvidia.build.id=48503342",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-20T06:30:56.006920018Z",
                    "created_by": "LABEL com.nvidia.build.ref=c7c5f2eb39226877ab8b81bf80c6c99a8f9be062",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-04T10:23:36.075077793-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-04T10:23:36.075077793-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get upgrade -y &&     apt-get install -y     libsndfile1 sox     libfreetype6     swig     ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:23:36.081343711-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:40:56.775628613-08:00",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/apex.git -b 22.11-devel &&     cd apex &&     pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:40:58.00802441-08:00",
                    "created_by": "RUN /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:40:58.014086072-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:40:58.020424126-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:43:33.372026297-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:43:33.379180282-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:43:33.387321793-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:45:35.902856216-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:45:35.910064673-08:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:45:44.959230692-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T10:45:44.9868285-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:13:49.274105134-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:13:49.274105134-08:00",
                    "created_by": "ARG NEMO_VERSION=1.14.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-04T11:13:50.073202772-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:00.998486894-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:14.387552384-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:21.855997349-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c pip install numba==0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:21.864502686-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:21.891256377-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:21.924165535-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:21.959896514-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:22.001624041-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:22.732565748-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-04T11:14:23.646039265-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.14.0 /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:67abb95254eefddf2306098b42f4330673552897a1b90be1ca635d5f6aa97552",
                    "sha256:2c4e7d9e38c09c972f92307a35918166e2709df8c6b997bcdd3c1733f4fc2ceb",
                    "sha256:f874925be13d89723196a822265d1e8f6012014e80a600c79308281fdb7d38e3",
                    "sha256:03a82e76641b5775d46ce96b59d5b91a32b8dbb39a2657567a33660304338212",
                    "sha256:764cbe4d1ae68b3dc77bcf5fe0a23b57b4f07150e434b7ba06ab139332b00173",
                    "sha256:9a03c5ba8f95013f034627c99b5da28027a69d2fecec72463b485605c99d99ed",
                    "sha256:4616162d4e6a3ef490e770359a65618f92fe39c8efaab72d013d9eba883fe2dc",
                    "sha256:3204b933fb0b3d047b58d1f11a97a2190b62f2e9f9e2ad8f616325b67513782e",
                    "sha256:fe17ea05bcc3ffa2ebf6a6b1211977362d7d2bea86fd2c4dd6cdf9353fbff53c",
                    "sha256:ed1a31ee03b754af785d2b3fc00cb7a66ea370688ccd7c6f82959a9b2dbf779e",
                    "sha256:23076d2c79f0d9ac75ddd15522f774236dcbb500d7a9ce9a001c2d269bf3bff4",
                    "sha256:7173bbe6139c24bf18b8657e2174022009dd3d97b57fe224e13f043b07359416",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91683c1d53f6f08122a94743630cd378759960e7440455bfd42c7478329054a5",
                    "sha256:8fe0e8fcf118cd226936dd429b6d1f8a77d212c62ab7378e72435360115997c7",
                    "sha256:4c1807fee7eba529c7739e0dc0425252e7f570b05851476b744951f13917a77d",
                    "sha256:6c5490166b8eaab2020a58f7166162f2496c8ce4cd0982e9ff6ccf528a64fd1e",
                    "sha256:7f1de8c3d2c5f3c1503bc4a907523d12176a58e725beaf9fecb625392189ac03",
                    "sha256:05b57ab939daa667d99fd7b92e3ba8a68b5584d28746f99bae6e5746f0032c77",
                    "sha256:d35eeabec32a8a763c7ffd08197f23bfb5b423221645ed07b44a246075e9f447",
                    "sha256:9746167561abf2109d5154d0c8fd47a2a4619b82a02bdf643a8fb77c62fcd8d3",
                    "sha256:1c88b16533e8cbd3cce29d02f0239dd971b6bc1bb6d2caf43e0f63669bb5c503",
                    "sha256:d8d6f45304e02cfd8d71469ef062b718f69bb7d3bf1fefaa983c8cb30c12df48",
                    "sha256:6f8dc0c6ef6642a6d810c80fa91c0b4e92733c601583fa8b61124df60ad67a50",
                    "sha256:4c939a39446cdc019905308b2d04d2a39ad19ff94bda52608441a2adb7002a78",
                    "sha256:d09f3a95156684efd3446308d67fcc5e9fb2bedc9146b8649c75c6cdcccdd5f4",
                    "sha256:4de7cba7e47b4bea9380dec4c0b2754d6741ab0611ef22c585a3165e0fd6a4d3",
                    "sha256:b936a3be23b95bc1a0c088c926d64217e04976f188ae5f52c27cf1151ec486ba",
                    "sha256:e06412cea4724dc7642a122bccbc6283aed67005fb597204fafbf71c186f3529",
                    "sha256:70722d3eb646c4c08ec962addd3d0b4062ecbac4bfc369992c8095e1ca92d301",
                    "sha256:0c5f7c3b44b3493a921b58c31aaeee76b4f51902b5ad34bc9dc215054acad570",
                    "sha256:61e71b9702a37034329804bcb91ee763da84363e447463105889d73c4ad5282e",
                    "sha256:1bd182a362fd93805c335861bbde2e811279f637b18af76afe2c552ec937ef15",
                    "sha256:02d6a30fe40b8ddfef0fa12d0a5ebfc3c699cdfe9131f1f9f95f1fed90a77f81",
                    "sha256:273a588edd14f3d0f3db099fe3d3d0047bca457f7b8c8653622f400f429519f1",
                    "sha256:f48ed97da99c130248f3302b72d58ee45d2747314d4c429d3b0b646dc35b762c",
                    "sha256:fc6d7f98823adb4e80af44d783bdcf350ef803817881303624807374cdc0092f",
                    "sha256:5bcb17ef16b725c224acbc18ae5b849fff06dd71e8ab09a1fb37a9fefafefbb1",
                    "sha256:b31d8d852ee8a302b705ef5fa51878dfe8cb6594b98d8353de11c2ae14d87ef7",
                    "sha256:14beee95e42ecc10fa4d7743c67a82ccb577d09787c6829320e4d326adfbfff3",
                    "sha256:9682d21ad8ca0e1dfe070bd96b255f94cfba35f95e5cdd5ac97160e3f92e2cf5",
                    "sha256:f44c40538e07d2b4c95b49c9e3f1cc934442428d03f7b4c97c08e116e08a765e",
                    "sha256:80097208d21e42d4e7965541fd48f87649db32dd86f83bc8eefe1c039732407e",
                    "sha256:e91bb044ffd50c019bf719ca582421056e854d871a606d471b4417c93f4cea05",
                    "sha256:27ecb31a6b2207108dfe063c5b7384b1c700248e4a04193f6dd9c85e68473003",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3b185f6ca9cde70d7fa3fb39cf8c23a794c19306c60bde7486d35170027d34da",
                    "sha256:69f1ebe3d00682f74f8c5620d937003ad381d9b15d4c8ee8bcca818041ceea50",
                    "sha256:c02b418a4b2063c07ed8e3d943f45ee8e9a4b1271bdb2452d0a6ec53f439fc5c",
                    "sha256:71a25bff7900461efa774722037b30e86cd731a97841610169d4d53442ededf9",
                    "sha256:e8682f45e628b31ac7b6d794e79ef17e5174b448b2ce851125da01e0ab51c274",
                    "sha256:74530987a7eb90cb5571a248206557e5fae5e53ae8d2f9af0dd0a97c4833a422",
                    "sha256:59b3d1ce195a8a4393c00f31d4206941f02bec70348d6bccd8fc7bbcf3ae4905",
                    "sha256:b537884af41fe6c3b629951f12c855aba05bc028e3f9791ee913ffb2e447d17f",
                    "sha256:b7bbac657635783731689075bce89ac81195fb0dde22a8885ffc0f76d5d9e0c0",
                    "sha256:e414b7489d438d0627712586b61f257ab633b1f3171bf5279df7624475791fa0",
                    "sha256:8fc954c8a8245755e7e2aa60674b104d6113a291e2eeb7e5371775b7a2a9e0ef",
                    "sha256:f5f7229823c167be4c30acfeb38ae3ecdcc04dd12bc8108c313454ee054a2c09",
                    "sha256:993181f704be700e4a74d5639bb98a146a3bdb5ef511d5ab6943d6ffea730e24",
                    "sha256:c540cf38542d193bf571bea5fe906a27c8863007c5e321d74a8bead787815815",
                    "sha256:baea626b98200ad5d85f695666e4ee5d126550a38c2d0b583077fcbc17e7664e",
                    "sha256:3152c7e1ca4d72db1635fe24c422218968bec2c1a5f6a51c059e599b1ae28adc",
                    "sha256:7b2ded618ccc63988c89e21f1ba76d0e3f5c2e0514889fce92daba05866c2237",
                    "sha256:ed0dbcbe2f2477236fe7ab5389244fce2702d0a2509dbf3a0143c77c2bb544cb",
                    "sha256:61c6ce8e881e04f01c5c1666fb5814179764ab59f221a5fc711d0656f355987e",
                    "sha256:9571b2fad184495778a75ea1660cbb1cfc5b1422a051cf856e8720cc70dd2aaf",
                    "sha256:be79ee2a581442fce645d6ac05a80b22b6c121ede738d4a85d6b9a9d579d88cc",
                    "sha256:94328ac99903da7acfc84563932c9b72ac954e1c0d2da37d8dc140d0bd1a0d27",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "22.12": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.8.0.065",
                    "CUDA_DRIVER_VERSION=520.61.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.15.5",
                    "CUBLAS_VERSION=11.11.3.6",
                    "CUFFT_VERSION=10.9.0.58",
                    "CURAND_VERSION=10.3.0.86",
                    "CUSPARSE_VERSION=11.7.5.86",
                    "CUSOLVER_VERSION=11.4.1.48",
                    "CUTENSOR_VERSION=1.6.1.5",
                    "NPP_VERSION=11.8.0.86",
                    "NVJPEG_VERSION=11.9.0.86",
                    "CUDNN_VERSION=8.7.0.84",
                    "TRT_VERSION=8.5.1.7",
                    "TRTOSS_VERSION=22.12",
                    "NSIGHT_SYSTEMS_VERSION=2022.4.2.1",
                    "NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "DALI_VERSION=1.20.0",
                    "DALI_BUILD=6562491",
                    "POLYGRAPHY_VERSION=0.43.1",
                    "TRANSFORMER_ENGINE_VERSION=0.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_VERSION=1.14.0a0+410ce96",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=22.12",
                    "PYVER=3.8",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=49968248",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "49968248",
                    "com.nvidia.build.ref": "a58f3f606e2d7f2b5a9a59e7b305e0966e5e3d34",
                    "com.nvidia.cublas.version": "11.11.3.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.84",
                    "com.nvidia.cufft.version": "10.9.0.58",
                    "com.nvidia.curand.version": "10.3.0.86",
                    "com.nvidia.cusolver.version": "11.4.1.48",
                    "com.nvidia.cusparse.version": "11.7.5.86",
                    "com.nvidia.cutensor.version": "1.6.1.5",
                    "com.nvidia.nccl.version": "2.15.5",
                    "com.nvidia.npp.version": "11.8.0.86",
                    "com.nvidia.nsightcompute.version": "2022.3.0.22",
                    "com.nvidia.nsightsystems.version": "2022.4.2.1",
                    "com.nvidia.nvjpeg.version": "11.9.0.86",
                    "com.nvidia.pytorch.version": "1.14.0a0+410ce96",
                    "com.nvidia.tensorrt.version": "8.5.1.7",
                    "com.nvidia.tensorrtoss.version": "22.12",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2023-02-01T10:52:55.964566217-08:00",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-12T21:08:57.997787381Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "ENV CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.455449732Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "RUN |3 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:27:34.716127393Z",
                    "created_by": "ENV NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "RUN |17 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.15.5 com.nvidia.cublas.version=11.11.3.6 com.nvidia.cufft.version=10.9.0.58 com.nvidia.curand.version=10.3.0.86 com.nvidia.cusparse.version=11.7.5.86 com.nvidia.cusolver.version=11.4.1.48 com.nvidia.cutensor.version=1.6.1.5 com.nvidia.npp.version=11.8.0.86 com.nvidia.nvjpeg.version=11.9.0.86 com.nvidia.cudnn.version=8.7.0.84 com.nvidia.tensorrt.version=8.5.1.7 com.nvidia.tensorrtoss.version=22.12 com.nvidia.nsightsystems.version=2022.4.2.1 com.nvidia.nsightcompute.version=2022.3.0.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.559052205Z",
                    "created_by": "ENV DALI_VERSION=1.20.0 DALI_BUILD=6562491 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:50.707490483Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.973028669Z",
                    "created_by": "RUN |21 CUDA_VERSION=11.8.0.065 CUDA_DRIVER_VERSION=520.61.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.15.5 CUBLAS_VERSION=11.11.3.6 CUFFT_VERSION=10.9.0.58 CURAND_VERSION=10.3.0.86 CUSPARSE_VERSION=11.7.5.86 CUSOLVER_VERSION=11.4.1.48 CUTENSOR_VERSION=1.6.1.5 NPP_VERSION=11.8.0.86 NVJPEG_VERSION=11.9.0.86 CUDNN_VERSION=8.7.0.84 TRT_VERSION=8.5.1.7 TRTOSS_VERSION=22.12 NSIGHT_SYSTEMS_VERSION=2022.4.2.1 NSIGHT_COMPUTE_VERSION=2022.3.0.22 DALI_VERSION=1.20.0 DALI_BUILD=6562491 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:50.973028669Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.051429207Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:30:51.107426701Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:27.253333752Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.659356062Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:43:30.755455377Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:49:05.645380886Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:49:05.645380886Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:49:06.220038569Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 PYTORCH_VERSION=1.14.0a0+410ce96 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=22.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.14.0a0+410ce96",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:31.940119639Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:39.671098802Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==59.5.0 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:51:51.778989029Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:42.484749012Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:53:42.484749012Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:53:53.140356559Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:55:27.22941292Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:55:59.45244931Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:56:00.244104718Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:56:00.244104718Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.440413686Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T23:59:26.966901296Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:05:07.566046638Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T00:17:33.470106086Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T01:54:25.243216915Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:54:46.725301767Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:54:46.725301767Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T01:55:24.516855036Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T01:55:24.993465068Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:05.238360536Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:05.848158773Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c patch -d / -p1 < /opt/pytorch/mpmath_CVE-2021-29063.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:52:46.015996375Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:13.268573904Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CUDA_HOME/lib:$CUDA_HOME/lib64\"  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RAFT-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/RMM-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUMLPRIMS_MG-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUML-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUGRAPH_OPS-*.tar.gz  && tar --exclude=\"*.a\" -C /usr --strip-components=1 -xf /rapids/CUDF-*.tar.gz  && tar --exclude=\"*.a\" --exclude=\"bin/xgboost\" -C /usr --strip-components=1 -xf /rapids/xgboost-*.tar.gz  && CPATH=\"${CPATH}:/usr/local/cuda-${CUDA_VERSION%.*.*}/targets/sbsa-linux/include/\" pip install --no-cache-dir         /rapids/cuda_python-*.whl         /rapids/cupy_cuda*.whl         /rapids/dask-*.whl         /rapids/distributed*.whl         /rapids/dask_cuda*.whl         /rapids/treelite*         /rapids/scikit_learn*.whl         /rapids/rmm*.whl         /rapids/pyarrow-*.whl         /rapids/ucx_py-*.whl         /rapids/cuml-*.whl         /rapids/cugraph-*.whl         /rapids/cudf-*.whl         /rapids/dask_cudf-*.whl         /rapids/pylibraft-*.whl         /rapids/raft_dask-*.whl         /rapids/xgboost-*.whl         /rapids/pylibcugraph-*.whl         networkx==2.6.3 && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:13.268573904Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T02:54:13.865550502Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:14.211415251Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:15.390010343Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:18.124237543Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:54:19.920543666Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:15.740070765Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:15.740070765Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T02:55:33.743409882Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=22.12 PYTORCH_BUILD_VERSION=1.14.0a0+410ce96 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:48.57974205Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T02:55:48.57974205Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:01:29.184484499Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --upgrade git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:38.777470756Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.191931661Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=49968248",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "LABEL com.nvidia.build.id=49968248",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-15T03:12:41.545633711Z",
                    "created_by": "LABEL com.nvidia.build.ref=a58f3f606e2d7f2b5a9a59e7b305e0966e5e3d34",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T10:31:38.017912407-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T10:31:38.017912407-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get upgrade -y &&     apt-get install -y     libsndfile1 sox     libfreetype6     swig     ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:31:38.024094627-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:31:39.37803154-08:00",
                    "created_by": "RUN /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:31:39.384023511-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:31:39.390950527-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:34:33.13188679-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:34:33.138262385-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:34:33.144740824-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:37:03.480825738-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:37:03.488736199-08:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:37:24.327049515-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:37:24.352584444-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:18.098823118-08:00",
                    "created_by": "RUN /bin/sh -c /bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh || exit 0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:18.098823118-08:00",
                    "created_by": "ARG NEMO_VERSION=1.15.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T10:52:19.210771631-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.15.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:30.545989069-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.15.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:45.424628635-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.15.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:52.981867258-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.15.0 /bin/sh -c pip install numba==0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:52.988795147-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.01397644-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.045762601-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.073441486-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.105185708-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.815490312-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.15.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:53.815490312-08:00",
                    "created_by": "ARG AIS_VERSION=v1.3.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T10:52:53.815490312-08:00",
                    "created_by": "ARG AIS_BIN=https://github.com/NVIDIA/aistore/releases/download/v1.3.15/ais-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T10:52:55.475644233-08:00",
                    "created_by": "RUN |3 NEMO_VERSION=1.15.0 AIS_VERSION=v1.3.15 AIS_BIN=https://github.com/NVIDIA/aistore/releases/download/v1.3.15/ais-linux-amd64.tar.gz /bin/sh -c curl -LO ${AIS_BIN} && tar -xzvf ais-linux-amd64.tar.gz && mv ./ais /usr/local/bin/. && rm ais-linux-amd64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-01T10:52:55.964566217-08:00",
                    "created_by": "RUN |3 NEMO_VERSION=1.15.0 AIS_VERSION=v1.3.15 AIS_BIN=https://github.com/NVIDIA/aistore/releases/download/v1.3.15/ais-linux-amd64.tar.gz /bin/sh -c rm -rf /opt/conda/pkgs/conda-4.11.0-py38h578d9bd_0/info/test/tests/data/env_metadata/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:f1133182f9176f808836a1da986d49a743ffef123c3e043665c969641d476a0e",
                    "sha256:5315510b97a53b3798577a5d3ab016711a172e6592dcb62eb9a379334ff8137e",
                    "sha256:1aa2a552b9cc22f74b5bd4f845d814cf8f98179353c589c9524f5fd14066893f",
                    "sha256:60e5365b20887bea5ff0d4943c1e7d3cabc5fc88895460d747f9715bb89374c3",
                    "sha256:99d243a0c0a688b2d656423b7ee3534278d8b24b13e9ae07b6c69dc3d0d061ae",
                    "sha256:c0df662a799d1c11c3db86f201628479dbd362e85286be0a17af3e0d4318a62d",
                    "sha256:0aded1f539825c359320b67eeed512e7b63f43284f4272969918ef4cbf335e64",
                    "sha256:eb8680c17196ae075b20a67d17900bceff407d2363ff0fec238a63040868fbed",
                    "sha256:20c3eb845057dde8d4428f0d7a5d8b07d5896b5b881f43442d20c76cc3d962e1",
                    "sha256:c9bece9394f22680edac326b1716e23c2ef1c2b57b68bf294643b6b6f6ab9f86",
                    "sha256:e09071e1a97b0c1a459e8a831c4ec0e7aba4b220ecd3e39af0e378e27c86538a",
                    "sha256:5214ca09c8e0e4c898f0a9ac9156f3e080d5e81bf165bd89c7ea35c8bd1ffb97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd5625d2f8409414a9082c66100bfff983d84bd36a787c010b5f1e08bb142390",
                    "sha256:ed96c3c53e36c1f8cb4c1362499d66f1169120731f5b6387f7bdf69596441a4c",
                    "sha256:901b71b0662a9fc22cf430ccd0175b5c5dfd69bc1530ac7ae991a8fd2dd1678a",
                    "sha256:f50313ca0c0bd298b3db3124a246e6c08589f4403eed6446688e4e6f10bbf70d",
                    "sha256:d327540e93865e9e825442bbbc9dcd4b17782fa6d180c8f421ba2b482eddd877",
                    "sha256:e5f37ea3d917ebdb12a9de78204d7a9da4c2e2c1b04a5a26c2112e3eac36226e",
                    "sha256:02ce4d51c110a5dc5f6009ae3c7f768ae802772a08b822cdfa855a4884d95295",
                    "sha256:2edff6e4cab3981a51786d466d4af38ff09c151e073c1c2677b1c7393e1b94b1",
                    "sha256:eae1300110042e085812909f3eb5037d302e6bf8c0fce7c1490389c640f475b4",
                    "sha256:a2c6c716ed3bf2b4dd00866be4af19cc5eb2a3200fb7ad75501125d6ea394f10",
                    "sha256:4b16fb61733360c531798ef9ea99aa0c747ae38ce80529d1812617101bcd4924",
                    "sha256:fa1fc8b7150052a4fdc9174e88e3414b2d3c94db496105be284f06a577c6097c",
                    "sha256:e89aad2361bf121544dc7da90d442e7fad09e0c5cac312eafacec5288a38e61b",
                    "sha256:e7be312f6e13a31a699d9dc0d5396c176e33cf4454080a5432e70895714aff7a",
                    "sha256:9e544d93ef10cd8963043cee21fdc614e555f43961dede079bdce1e53938ae69",
                    "sha256:b87ee2fa7b50ad522fa436e4271b997efab0ed5c92589499c84d046aa4a87c13",
                    "sha256:81a9971d8b2626131cffa59a9d5c16cedf28243c44fdab5acdb9b20776dfa264",
                    "sha256:dea8fc6e344f9bc66cc52528f76157fd4b04204f0ee4a4e77c7c85a83fa0ab15",
                    "sha256:4f7cff6d0b9e9c822df9265b192d87ba97e39bb1201aa76b54823a9929a21236",
                    "sha256:0d039a1c00f5677d39b577baa40dbab5df740f19bf46411be41e37d0d94c8b6a",
                    "sha256:96ae5b28f07b44be70f0e55583463aa6ad3eee5154aa7c13e6b9bc2548ac2a3c",
                    "sha256:27ec88ad156e5a34ff43f14bd59170c749a3e924de94833337d98f3a899b8147",
                    "sha256:06c65eb82432b863d004fc5096ac936226af20587aa75e3f4270c5a7f5604412",
                    "sha256:97173a335f970508f231b446806b97448ff53591bbefd1157ed371fe8cdeee77",
                    "sha256:954357da279eab43aceeaa9b8bd273ff4b3daab954f8c27485cab548a4aa291e",
                    "sha256:3c6d62ed2fbc71bd5de1717a723c437946c68cae19ae02f3db903f19057092dd",
                    "sha256:4a6809e5848f3729ca91288971fbd390325300d62d1b0844de29af34fe269acf",
                    "sha256:2de28d50f2f77cc8278511ba38a45d2697d5db23ac0956244e7e6cc784c643f2",
                    "sha256:0302cc7580cbad186638c419bee741e0b50ae583950ad1fd62d532ec3b4343d3",
                    "sha256:9bb630953851670edd82c1316e3954d46751d6a171dfd15613bd6c111d54166a",
                    "sha256:06c816cfff3c24241ecedc83a050c816716e4a5b43bda4721052ef08192d2d2b",
                    "sha256:1cbf51f838e88f69e3c376033a34aea5871e576296e2a5ef9245c33f4e648712",
                    "sha256:9ac73922339369af3403464abbddce997d589c03eb9746f3ffcff0ecdb8564f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb05b6e76e0b89b1033bb3797aae153871cf010a6e69f62762b96b4d85cd2df5",
                    "sha256:0cc71f9fcb115e3fea8212f936c844a95d4fffaacc24b49afba6eb9cd251c0fd",
                    "sha256:f354b5998d64e1ecc798ff7bd8faa812f35ae187c58f6cb5a3a21f0440d51fa2",
                    "sha256:00dabd2cd640e93da4a253af9cf09f3cd1c9598c7234943c375c6cf9ea744f78",
                    "sha256:558de670bfb47a572ee9fe21776e6ef7beeb473d0d488f168f2e507ec1096a00",
                    "sha256:db4edccaf2bf3bc0b0d571b2a9405f737a885178288432156e3ac854053a9c8b",
                    "sha256:e4e5f57e3e432fc1acce9ee22531b2c6db8b4dffad43b97bfab95a959d3faa2e",
                    "sha256:015da5a6ff9c06d7d102c4d10a9218388ee08f5be9e2a8051a0a93475afd552c",
                    "sha256:79be45c72fd1304787fac0d1407c94fd8eb8b97f669753ec0b39af47d628f52b",
                    "sha256:825e0a41cebc4695b186b4a4508af5cf38c6bdca86d6380aa7d75dadc8584cc8",
                    "sha256:dc0574ce5b3762b82d8ed2f1e114d040921819f7e0bb4965e98462733306a02a",
                    "sha256:263f13e188199909197278b900270289068eb4009b692f8d7d8c8f02942de705",
                    "sha256:a8797c20878c85abc8d0324e36b0932bc42c527b81159e8bde315a5fa6772d28",
                    "sha256:8db16b7fcf47d1de5bc142088af68ea64eb8e7a7b60434aaf8cdb035b11519ad",
                    "sha256:161138276de02e55c7972878508e4f6d877784d2f7c86372ca346d29fd1ce2f1",
                    "sha256:64f4990bf4549dbac1862998fcbab23263287e94c84408964a5bd9a3dc722c14",
                    "sha256:9a6d6d44c9083f139a65ed4bc8dde06660c1f7547ece5d2275ccd06a16872f96",
                    "sha256:988577b9527c434059c737ffd329debc64f54174777d9d3b7f0dcef7f1b73707",
                    "sha256:8debf3b97f390ab31e52e4236062b94eed28b216c184c4c8c166c05612422d09",
                    "sha256:e5fd808644f1e8ed907655ada2deaf23adfd5dc7b60c563829bda212fbb8c2d1",
                    "sha256:acf412e3030beb6ab530a02dbc9ce41881e452e4b9c0c360befbe5a7ff368d5f",
                    "sha256:e017dfd88498a0d6ea9892a8e490543d7f1dbb90e74a12ea739785ffbb6c20e7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.01": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.0.1.010",
                    "CUDA_DRIVER_VERSION=525.85.11",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.16.5",
                    "CUBLAS_VERSION=12.0.2.224",
                    "CUFFT_VERSION=11.0.1.95",
                    "CURAND_VERSION=10.3.1.124",
                    "CUSPARSE_VERSION=12.0.1.140",
                    "CUSOLVER_VERSION=11.4.3.1",
                    "CUTENSOR_VERSION=1.6.2.3",
                    "NPP_VERSION=12.0.1.104",
                    "NVJPEG_VERSION=12.0.1.102",
                    "CUDNN_VERSION=8.7.0.84+cuda11.8",
                    "TRT_VERSION=8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "TRTOSS_VERSION=23.01",
                    "NSIGHT_SYSTEMS_VERSION=2022.5.1.93",
                    "NSIGHT_COMPUTE_VERSION=2022.4.1.6",
                    "DALI_VERSION=1.21.0",
                    "DALI_BUILD=6799315",
                    "POLYGRAPHY_VERSION=0.43.1",
                    "TRANSFORMER_ENGINE_VERSION=0.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.14.0a0+44dac51",
                    "PYTORCH_VERSION=1.14.0a0+44dac51",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.01",
                    "PYVER=3.8",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=52269074",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "52269074",
                    "com.nvidia.build.ref": "5fd1de8d4db4f2b7b158e133c589be21fa6ec7a4",
                    "com.nvidia.cublas.version": "12.0.2.224",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.84+cuda11.8",
                    "com.nvidia.cufft.version": "11.0.1.95",
                    "com.nvidia.curand.version": "10.3.1.124",
                    "com.nvidia.cusolver.version": "11.4.3.1",
                    "com.nvidia.cusparse.version": "12.0.1.140",
                    "com.nvidia.cutensor.version": "1.6.2.3",
                    "com.nvidia.nccl.version": "2.16.5",
                    "com.nvidia.npp.version": "12.0.1.104",
                    "com.nvidia.nsightcompute.version": "2022.4.1.6",
                    "com.nvidia.nsightsystems.version": "2022.5.1.93",
                    "com.nvidia.nvjpeg.version": "12.0.1.102",
                    "com.nvidia.pytorch.version": "1.14.0a0+44dac51",
                    "com.nvidia.tensorrt.version": "8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "com.nvidia.tensorrtoss.version": "23.01",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "OnBuild": null
            },
            "created": "2023-03-07T13:37:02.928165855-08:00",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-20T17:36:13.05211917Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:49:11.116986539Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.116986539Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.116986539Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.116986539Z",
                    "created_by": "ENV CUDA_VERSION=12.0.1.010 CUDA_DRIVER_VERSION=525.85.11 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.116986539Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.0.1.010 CUDA_DRIVER_VERSION=525.85.11 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.0.1.010 CUDA_DRIVER_VERSION=525.85.11 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:49:11.471679654Z",
                    "created_by": "ENV NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION=23.01 NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.0.1.010 CUDA_DRIVER_VERSION=525.85.11 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION=23.01 NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.16.5 com.nvidia.cublas.version=12.0.2.224 com.nvidia.cufft.version=11.0.1.95 com.nvidia.curand.version=10.3.1.124 com.nvidia.cusparse.version=12.0.1.140 com.nvidia.cusolver.version=11.4.3.1 com.nvidia.cutensor.version=1.6.2.3 com.nvidia.npp.version=12.0.1.104 com.nvidia.nvjpeg.version=12.0.1.102 com.nvidia.cudnn.version=8.7.0.84+cuda11.8 com.nvidia.tensorrt.version=8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6 com.nvidia.tensorrtoss.version=23.01 com.nvidia.nsightsystems.version=2022.5.1.93 com.nvidia.nsightcompute.version=2022.4.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.466041407Z",
                    "created_by": "ENV DALI_VERSION=1.21.0 DALI_BUILD=6799315 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:02.700352743Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:53:02.980377217Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.0.1.010 CUDA_DRIVER_VERSION=525.85.11 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.2.2+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION=23.01 NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6 DALI_VERSION=1.21.0 DALI_BUILD=6799315 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:53:02.980377217Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:03.092372891Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T22:53:03.092372891Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:03.092372891Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T22:53:03.172346698Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T23:29:17.439485972Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.653709917Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:29:21.896334931Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T23:34:36.739047105Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-26T23:34:36.739047105Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T23:34:37.712361772Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 PYTORCH_VERSION=1.14.0a0+44dac51 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.14.0a0+44dac51",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T03:14:24.392198598Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:14:30.954739846Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T03:14:41.121441991Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.365571598Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.365571598Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T03:16:31.243790514Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T03:16:31.463905109Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:31:07.381610014Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:31:07.381610014Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:31:07.381610014Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:31:07.381610014Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:32:20.051564294Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:32:49.64801255Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:32:50.279319127Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:32:50.279319127Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:36:12.384714316Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:36:12.458407882Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:36:12.458407882Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:36:12.458407882Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:36:12.458407882Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:36:12.458407882Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:42:01.191572334Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T08:54:43.72010949Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T10:29:40.482900194Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.01 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     BUILD_TEST=0     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T10:31:39.759057756Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T10:31:59.086134185Z",
                    "created_by": "RUN /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T10:31:59.086134185Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T10:32:32.324593282Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T10:32:32.365618355Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:13:37.438236427Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:13:37.719449671Z",
                    "created_by": "RUN /bin/sh -c patch -d / -p1 < /opt/pytorch/mpmath_CVE-2021-29063.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:14:10.777587029Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.191856518Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.365571598Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.385812734Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.405843352Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.50685373Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:32.683901549Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:15:33.6906005Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:16:23.660611102Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:16:23.660611102Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:16:43.148499484Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:16:44.127939837Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:16:44.127939837Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:23:28.477002986Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:23:28.477002986Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:23:28.477002986Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.186856989Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:35:13.186856989Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.186856989Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.455160291Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=52269074",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "LABEL com.nvidia.build.id=52269074",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-28T12:35:13.474869104Z",
                    "created_by": "LABEL com.nvidia.build.ref=5fd1de8d4db4f2b7b158e133c589be21fa6ec7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:13:56.113886076-08:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:13:56.113886076-08:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:13:56.113886076-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:13:56.113886076-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c apt-get update &&     apt-get upgrade -y &&     apt-get install -y     libsndfile1 sox     libfreetype6     swig     ffmpeg     libavdevice-dev &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:13:56.120966377-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:27:48.812890569-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&     cd apex &&     git checkout c0a0b0f69d2d5a98bd141be12ee8e5eebd3ec7ca &&     pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:27:50.202443051-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:27:50.207870826-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:27:50.214469912-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:32:28.144274275-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;     echo ${INSTALL_MSG};     if [ ${INSTALL_CODE} -ne 0 ]; then       echo \"torchaudio installation failed\";        if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then         exit ${INSTALL_CODE};        else echo \"Skipping failed torchaudio installation\"; fi     else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:32:28.150949105-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:32:28.157397089-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:34:47.015438481-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:34:47.023393619-08:00",
                    "created_by": "COPY nemo_text_processing/install_pynini.sh /tmp/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:34:56.727652369-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c /bin/bash /tmp/nemo/install_pynini.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:34:56.76165908-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:23.384928115-08:00",
                    "created_by": "RUN |2 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;     echo ${INSTALL_MSG};     if [ ${INSTALL_CODE} -ne 0 ]; then       echo \"k2 installation failed\";        if [ \"${REQUIRE_K2}\" = true ]; then         exit ${INSTALL_CODE};        else echo \"Skipping failed k2 installation\"; fi     else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:23.384928115-08:00",
                    "created_by": "ARG NEMO_VERSION=1.16.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:36:23.870446805-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.16.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:35.396151432-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.16.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:51.288138418-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.16.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&     python -c \"import nemo.collections.tts as nemo_tts\" &&     python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.024735035-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.16.0 /bin/sh -c pip install numba==0.53.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.035487074-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.065985654-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.098818279-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.125611443-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.148844565-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.848908829-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.16.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-07T13:36:59.848908829-08:00",
                    "created_by": "ARG AIS_VERSION=v1.3.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:36:59.848908829-08:00",
                    "created_by": "ARG AIS_BIN=https://github.com/NVIDIA/aistore/releases/download/v1.3.15/ais-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-07T13:37:02.928165855-08:00",
                    "created_by": "RUN |3 NEMO_VERSION=1.16.0 AIS_VERSION=v1.3.15 AIS_BIN=https://github.com/NVIDIA/aistore/releases/download/v1.3.15/ais-linux-amd64.tar.gz /bin/sh -c curl -LO ${AIS_BIN} && tar -xzvf ais-linux-amd64.tar.gz && mv ./ais /usr/local/bin/. && rm ais-linux-amd64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:15e4c69c6ef6a28d5e1a21e5b995b4a88f3dd65427e4937bba188d2b7f9a3ecd",
                    "sha256:ca894b6063f1f6b71b467a501a96615266725a008f44148d262bca061db12b35",
                    "sha256:2e4a543a7b937324acf56b847310f91062a234208b0dca7651ca4d408e39febd",
                    "sha256:eaf90e88ab665901fcfe4195f8b94809eb0a46170da9f2a9f0d873d5a5248c94",
                    "sha256:7b05b726fa0c1516394dd48808208a19290c1f4f9ed1fe1a837a42553b877be4",
                    "sha256:98a835f46bc6227612bc1f2670dfd0368b30e6389e8a2a922a9ebe09d7ca3ec6",
                    "sha256:aaf6d1bf7bb2700412a62cb34ef69605fbdbcd3c69f0e1660ea76b0faf067169",
                    "sha256:2d8c74cd94a9c2a4e213f2d828e81b8a06f801edf41e1cb06ad02756197b1111",
                    "sha256:6bfcc2ee81b383a03f95eef1feb3af59a8bfbab0a9639ff5b406479b5d5d5224",
                    "sha256:16b994f3553f1eae9b5276c773358ca8b1f1ffa770e57e59fade1b03475add3f",
                    "sha256:cb91e37e409513fd7b21ca50dc229de3b2e493e4609360db0dc9061766520445",
                    "sha256:3b3b71423d13ca81cedf53510c588cb6b9fd8586a04e376c6da86bf32d676a8d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91973d920c7d1766c9047099bf8a1e467674dc2014baf18a24ff862a6d6ac749",
                    "sha256:9f5bc0f8de9ea6c7a4ad6669f4a5d606ca4e8be67b7b29980f070a72b097bd48",
                    "sha256:2e3980b462003e1ff32cb9b361a10d5271fb080022aab2d5680c7f20923a269d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d00cc39989a27dd19b12d9b19ff1918ca9a3e22c0f35554d7535337837b9bfa",
                    "sha256:096515a578f12298bf4e7f04b6f3384deaacce8d3ff71f2de9188e3731b5f329",
                    "sha256:7705010ca7902360b416ca007ce2dd9a7f55ad913934b6dcceb06df4a9719e70",
                    "sha256:1d92380db518327f9ecc2b2d34dc724a83ace0531ea110d78c270c38c4a6068a",
                    "sha256:ea27e5ecf09e16f8ede7bf2e7ac4d46e3dc147d48a86b3727fd71cf98c0311a6",
                    "sha256:6b2cb55925918a34c2f8e8ccae6235432acce8aac13e2f423839deb43df323da",
                    "sha256:e2f5632914d85d27cc7062c5c5f2b98cd8b28f14784edcbf5dc1fe90d89c5503",
                    "sha256:f91a6c875709bccc073ce7faebee831b60a124dce89db6d428ffd62bfebf8292",
                    "sha256:b0fdc3dbea6a71c20bb4c26f8b4408ae855f0bca5b017cadbb1b43646c04836a",
                    "sha256:b58230f2ee7f588acbcceac2453925e84edcde4c777f45f62965f80056a5d88e",
                    "sha256:86065621118ff0633f466613b0436d2ed22f41befce881d7cab6a5dfa81a9fcb",
                    "sha256:595c354dcd8f17decdf4d4f069f4f141912e0a57c84d9cdc14725bf2c70015d7",
                    "sha256:e2bdad0839e4220fb74dcad246f08bdae11e9f31f3cfd77c375a24bc9b9dc47a",
                    "sha256:920b08edd07dd6d2ba73361b0cca39a82792eb5fd1bde7ba2a1728a2ad35f23f",
                    "sha256:129b6b66762ecf61862b3d838fcfa6b6b42a231a95b935d9a180df9eb2b2330c",
                    "sha256:2a190deacfff7a988adf2dde8f2bbd80d4e3ed432e9c129394e4d80dd6aa04e2",
                    "sha256:07819c4bf51d3b52aec39f30a87eb015171f218863111842cd3f24484951403f",
                    "sha256:2419dbcc06779a20c49e63ccadb604bedc31827ad8bed4ff1aac79c6a62de427",
                    "sha256:c465a0a155408c339ce22c91de41448a6bf5fb8867a225597f1f60a40c1f9864",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d115c51b87e41afc4a23b7b687eadcfc7c52c982dd52a6f4b04e7fc7efb1ff6c",
                    "sha256:f34c5b503427a0a6700729b470f3422c55b0555910f5b07c94699e006e02f67d",
                    "sha256:6c5184b9f09e9af6d8573588fdd4e5bb2009fccfdda00b417e83a0e493753e92",
                    "sha256:d6a5cef37863ad44db16faf76108c41890c1013557fd6e1b104e74ad3f8139a5",
                    "sha256:30551858254b406b8577dfcc273e02edfee472f3ef927d62ba53bb659d9e43c5",
                    "sha256:c0572d74d63cf9528e55d09a5317a0b1000886a52198499bd9b9eb42822666ba",
                    "sha256:28929a0319fc74478a16827045cf266e8dcb3e1f8c2198e8af3b23a27aec4da6",
                    "sha256:021d81c55c98ae5f41c3c4604eb1eeed431dd29a1a4819ba88044224e4d90469",
                    "sha256:91c25998d905b6db3e14fa110b29a88d075dbcb0f6f701051089a693ffe8ae59",
                    "sha256:1cfa4112c5cb4bc72189a0586a018c108c9172c1e3f0815dc708d25677c45298",
                    "sha256:eb064c30627e577e3960fe9ad315967bd27b5723f43de90ed08d50a6f29c7f7e",
                    "sha256:c5b26dee4cbfe515ff455a13da2255106445b613bcaeb395d055f514ad2df31a",
                    "sha256:aa03b50d029c7806ccd2d1f64074315f489884895dcde63f6675420cda440ad6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:442e14f1bf28e35a1e67df6506228a22db0b9ed1d8df66aa556ae175bb57fd60",
                    "sha256:5f33c211c5e36f6326ece16dd92d7b6647162a04ae7ed732457ddf30d949eca0",
                    "sha256:e6968bc640058c151e89d648d15f449ac96f2f5d7f43455e34ee5551356fa85f",
                    "sha256:684718fcf9208cfbf0be8422f81cbc359d32a7471289de6161f36af32803038d",
                    "sha256:deed9e4ebda67bf89876bbd09004ebfca4f78100bf106d19dcba622751924ff3",
                    "sha256:5143a3ecd24b4291f027ded133ef2ede9bc1d0cda38afa2a23643372e80c6ca3",
                    "sha256:4cf454087d96d3859a3536ebe8090f7006198c7a21e8dd3c62332eab79ed4679",
                    "sha256:3b3978aab6ebf9e4a851f25ec38af8d6056ba77714da66c48330a0ea8232483f",
                    "sha256:327beb155f60c0d4f66c80d578785b914e1a6f6aa34b155434fc2707546d618f",
                    "sha256:5a0d1a6b12d479cf2f5625333bbbb851fe0a261419b32d565fed5cabbb22b01a",
                    "sha256:2e7a4c530f131f5f5d058f7bbb1d2830e981c3e000fe30f35ebd1e52fb83097e",
                    "sha256:11fcd37c8755bf78674201e6336382e8b4d44a39063063b99da2d5ea2f0b23b5",
                    "sha256:ccc049c7e77af6c69ccb67f99435342e6a9f4618b6468c1fd121652295c13708",
                    "sha256:f41f6f4985ee7774f0aa9089b357e7f0c076fdbfc6741945a615cbf25a77bcf3",
                    "sha256:0822e0fffe1457582dbeaa2d2b57cf3a063acf88819757b959d7cca8ed93cff9",
                    "sha256:a30c390e87403fdaeb3d410b84427955b16f9ee5eea7fcd3639fe56f2a977eab",
                    "sha256:b58ae0ec56eeeb970946aab9d3df1869f4dba53429f3646bb776d30cffebb590",
                    "sha256:b34fc8f8e49546c5e8cb072c8265c521a40b91976c6cd8b15a82a9bae3f3d359",
                    "sha256:c6131e6b9315a30fc3c2a33476675846ca30a0c18149d290114ccbbd46a884c9",
                    "sha256:58e9f1e9cedf0a5d0a3ed1e85d277e4c48474d50d9f52ccef3bb65e9627e436b",
                    "sha256:5dc537a9a01b69f64c0af330da3717823f7e932ee86086ffbe115a6aa32cb3ef",
                    "sha256:94f9e5462d2040e0d1ef44b3fd7c9762f0f07179f845d99cd1ef5449428231d4",
                    "sha256:636b5fc4c1d0e83695379414f573ed53cfa54c30f0b172f0d046cfa3652961b5"
                ]
            }
        },
        "23.02": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.0.1.011",
                    "CUDA_DRIVER_VERSION=525.85.12",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.16.5",
                    "CUBLAS_VERSION=12.0.2.224",
                    "CUFFT_VERSION=11.0.1.95",
                    "CURAND_VERSION=10.3.1.124",
                    "CUSPARSE_VERSION=12.0.1.140",
                    "CUSOLVER_VERSION=11.4.3.1",
                    "CUTENSOR_VERSION=1.6.2.3",
                    "NPP_VERSION=12.0.1.104",
                    "NVJPEG_VERSION=12.0.1.102",
                    "CUDNN_VERSION=8.7.0.84+cuda11.8",
                    "TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "TRTOSS_VERSION=",
                    "NSIGHT_SYSTEMS_VERSION=2022.5.1.93",
                    "NSIGHT_COMPUTE_VERSION=2022.4.1.6",
                    "DALI_VERSION=1.22.0",
                    "DALI_BUILD=6971317",
                    "POLYGRAPHY_VERSION=0.43.1",
                    "TRANSFORMER_ENGINE_VERSION=0.5",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.14.0a0+44dac51",
                    "PYTORCH_VERSION=1.14.0a0+44dac51",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.02",
                    "PYVER=3.8",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=53420872",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "53420872",
                    "com.nvidia.build.ref": "ff76e8b7be1df4852e0c449780c0a550ff709e59",
                    "com.nvidia.cublas.version": "12.0.2.224",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.7.0.84+cuda11.8",
                    "com.nvidia.cufft.version": "11.0.1.95",
                    "com.nvidia.curand.version": "10.3.1.124",
                    "com.nvidia.cusolver.version": "11.4.3.1",
                    "com.nvidia.cusparse.version": "12.0.1.140",
                    "com.nvidia.cutensor.version": "1.6.2.3",
                    "com.nvidia.nccl.version": "2.16.5",
                    "com.nvidia.npp.version": "12.0.1.104",
                    "com.nvidia.nsightcompute.version": "2022.4.1.6",
                    "com.nvidia.nsightsystems.version": "2022.5.1.93",
                    "com.nvidia.nvjpeg.version": "12.0.1.102",
                    "com.nvidia.pytorch.version": "1.14.0a0+44dac51",
                    "com.nvidia.tensorrt.version": "8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "com.nvidia.tensorrtoss.version": "",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-04-05T13:02:53.822712196-07:00",
            "history": [
                {
                    "created": "2023-02-01T11:42:37.482727828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.542979925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.607000397Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.664006463Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:39.593020695Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-02-01T11:42:39.850025895Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:09.744711175Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:14:35.403341186Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:35.403341186Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:35.403341186Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:35.403341186Z",
                    "created_by": "ENV CUDA_VERSION=12.0.1.011 CUDA_DRIVER_VERSION=525.85.12 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:35.403341186Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.0.1.011 CUDA_DRIVER_VERSION=525.85.12 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.0.1.011 CUDA_DRIVER_VERSION=525.85.12 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:14:36.163407754Z",
                    "created_by": "ENV NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.0.1.011 CUDA_DRIVER_VERSION=525.85.12 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.16.5 com.nvidia.cublas.version=12.0.2.224 com.nvidia.cufft.version=11.0.1.95 com.nvidia.curand.version=10.3.1.124 com.nvidia.cusparse.version=12.0.1.140 com.nvidia.cusolver.version=11.4.3.1 com.nvidia.cutensor.version=1.6.2.3 com.nvidia.npp.version=12.0.1.104 com.nvidia.nvjpeg.version=12.0.1.102 com.nvidia.cudnn.version=8.7.0.84+cuda11.8 com.nvidia.tensorrt.version=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 com.nvidia.tensorrtoss.version= com.nvidia.nsightsystems.version=2022.5.1.93 com.nvidia.nsightcompute.version=2022.4.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:25.734709318Z",
                    "created_by": "ENV DALI_VERSION=1.22.0 DALI_BUILD=6971317 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:26.36837767Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:18:27.656266591Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.0.1.011 CUDA_DRIVER_VERSION=525.85.12 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.16.5 CUBLAS_VERSION=12.0.2.224 CUFFT_VERSION=11.0.1.95 CURAND_VERSION=10.3.1.124 CUSPARSE_VERSION=12.0.1.140 CUSOLVER_VERSION=11.4.3.1 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.1.104 NVJPEG_VERSION=12.0.1.102 CUDNN_VERSION=8.7.0.84+cuda11.8 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2022.5.1.93 NSIGHT_COMPUTE_VERSION=2022.4.1.6 DALI_VERSION=1.22.0 DALI_BUILD=6971317 POLYGRAPHY_VERSION=0.43.1 TRANSFORMER_ENGINE_VERSION=0.5 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:18:27.656266591Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:27.656266591Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:27.884370315Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-02T05:18:27.884370315Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:27.884370315Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T05:18:28.164362808Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-03T02:55:58.282892894Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.287561706Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:06:40.43402485Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-03T22:11:51.942315562Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-03T22:11:51.942315562Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-03T22:11:52.337025273Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 PYTORCH_VERSION=1.14.0a0+44dac51 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.14.0a0+44dac51",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:03:17.91620057Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:03:25.908855948Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:03:37.988652012Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.847406471Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.847406471Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:05:32.206182826Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:05:32.510251493Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:05:40.509015757Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-04T23:05:40.509015757Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:05:40.509015757Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-04T23:05:40.509015757Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:46:03.729647041Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T03:46:34.36289131Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T03:46:34.984398941Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T03:46:34.984398941Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:49:56.672301898Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.15.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T03:49:56.73817608Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T03:49:56.73817608Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:49:56.73817608Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:49:56.73817608Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:49:56.73817608Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T03:55:53.894281571Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T04:09:10.509150141Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T05:45:52.73627125Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.02 PYTORCH_BUILD_VERSION=1.14.0a0+44dac51 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     BUILD_TEST=0     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T05:47:53.327240932Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T05:48:14.870426486Z",
                    "created_by": "RUN /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T05:48:14.870426486Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-08T05:48:52.387425892Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T05:48:52.429246189Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:37:06.541983449Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:37:06.847835069Z",
                    "created_by": "RUN /bin/sh -c patch -d / -p1 < /opt/pytorch/mpmath_CVE-2021-29063.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:37:45.149831729Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.670567107Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.847406471Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.867015802Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:17.888054242Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:18.064222411Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:18.417301323Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-08T07:39:19.52892629Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:28:49.317517717Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:28:49.317517717Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:29:06.249213137Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:29:26.996843916Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:29:26.996843916Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:39:07.325819131Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:39:07.325819131Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:39:07.325819131Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:14.76260622Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:45:14.76260622Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:14.76260622Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:18.510111361Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=53420872",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "LABEL com.nvidia.build.id=53420872",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-14T19:45:18.636563801Z",
                    "created_by": "LABEL com.nvidia.build.ref=ff76e8b7be1df4852e0c449780c0a550ff709e59",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T12:14:58.226565496-07:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T12:14:58.226565496-07:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T12:14:58.226565496-07:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T12:14:58.226565496-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T12:14:58.226565496-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:14:58.232400018-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:54:15.475943652-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 03c9d80ed54c0eaa5b581bf42ceca3162f085327 &&   pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:54:16.389132645-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:54:16.394196634-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:54:16.400322603-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:58:09.049417593-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:58:09.0558246-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T12:58:09.063810385-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:00:48.673407982-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:00:48.713676406-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:20.47059133-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:20.47059133-07:00",
                    "created_by": "ARG NEMO_VERSION=1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T13:02:20.963104981-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.17.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:37.882221278-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.17.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.029519813-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.17.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.035481033-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.073937852-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.108277171-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.132467674-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.161402085-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.497295993-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.17.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T13:02:53.822712196-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.17.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:dd2bc8e0603418925ab0b8129e1aa0d84a16310a08831e4986ea17f5e3923d1d",
                    "sha256:1f20c057b4845c4ce4eade15360d4b8fc83aa0b4c1d11a5b2bcd1c8543228a98",
                    "sha256:75e6b8a32bd33b364c6c44fad535900fa299a6887b9ead74774296aad3613fbc",
                    "sha256:df62fb1402eabaccf9054a70dd06848776f0430cf70ac1209be10686a863b61a",
                    "sha256:0d2b276997c646bea1a7bbef17599eeeb506a893452d4a9aea3b182b7654b9c5",
                    "sha256:871ecd890743d8ecf78a7d78a38e1a3ab4510426541f9405fb094dd8cd2d2eb9",
                    "sha256:122ac7e12cc3a86baee329e45867f59d8e7291676f025ae853fc564d6b7d9618",
                    "sha256:de38e00f8e6c1c9056e3b6304d1919993f568fd06f7c6b05ed2ebe31a0508623",
                    "sha256:9c6a2d006077ab61228b5375662a8fa7de0e930e832a87ee48f7a0c9078fe341",
                    "sha256:f8762797e65a1ec1bfb1f68e5b8904ade3ac2e8c281d25034e562455e8a92d30",
                    "sha256:8067ce044f51ddcddcc9a6267a2d78ff77858fecae56b462f64172889a6a66c1",
                    "sha256:ad7dc7a9e05305f2bf62b6fde3a1c2944c2bf93334c8198e424b122283d885df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cf543fc4fccff79570d7b2a04f3922199b325a9ac824facaab7038f3124f4e30",
                    "sha256:595350e08a5cb282da5e2a398062ee31ecf317607710c1a598a4d181dfec313c",
                    "sha256:2f01e60f0b15f734c0aa7649283483eb64d8925431ce80a88ea671afdca8283f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:65f8041c117e85179b66ec542d7f6ecc392ef5da3ac48132ac9babc002df9a58",
                    "sha256:d76bc5715d7904da47b8f0235dfc74292c0644ecf65427b76dbca0feca94795f",
                    "sha256:b8390e51490fd419c74e086384da0060eb11362694e8c764dc7904d97e747cf2",
                    "sha256:7e114556b94ddaa3af4fb470e56f63df90c24525d6a39093be5c124ce5db1e39",
                    "sha256:2eb589fcc1944f3e36d99ed09aad9b8fc21ba94a70d801f9549748790b8736ed",
                    "sha256:93e86c739007eed9b0cfbd3dec8c3797b8598492be340a87466f9f17dbd34e05",
                    "sha256:ad36af83523bab3dd60a2eff4c0814efcc8f648173b08e0d036ba117d1aa5208",
                    "sha256:b3eb3f6a881e8894ac2f0c8cc13b485a0429658f226ecebdc41d1939c18f067d",
                    "sha256:28e5b649aa69e795cce3f326d41e4d663494f390d7ac207d0078713e6fbb2115",
                    "sha256:aea7572c6e7cb5d54c0a82f780855d7a86848bc2eee2b82c17a56a5328228483",
                    "sha256:3c9606098737ffbff4427cff430cd2dce6e27fa42c526898b317069e378b2a3f",
                    "sha256:3629a41d267e20f3e0faa6f8e97f29ca9276ea12aa2c1d174705b6a946c19a07",
                    "sha256:178f233b6e820366aa10011bf29ff3e1601bb7821c1c8ca78399fbb5bfcad838",
                    "sha256:28a0898660e64c0fb6b841ea8f2dafdcb9f99c20186cd272f9854f2a49600771",
                    "sha256:129b6b66762ecf61862b3d838fcfa6b6b42a231a95b935d9a180df9eb2b2330c",
                    "sha256:1be3b48a2dd2713d13667c2f00a2ec30d58609e0a64a4862f8ca38e0b3a1d81c",
                    "sha256:fc6980be33457d9131c50942c2dbee2abf570ee52a8a909391325d6468ec350f",
                    "sha256:4963cc779521cc8b9b965c6bf14acb8a9e0e894261eb2a39224725dd523c5513",
                    "sha256:0bb8fce9600a2eb6d2f2ad396ed0c9e53332cbb28930410930942676eebb7ab0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:38f523d14ea6f76d368a8cfb23cfc22c31c7241af9f74efb803d964c57af0b05",
                    "sha256:27d771c824cde909dd4385e911b2a98c9b244ae428ba732ee895ad81453891ff",
                    "sha256:97cfdcfee476f64c3d77a01bfb0b4de4021dce3b0ce719e4712e10983c87aa73",
                    "sha256:9c08be9a4df428ac533fcad29c83723ac72e264f9fb6f9b64a9285ca0af84d3a",
                    "sha256:fa19871c9d97303b5ae2ac759a907fc77c0d580e1f334fc8e11f772de3a0c901",
                    "sha256:05be79be3d008b8512ad74d1d59f7dc71183678155f65ecd46f5a6fa65ba9dda",
                    "sha256:90cfa3fde55b8cece76291ea23cbcff3e1e96dd78b63e88924a928fedd663d44",
                    "sha256:e463f1e12549bb18e255f0525be20eb3aa1351e2c449358f68f53a71971770e4",
                    "sha256:362395390e073a035045f39cc9540609de432143b3587960daf2c1bfa533efb0",
                    "sha256:847e4cb476a395561a5af56a80ad22b76c2c4f91cad03f61d7845ad423287340",
                    "sha256:c395de67fa5991e7be15f6b3c1e8f15b10bfc08efbcae3586540be44f4307f51",
                    "sha256:777f03a73d922d34cbd1daf36c666489c94454c4a7430981b31a0b2545066239",
                    "sha256:4bcf0bc783ddd73e40ce8e84edc6551bc29506c212c432c108e66b6292094bd8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e35750f831ed8a7c10fe056114f7600c57726841528260f3ee33d36bc27e126a",
                    "sha256:ebd8fa120a059223eefb4a6bc0b6fc53e6f4d96362f0fb46217ac79ba5e3a58c",
                    "sha256:162e49084557c0453cb98096c9384e11905b15c40be6d032e7139af134179422",
                    "sha256:9c628bd4ed3a8ace2c3d58965a93ebb2606c89eb87abc45fbad0cb501b31f303",
                    "sha256:79de30c3ec9edbca47ddcd8d0f5ea1f526999391102d219cefe3527f4fefdf56",
                    "sha256:5fa30be961234c1220c4a1fc2a553e87e4a27e71fdae51f49c15844e2e630f52",
                    "sha256:900adfec873b96e8900247dafb81d85569f1854ee3df5af937a687f0900ebfc0",
                    "sha256:b9ad4d41baaebfd50f3bfc3d2c45094f14bbd97e313cd52b0674180de5a47978",
                    "sha256:a09166e46abcec56de333425012151dffbb240b9027bebeb87660c75fcb674a5",
                    "sha256:9fe9d1ecb5eb6f58a2d396eb3a62e900014aa8a26d38b0ca69baf0d7213ceecc",
                    "sha256:9ef0b73594d88cf7ea04b2d05c88c6d6ea783f6b8c777aa5ccb8e1b4a767d747",
                    "sha256:a878d57a51637ccbe6c3874effd91e902b7d6419f78acae94b3efac281e3f2e4",
                    "sha256:c0b8220b117fb31c2295e6f62dec6f61732a5abf0192257c390bc22a707fcb22",
                    "sha256:70a4876ee147c36c911609a9c4746e03ad4551bcd1b8a04f67a25841c8d31d28",
                    "sha256:8f9880a12ba448cc2e4330e04845bc13bea92dfb843eed0a28bccd976fb1545c",
                    "sha256:0146fcd6614cdae7c48615d2b8a0017a9a99bc14e5e70a9d0f97264c8a562473",
                    "sha256:723a4db18aae5f64ba6f84af6174e1ecfed64bc904ecd809b005be79f64311b9",
                    "sha256:0eb1f6ee45236276aaf962999601dba00f7ade8ae818f7890f2029f0cdbdfb82",
                    "sha256:6c67341351a12dc483ebd1f9c1357193d79aa59ba3adf8e8fca1c47286fc3f4f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.03": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.0.023",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.17.1",
                    "CUBLAS_VERSION=12.1.0.26",
                    "CUFFT_VERSION=11.0.2.4",
                    "CURAND_VERSION=10.3.2.56",
                    "CUSPARSE_VERSION=12.0.2.55",
                    "CUSOLVER_VERSION=11.4.4.55",
                    "CUTENSOR_VERSION=1.6.2.3",
                    "NPP_VERSION=12.0.2.50",
                    "NVJPEG_VERSION=12.1.0.39",
                    "CUDNN_VERSION=8.8.1.3+cuda12.0",
                    "TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "TRTOSS_VERSION=",
                    "NSIGHT_SYSTEMS_VERSION=2023.1.1.127",
                    "NSIGHT_COMPUTE_VERSION=2023.1.0.15",
                    "DALI_VERSION=1.23.0",
                    "DALI_BUILD=7355174",
                    "POLYGRAPHY_VERSION=0.44.2",
                    "TRANSFORMER_ENGINE_VERSION=0.6",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.0.0a0+1767026",
                    "PYTORCH_VERSION=2.0.0a0+1767026",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.03",
                    "PYVER=3.8",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=55416458",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "55416458",
                    "com.nvidia.build.ref": "c15133cb9cb047d0d9a13eb3230d6dac6285aaa2",
                    "com.nvidia.cublas.version": "12.1.0.26",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.8.1.3+cuda12.0",
                    "com.nvidia.cufft.version": "11.0.2.4",
                    "com.nvidia.curand.version": "10.3.2.56",
                    "com.nvidia.cusolver.version": "11.4.4.55",
                    "com.nvidia.cusparse.version": "12.0.2.55",
                    "com.nvidia.cutensor.version": "1.6.2.3",
                    "com.nvidia.nccl.version": "2.17.1",
                    "com.nvidia.npp.version": "12.0.2.50",
                    "com.nvidia.nsightcompute.version": "2023.1.0.15",
                    "com.nvidia.nsightsystems.version": "2023.1.1.127",
                    "com.nvidia.nvjpeg.version": "12.1.0.39",
                    "com.nvidia.pytorch.version": "2.0.0a0+1767026",
                    "com.nvidia.tensorrt.version": "8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6",
                    "com.nvidia.tensorrtoss.version": "",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-05-17T15:29:36.606512807-07:00",
            "history": [
                {
                    "created": "2023-02-01T11:42:37.482727828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.542979925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.607000397Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.664006463Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:39.593020695Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-02-01T11:42:39.850025895Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:08:55.101249301Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:09:17.828217815Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:17.828217815Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:17.828217815Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:17.828217815Z",
                    "created_by": "ENV CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:17.828217815Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:09:18.186843345Z",
                    "created_by": "ENV NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.0.26 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.8.1.3+cuda12.0 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.0.26 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.8.1.3+cuda12.0 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.17.1 com.nvidia.cublas.version=12.1.0.26 com.nvidia.cufft.version=11.0.2.4 com.nvidia.curand.version=10.3.2.56 com.nvidia.cusparse.version=12.0.2.55 com.nvidia.cusolver.version=11.4.4.55 com.nvidia.cutensor.version=1.6.2.3 com.nvidia.npp.version=12.0.2.50 com.nvidia.nvjpeg.version=12.1.0.39 com.nvidia.cudnn.version=8.8.1.3+cuda12.0 com.nvidia.tensorrt.version=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 com.nvidia.tensorrtoss.version= com.nvidia.nsightsystems.version=2023.1.1.127 com.nvidia.nsightcompute.version=2023.1.0.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.688836053Z",
                    "created_by": "ENV DALI_VERSION=1.23.0 DALI_BUILD=7355174 POLYGRAPHY_VERSION=0.44.2 TRANSFORMER_ENGINE_VERSION=0.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:58.835065209Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:12:59.097750971Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.0.26 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.6.2.3 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.8.1.3+cuda12.0 TRT_VERSION=8.5.3.1+cuda11.8.0.065+520.61.05+cublas11.11.3.6 TRTOSS_VERSION= NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15 DALI_VERSION=1.23.0 DALI_BUILD=7355174 POLYGRAPHY_VERSION=0.44.2 TRANSFORMER_ENGINE_VERSION=0.6 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:12:59.097750971Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:59.097750971Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:59.191060698Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:12:59.191060698Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:59.191060698Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:12:59.287074976Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:31:40.869805932Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.530476231Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:31:43.607125369Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:36:49.262520476Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-01T21:36:49.262520476Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T21:36:49.554438811Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c if [[ \"$CUDA_VERSION\" == \"11.2.1.007\" && $(dpkg --print-architecture) == \"amd64\" ]]; then wget http://sqrl.nvidia.com/dldata/sgodithi/bug3254800/cicc >/dev/null 2>&1 && cp cicc /usr/local/cuda/nvvm/bin/. ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.0.0a0+1767026 PYTORCH_VERSION=2.0.0a0+1767026 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.03",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.0.0a0+1767026",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T06:56:30.335533984Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:56:46.175832916Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T06:56:58.355503003Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-06T07:05:36.800330962Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-06T07:05:36.800330962Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T06:59:04.798854017Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T06:59:04.984135199Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T21:56:44.605460569Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T21:56:44.605460569Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T21:56:44.605460569Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T21:56:44.605460569Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T21:58:06.640642009Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T21:58:35.104034813Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T21:58:35.854587799Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T21:58:35.854587799Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:01:59.255751129Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.19.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T22:01:59.422910386Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T22:01:59.422910386Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:01:59.422910386Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:01:59.422910386Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:01:59.422910386Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:07:43.863086552Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T22:20:52.116457366Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T23:33:51.324502463Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     BUILD_TEST=0     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T23:34:07.408389849Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.03 PYTORCH_BUILD_VERSION=2.0.0a0+1767026 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T23:37:42.227270087Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T23:38:02.963043887Z",
                    "created_by": "RUN /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T23:38:02.963043887Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-15T23:38:35.713870337Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-15T23:38:35.888505334Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:11:24.529141375Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:11:56.41523496Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:37.109750085Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:37.344228959Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:37.458087295Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:37.57207699Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:38.523903889Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:42.130471932Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:13:44.595724284Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:14:34.67889085Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:14:34.67889085Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:14:52.072105721Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:15:06.859413189Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:15:06.859413189Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:20:22.607205859Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:20:22.607205859Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:20:22.607205859Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:00.536546023Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:35:00.536546023Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:00.536546023Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:04.876423173Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=55416458",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "LABEL com.nvidia.build.id=55416458",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T01:35:05.021186641Z",
                    "created_by": "LABEL com.nvidia.build.ref=c15133cb9cb047d0d9a13eb3230d6dac6285aaa2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T09:24:32.537650194-07:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T09:24:32.537650194-07:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T09:24:32.537650194-07:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T09:24:32.537650194-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T09:24:32.537650194-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-02T09:24:32.543078155-07:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T11:42:28.704955219-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:20:24.240073993-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 57057e2fcf1c084c0fcc818f55c0ff6ea1b24ae2 &&   pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:20:25.103885262-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:20:25.111007292-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:20:25.117780224-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:24:13.568430187-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:24:13.575396113-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:24:13.581824023-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:26:45.390895609-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:26:45.451598525-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:28:12.989378841-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T12:28:12.989378841-07:00",
                    "created_by": "ARG NEMO_VERSION=1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T12:28:13.35735647-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.18.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:16.497023488-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.18.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.737302465-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.18.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.743837213-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.782777627-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.82967945-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.848845979-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:35.884394274-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:36.250547305-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.18.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-17T15:29:36.606512807-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.18.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:a1b2b45bef955ac9775a9522131b8a9efe2b54c2e3c8ef2deb03fe94c7be6241",
                    "sha256:58746de4f64ce6d582d3044360cdd11e2de75a23d3cb16bf883470d34a2004ac",
                    "sha256:1cbfaaf8cc7ec38ccd945fb9f2e30c638df19deac32f30c4688dbb817e5f5464",
                    "sha256:dcf07d3bab6355da37d8be938212b16892e8f4c4460381eef27dd68b81a0017c",
                    "sha256:ef1de352f3644905dc68c849f1fdd38d3f2b8f5a91aae48f4018991d484a8631",
                    "sha256:786cc02687baea46b9597296058db2ae0fa4ec4368efeca88aa12b12fdce5d55",
                    "sha256:2e3a3a4224a1ef95f4134d4ec57b601b4f03de7e57e03e0ee6429eb2b958d8b6",
                    "sha256:4aa9232d1291d94a2a1d762898bcb90a8808a6028907dd2a4d1fcec8925bf475",
                    "sha256:5128b7fd341b60ee58eb278f7d4c0f8518e05b28ad495f0c5f109f3f4d8606e9",
                    "sha256:4718db6c38961919ee069dcb5caf8ae6c6328dfba1ac151cf0928fc3793bb71c",
                    "sha256:301f474188a64d94f5230f15842ec56fd46055ac639454dca8e5fc41282cf8e9",
                    "sha256:91985fc56587fb0a293279756ae8b300ea66c75e0cd340db971f11fbe29ff752",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dbd8cb9e83465a156d5b2a83ee42e3de10559b7f355c183279b36ad6dab5f233",
                    "sha256:e866ea043fbfd684d1c0b45052229b87bd6dcc17b8f95f2cca204f80c0febf3c",
                    "sha256:e8f5c5eacd8b2e9a5f7057249498fd81040196973c331ff726a7a951fe9a46bb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0c6579bb2b03274b6481866faf3418c52b53456247a755ea803f03666753cbbe",
                    "sha256:d9c5d08c6240bf6e2d387463aaed36e1f9f1c9c16dd6bfa6d6f7764c42919774",
                    "sha256:c85e05a314a21f73b5bb6fb3ceb4581d0afc8f8d368ac33c101627d495b04730",
                    "sha256:d19a5e38f01278ce16415f928c3f106c6af68e7fdf4bc26e87a342c70fa1abf8",
                    "sha256:63e05d6f9880d71f131deb35ee0b1f1c07dcab09d4429acc1a5cc1b726466a96",
                    "sha256:883015254414149c968bd8befedbed165d37ac5ee99cf08627211b0910c61dab",
                    "sha256:0b188666ff84ba922b2e4a139375652bacfcd324e0bc4ba23007fd6bc07f1213",
                    "sha256:37b6f6d6198a7ec0415b1c71614e22e29b52bc2b5c6d060c8174dafef58ee4fa",
                    "sha256:24472f6265a522ab365df60dee892897f3f250710f7542684d238541758d6bfd",
                    "sha256:6798586cf49fcb099ab30a90014cd53ff04fe207fda9f736ed922a171a5e51df",
                    "sha256:00752cf2bfc0e06c985540b0e053c2d5111de009b3137edbb9e5d9747406c40e",
                    "sha256:5d0d61a31d34d633a15e4b59295b26dfb83a3e4d2c5bf0bc3d65cd2c1c6f2b06",
                    "sha256:8b15fd96d91b8479e0cd866d44f8884ae4b9027ffff2a0e80b2605248dd35cdf",
                    "sha256:685f9f1642db4a4623cfb253e38ef898fb9b3fc7693c22287165e279ea612a2b",
                    "sha256:7cf1cc35d8a79e47233e140dd421674ca028207449ece6d0e5b837cf499eb302",
                    "sha256:6d0753cd1a7c94dca110b3d046eb6e6c72d8ef9c86e880ff9afd1e354bb64019",
                    "sha256:a09d875396c179c529c3b46dc0bf483887e0a874c50e59bf3fa3e1f79e74d845",
                    "sha256:39f78c4e49c48d4500f74198134710395cc58f4c2e293cd466ea0edee9397edc",
                    "sha256:2981c3b6799bde2e0c85b57747ede59786a6b9cee52ddb7e4c9a0f9ae27da9e6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e498dae9b043cba37fe3862adf5d003f0dd8206fa1d99d622c07044fefaf41fa",
                    "sha256:cb737d61a0d5a9abae7c8f4289f8531c3412a636eb1607e899e9db3457d64781",
                    "sha256:fb4f8328e19508f97c5b66270684f653f944f8054a29a4ad0636d7534a4deb45",
                    "sha256:9123f38b2b50880eade5aa9950532e8d405a3eb5ae88328f3bfa909b9248706e",
                    "sha256:1fccb186fc31a4c642c7c6ac3447db1432419006df4c3f6506edcd2f78f52d2b",
                    "sha256:ef82118a90ff9db9db5cc8cb74717566312a10c821d5a33432feafe5ba8bc971",
                    "sha256:911ccc14d191ed84cfdd3ff6dc41870451140f2483eb87b95fef07f509c6ec47",
                    "sha256:0e9004dca2456b571e6acfb58865d8ad18153ec3de49a2bec2b6f0591f87568b",
                    "sha256:8c16cd21877bcba95c167aedf0bc563dba6614f25404eeef07e95994c8b88147",
                    "sha256:3cf70e1be33f3b2cfb9d3db0fc8e23782cc886a6ab9b8c7dbfc37343a2153f02",
                    "sha256:ed9f4228cc50cc2e142c9dfe41418bf8845b69f51a2d4cdc1466d37c877c6fac",
                    "sha256:376ae3b81105d039852466d59cba1849980b1a49858377b7be4b9eb1627dde00",
                    "sha256:82dc73a4aecaef9f0737a45d7d2a265f58bf59368ef7c40d2417815e0228b658",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f4cb27d0647e063217be8bb40fb746adbaccc4246c9c1d50038a52f1dcd95121",
                    "sha256:178d57c4cb3742ee5fd3e51b6de65a5b526649fadff1f24f6b5e46f28591ee21",
                    "sha256:5929f8d81fc723b2812ab59725f4a6c45cee777953411a85b29a1c1a6beb5e26",
                    "sha256:1580f26fa3b576d430275c0b5212f7aa4b2b3c9cd63274c92ff019a2f97b757b",
                    "sha256:40907ffa972cf98d554eefe5ba21ddeba28564808fc0866c2fc2ea3eb87fc7ed",
                    "sha256:7a6eec0e7dcb338fdedbd0a799dc931ccf95d120674c15403361e7db33a14428",
                    "sha256:33c212320f1f51a2ffd5640aafd9e833f3120c69d58ac1d8156ebc1191ade17e",
                    "sha256:95702a44d7223b691ff6d23a867f9a7d2c02f05b122bf6866077e237655a0b45",
                    "sha256:5a05bdeacd0d0b823311bcfa92430e9aeb69b6252203b1b0862d2d8b68013383",
                    "sha256:2a6ba23d08d219c41ede9b2d5555dc9b9677b18a6ccb03c5df26859a9012d8f7",
                    "sha256:12487329d752eebc2863e00b2fd1754ca2892921b45583b5e9506870f7a55970",
                    "sha256:1c57b39a449d00e8f495d3f61d5eec9e16656e4c90583518019424b6e57365e3",
                    "sha256:b1278e69301fea6a1a49dfba60f3ce5f51eb85abbc7f275a438dacca4c25def0",
                    "sha256:6bbddbde8b05cd1f0ea88d0a76145d7e5fa4c3abd89267b42007ac540888ab7c",
                    "sha256:3891f8514b677895773af4817674755021c9fbeb705ace34925c7d75e17a1e62",
                    "sha256:ce86f220776cd14017f3e020acbe5d34b49ae49d4c1df147b7fc65b57f271ba0",
                    "sha256:4e63ccf97c2ac9fbd63c8f06c55058f0a321cd50f3e7d744f89e45f402c5eb8c",
                    "sha256:c64c857882d59fe03b9f3bfc432c93aca8841610d6114bdc23a8aab6febcefbe",
                    "sha256:a1a08b4f2cd0e3d6d57eeccdc0836c902a0a78087e034e091211d3b81b1948d0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.04": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.0.023",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.17.1",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.4",
                    "CURAND_VERSION=10.3.2.56",
                    "CUSPARSE_VERSION=12.0.2.55",
                    "CUSOLVER_VERSION=11.4.4.55",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.0.2.50",
                    "NVJPEG_VERSION=12.1.0.39",
                    "CUDNN_VERSION=8.9.0.131",
                    "TRT_VERSION=8.6.1.2+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.04",
                    "NSIGHT_SYSTEMS_VERSION=2023.1.1.127",
                    "NSIGHT_COMPUTE_VERSION=2023.1.0.15",
                    "DALI_VERSION=1.24.0",
                    "DALI_BUILD=7582307",
                    "POLYGRAPHY_VERSION=0.46.2",
                    "TRANSFORMER_ENGINE_VERSION=0.7",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.13",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+fe05266",
                    "PYTORCH_VERSION=2.1.0a0+fe05266",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.04",
                    "PYVER=3.8",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.1",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=58180998",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "58180998",
                    "com.nvidia.build.ref": "b4202741d89962808ea318dd048d185dafe3367f",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.0.131",
                    "com.nvidia.cufft.version": "11.0.2.4",
                    "com.nvidia.curand.version": "10.3.2.56",
                    "com.nvidia.cusolver.version": "11.4.4.55",
                    "com.nvidia.cusparse.version": "12.0.2.55",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.17.1",
                    "com.nvidia.npp.version": "12.0.2.50",
                    "com.nvidia.nsightcompute.version": "2023.1.0.15",
                    "com.nvidia.nsightsystems.version": "2023.1.1.127",
                    "com.nvidia.nvjpeg.version": "12.1.0.39",
                    "com.nvidia.pytorch.version": "2.1.0a0+fe05266",
                    "com.nvidia.tensorrt.version": "8.6.1.2+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.04",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-06-19T12:06:09.128199649-07:00",
            "history": [
                {
                    "created": "2023-03-08T04:41:24.616558596Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.68146178Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.736949919Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:24.79197019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T04:41:26.82642813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:20f2ff22b9a8ca9bec5178036c9ebc525a12cd4312daf5d14a9a631a30be20e1 in / "
                },
                {
                    "created": "2023-03-08T04:41:27.109028867Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T16:52:40.945140275Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:11:33.541497875Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:33.541497875Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:33.541497875Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:33.541497875Z",
                    "created_by": "ENV CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:33.541497875Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:11:34.479477682Z",
                    "created_by": "ENV NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.9.0.131 TRT_VERSION=8.6.1.2+cuda12.0.1.011 TRTOSS_VERSION=23.04 NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.9.0.131 TRT_VERSION=8.6.1.2+cuda12.0.1.011 TRTOSS_VERSION=23.04 NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.17.1 com.nvidia.cublas.version=12.1.3.1 com.nvidia.cufft.version=11.0.2.4 com.nvidia.curand.version=10.3.2.56 com.nvidia.cusparse.version=12.0.2.55 com.nvidia.cusolver.version=11.4.4.55 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.0.2.50 com.nvidia.nvjpeg.version=12.1.0.39 com.nvidia.cudnn.version=8.9.0.131 com.nvidia.tensorrt.version=8.6.1.2+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.04 com.nvidia.nsightsystems.version=2023.1.1.127 com.nvidia.nsightcompute.version=2023.1.0.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.298881655Z",
                    "created_by": "ENV DALI_VERSION=1.24.0 DALI_BUILD=7582307 POLYGRAPHY_VERSION=0.46.2 TRANSFORMER_ENGINE_VERSION=0.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.467199802Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:14:40.77377996Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.1.0.023 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.17.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.4 CURAND_VERSION=10.3.2.56 CUSPARSE_VERSION=12.0.2.55 CUSOLVER_VERSION=11.4.4.55 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.0.2.50 NVJPEG_VERSION=12.1.0.39 CUDNN_VERSION=8.9.0.131 TRT_VERSION=8.6.1.2+cuda12.0.1.011 TRTOSS_VERSION=23.04 NSIGHT_SYSTEMS_VERSION=2023.1.1.127 NSIGHT_COMPUTE_VERSION=2023.1.0.15 DALI_VERSION=1.24.0 DALI_BUILD=7582307 POLYGRAPHY_VERSION=0.46.2 TRANSFORMER_ENGINE_VERSION=0.7 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:14:40.77377996Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.77377996Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.879245068Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:14:40.879245068Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:40.879245068Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:14:41.007212629Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:33:54.707793161Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( cd opt/rdma-core/                             && dpkg -i libibverbs1_*.deb                            libibverbs-dev_*.deb                         librdmacm1_*.deb                             librdmacm-dev_*.deb                          libibumad3_*.deb                             libibumad-dev_*.deb                          ibverbs-utils_*.deb                          ibverbs-providers_*.deb           && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.174759493Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:34:06.387185708Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:40:09.20383919Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-05T17:40:09.20383919Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:40:09.20383919Z",
                    "created_by": "ARG HPCX_CUDA_MAJMIN=11.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:40:09.20383919Z",
                    "created_by": "ARG HPCX_CUDA_VERSION=11.8.0.065",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-05T17:40:19.687655167Z",
                    "created_by": "RUN |9 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.13 RDMACORE_VERSION=36.0 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 TARGETARCH=amd64 HPCX_CUDA_MAJMIN=11.0 HPCX_CUDA_VERSION=11.8.0.065 /bin/sh -c if find /opt/hpcx/ -name \"*so.*[0-9]\" -type f -print -exec ldd {} \\; | grep \"not found\" | sort -u | grep -q \"libcudart.so.${HPCX_CUDA_MAJMIN} => not found\"; then       echo \"hpcx version depends on CUDA ${HPCX_CUDA_MAJMIN} so installing libcudart from ${HPCX_CUDA_VERSION}\"  &&       BASE=2 /nvidia/build-scripts/installCUDA.sh ${HPCX_CUDA_VERSION};     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 PYTORCH_VERSION=2.1.0a0+fe05266 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.04",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+fe05266",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ARG PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ENV PYVER=3.8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T12:14:05.878877219Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:14:15.945691823Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T12:14:26.54285765Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T15:43:14.184543424Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T15:43:14.184543424Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-06T12:16:19.986104061Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-06T12:16:20.169686627Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:37:44.911425719Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:37:44.911425719Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:37:44.911425719Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:37:44.911425719Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:39:10.57622892Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.6.3         PyYAML>=5.4.1         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         regex>=2020.1.8         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:39:38.765599232Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:39:39.483714905Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:39:39.483714905Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:43:13.137365883Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.19.1 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:43:13.345767322Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T22:43:13.345767322Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:43:13.345767322Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:43:13.345767322Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:43:13.345767322Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T22:48:39.627518824Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T23:01:46.883460115Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T00:15:46.262101984Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c cd pytorch &&     BUILD_TEST=0     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T00:16:06.750304558Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.04 PYTORCH_BUILD_VERSION=2.1.0a0+fe05266 TARGETARCH=amd64 PYVER=3.8 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T00:19:35.665541142Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T00:19:55.843546176Z",
                    "created_by": "RUN /bin/sh -c pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali  --trusted-host sqrl         nvidia-dali-cuda110==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T00:19:55.843546176Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T00:20:27.80977773Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T00:20:27.999717833Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:55:13.158174833Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( pip install --no-cache-dir --disable-pip-version-check git+https://github.com/pytorch/text@fae8e8cabf )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:55:43.430198951Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:00.627365969Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:00.902006321Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:01.018857606Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:01.177063816Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:02.312410895Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:05.575217258Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:58:07.703375908Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:59:24.052280302Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T01:59:24.052280302Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T01:59:41.390375949Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:00:02.863303467Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:00:02.863303467Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:07:16.500203941Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:07:16.500203941Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:07:16.500203941Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:17.331956942Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:28:17.331956942Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:17.331956942Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:19.963512975Z",
                    "created_by": "RUN |1 PYVER=3.8 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=58180998",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "LABEL com.nvidia.build.id=58180998",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-15T02:28:20.101743188Z",
                    "created_by": "LABEL com.nvidia.build.ref=b4202741d89962808ea318dd048d185dafe3367f",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T11:07:10.723158023-07:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T11:07:10.723158023-07:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T11:07:10.723158023-07:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T11:07:10.723158023-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T11:07:10.723158023-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:07:10.728704021-07:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:07:10.734050012-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:45:11.148995432-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 57057e2fcf1c084c0fcc818f55c0ff6ea1b24ae2 &&   pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:45:12.023014928-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:45:12.028417806-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:45:12.034499116-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:48:54.80135507-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:48:54.80766029-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:48:54.815617575-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:51:34.973850681-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T11:51:35.028943312-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:05:34.327080557-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:05:34.327080557-07:00",
                    "created_by": "ARG NEMO_VERSION=1.19.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-19T12:05:34.762904005-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.19.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:05:52.21699806-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.19.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.321436353-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.19.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.327717927-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.365744391-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.402075292-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.421060792-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.446237665-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:08.728930368-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.19.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-19T12:06:09.128199649-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.19.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:62789ffcd78ce0eae545b2743541d5c063270fe9f45477acacf2031b93cea70f",
                    "sha256:7a4caa2a47521abda5ad2989120a14c589b7a296d15c9cefd17d3aafb7927dc6",
                    "sha256:732657bd4318d0a2dfda32387f361b205d4b8a14b12191fb2b68bb7654d83352",
                    "sha256:06b402b2ec9e222123240a4a2de4bcab4949185f487d950c11303334fa48bdcf",
                    "sha256:2c61357169bac85005f79dd21df7e8970c7b19fb04119fefbf4d5d499a86c179",
                    "sha256:fd4ac0d14a5d09518c836454f8d82cf9621980448f9237ea1eac4bcb7c66a92a",
                    "sha256:a1ce059d8cd4327d994bb2015060580712e0934f0f1d22a6ebfd107f84dc545a",
                    "sha256:9266b90ce593abdb76fbcd2527e59ffe25b2fe9258057bcbe5e867918b7d3e59",
                    "sha256:d3ca0fd7d2ec82d60048383c750660608edbaa19e3281904a7a3846cd1a84fc0",
                    "sha256:0c83e0d0ceacf6bd65f483e9ec585a7e22dea6b6b69dd16b71096195e0ac7d9c",
                    "sha256:2ea89c3191c09756c6af717ddfecb094227af6431689c3a5882278106a0c2bcc",
                    "sha256:0a668204610d88272b121dba8f76fa659afa80260715fad7c681b8d4086f9a1e",
                    "sha256:9ad61022c07ea195b717db18bfa1ceebf7ab58134254850f8575aa70b535c3bd",
                    "sha256:cd34385521552238de66665c5c086e27920fac5dbb614bcc6a6d2f17f5dc9244",
                    "sha256:6658522fa78a85e4e45d00503333895823f09cde8b345b5a06f5bd481876e308",
                    "sha256:956bd638d7101ea4c25fb601e90f3b5e5c6d785024118435d34868707897cffa",
                    "sha256:aae275084f5ce2964b6a6879a9a2ebe206088f36da57cf323d3074e08ecfa7da",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d55f5bb5f0e65968baec6296cc46bdefc1463b94eecd4f8ffa1d8e6abaaa1a2",
                    "sha256:bc1866d82dd732d79da9ba11782532a0bf9115b87b4ea41c624fda28ec499851",
                    "sha256:1de9b39e226fb76a6c107c1b8490d2498a3bf057faff68420faaab21b94246af",
                    "sha256:d49a629c21cd66069da37a84e09d9b27504f67cef87ae12299db898426ee521b",
                    "sha256:303c33a9134dbc1469949d606aebbcf4f546669ae495cb9abbc9ce1f1dcc977d",
                    "sha256:90181ffae0133fa08a74d36e8ffe3b4b98b8d5c4e523c735acb57ffcc9dbe7a0",
                    "sha256:f6f0f3b28725a1df8dc9849399dc4d1b238650524430d308416ef5bbb241244e",
                    "sha256:2e93dfaf08ddc0b6e3c4f8334869647618b89be30457083c214c2e5a2a89a886",
                    "sha256:fb6909541c42c6390408f546e9f6f5269b08357fed972b7d6089de6b02054633",
                    "sha256:2c1ee4261f8dfb2819754aa410250a1b13d58df9c383efd665f1a99a3ebd6a85",
                    "sha256:bfb161516d8432bc80eb2029c0d56cb384b57d2a9a47102e5b29640a455fec06",
                    "sha256:158843d06beeeb0a0840c87d48f4ebf9fa3289cd614209b51926868463d017d6",
                    "sha256:85547e8536a29a3dfbf820a420155835c1ac20bc98233f16a3028103d7c9c5aa",
                    "sha256:4dfaaa45a8743ec4ac9804240c7dc46e8e047c9ec78b78e712031889e03b5457",
                    "sha256:89f061d88fa7d991b2311fffe678cfb7466b0dc6fd11783b19e6ace8047cf95d",
                    "sha256:1c0c824746af466e68f868edbeda914f0e1fd4eb8244e385372886ef200d4eec",
                    "sha256:e3773a00aefa342c365b15acb3379d81d1870c943774c05c5b6c89b2997ef16a",
                    "sha256:3aafcb44855fcffd9fdaae3dc108571f05e679ef0035d988cd1d076e9dfd9411",
                    "sha256:9e77ba9b3126f88ad66c7317a88e1523409993ca12dfdf48dde7209bae35aa5a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7e9b8c707a7a06eb9e61dd31f75aa6d99bbb9f172d1c9e67e53be6dac5d131b0",
                    "sha256:917311ebb1df5894af24dfb1ecbfbe8cd6f4495b86db4ca6baf5abc86a2cd5ee",
                    "sha256:87213732a176bd783ad8499c28ab053e6ae24f2ecd1ef6e9dc465e2677e1ee3a",
                    "sha256:c19108d6b1e357ce8a6a32553f37011e44712da959681d14af72981aa961635b",
                    "sha256:cda818d92645936a88a5f30c42986f4d6f8392e2d703b777ce1cab675074cdd8",
                    "sha256:722bc78ec25eb66b9996a25dc4819584f3d3b506e635bf4249676d9254446126",
                    "sha256:0ae0f0121e8ddac11a5a49a123307f4dd6675e9f52a72efe314a9125aff22f1a",
                    "sha256:fc7922e25bb73bd7fa0f99e00581a8934cb85d6efc1f984b5136ed62c80bad01",
                    "sha256:0786103389589e0171843b75ca42b7543600745c5034b8437422cc9740231c34",
                    "sha256:87fd9909358423f30adbf944e41a32d32a361abee89a0c035a457334e8ec53c5",
                    "sha256:1a995ed4bccb212975577918ef9a7564a77c4be546a95cb5c4ebd06f6b2da6f8",
                    "sha256:33572941d0e641a130de857e47ed7434153ba9cebeabf642505964aca6faf51b",
                    "sha256:b24d5136613503afbe5bcc946dc0b544dd1c90db9caf8f6d68ee26042f69dc08",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7a9312016419b1d325975c521fce8ce2eb077637fe510acacea417175cea56e8",
                    "sha256:92ce1b65e98d89b1c8fcf99006829189036a91d1d7b5ca3abbe2d805e6d6d7a9",
                    "sha256:08de4d23a996ad83d59a8f75c524f0d5c7650af924ae4ec8aaebb7e782f1ce35",
                    "sha256:f6aae17983aefc0599dd9df743589e9f433e43ae18c7cba21a43f603e5bc03e3",
                    "sha256:148a06330fae94bc64d5dfc7896499295b0079917ee1527e1396b29f534eed2f",
                    "sha256:064076b7435444ba3a0cbb41ee7498f954d7a7b0dd3100efd3c24dec4abed7f9",
                    "sha256:dfa6197d750372b26cb64fc977fc94f4ad2d04d76e0575e1b10b1aa8371502be",
                    "sha256:53d8d6170a3fefc940593e1e3b31eb9c1b478f7bf27c88cc0dd8fecac853e244",
                    "sha256:8056f068f64e55702414e5d7a772a9562f7f3d2b65e67f50c3a0ebf376e4220d",
                    "sha256:eeff55c28acbec7bbbf2e75ca4bb9510f24b36921c9de943ed3e19cd2f942182",
                    "sha256:dfc4bc24ea760b0c889c13bd5e6fbb5d379ed0d4c245fecf80767a31f59aaddf",
                    "sha256:93a93da2687ccb97602903951142a844b14c36dff72681286f2483b54279eb5e",
                    "sha256:21826a8eb05433f96623b99812fe0356382e5b4757fc0bd2a6791a05d29048f5",
                    "sha256:795a485426ae81eb606f695c176110f299e29178705fe28576d2d38d33a9e607",
                    "sha256:90380ffc6a4780d21af15528704d65f19f21686c60577f3a9e246174ea5f60c4",
                    "sha256:7e299a5694540a42258d78bedc0878f4d86e7ae1a065e00f3f6ebb247649e7ef",
                    "sha256:0265402c86bf542fe4b7ef461d3cf22f662578af3407c0e5ecb0647cda5b8e23",
                    "sha256:c03b0c949de5ae8c9d0ca5a7277322d457e7a540b0278b47e099c50b8de7ff1f",
                    "sha256:8a027f317eac925a374f4da233975f9d72f22c39b8fe583ec5531f12916a63e8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.06": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.1.1.009",
                    "CUDA_DRIVER_VERSION=530.30.02",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.1",
                    "CUBLAS_VERSION=12.1.3.1",
                    "CUFFT_VERSION=11.0.2.54",
                    "CURAND_VERSION=10.3.2.106",
                    "CUSPARSE_VERSION=12.1.0.106",
                    "CUSOLVER_VERSION=11.4.5.107",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.1.0.40",
                    "NVJPEG_VERSION=12.2.0.2",
                    "CUDNN_VERSION=8.9.2.26",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.06",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2",
                    "NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "DALI_VERSION=1.26.0",
                    "DALI_BUILD=8269288",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.9",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+4136153",
                    "PYTORCH_VERSION=2.1.0a0+4136153",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.06",
                    "PYVER=3.10",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.20",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=63009835",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "63009835",
                    "com.nvidia.build.ref": "4a0aebfab10905f515249ff90b28a1986d15f735",
                    "com.nvidia.cublas.version": "12.1.3.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.2.26",
                    "com.nvidia.cufft.version": "11.0.2.54",
                    "com.nvidia.curand.version": "10.3.2.106",
                    "com.nvidia.cusolver.version": "11.4.5.107",
                    "com.nvidia.cusparse.version": "12.1.0.106",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.1",
                    "com.nvidia.npp.version": "12.1.0.40",
                    "com.nvidia.nsightcompute.version": "2023.1.1.4",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001+cuda12.2",
                    "com.nvidia.nvjpeg.version": "12.2.0.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+4136153",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.06",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-08-02T15:58:03.184499287-07:00",
            "history": [
                {
                    "created": "2023-06-05T17:00:37.587967605Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.631302347Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.67809659Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:37.722501654Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T17:00:39.16987586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ad2ee2cfb186802f49c9bf4148674d1c6fc201f83478ec01ffaa7086d491323 in / "
                },
                {
                    "created": "2023-06-05T17:00:39.361599721Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:24.500479593Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "ENV CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:47.784788893Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:07:48.137367363Z",
                    "created_by": "ENV NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.18.1 com.nvidia.cublas.version=12.1.3.1 com.nvidia.cufft.version=11.0.2.54 com.nvidia.curand.version=10.3.2.106 com.nvidia.cusparse.version=12.1.0.106 com.nvidia.cusolver.version=11.4.5.107 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.1.0.40 com.nvidia.nvjpeg.version=12.2.0.2 com.nvidia.cudnn.version=8.9.2.26 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.06 com.nvidia.nsightsystems.version=2023.2.3.1001+cuda12.2 com.nvidia.nsightcompute.version=2023.1.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.066887068Z",
                    "created_by": "ENV DALI_VERSION=1.26.0 DALI_BUILD=8269288 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:07.550598994Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.1.1.009 CUDA_DRIVER_VERSION=530.30.02 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.1 CUBLAS_VERSION=12.1.3.1 CUFFT_VERSION=11.0.2.54 CURAND_VERSION=10.3.2.106 CUSPARSE_VERSION=12.1.0.106 CUSOLVER_VERSION=11.4.5.107 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.1.0.40 NVJPEG_VERSION=12.2.0.2 CUDNN_VERSION=8.9.2.26 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.06 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001+cuda12.2 NSIGHT_COMPUTE_VERSION=2023.1.1.4 DALI_VERSION=1.26.0 DALI_BUILD=8269288 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.9 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.243102356Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.522826863Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:11:08.644163492Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:04.729773252Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.352851129Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-20T04:26:17.511793295Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:32:07.414023032Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-20T04:32:07.414023032Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+4136153 PYTORCH_VERSION=2.1.0a0+4136153 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.06",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+4136153",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:21:54.195358319Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:22:00.693732502Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.080699431Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir pip==21.2.4 setuptools==65.5.1 &&     pip install --no-cache-dir cmake==3.24.1.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.216205675Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:22:11.216205675Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.20",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:23:57.261917711Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:23:57.468764307Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:24:17.707736107Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:25:53.99480952Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:26.485433432Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:27.112313477Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:26:27.112313477Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:53.765336771Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:29:54.187434654Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:35:20.29607509Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c OPENCV_VERSION=4.6.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T00:48:40.426155667Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T02:07:54.4528144Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     USE_SYSTEM_NCCL=1     USE_UCC=1     USE_SYSTEM_UCC=1     UCC_HOME=\"/opt/hpcx/ucc\"     UCC_DIR=\"/opt/hpcx/ucc/lib/cmake/ucc\"     UCX_HOME=\"/opt/hpcx/ucx\"     UCX_DIR=\"/opt/hpcx/ucx/lib/cmake/ucx\"     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:08:22.783704863Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.06 PYTORCH_BUILD_VERSION=2.1.0a0+4136153 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:17.187324577Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:31.833226272Z",
                    "created_by": "RUN /bin/sh -c export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"  && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:12:31.833226272Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T02:13:01.943644053Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T02:13:02.063595471Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:54:40.643700192Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-cache-dir --disable-pip-version-check --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--deprecated_fused_lamb\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" --global-option=\"--fast_layer_norm\" --global-option=\"--transducer\" --global-option=\"--distributed_adam\" --global-option=\"--fmha\" --global-option=\"--fast_bottleneck\" --global-option=\"--nccl_p2p\" --global-option=\"--peer_memory\" --global-option=\"--permutation_search\" --global-option=\"--focal_loss\" --global-option=\"--fused_conv_bias_relu\" --global-option=\"--index_mul_2d\" --global-option=\"--cudnn_gbn\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:55:12.271021361Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:55:14.913616002Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.3893907Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.683823672Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.800048117Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:23.946225624Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:24.757865253Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:31.204452825Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:57:33.419485912Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:58:45.911918693Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:58:45.911918693Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T03:59:04.873597717Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:59:28.902048391Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T03:59:28.902048391Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:05:44.189045282Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:35.538684436Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.694366186Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=63009835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "LABEL com.nvidia.build.id=63009835",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-24T04:24:41.835756697Z",
                    "created_by": "LABEL com.nvidia.build.ref=4a0aebfab10905f515249ff90b28a1986d15f735",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T17:28:24.307203169-07:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T17:28:24.307203169-07:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T17:28:24.307203169-07:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T17:28:24.307203169-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T17:28:24.307203169-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T17:28:24.313505688-07:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T17:28:24.318743436-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:08:55.105249801-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 8b7a1ff183741dd8f9b87e7bafd04cfde99cea28 &&   pip3 install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" --global-option=\"--distributed_adam\" --global-option=\"--deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:08:55.822773047-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:08:55.829425089-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:08:55.835566468-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:13:04.317549921-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:13:04.323792077-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:13:04.332215564-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:16:29.32567047-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:16:32.992275802-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install flash-attn # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:16:38.150032996-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install triton==2.0.0.dev20221202 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:16:38.188350475-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:32:40.93017656-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-07-24T18:32:40.93017656-07:00",
                    "created_by": "ARG NEMO_VERSION=1.20.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T18:32:41.265299179-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.20.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:57:42.78495693-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.20.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.406292779-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.20.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.412066835-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.450840106-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.497498818-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.517964089-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.55563044-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:02.793327569-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.20.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T15:58:03.184499287-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.20.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cdd7c73923174e45ea648d66996665c288e1b17a0f45efdbeca860f6dafdf731",
                    "sha256:1a18bf3b0d62b53eab2c1f508219c41aa809926b2d19f2a7a74953ff8fc0c138",
                    "sha256:db56a16becb50d2f4644a0bdf7948ab2ce80cd8cf553fb51c8c66dd98bad2ca9",
                    "sha256:792cf8b3f47768ef9892f733fa698cb4fdb6e1fbf85d81bc5df532204e592cc4",
                    "sha256:b72f7d78c549ccbf8e6cdf89c466c2522a1385b86ce90676f9a49afedcc05f37",
                    "sha256:bddd82d5de7b3dbc2e577bb9b6001262bdb12784976429e8460bfb716c9bf417",
                    "sha256:751c50d7854e31b176dd27ba9eaddb626886f51802f890530d9f3eb5c8c803a9",
                    "sha256:765b93603198fef8a9600b2ee7859ef1e016f5b117d89ebe9005e06ed2bfab8e",
                    "sha256:fd77e729e122c0222667f07315357d83e9da75259ad5fe1d11983d169867f1a8",
                    "sha256:9b44084c3ce678fd3bc5be4dd9a1fc3a7004690473a043ae19018cc05c702211",
                    "sha256:4309c17f43834f9515b6629ac04ef182a09ba191ff2d2048f2f51e7984e915e7",
                    "sha256:b5036c04ac63b5fde65af988a523a66510673f2d5ffefaae4562dec30168cb57",
                    "sha256:ad91a6a9f1068180c2b93580c4a91ae142541e5a70d7ee682fb93ac8c701a3f4",
                    "sha256:54351a58a2ece00ccbb4794e8735edd7769e92e80c8eaadc48c8748aeeccce17",
                    "sha256:12ba3cf24c7ecf48115a52d834e8bb7f807da6135622a34562e4dce9e1629335",
                    "sha256:06830fc3ff543996161deb86b6d1257a5e40855117f707704912534317a476d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa5c6ce809d37f60e11f0a022197f67db95d061d6a430da1f8ee431ba0184937",
                    "sha256:d1766ed4d04dc5177947420d580c14439c3d24560771fe9693dfb819b708d554",
                    "sha256:d7ee4fe09d8fb28e27e63cdb703063b1f91796beecb4c5461e08c11ff071efe2",
                    "sha256:a123452adff47964c35dab28db7519cb92606c2418ba688a31da9033812c69d1",
                    "sha256:ca04e64d15f3ff487c9f1e95945ec7c114c83695caa41017dbb1f8f3540fc9ed",
                    "sha256:ea6a780775768ec122f27a37e9872f6f6242a5ec48832c347df928cbbb7d2a23",
                    "sha256:abad777b7433deab6395c98cc673936d525c8471b2803ca3e2ce02a20476dacb",
                    "sha256:ed9e1d1b0f660ab3aeb1841aaabfa920df474ba2d8a493b52c52e6a9b7879ecf",
                    "sha256:6429d2ec2f706f87fc2ca84a6405d8fd94495e9ef3f26c0cb5d96b7b2c1b01dc",
                    "sha256:69e9d95100923fd5de7b9ec5c19f6b52497e45f2088d8a330edc2a815cf29e16",
                    "sha256:6a9840e30fcab911e3b49f814f6a44577f234b47c11053cfa69a96d39d1ac92c",
                    "sha256:9a3d182ac6df0095788f4ec27e4db3e26a3139251772a00ee564df37cad2d7b1",
                    "sha256:ab22076a51db4b96b5eedb332d828fccd1ca5222817bb9157e3dd3e57ce13b63",
                    "sha256:4931545bd7b62aed3ecd0b31bb0e615fe71ccd4d98b46c0d252db1853ebbc754",
                    "sha256:534e91568a4ae54d2090f6e9efa6e887b6dbedbac1152291d8d1bbb7e7be596c",
                    "sha256:06dd2c0c4d3c61ccbc5edceee7f9e164ba41920249e84da2f060e35bdf5f379f",
                    "sha256:b7f4e03f3e32bc6d06cfb755799a501927c029e02336dc21d6a0e54b2c12e4fc",
                    "sha256:e0607b7bd91e8f408d73cb2dc9783400182ccb78b723b2fc4a7af724a9803ba0",
                    "sha256:7967ef5ce9906d3d927d1492485b48f49a797fbcd82ea359b480ebf5ac0b6890",
                    "sha256:4fa76d81ae406c04554c6ba90627c1cec674d790e643b1e2cd6e1c6ec6dce4bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:496832ee61b715b9c0ba5eaa810425c46275752a0b55a4862d48cfed7dd654de",
                    "sha256:0e7aaa53861f9723e1113c9d8ed65aace33366faf80171ca92cb382a2eddfd81",
                    "sha256:0fe263c7c42c4cf4753442642388e4b4782ceef98bfd85fb4172baa1e0a5753d",
                    "sha256:6cdfe740b82025a471f0108ba311a5e55fbaa72c6750136ef3d77a119efc3131",
                    "sha256:15397fad5c65c191abfb629aa869a1ce2d34093e06ec55858c57babef3bd2958",
                    "sha256:f53b8856dea8b061708c75bb15edd2b900f26343727694cdeeaa7079833111b0",
                    "sha256:af8d4022c12980bc09e26e85feac800cb2d5ac24607c4c72d8fb5a2ff38e5de8",
                    "sha256:a4d896d18ca7e9f9adb57f758b051c912df92d4f6d759aa7a6ea006f88c3418e",
                    "sha256:afb33cec2a4e5c70b564e3abef359e5dd0a58a6c302de729597c24de17f93c67",
                    "sha256:2905a4cf531760fd47728bbca45f0db9af977e130ed991c406dd956a7e85f589",
                    "sha256:3c9b58d7f71156c3b944facecd4102147ac716a25ab62442e67beb7fdb7d5633",
                    "sha256:639b50b5cf37cc13c851cd9eb4a27e748994677c6f8c34b055b272fd28aefe82",
                    "sha256:bc8bd6f91dc78052c9fc36022c68bc50c515fd811c4f949a652c26ec587d8085",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5b7eb9be8cfc8b5cb94260edc7c07d046dd7f8de329192d5a6932eb8533336",
                    "sha256:a9baf41a748ccd9ad6cf2bb56baa8f7287ae4504388cb2614e99ed54761875a3",
                    "sha256:5cc6a320f86e584206e48c2680bcac326045697cfc7a8d3fe95034be407d89b4",
                    "sha256:f6770e4deb9577174f7d273753b0c786de3e4c9b11f03e411d1a27cac1c4a5f6",
                    "sha256:28d0977dc69eec58772bb3481d0f1288672075c58145399c94a268c900d39748",
                    "sha256:6574e10c629ac7a03a5a41bdfc2902d9dd44089de89ae4e1583dc401bf3277e8",
                    "sha256:3466cbf12686ec5cac6e2c41f0bbfa39dd786da046af89831d37042efefd674b",
                    "sha256:f4e5ae3eca51c12e71e50dae743f38a01229b5df683ec458d77e77e4158a04ca",
                    "sha256:a4627e0130376f0ecf7f06147637638e1fa4ccaa99f48bc12d40947b9fd6c0d4",
                    "sha256:a8c8e6c79346c7e837a2f919ec08a9fab3b511980e007fe96c186b09b3b96ba2",
                    "sha256:603451ade91e59ff6b3d1a59499fc3bdabf17f4e1331ec2411ce6214a21cbb55",
                    "sha256:7627bc2bbd3fd0ea02ef26422e1dfe6fb2fa3fe820eb86913016d190e8dc8208",
                    "sha256:aeca9de143a8cf92819bd853d00f14a93fff21b25388cf8d65ec1a4c7087602e",
                    "sha256:be03cb3b896a3e4e2e56d15e2baa963e2dfb94509b9b9e017140a14baa99b940",
                    "sha256:c5b28553290ab7816da72c24f890ec79226ddeb65a0f03672e226f5ae8f7e39b",
                    "sha256:04e3a1f0e06da9e54521722296fb312aeace5fd7421df9d1bc21cf961c28067f",
                    "sha256:5a6789119a40e5a7492e2268dda160886e38097e341735e5b39ce6c2bfb65270",
                    "sha256:bce06d67945703d9a385771e47f43a981d5befc3ec5d95a4d8620e1184635acc",
                    "sha256:430686248a949a72c0afb9745f918464b486d1f110d17283191298968004c397",
                    "sha256:b49b9d984dc3e288a4f1a77ca13c5636f7b2eb3c6ca548145cd37e610ddcfc01",
                    "sha256:5baee4b83013144e97aa01c2a796f6c0832561d2284e20b45975ba661841a10d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.08": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.2.1.020",
                    "CUDA_DRIVER_VERSION=535.86.10",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.18.3",
                    "CUBLAS_VERSION=12.2.5.1",
                    "CUFFT_VERSION=11.0.8.91",
                    "CURAND_VERSION=10.3.3.129",
                    "CUSPARSE_VERSION=12.1.2.129",
                    "CUSOLVER_VERSION=11.5.1.129",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.0.5",
                    "NVJPEG_VERSION=12.2.1.2",
                    "CUDNN_VERSION=8.9.4.25",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.08",
                    "NSIGHT_SYSTEMS_VERSION=2023.2.3.1001",
                    "NSIGHT_COMPUTE_VERSION=2023.2.1.3",
                    "DALI_VERSION=1.28.0",
                    "DALI_BUILD=8915302",
                    "POLYGRAPHY_VERSION=0.47.1",
                    "TRANSFORMER_ENGINE_VERSION=0.11",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.15",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1",
                    "PYTORCH_VERSION=2.1.0a0+29c30b1",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.08",
                    "PYVER=3.10",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=66128610",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "66128610",
                    "com.nvidia.build.ref": "bb0476c6ce5f374d5bb697427f59dd429c527a37",
                    "com.nvidia.cublas.version": "12.2.5.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.4.25",
                    "com.nvidia.cufft.version": "11.0.8.91",
                    "com.nvidia.curand.version": "10.3.3.129",
                    "com.nvidia.cusolver.version": "11.5.1.129",
                    "com.nvidia.cusparse.version": "12.1.2.129",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.18.3",
                    "com.nvidia.npp.version": "12.2.0.5",
                    "com.nvidia.nsightcompute.version": "2023.2.1.3",
                    "com.nvidia.nsightsystems.version": "2023.2.3.1001",
                    "com.nvidia.nvjpeg.version": "12.2.1.2",
                    "com.nvidia.pytorch.version": "2.1.0a0+29c30b1",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.08",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2023-10-26T15:21:45.671979422-07:00",
            "history": [
                {
                    "created": "2023-06-28T08:37:40.107416121Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.172787047Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.235648065Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:40.292202878Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-28T08:37:42.055763636Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:140fb5108b4a2861b5718ad03b4a5174bba03589ea8d4c053e6a0b282f439ff3 in / "
                },
                {
                    "created": "2023-06-28T08:37:42.319109064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T16:47:59.225590634Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:27:10.87782656Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:10.87782656Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:10.87782656Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:10.87782656Z",
                    "created_by": "ENV CUDA_VERSION=12.2.1.020 CUDA_DRIVER_VERSION=535.86.10 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:10.87782656Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.1.020 CUDA_DRIVER_VERSION=535.86.10 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.1.020 CUDA_DRIVER_VERSION=535.86.10 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:27:12.323420248Z",
                    "created_by": "ENV NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.2.5.1 CUFFT_VERSION=11.0.8.91 CURAND_VERSION=10.3.3.129 CUSPARSE_VERSION=12.1.2.129 CUSOLVER_VERSION=11.5.1.129 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.0.5 NVJPEG_VERSION=12.2.1.2 CUDNN_VERSION=8.9.4.25 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.08 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001 NSIGHT_COMPUTE_VERSION=2023.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.2.1.020 CUDA_DRIVER_VERSION=535.86.10 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.2.5.1 CUFFT_VERSION=11.0.8.91 CURAND_VERSION=10.3.3.129 CUSPARSE_VERSION=12.1.2.129 CUSOLVER_VERSION=11.5.1.129 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.0.5 NVJPEG_VERSION=12.2.1.2 CUDNN_VERSION=8.9.4.25 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.08 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001 NSIGHT_COMPUTE_VERSION=2023.2.1.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.18.3 com.nvidia.cublas.version=12.2.5.1 com.nvidia.cufft.version=11.0.8.91 com.nvidia.curand.version=10.3.3.129 com.nvidia.cusparse.version=12.1.2.129 com.nvidia.cusolver.version=11.5.1.129 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.0.5 com.nvidia.nvjpeg.version=12.2.1.2 com.nvidia.cudnn.version=8.9.4.25 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.08 com.nvidia.nsightsystems.version=2023.2.3.1001 com.nvidia.nsightcompute.version=2023.2.1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:51.674876445Z",
                    "created_by": "ENV DALI_VERSION=1.28.0 DALI_BUILD=8915302 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:52.091716134Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:30:52.667505663Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.2.1.020 CUDA_DRIVER_VERSION=535.86.10 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.18.3 CUBLAS_VERSION=12.2.5.1 CUFFT_VERSION=11.0.8.91 CURAND_VERSION=10.3.3.129 CUSPARSE_VERSION=12.1.2.129 CUSOLVER_VERSION=11.5.1.129 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.0.5 NVJPEG_VERSION=12.2.1.2 CUDNN_VERSION=8.9.4.25 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.08 NSIGHT_SYSTEMS_VERSION=2023.2.3.1001 NSIGHT_COMPUTE_VERSION=2023.2.1.3 DALI_VERSION=1.28.0 DALI_BUILD=8915302 POLYGRAPHY_VERSION=0.47.1 TRANSFORMER_ENGINE_VERSION=0.11 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:30:52.667505663Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:52.667505663Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:52.957357553Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:30:52.957357553Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:52.957357553Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:30:53.083909025Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:44:37.611258136Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:50.90238566Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T17:44:51.031342551Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:51:06.996292612Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.15 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T17:51:06.996292612Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 PYTORCH_VERSION=2.1.0a0+29c30b1 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+29c30b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ENV PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:48.787584665Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:49:53.394213417Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:49:56.333696932Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir pip setuptools &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:49:56.376178777Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:49:56.376178777Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.23",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:50:53.318119653Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:50:53.326014305Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:51:09.284840698Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:51:09.284840698Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:51:09.284840698Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:51:09.284840698Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:51:56.159335926Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:52:12.501852763Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:52:12.82886541Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:52:12.82886541Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:54:06.367537255Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.0 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:54:06.403633033Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T20:54:06.403633033Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:54:06.403633033Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:54:06.403633033Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:54:06.403633033Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T20:56:45.437837078Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:00:50.792360806Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:33:59.635658716Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c cd pytorch &&     USE_CUPTI_SO=1     USE_KINETO=1     CMAKE_PREFIX_PATH=\"/usr/local\"     NCCL_ROOT=\"/usr\"     USE_SYSTEM_NCCL=1     USE_UCC=1     USE_SYSTEM_UCC=1     UCC_HOME=\"/opt/hpcx/ucc\"     UCC_DIR=\"/opt/hpcx/ucc/lib/cmake/ucc\"     UCX_HOME=\"/opt/hpcx/ucx\"     UCX_DIR=\"/opt/hpcx/ucx/lib/cmake/ucx\"     CFLAGS='-fno-gnu-unique'     DEFAULT_INTEL_MKL_DIR=\"/usr/local\"     INTEL_MKL_DIR=\"/usr/local\"     python setup.py install     && python setup.py clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:34:07.339879538Z",
                    "created_by": "RUN |4 NVIDIA_PYTORCH_VERSION=23.08 PYTORCH_BUILD_VERSION=2.1.0a0+29c30b1 TARGETARCH=amd64 PYVER=3.10 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:37:43.748145403Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:37:53.393793994Z",
                    "created_by": "RUN /bin/sh -c export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"  && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:37:53.393793994Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T21:38:15.606825067Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T21:38:15.622992963Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:00:12.725926557Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd apex && CFLAGS=\"-g0\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:00:34.337692307Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:00:36.271571287Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.160800015Z",
                    "created_by": "RUN /bin/sh -c find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.269299974Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.276990265Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.283599876Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.331533384Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.439755115Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:01:25.695234911Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:02:06.352983186Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | grep -v internal)  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:02:06.352983186Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T23:02:22.241142077Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:02:22.958797444Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:02:22.958797444Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T23:05:34.045499903Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/py/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-06T23:05:34.045499903Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-06T23:05:34.045499903Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.785194704Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=1 pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T00:21:52.785194704Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.785194704Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.930700898Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=66128610",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "LABEL com.nvidia.build.id=66128610",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T00:21:52.93826214Z",
                    "created_by": "LABEL com.nvidia.build.ref=bb0476c6ce5f374d5bb697427f59dd429c527a37",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T14:23:08.329587901-07:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T14:23:08.329587901-07:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T14:23:08.329587901-07:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T14:23:08.329587901-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T14:23:08.329587901-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T14:23:08.592436505-07:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T14:23:18.2425993-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/Megatron-LM.git &&   cd Megatron-LM &&   git checkout 375395c187ff64b8d56a1cd40572bc779864b1bd &&   pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:01:51.69323823-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 52e18c894223800cb611682dce27d88050edf1de &&   pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:09:01.017521041-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&   cd TransformerEngine &&   git fetch origin a03f8bc9ae004e69aae4902fdd4a6d81fd95bc89 &&   git checkout FETCH_HEAD &&   git submodule init && git submodule update &&   NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:09:01.368640585-07:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:09:02.643990598-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:09:02.89479451-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:09:03.135801994-07:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:13:35.099081624-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:13:35.360369876-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:13:35.597322542-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:16:51.659043562-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:16:56.39085599-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install flash-attn # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:17:03.690393159-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install triton==2.0.0.dev20221202 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:17:08.572602833-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install numba>=0.57.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:17:08.93429777-07:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:20:49.988136574-07:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/speech_recognition/k2/setup.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:20:49.988136574-07:00",
                    "created_by": "ARG NEMO_VERSION=1.21.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-26T15:20:50.616481047-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.21.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:10.608264561-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.21.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:42.635423473-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.21.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:42.880864294-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:43.190097805-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:43.559152181-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:43.896214417-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:44.340882227-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:45.030850124-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.21.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-26T15:21:45.671979422-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.21.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:59c56aee1fb4dbaeb334aef06088b49902105d1ea0c15a9e5a2a9ce560fa4c5d",
                    "sha256:5595c1d1841261f97f8d0402c3fb98582bb66b017525f47bdef04cb8a5b4a07f",
                    "sha256:6023f4138aad6e72831412728948dcc04271bb9ba106590832ed4fe7e617688b",
                    "sha256:d7b441b8271335c20d20f7c325f1793a8d893f16b00b6cd77f00f44e5660077f",
                    "sha256:57e2f5f8d1dc2ea7ed374f9788f73348ae695531a4dbd1fb728d9f73a67d6b90",
                    "sha256:ab3644bbb3dce49936ee40c7a2903bc0977541140fa938c4c9b184998e7423b2",
                    "sha256:c92afafe3e624f534a324b5d54e3c8ce9bfad5fe7ad5aba06ca5d975a5b1151b",
                    "sha256:dde6a85f6acac35f0492e212b657835de95c5a495cfbb03ce824aed984085154",
                    "sha256:9a0bc889c66762d87d815e3689d79ecd0c56bd22b02d7265be04099170f1b9bc",
                    "sha256:3776be7253168c80bcf275fa879af96453ca947e0e621e8834cdeef892aa4a69",
                    "sha256:74ff9c896cc29266205cbaec6ea48e1a9096e42e7df8ac7e3c74e20bcfe7e45f",
                    "sha256:705b3179ab88c98db19f0f03a0b346b5ae189bd6e8acd99f9e661a05f15a3baa",
                    "sha256:00fcb740c19b8247cf050b76dfefd0e18c5962d5a29e5ae5830aa77949fa8e84",
                    "sha256:dd249ad4e47c64477d5b174708e3351c19007f879e8c7b423a66ad4b4aa7d9f4",
                    "sha256:ab0aee48903b53ba52adaec8b582f87968d72a451ca92ef45675b39b6545dfd7",
                    "sha256:e873cbad61d3835467221c6391b8f7f3a206c4e555a8553cae8a6120fbe6faf6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b337f3650482c89348fddf241631cafcd624c275fc430d84aa03ed3ca8928c1",
                    "sha256:c77be5222a925685a5e3525ba731d4acc45dd0c5c9f78d03d79b093d57a1d549",
                    "sha256:8cdc371c471c36c679b01a85af1a4e5b29e29a4b01e9fcac49cf883d7c03e16b",
                    "sha256:64f438113a018225ab60bd27264fb2d5f589d4dd7b77771e980c7e354190e28a",
                    "sha256:338d364d6651fc3f16dd5bb03248e60f58785517b310fdd6a4718620d2c04027",
                    "sha256:bb5ba48fa5ca21a212211fc88be96ef52e5de4ea4685a5b9ec5ebfbd716b30c2",
                    "sha256:6f0c1a21ad7fe2cd869e2a787fdab8eef9e1382472217307c208c9a38ff6f6e2",
                    "sha256:5f48cd1cd62deacf22052244a874017b5ff91788e88c7038598a14185f6e6441",
                    "sha256:04df05f54b718525a04860095f9281785e4d5cd8e7df51abe69508de1e031f35",
                    "sha256:58e70f687071063a9f07a47762778ce84ac42ce614826e49f0a5031624bdb419",
                    "sha256:73d35b39fd80ce16fa42bd861773adf6e54bd4b5f14519e3b85fab1daa268e74",
                    "sha256:dfd3a808a6ab052a7fb6cd05ccbdef755b6f49455d4c214441e963e7da5ee14b",
                    "sha256:684d7c3d5c9810c318650d69784ee12ae11b4a50899e2ded898df444a2b88a9d",
                    "sha256:297996e1b637125d331ab3c890c143df10d7fe3c8b558956cc77597277c4a78a",
                    "sha256:4904fc451872fbbaf8c3499b6bfb25b19beeb67de8720fe91e159755c37d7be5",
                    "sha256:82f1ce6da3563db8fcf329973627886ecaf9656e1788dc2b607039d6a1c17aa1",
                    "sha256:fa54ce70c059a37b3b14815285eedc2e2982019eb90d90758701674c274dfb93",
                    "sha256:7cbbc5d7c0ee3ef7939801041e3b56501e4cc3e18e720c6fc9d8c50ef3b8882e",
                    "sha256:bd9ced85754c7099d6320eecb0c2bed0027630063f72fafdb04f52604a01b1fd",
                    "sha256:2d4b5dd672e1ffef5ea0845dd9b5054a3e697685815be0bcade83311f41c03c9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c01b8c94866101946f4fd025b757ea58b523702b4f71f203568968ca09c7b06",
                    "sha256:743dd969b81eb76ccba1d52208c8304282c4b84073175ec54feb736cf3840945",
                    "sha256:90f7fcec30699c3695de2e1da70aaa44542c07b60132e821004dc72b64a70337",
                    "sha256:1392ee3692183f4d609925b496cde770318be0001d59cab7ec45ab525e441e4f",
                    "sha256:11ee9aa07ba1cb9057165a2e9b399671ad8d73a57c9efedf245ad4ec2ed2445a",
                    "sha256:6fc68d31a53cc7ca82776a20f2773db97cae8fa3fba09469ef443848b78e6e35",
                    "sha256:5695e47f9c7b378650e6d4407e63d5d7f556d1e04d638d2e1e488f6c943f3f28",
                    "sha256:4097cc44fb7ffa4f98c95928f45a7b41d2d4c315b23377670abd6a9fc9e5f418",
                    "sha256:31a4f8e11cd231b095e65a34f6d9afd093699c0044a5bbcd753a00f2eece9830",
                    "sha256:d871c62aa077d65063ace6dd48c5d0fd57d369755fabb94df325aba6cf39bd63",
                    "sha256:6e0fd60948c2809c15e3c1ecf5966cf20095d014816585484cf21064bf3360d4",
                    "sha256:2d31d72b366ba44d249cc7df23b48ea424cdd1e6226bc993105f7f459b9122aa",
                    "sha256:a01a2923ee415e8e822214edd564ff55a56c608654b865bc8e75097a88dda41b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:270f87c235cb12ff3f6822aac8348c74429f13ebb077a3ecff93ae09b81d5b43",
                    "sha256:0f208074df42f8a4146bfe4e847629f4cbff5b02ccaf90b231419affafef9708",
                    "sha256:8fc76250899a0a62e6ac9672bb9e54ae3d6223d93a2f9fe3489ea8a9c6586ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf0697cc45664a9557744d77bae913f8aad72bb8901a4ef0ea1acba111f6c994",
                    "sha256:ec252a8c96aa451f0316b561f2d390f51ab5da21f8947e3a90aa58f5abf031cb",
                    "sha256:3cc08e47d1429cad24d7ef212ce44cfd87587d660bac12bd72946a8e5603d9b6",
                    "sha256:259f79085482d6b8a0690b490cbd84aee679adb651d7f08becd84a32ecd0e7d7",
                    "sha256:39bc0059ab176e849efbd3d0699b1de68f0dc5630213ae040ce3f1b5b39598c6",
                    "sha256:9036fc06f1a8b1aed6bc73a6f963dc9d13400aa87024ddaf89ca3c35d4f5248e",
                    "sha256:3978dbf8191fc42862579dbbe921f9e06d16ef9be2d76cfce120d6c1b4ed8ae2",
                    "sha256:d6b5afd7d6358bcfd9c46ba43f5f5766e7f11c32edecd5ee896c7bddef3a044e",
                    "sha256:3682c7ec18a02772630868abc0233ab3dc62ca71b446dcf41146d4e6f9b55833",
                    "sha256:c42efa9ea527a64cd4e0834f80230efd3de3550ee5263e129ffd058973ce7c0b",
                    "sha256:eb3bfa111d050e79b57f12fd0e3dd6364a42f6be2fb54e52bd1113135d05f735",
                    "sha256:44a9c9792ef5812f21aa3d89c14cb62d1487bb3564f88f7b7699d17dd085f5db",
                    "sha256:883cec79635b0752d409f825b0f534d2d597d61802d7cef0e504f8ae902fa81f",
                    "sha256:0bfdf76222ba376f3b6c21857a1bfeb652ef3bf741bce311c75a27d3e0dbc8be",
                    "sha256:500e62dabc84a8af4fcdfca0084d0655a73cb9c3227b2d1f146ae4f0f64b1c6b",
                    "sha256:9dae4e53d155b9bb792e014871999dc21507bec3d33ec9f36c3807e3851d7dbe",
                    "sha256:1675718f30f6f1a98259f631d09280cadbd04a70d941ca4b1da27b61b365aa00",
                    "sha256:e242feff7ae67e11274d39de5eb54b7e4d790381f1cb53a5664ac6cee019c443",
                    "sha256:0ba5aa7a25df050d04e2efa3b71ff59c27232bd6f5ad84589b0e626ed221178a",
                    "sha256:e167a1ded5672f2e7a46e569fd0a0a8d7d06463da08761ac7125d5054c9b4908",
                    "sha256:ca78b5dfe64e5d10a991f4ac9ebb9c4c1a5f9dde7008548e4ad1dd72408336f2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.10": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.2.2.009",
                    "CUDA_DRIVER_VERSION=535.104.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.2.5.6",
                    "CUFFT_VERSION=11.0.8.103",
                    "CURAND_VERSION=10.3.3.141",
                    "CUSPARSE_VERSION=12.1.2.141",
                    "CUSOLVER_VERSION=11.5.2.141",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.1.4",
                    "NVJPEG_VERSION=12.2.2.4",
                    "CUDNN_VERSION=8.9.5.29",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.10",
                    "NSIGHT_SYSTEMS_VERSION=2023.3.1.92",
                    "NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "DALI_VERSION=1.30.0",
                    "DALI_BUILD=9783408",
                    "POLYGRAPHY_VERSION=0.49.0",
                    "TRANSFORMER_ENGINE_VERSION=0.12",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.10",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=71422337",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "71422337",
                    "com.nvidia.build.ref": "798008b068e6dbd0088bab08098b0fce963b87b3",
                    "com.nvidia.cublas.version": "12.2.5.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.5.29",
                    "com.nvidia.cufft.version": "11.0.8.103",
                    "com.nvidia.curand.version": "10.3.3.141",
                    "com.nvidia.cusolver.version": "11.5.2.141",
                    "com.nvidia.cusparse.version": "12.1.2.141",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.1.4",
                    "com.nvidia.nsightcompute.version": "2023.2.2.3",
                    "com.nvidia.nsightsystems.version": "2023.3.1.92",
                    "com.nvidia.nvjpeg.version": "12.2.2.4",
                    "com.nvidia.pytorch.version": "2.1.0a0+32f93b1",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-10T11:04:43.533847317-08:00",
            "history": [
                {
                    "created": "2023-09-25T10:17:05.810142316Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.868115844Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.920084198Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.975064283Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:07.772475208Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:194c886b88876c1804cc5f80719669653c16a388b664147b7f22402105f533c4 in / "
                },
                {
                    "created": "2023-09-25T10:17:08.017400804Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:43.100806147Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ENV CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.3 com.nvidia.cublas.version=12.2.5.6 com.nvidia.cufft.version=11.0.8.103 com.nvidia.curand.version=10.3.3.141 com.nvidia.cusparse.version=12.1.2.141 com.nvidia.cusolver.version=11.5.2.141 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.1.4 com.nvidia.nvjpeg.version=12.2.2.4 com.nvidia.cudnn.version=8.9.5.29 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.10 com.nvidia.nsightsystems.version=2023.3.1.92 com.nvidia.nsightcompute.version=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ENV DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.218161852Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.310091701Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:44.735711429Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.067678599Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 PYTORCH_VERSION=2.1.0a0+32f93b1 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+32f93b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:23:01.336086947Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:23:04.248995601Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.23",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:24:01.456330072Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:24:01.463661997Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:21:28.299504227Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:28.502242374Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c find /usr/local/lib -type f -name \"libtbb*\" ! -regex '.*/libtbb.*\\.so\\.[0-9]*' -exec rm {} \\; # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.664175008Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.707382743Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:26:19.703570295Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:05:36.846675969Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:05:38.932765229Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:27.423140271Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:09:58.817203431Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:58.83347144Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:46:42.347455733Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:03.50961186Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:05.45210649Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.067843263Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.175074804Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.181389413Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.188953497Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.241091974Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.360581762Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.659240998Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:48:53.688676617Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:09:31.434716141Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.557103877Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.id=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.ref=798008b068e6dbd0088bab08098b0fce963b87b3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T09:57:44.194510465-08:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T09:57:44.194510465-08:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T09:57:44.194510465-08:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T09:57:44.194510465-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T09:57:44.194510465-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T09:57:44.502854917-08:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T09:58:01.84501125-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/Megatron-LM.git &&   cd Megatron-LM &&   git checkout e122536b7645edcb7ebf099b5c92a443f7dbf8e7 &&   pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:42:50.697176667-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout 52e18c894223800cb611682dce27d88050edf1de &&   pip install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:49:35.152069833-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&   cd TransformerEngine &&   git fetch origin 8eae4ce2b8fdfbbe525fc8bfecb0df5498cc9687 &&   git checkout FETCH_HEAD &&   git submodule init && git submodule update &&   NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:49:35.375755287-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:49:36.441381854-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:49:36.616442649-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:49:36.802022291-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:54:42.206756933-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:54:42.423796101-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:54:42.609559903-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:57:29.164731377-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:57:33.633544882-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install flash-attn # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:57:38.028471089-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install numba>=0.57.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T10:57:38.341339452-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:03:42.358484743-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/installers/install_k2.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:03:42.358484743-08:00",
                    "created_by": "ARG NEMO_VERSION=1.22.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T11:03:42.972257175-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.22.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:07.692054794-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.22.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:40.617524607-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.22.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:40.793920953-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:41.060330205-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:41.483697308-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:41.834359092-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:42.197024886-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:42.919280929-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.22.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T11:04:43.533847317-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.22.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:01d4e4b4f381ac5a9964a14a650d7c074a2aa6e0789985d843f8eb3070b58f7d",
                    "sha256:28dedf274dd82e720c1e5c651c5fdbcafff8f9687d4a3d95af147e0e3caa8bb2",
                    "sha256:d12750ac86fb921cdc38acb4d5154a52de2e4e70f42330837f01bc421194ba6c",
                    "sha256:f12ed123586ee818842e5bd0db946e04f39d8d679c18b275df913498feb4281c",
                    "sha256:13b41d13cbee5b050a1d526c2ee6b2643ad86b4998e69a5348dc43819f3fb8e0",
                    "sha256:dddc962cd9c168b2b79181f7c266e35ff0cc87701ab6d9fb676f9bf6561513b0",
                    "sha256:5f8dc6c4d9ac310ba9c68b79b12a46409e112490eeae38019187ac4a83ea6199",
                    "sha256:f70bf143e96789fb387d63da983c432d2717de7f2df20c90cfe0c66aeedb3041",
                    "sha256:f7f51f3bc96eea52cf5019d3cce2900b02797f48e7ce3ac947b74e9662ea9dd6",
                    "sha256:0161fdcfae36218edd6eed2c11675216b65bb5d2d0a0aef3b8c51a626ecb60c1",
                    "sha256:54788d2d82c90da0d14e3aa9852003bc801d68836f19b9f64d4386b8c14b2349",
                    "sha256:6bcd3616240bb782802144d3b62423cf7f40dedf28772113620fa294887b4ec0",
                    "sha256:09e624be0b72bb2a021c9d78329d9715881af55036a1cef08dd2f0a2ba5c3410",
                    "sha256:c74bdcb9211d5d6f64afa325c6bf7468b457bf8f064fa3f8b55b21607cc859f3",
                    "sha256:21d954e6a416ec564cefa136556bcc8e741e5c6c4af825d1f6c999ea0b328f00",
                    "sha256:5b174f38560e3ecd84f4b94bf8cc003dec1ff45b0e4c9413c35d66503bfd258e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2806eb140016b5c0f986a4a3ced4ff16cba198545ac56a13f8876414285c45e1",
                    "sha256:d60d383e7163d1179d3a85bc2f5ce3ab53baff78c19e3b4b7787876cd9553440",
                    "sha256:ec6270dc409b411770b67b1a5be03e32791927ca3e63394819cc973ff490c240",
                    "sha256:1415db51731869bce000ca968badb595cb8198643c3a40b1cd870c607fbd6a46",
                    "sha256:68cf19ca728a8f0435b89dcfebda4648b71fe881adc7b3eaa301213265f06161",
                    "sha256:27fe47ebfc798292f3981c21d50cb3c67434633876b2c1766c4c1f1ec552a702",
                    "sha256:e2e83aa51a9106cea78ea3ec6b221535cf2d0f27ee4bb67f27e145550b59dee2",
                    "sha256:2ab813b215c89a908c64837a4c281f2db8ac27628fc83e13d09e9e7aed242949",
                    "sha256:faa34acefe1561de24aff89c42a9f92fdd2e5586a5916dbc6b1d3d2cdd7f0422",
                    "sha256:3d79c6d56fdfcdf551b7555aa59e29da3e4808a9ae79b8bfe4a620d8b2363749",
                    "sha256:6c351f5b1c8dec870099447272d85ddb05cb6e97c495ab668110614a60f4e560",
                    "sha256:e6184c0bb5cdb54c07f1da7144c82f450415663661c04f767d4e0cace772f5df",
                    "sha256:b2d49ce2bc6bec3d92a49e56323fd03173ef4165999c5eb117ace229e018a469",
                    "sha256:f85461e92ddc1499dbebef464ccab92326dbeca3c9d90d6876223966fa46b472",
                    "sha256:e4cd3f907933bd4cc80236d4099c960b426c5c3c382c9f38ad3ee6f3181612f5",
                    "sha256:bb5484601a829325272b258ec293ad68935739919cbe5a9c1c4b7e4325f0ed8b",
                    "sha256:139cd575257e409ee64bdb2125600869caf48c659cd7d02b8636b82a2c012eda",
                    "sha256:b7f1dcbdab2fcc4dbf6e6a07250b3944ffbd03591d09e0ccddf4861a9c1a702d",
                    "sha256:eb553ef7d25b4dc386d5e8a499df8dd14429cb107fd5946ca8555e691371497d",
                    "sha256:155c721b6284ca37e6ce51b8122c951aff2fa21d35379ca3a017b469b83ab9c8",
                    "sha256:ed5e1251541be38423dfc127231b7b9c7d77186442d4aeeb0efb1bd936114c44",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1711928b4f53420b7e5d91d0dedc354eea13fc64572beddc925339fce80c55cf",
                    "sha256:4c014f82d47fe7ef9c4bf96ccf842d3fe55b551f4d8d971d9027553fc6db259a",
                    "sha256:836e7db4f5ff5aef1c3f8db31a69af2d42cef7c6c30b6af951d48f8d2af9dbaa",
                    "sha256:f524f1e212a81161f416857ed9fa11c5b134c8d0d2ab933fb6ba7d49f162bccd",
                    "sha256:433de353acb295d85ea21656516e7edd0d061d25d97317e37b307fa4ef85cd87",
                    "sha256:bea9a8167b730df6b4224ac1eb15a6476ec39208e0ae16da0d026eed8a4c04f5",
                    "sha256:7c6347f52da7635eebfcbd847ed213060260359de7f55b9334605a38f59561ca",
                    "sha256:4269ab33beb0e3722f1880b55007c4d9e5696bd69e71373fc120bc4d03241559",
                    "sha256:228df752ad7db22f10ff9709a81e7e3a1baae859cfa3da87731ba91fa1198e5d",
                    "sha256:94aebe567cd6eca7c4a6bdb0b7f904dfd16aec8257783180cb3b477d0a48d2b5",
                    "sha256:7427246c0dd1957efb82ecc60abeac392b157b3fb93c975e7676e31e54cc3507",
                    "sha256:fd8ae1be7f409addedaff2d609f3e1a4d90ade33945c4475fba8536115d181eb",
                    "sha256:277c8286248292885e8224f6ae3bb70c7947c84415524dfc3acd31025809faa5",
                    "sha256:fd8021eab73bd2f9d49a1d12de022cefe33b8e5de060307f79d520adcebe7176",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3759be83a0c12c93cea566569a25ff5741f121bb6f097bcea1842b08cb05d8b1",
                    "sha256:6abad217b64b447ed77eca163c2b52cc56cb0e68c50e9b7dfdfdc8252d496222",
                    "sha256:681fc1363dd226969b16c90b5a42480ffd7ca844bb631da0219aee789a94d228",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:40b7efc082e81c1301cc83abf3efec6d5e5a806d302056752f3462450a8ed897",
                    "sha256:0f11f6f35f4aec0eb603fd5db882b6bc8d361e5220035fca5ffb46666dfd2c32",
                    "sha256:2ba7bc92d2d7917dc774116bf050d3a015a7e2b872d79d34d5f58657ee329c97",
                    "sha256:ec4c70295fe15e651cdb9263c7863540fc2d02ff7a1d3af2197be1dafa414d9c",
                    "sha256:0c1aef818e850323ddf72314d2ef2b4d1b3ad92f5c8a9457aa1afaca7fab3c3a",
                    "sha256:711212af9372a1b1d516e611ca34dafad38b510fc2cc355c26d368cb67a47bb6",
                    "sha256:883f8769e7e7fabab85f2345d889c9144c64201af6d5cffde97f242d3eebb1b7",
                    "sha256:f02b26868d76fa89f9bea623ee95d7d8cd5b43104aba6876f070e427cc378bb3",
                    "sha256:9e16f54ac790edf232feb92d352c5a6974b0c0db56e2287294e10f6ecb2878d1",
                    "sha256:c4db6ed1667009d3a0ec1f096dca01f30ab54626b77cd16894f9241b4231427d",
                    "sha256:ba87a62c0288ad598d9b059e8b4da035f0c4955895e12aa104e65664f51d6e94",
                    "sha256:57e17728ce0f2a27b726a1e36a8c3f8552a1647872434ca9628a73ae3628ebdf",
                    "sha256:c14e006be479745f5ce2228242ece895ad0eb5a8f9ee0c3c096d738248d4e4f7",
                    "sha256:b7b4d223c5603b9ec76ecd13db62a96def77c3a93df164059924b6ec369dc5e6",
                    "sha256:07ed75f938a553e11d471d945fc5a928e496ad7f333ff4834ca815666117c0e6",
                    "sha256:ffb4b0aa75553e30e4a667dd21025504f2d119a2d16a2f288101ce97b788db79",
                    "sha256:0c38627593a5c58054dc942b101efbfd2e9015e31774d448aa34f86106a40d4b",
                    "sha256:82cd10eda4fe17f609ba76dced9ff2528a02119370489dd0c8c9e18292fc2cc9",
                    "sha256:11001cf72a50bc9a50cd3af11d3b689cf4f6f9e36c0dd6066d87bb50ac8f2d1b",
                    "sha256:45f912d87ee02e3f2e97e12f3de16fe4e72265d7cc61d3d9fae0122af35a54c6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "23.11.framework": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "CUDA_VERSION=12.2.2.009",
                    "CUDA_DRIVER_VERSION=535.104.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.2.5.6",
                    "CUFFT_VERSION=11.0.8.103",
                    "CURAND_VERSION=10.3.3.141",
                    "CUSPARSE_VERSION=12.1.2.141",
                    "CUSOLVER_VERSION=11.5.2.141",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.1.4",
                    "NVJPEG_VERSION=12.2.2.4",
                    "CUDNN_VERSION=8.9.5.29",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.10",
                    "NSIGHT_SYSTEMS_VERSION=2023.3.1.92",
                    "NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "DALI_VERSION=1.30.0",
                    "DALI_BUILD=9783408",
                    "POLYGRAPHY_VERSION=0.49.0",
                    "TRANSFORMER_ENGINE_VERSION=0.12",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.14",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.10",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=71422337",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Cmd": null,
                "Image": "sha256:79770fc5aa7899e32ca180681890b5017448bd15dba21513d3d3d046001b5b64",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "71422337",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.2.5.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.5.29",
                    "com.nvidia.cufft.version": "11.0.8.103",
                    "com.nvidia.curand.version": "10.3.3.141",
                    "com.nvidia.cusolver.version": "11.5.2.141",
                    "com.nvidia.cusparse.version": "12.1.2.141",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.1.4",
                    "com.nvidia.nsightcompute.version": "2023.2.2.3",
                    "com.nvidia.nsightsystems.version": "2023.3.1.92",
                    "com.nvidia.nvjpeg.version": "12.2.2.4",
                    "com.nvidia.pytorch.version": "2.1.0a0+32f93b1",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "5e72fab85b664c1346d1983ef13b34fee77ddbccc3efae1237660a3f55119de5",
            "container_config": {
                "Hostname": "5e72fab85b66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "CUDA_VERSION=12.2.2.009",
                    "CUDA_DRIVER_VERSION=535.104.05",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.3",
                    "CUBLAS_VERSION=12.2.5.6",
                    "CUFFT_VERSION=11.0.8.103",
                    "CURAND_VERSION=10.3.3.141",
                    "CUSPARSE_VERSION=12.1.2.141",
                    "CUSOLVER_VERSION=11.5.2.141",
                    "CUTENSOR_VERSION=1.7.0.1",
                    "NPP_VERSION=12.2.1.4",
                    "NVJPEG_VERSION=12.2.2.4",
                    "CUDNN_VERSION=8.9.5.29",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.10",
                    "NSIGHT_SYSTEMS_VERSION=2023.3.1.92",
                    "NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "DALI_VERSION=1.30.0",
                    "DALI_BUILD=9783408",
                    "POLYGRAPHY_VERSION=0.49.0",
                    "TRANSFORMER_ENGINE_VERSION=0.12",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.14",
                    "MOFED_VERSION=5.4-rdmacore36.0",
                    "OPENUCX_VERSION=1.14.0",
                    "OPENMPI_VERSION=4.1.4",
                    "RDMACORE_VERSION=36.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_VERSION=2.1.0a0+32f93b1",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=23.10",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "OPENBLAS_VERSION=0.3.23",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.7.3",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=71422337",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL com.nvidia.build.ref="
                ],
                "Image": "sha256:79770fc5aa7899e32ca180681890b5017448bd15dba21513d3d3d046001b5b64",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "71422337",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.2.5.6",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.5.29",
                    "com.nvidia.cufft.version": "11.0.8.103",
                    "com.nvidia.curand.version": "10.3.3.141",
                    "com.nvidia.cusolver.version": "11.5.2.141",
                    "com.nvidia.cusparse.version": "12.1.2.141",
                    "com.nvidia.cutensor.version": "1.7.0.1",
                    "com.nvidia.nccl.version": "2.19.3",
                    "com.nvidia.npp.version": "12.2.1.4",
                    "com.nvidia.nsightcompute.version": "2023.2.2.3",
                    "com.nvidia.nsightsystems.version": "2023.3.1.92",
                    "com.nvidia.nvjpeg.version": "12.2.2.4",
                    "com.nvidia.pytorch.version": "2.1.0a0+32f93b1",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.10",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2023-12-06T01:42:20.48772814Z",
            "docker_version": "20.10.18",
            "history": [
                {
                    "created": "2023-09-25T10:17:05.810142316Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.868115844Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.920084198Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:05.975064283Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-25T10:17:07.772475208Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:194c886b88876c1804cc5f80719669653c16a388b664147b7f22402105f533c4 in / "
                },
                {
                    "created": "2023-09-25T10:17:08.017400804Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:43.100806147Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "ENV CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.632434797Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:40:57.718353025Z",
                    "created_by": "ENV NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.3 com.nvidia.cublas.version=12.2.5.6 com.nvidia.cufft.version=11.0.8.103 com.nvidia.curand.version=10.3.3.141 com.nvidia.cusparse.version=12.1.2.141 com.nvidia.cusolver.version=11.5.2.141 com.nvidia.cutensor.version=1.7.0.1 com.nvidia.npp.version=12.2.1.4 com.nvidia.nvjpeg.version=12.2.2.4 com.nvidia.cudnn.version=8.9.5.29 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.10 com.nvidia.nsightsystems.version=2023.3.1.92 com.nvidia.nsightcompute.version=2023.2.2.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.208169701Z",
                    "created_by": "ENV DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.218161852Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.2.2.009 CUDA_DRIVER_VERSION=535.104.05 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.3 CUBLAS_VERSION=12.2.5.6 CUFFT_VERSION=11.0.8.103 CURAND_VERSION=10.3.3.141 CUSPARSE_VERSION=12.1.2.141 CUSOLVER_VERSION=11.5.2.141 CUTENSOR_VERSION=1.7.0.1 NPP_VERSION=12.2.1.4 NVJPEG_VERSION=12.2.2.4 CUDNN_VERSION=8.9.5.29 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.10 NSIGHT_SYSTEMS_VERSION=2023.3.1.92 NSIGHT_COMPUTE_VERSION=2023.2.2.3 DALI_VERSION=1.30.0 DALI_BUILD=9783408 POLYGRAPHY_VERSION=0.49.0 TRANSFORMER_ENGINE_VERSION=0.12 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.300001368Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.305697833Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T01:45:08.310091701Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:44.735711429Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.049165862Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T02:00:51.067678599Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T02:05:54.069939793Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 PYTORCH_VERSION=2.1.0a0+32f93b1 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=23.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.1.0a0+32f93b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:22:56.652602431Z",
                    "created_by": "ENV SETUPTOOLS_USE_DISTUTILS=stdlib",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:23:01.336086947Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:23:04.248995601Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T19:13:11.271676355Z",
                    "created_by": "ENV OPENBLAS_VERSION=0.3.23",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T04:24:01.456330072Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c wget -q -O - https://github.com/xianyi/OpenBLAS/archive/refs/tags/v${OPENBLAS_VERSION}.tar.gz | tar -xzf - &&     cd OpenBLAS-${OPENBLAS_VERSION} &&     time make FC=gfortran USE_OPENMP=1 -j &&     time make PREFIX=/usr/local install &&     cd ../ &&     rm -rf OpenBLAS-${OPENBLAS_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T04:24:01.463661997Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:20:42.474512991Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:21:28.299504227Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.22.2         scipy==1.8.1         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.9.2         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==3.20.1 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:28.502242374Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c find /usr/local/lib -type f -name \"libtbb*\" ! -regex '.*/libtbb.*\\.so\\.[0-9]*' -exec rm {} \\; # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.664175008Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:21:44.992449186Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.707382743Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:23:39.762556153Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:26:19.703570295Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c cd magma-cuda &&     cmake -H. -Bbuild -DUSE_FORTRAN=OFF -DGPU_TARGET=\"All\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" -DCUDA_NVCC_FLAGS=\"-Xfatbin;-compress-all;-DHAVE_CUBLAS;-std=c++11;--threads=0;\" -GNinja &&     cmake --build build --target install &&     rm -r ./build # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-05T18:30:25.1089979Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:05:36.846675969Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:05:38.932765229Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=23.10 PYTORCH_BUILD_VERSION=2.1.0a0+32f93b1 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:27.423140271Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:36.439958888Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.7.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:09:58.817203431Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:09:58.83347144Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:46:42.347455733Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:03.50961186Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.2.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_9.3.0_CVE-2022-45199.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:05.45210649Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.067843263Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.175074804Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.181389413Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.188953497Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.241091974Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.360581762Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:47:55.659240998Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:39.30428099Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:48:53.688676617Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:48:54.718997655Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:52:03.843580239Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:09:31.434716141Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.392673975Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.557103877Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.id=71422337",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T04:14:29.564551223Z",
                    "created_by": "LABEL com.nvidia.build.ref=798008b068e6dbd0088bab08098b0fce963b87b3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:38.79442801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:39.608655804Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_BIGNLP_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:39.693959868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_BIGNLP_VERSION=",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:39.751447632Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.bignlp.version=",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:39.80831604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:51.416511664Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-05T15:35:52.173770863Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /opt",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:35:53.370859951Z",
                    "created_by": "/bin/sh -c mkdir s5cmd &&     cd s5cmd &&     wget https://github.com/peak/s5cmd/releases/download/v2.0.0/s5cmd_2.0.0_Linux-64bit.tar.gz &&     tar -xzvf s5cmd_2.0.0_Linux-64bit.tar.gz &&     rm s5cmd_2.0.0_Linux-64bit.tar.gz"
                },
                {
                    "created": "2023-12-05T15:35:53.454594159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T15:38:24.921159141Z",
                    "created_by": "/bin/sh -c git clone https://github.com/google/sentencepiece.git &&     cd sentencepiece &&     mkdir build &&     cd build &&     cmake .. &&     make &&     make install &&     ldconfig"
                },
                {
                    "created": "2023-12-05T15:38:27.945828282Z",
                    "created_by": "/bin/sh -c pip install packaging"
                },
                {
                    "created": "2023-12-05T15:38:28.003393981Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APEX_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T16:28:53.433217771Z",
                    "created_by": "|1 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam\" ./"
                },
                {
                    "created": "2023-12-05T16:28:54.033883779Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NEMO_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T16:30:42.655269344Z",
                    "created_by": "|2 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make"
                },
                {
                    "created": "2023-12-05T16:30:43.605696899Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ALIGNER_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:22:06.867347453Z",
                    "created_by": "|3 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e ."
                },
                {
                    "created": "2023-12-06T01:22:13.161050753Z",
                    "created_by": "|3 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');\""
                },
                {
                    "created": "2023-12-06T01:22:13.224621119Z",
                    "created_by": "/bin/sh -c #(nop)  ARG TE_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:27:47.684311918Z",
                    "created_by": "|4 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install ."
                },
                {
                    "created": "2023-12-06T01:27:48.305645384Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:235d465f2c76d903e430187baa1e7f681600b91550c3bc3a9df8f06815bbab7d in megatron-lm "
                },
                {
                    "created": "2023-12-06T01:28:02.281264024Z",
                    "created_by": "|4 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c pip install -e megatron-lm"
                },
                {
                    "created": "2023-12-06T01:28:02.342081721Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHER_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:28:42.373656174Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt"
                },
                {
                    "created": "2023-12-06T01:28:43.409981554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:28:43.648636492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:28:57.870859669Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libffi-dev         libreadline-dev         libsqlite3-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-06T01:31:31.244786974Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c curl https://pyenv.run | bash &&     export PYENV_ROOT=\"$HOME/.pyenv\" &&     command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\" &&     eval \"$(pyenv init -)\" &&     pyenv install 3.8 &&     pyenv global 3.8 &&     pip3 install virtualenv &&     mkdir -p ~/.cache/pytriton/ &&     python -mvenv ~/.cache/pytriton/python_backend_interpreter --copies --clear &&     source ~/.cache/pytriton/python_backend_interpreter/bin/activate &&     pip3 install numpy~=1.21 pyzmq~=23.0 &&     deactivate &&     pyenv global system"
                },
                {
                    "created": "2023-12-06T01:37:38.891559972Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c pip install --no-cache-dir wandb==0.15.3         'best_download>=0.0.6'         black==20.8b1         'click>=8.0.1'         'datasets>=1.2.1'         jsonlines==2.0.0         lm_dataformat==0.0.19         mock==4.0.3         'numba>=0.57.1'         numexpr==2.7.2         pybind11==2.8.0         pycountry==20.7.3         pytablewriter==0.58.0         pytest==6.2.5         sacrebleu==1.5.0         'scikit-learn>=0.24.1'         spacy==3.1.3         sqlitedict==1.6.0         'transformers>=4.1'         tqdm-multiprocess==0.0.11         zstandard==0.17.0         tritonclient[all]~=2.33         'nvidia-pytriton==0.4.1'         'nltk>=3.6.7'         'ipython>=7.31.1'         'torchmetrics==0.9.1'"
                },
                {
                    "created": "2023-12-06T01:37:44.609308285Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c pip install pytorch_lightning==2.0.7"
                },
                {
                    "created": "2023-12-06T01:38:24.164456162Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later"
                },
                {
                    "created": "2023-12-06T01:38:24.291567572Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:4dd099ec572a14294670643839aea26b8403d92532b3bd8ae1c0bc70db46b5be in nemo-data-curator "
                },
                {
                    "created": "2023-12-06T01:40:58.916068537Z",
                    "created_by": "|5 ALIGNER_COMMIT=b6ce38ed2a578432797811f0faf5250a742fcd32 APEX_COMMIT=52e18c894223800cb611682dce27d88050edf1de LAUNCHER_COMMIT= NEMO_COMMIT=15e0f8c1676e35d6d3c9e61441bf3cf216884d7a TE_COMMIT=cf6fc898286e4ad347ff88925c88663324e2b87d /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on)"
                },
                {
                    "created": "2023-12-06T01:41:28.907413164Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:b66a1b818651ea57638e932ad28877344c6351fcd398f0f08e245fa77fb5fbb8 in /opt/ammo/dist "
                },
                {
                    "created": "2023-12-06T01:41:34.764043421Z",
                    "created_by": "/bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy"
                },
                {
                    "created": "2023-12-06T01:41:36.010586581Z",
                    "created_by": "/bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd"
                },
                {
                    "created": "2023-12-06T01:42:16.799116979Z",
                    "created_by": "/bin/sh -c cd /opt/hpcx &&     rm -rf * &&     curl -f --proto '=https' https://content.mellanox.com/hpc/hpc-x/v2.14/hpcx-v2.14-gcc-inbox-ubuntu22.04-cuda12-gdrcopy2-nccl2.17-x86_64.tbz | tar jxf - --strip-components=1"
                },
                {
                    "created": "2023-12-06T01:42:17.533272582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.14 MOFED_VERSION=5.4-rdmacore36.0 OPENUCX_VERSION=1.14.0 OPENMPI_VERSION=4.1.4 RDMACORE_VERSION=36.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:17.740461625Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /workspace",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:18.893004458Z",
                    "created_by": "/bin/sh -c chmod -R a+w /workspace"
                },
                {
                    "created": "2023-12-06T01:42:19.11520645Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_BUILD_ID",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:19.983204832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_BUILD_ID=71422337",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:20.15136438Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.id=71422337",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:20.318804327Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_BUILD_REF",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T01:42:20.48772814Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.ref=",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:01d4e4b4f381ac5a9964a14a650d7c074a2aa6e0789985d843f8eb3070b58f7d",
                    "sha256:28dedf274dd82e720c1e5c651c5fdbcafff8f9687d4a3d95af147e0e3caa8bb2",
                    "sha256:d12750ac86fb921cdc38acb4d5154a52de2e4e70f42330837f01bc421194ba6c",
                    "sha256:f12ed123586ee818842e5bd0db946e04f39d8d679c18b275df913498feb4281c",
                    "sha256:13b41d13cbee5b050a1d526c2ee6b2643ad86b4998e69a5348dc43819f3fb8e0",
                    "sha256:dddc962cd9c168b2b79181f7c266e35ff0cc87701ab6d9fb676f9bf6561513b0",
                    "sha256:5f8dc6c4d9ac310ba9c68b79b12a46409e112490eeae38019187ac4a83ea6199",
                    "sha256:f70bf143e96789fb387d63da983c432d2717de7f2df20c90cfe0c66aeedb3041",
                    "sha256:f7f51f3bc96eea52cf5019d3cce2900b02797f48e7ce3ac947b74e9662ea9dd6",
                    "sha256:0161fdcfae36218edd6eed2c11675216b65bb5d2d0a0aef3b8c51a626ecb60c1",
                    "sha256:54788d2d82c90da0d14e3aa9852003bc801d68836f19b9f64d4386b8c14b2349",
                    "sha256:6bcd3616240bb782802144d3b62423cf7f40dedf28772113620fa294887b4ec0",
                    "sha256:09e624be0b72bb2a021c9d78329d9715881af55036a1cef08dd2f0a2ba5c3410",
                    "sha256:c74bdcb9211d5d6f64afa325c6bf7468b457bf8f064fa3f8b55b21607cc859f3",
                    "sha256:21d954e6a416ec564cefa136556bcc8e741e5c6c4af825d1f6c999ea0b328f00",
                    "sha256:5b174f38560e3ecd84f4b94bf8cc003dec1ff45b0e4c9413c35d66503bfd258e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2806eb140016b5c0f986a4a3ced4ff16cba198545ac56a13f8876414285c45e1",
                    "sha256:d60d383e7163d1179d3a85bc2f5ce3ab53baff78c19e3b4b7787876cd9553440",
                    "sha256:ec6270dc409b411770b67b1a5be03e32791927ca3e63394819cc973ff490c240",
                    "sha256:1415db51731869bce000ca968badb595cb8198643c3a40b1cd870c607fbd6a46",
                    "sha256:68cf19ca728a8f0435b89dcfebda4648b71fe881adc7b3eaa301213265f06161",
                    "sha256:27fe47ebfc798292f3981c21d50cb3c67434633876b2c1766c4c1f1ec552a702",
                    "sha256:e2e83aa51a9106cea78ea3ec6b221535cf2d0f27ee4bb67f27e145550b59dee2",
                    "sha256:2ab813b215c89a908c64837a4c281f2db8ac27628fc83e13d09e9e7aed242949",
                    "sha256:faa34acefe1561de24aff89c42a9f92fdd2e5586a5916dbc6b1d3d2cdd7f0422",
                    "sha256:3d79c6d56fdfcdf551b7555aa59e29da3e4808a9ae79b8bfe4a620d8b2363749",
                    "sha256:6c351f5b1c8dec870099447272d85ddb05cb6e97c495ab668110614a60f4e560",
                    "sha256:e6184c0bb5cdb54c07f1da7144c82f450415663661c04f767d4e0cace772f5df",
                    "sha256:b2d49ce2bc6bec3d92a49e56323fd03173ef4165999c5eb117ace229e018a469",
                    "sha256:f85461e92ddc1499dbebef464ccab92326dbeca3c9d90d6876223966fa46b472",
                    "sha256:e4cd3f907933bd4cc80236d4099c960b426c5c3c382c9f38ad3ee6f3181612f5",
                    "sha256:bb5484601a829325272b258ec293ad68935739919cbe5a9c1c4b7e4325f0ed8b",
                    "sha256:139cd575257e409ee64bdb2125600869caf48c659cd7d02b8636b82a2c012eda",
                    "sha256:b7f1dcbdab2fcc4dbf6e6a07250b3944ffbd03591d09e0ccddf4861a9c1a702d",
                    "sha256:eb553ef7d25b4dc386d5e8a499df8dd14429cb107fd5946ca8555e691371497d",
                    "sha256:155c721b6284ca37e6ce51b8122c951aff2fa21d35379ca3a017b469b83ab9c8",
                    "sha256:ed5e1251541be38423dfc127231b7b9c7d77186442d4aeeb0efb1bd936114c44",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1711928b4f53420b7e5d91d0dedc354eea13fc64572beddc925339fce80c55cf",
                    "sha256:4c014f82d47fe7ef9c4bf96ccf842d3fe55b551f4d8d971d9027553fc6db259a",
                    "sha256:836e7db4f5ff5aef1c3f8db31a69af2d42cef7c6c30b6af951d48f8d2af9dbaa",
                    "sha256:f524f1e212a81161f416857ed9fa11c5b134c8d0d2ab933fb6ba7d49f162bccd",
                    "sha256:433de353acb295d85ea21656516e7edd0d061d25d97317e37b307fa4ef85cd87",
                    "sha256:bea9a8167b730df6b4224ac1eb15a6476ec39208e0ae16da0d026eed8a4c04f5",
                    "sha256:7c6347f52da7635eebfcbd847ed213060260359de7f55b9334605a38f59561ca",
                    "sha256:4269ab33beb0e3722f1880b55007c4d9e5696bd69e71373fc120bc4d03241559",
                    "sha256:228df752ad7db22f10ff9709a81e7e3a1baae859cfa3da87731ba91fa1198e5d",
                    "sha256:94aebe567cd6eca7c4a6bdb0b7f904dfd16aec8257783180cb3b477d0a48d2b5",
                    "sha256:7427246c0dd1957efb82ecc60abeac392b157b3fb93c975e7676e31e54cc3507",
                    "sha256:fd8ae1be7f409addedaff2d609f3e1a4d90ade33945c4475fba8536115d181eb",
                    "sha256:277c8286248292885e8224f6ae3bb70c7947c84415524dfc3acd31025809faa5",
                    "sha256:aacb21d6be1ad6beaacb61506894b7e536283237242332e27931c38fb74631fd",
                    "sha256:b4d7f20d826d2df8868b00463510ad9b1f6e2ab81a8e7e92abf7062793d02579",
                    "sha256:25eced4871109214ab26d6292b1b6fcae67d6f85d69e957c18325e4c551a8e21",
                    "sha256:bd48366d72d0b2e44d7dcb4796038c2af23dea3745645fd4273259def42e58db",
                    "sha256:5f3e85de95613212456b29c2e8626148b0a7d74debdc786343a6c61e314ada42",
                    "sha256:44b8edba32c65092d2f6e7cc00606ff464584b2e897ba268b6643810d040d34c",
                    "sha256:5d441cef1f24d6020284c843947ae33eaf50dab0f78e95cfa784e62b84a5976d",
                    "sha256:12f6329a1e665076530d7ca373eb3ee82b6d56cfe34994df0f1d7cfe63a6ccd3",
                    "sha256:86b7f5271f929499b0a3320687d43a3f5a2ff90c2be42bb0ba201d61d5782347",
                    "sha256:31436e409d27571840de05499c8607ec4d82faf1770d7e4c57ff82faecb05d07",
                    "sha256:f3859157f82bca99777fe4e150e7fe8ef42ea5b217dccface4df2d3e721512a7",
                    "sha256:d01ede1e0e4c5842761eed9b4557faa470b65ab66df24b9a04c46adc5ddaed2a",
                    "sha256:acb2f5a4f4f20097fd136014bc5a1b95d56cd952f20d8c48450613b61b03efd2",
                    "sha256:f47e5a86de1105dbfdee58be9646c106a2bfc02bfb3a9a06a006c19451b55061",
                    "sha256:7a7377fb3c978b6d210330033af6d7655163da28ab350e2272c5e69a28b9f805",
                    "sha256:f50f4d2c4a045964be552d65ea67fb963c2be39d1949db4f34bede5a62addbad",
                    "sha256:66bf83444566c0a42e4e5867eb3ecbae98f0efb7388223a38e24c2ee9048a088",
                    "sha256:a6c2a02aed7353332155fbf658958fbf74f0b463254f780449ddc1003cccd01a",
                    "sha256:09e4937bbd81a87e9e8b03abbb3e9e1f36d6e9db20b60905f077f6e9902016de",
                    "sha256:f650b0c1a9c8c06d09e1b94d54308a09d7d850c7fc43000a548713ae0ba18e02",
                    "sha256:63d355466db00780b7396ffc85fabee82b58af22b4219ea5ace07e3d7d25bc9e",
                    "sha256:7cc12d3aa8237b435d56b4b257594cced690b413166738f0372f48eb028297f4",
                    "sha256:4f21a04dfa7ca8983b2366f7fa795a1b699fea61784b92218f431b7fe1fbf4f2",
                    "sha256:7728f9174959a89c58c7615d0763ab90b20af10310acfea03d291864dd863a70"
                ]
            }
        },
        "24.01.01.framework": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-03-10T19:52:32.909308849Z",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:41:57.395164286Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:42:00.010144112Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:42:00.010144112Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:27:23.234342715Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:27:23.234342715Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:28:49.8457163Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:29:02.889942347Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');_=AutoTokenizer.from_pretrained('mistralai/Mixtral-8x7B-v0.1');_=AutoTokenizer.from_pretrained('mistralai/Mistral-7B-v0.1');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:29:02.889942347Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:34:13.242464936Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:13.305730145Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:33.506634969Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:33.506634969Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:34:41.512423394Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:41.512423394Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:36:07.443176974Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:36:07.50512326Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:27.009069157Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:52.664329865Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:58.356084502Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:58.69854207Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:19.513255923Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:19.520208187Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:54.989202046Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:05:52.200331983Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.421084516Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.428784918Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:e6c18e4c4f8cf4278ce3e51a5fd524f86c1a2734c050365cdd8733290044a273",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:97f6d9626e74a3558cd0c5a5fbfbc76ad756b4fbfd4e8f69fe7e1ef18fd971be",
                    "sha256:0275d815caf6cddf7d558c9c7ef30a593774525d56f4c224a250944c2def88f1",
                    "sha256:aa71d04308294c7945f0ba3759d1f84f5be34314328e9e9b59459c737e40d9b9",
                    "sha256:7c92a29bfe5b4cff23c092facefd9454b0a6dac59bfca07c37a624a36e1d1603",
                    "sha256:1dd352f1efc9fd45cfd53b7942400a0c5d4348460b620ec5272e3ed3bec8cfbb",
                    "sha256:14dce413a8da55eed5a92599ac758415cb4c66be149c604d70aa0a7c27e2399b",
                    "sha256:384ca9b2b3b30ea8e0e2d085d990dc182d133353c3d42d5d1bb9334c4a1067f9",
                    "sha256:b1422f08f13ceca01a7a58d3083391bb0edb49d2a03e278640f4e5bc3ab75d21",
                    "sha256:a73f38e6f9193b1aaa30bca1e16f84da3b1d27475b1638e02265ab0a72aa2bed",
                    "sha256:29298ab700decc0f99ebf40947b5357429fa5edbb833a6eeb7759f95a291ed02",
                    "sha256:8f3127e38048e504e5d8014d43a1df23667eaca8ac4283ab12c5a2e263f24280",
                    "sha256:aa131c14d239ba82aa076ba0c602ab07cc998c8b40a81e9136fde2dfcf9cc01e",
                    "sha256:f72bed63a45ea00fc0fde7e8e8a47eaf52bf415bb4a48af7c481afe5018236d8",
                    "sha256:63b752b47a8a2b913cfea87c2484a40541a06dbde11b59d63f59669f611af55a",
                    "sha256:f8b5aa614816a67786e83f77183ce56418f441ee0e76b226ea8f8700ab914dce",
                    "sha256:1475816c186f749f3103852486019294182d8e3dae9b8f9ff9e05e90036a239f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:daa353da48aad6927bd5a2bb12036eba483ecf110650a5c0fc1b9d88a792e3f1",
                    "sha256:0c2121f412749a54b802b3527c35c31b7708fe99d4ebcb7702d35cc1c1e21a69",
                    "sha256:eb63f9198994725c020ab525defc73bb3053f5e8088701e5ec5b06504bddda2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c"
                ]
            }
        },
        "24.01.01": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-03-10T19:52:32.909308849Z",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T17:41:57.388072832Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:41:57.395164286Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:42:00.010144112Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T17:42:00.010144112Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:27:23.234342715Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:27:23.234342715Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:28:49.8457163Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:29:02.889942347Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');_=AutoTokenizer.from_pretrained('mistralai/Mixtral-8x7B-v0.1');_=AutoTokenizer.from_pretrained('mistralai/Mistral-7B-v0.1');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:29:02.889942347Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:34:13.242464936Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:13.305730145Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:33.506634969Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT=8f3855f241099a83b405d2057998d628789ec73b TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:33.506634969Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:34:41.512423394Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:34:41.512423394Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:35:28.169767918Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T18:36:07.443176974Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:36:07.50512326Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:27.009069157Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:52.664329865Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:58.356084502Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:38:58.69854207Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:19.513255923Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:19.520208187Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T18:39:54.989202046Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:05:52.200331983Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.421084516Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.428784918Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-10T19:52:32.909308849Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:e6c18e4c4f8cf4278ce3e51a5fd524f86c1a2734c050365cdd8733290044a273",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:97f6d9626e74a3558cd0c5a5fbfbc76ad756b4fbfd4e8f69fe7e1ef18fd971be",
                    "sha256:0275d815caf6cddf7d558c9c7ef30a593774525d56f4c224a250944c2def88f1",
                    "sha256:aa71d04308294c7945f0ba3759d1f84f5be34314328e9e9b59459c737e40d9b9",
                    "sha256:7c92a29bfe5b4cff23c092facefd9454b0a6dac59bfca07c37a624a36e1d1603",
                    "sha256:1dd352f1efc9fd45cfd53b7942400a0c5d4348460b620ec5272e3ed3bec8cfbb",
                    "sha256:14dce413a8da55eed5a92599ac758415cb4c66be149c604d70aa0a7c27e2399b",
                    "sha256:384ca9b2b3b30ea8e0e2d085d990dc182d133353c3d42d5d1bb9334c4a1067f9",
                    "sha256:b1422f08f13ceca01a7a58d3083391bb0edb49d2a03e278640f4e5bc3ab75d21",
                    "sha256:a73f38e6f9193b1aaa30bca1e16f84da3b1d27475b1638e02265ab0a72aa2bed",
                    "sha256:29298ab700decc0f99ebf40947b5357429fa5edbb833a6eeb7759f95a291ed02",
                    "sha256:8f3127e38048e504e5d8014d43a1df23667eaca8ac4283ab12c5a2e263f24280",
                    "sha256:aa131c14d239ba82aa076ba0c602ab07cc998c8b40a81e9136fde2dfcf9cc01e",
                    "sha256:f72bed63a45ea00fc0fde7e8e8a47eaf52bf415bb4a48af7c481afe5018236d8",
                    "sha256:63b752b47a8a2b913cfea87c2484a40541a06dbde11b59d63f59669f611af55a",
                    "sha256:f8b5aa614816a67786e83f77183ce56418f441ee0e76b226ea8f8700ab914dce",
                    "sha256:1475816c186f749f3103852486019294182d8e3dae9b8f9ff9e05e90036a239f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:daa353da48aad6927bd5a2bb12036eba483ecf110650a5c0fc1b9d88a792e3f1",
                    "sha256:0c2121f412749a54b802b3527c35c31b7708fe99d4ebcb7702d35cc1c1e21a69",
                    "sha256:eb63f9198994725c020ab525defc73bb3053f5e8088701e5ec5b06504bddda2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c"
                ]
            }
        },
        "24.01.framework": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-18T22:40:47.155510571Z",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:20:43.623865692Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T20:20:43.630687282Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T20:20:44.670315817Z",
                    "created_by": "RUN /bin/sh -c mkdir s5cmd &&     cd s5cmd &&     wget https://github.com/peak/s5cmd/releases/download/v2.0.0/s5cmd_2.0.0_Linux-64bit.tar.gz &&     tar -xzvf s5cmd_2.0.0_Linux-64bit.tar.gz &&     rm s5cmd_2.0.0_Linux-64bit.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T20:20:44.670315817Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T20:23:15.986447309Z",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/google/sentencepiece.git &&     cd sentencepiece &&     mkdir build &&     cd build &&     cmake .. &&     make &&     make install &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T20:23:19.093253667Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T20:23:19.093253667Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:08:27.176875804Z",
                    "created_by": "RUN |1 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:08:27.176875804Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:10:22.698498607Z",
                    "created_by": "RUN |2 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=9588494008f7ca8759754e6e1c61d371ca03de82 /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:10:30.127039319Z",
                    "created_by": "RUN |2 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=9588494008f7ca8759754e6e1c61d371ca03de82 /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:10:30.127039319Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:15:33.947923316Z",
                    "created_by": "RUN |3 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=9588494008f7ca8759754e6e1c61d371ca03de82 TE_COMMIT=da30634a6c9ccdbb6c587b6c93b1860e4b038204 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:15:34.006771446Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:15:56.249733939Z",
                    "created_by": "RUN |3 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=9588494008f7ca8759754e6e1c61d371ca03de82 TE_COMMIT=da30634a6c9ccdbb6c587b6c93b1860e4b038204 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:15:56.249733939Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:16:06.114444975Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=r0.2.0 /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:16:06.114444975Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:16:58.01471061Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:16:58.01471061Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:16:58.01471061Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T21:17:38.194240443Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:17:38.216870358Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:20:03.019614482Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:20:32.312495747Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:20:39.328752492Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:20:39.687740063Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:26:21.752068833Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir wandb==0.15.3         'best_download>=0.0.6'         black==20.8b1         'click>=8.0.1'         'datasets>=1.2.1'         jsonlines==2.0.0         lm_dataformat==0.0.19         mock==4.0.3         'numba>=0.57.1'         'numexpr>=2.7.2'         pybind11==2.8.0         pycountry==20.7.3         pytablewriter==0.58.0         pytest==6.2.5         sacrebleu==1.5.0         'scikit-learn>=0.24.1'         spacy==3.1.3         sqlitedict==1.6.0         'transformers>=4.1'         tqdm-multiprocess==0.0.11         zstandard==0.17.0         tritonclient[all]~=2.33         'nvidia-pytriton==0.4.1'         'nltk>=3.6.7'         'ipython>=7.31.1'         'torchmetrics==0.9.1' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:26:26.720438291Z",
                    "created_by": "RUN /bin/sh -c pip install pytorch_lightning==2.0.7 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:26:46.568328229Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:26:46.575497077Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:27:23.846509575Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T21:53:26.323495452Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T22:40:46.496114876Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T22:40:46.504954636Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-18T22:40:47.155510571Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:94101392f34a22fd6edeb1fded10c1a886b7fcbfc2adbb044c0b1063efd29182",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:968e59ecdb5deea3f46f2eaae9a9d7f86f980a5cf448a417e95906ed8e6cf103",
                    "sha256:ba1cee29ee24a0cf62c5e055e812d68b48f0334d333553c7c4ae2dcf5f5d3fe3",
                    "sha256:9fc2eb995d99128024a7c390956300acb589062b17dbb757ae101e314d3797b6",
                    "sha256:29bc3bafe572575f85ad03b851f243b86e31441ee6295d502ae275d6067618b2",
                    "sha256:fecc01db84e2f0a48d7ce35ce443175dabf39857d53017123316c7c99a75a133",
                    "sha256:2f61ea7df8154c2ad29daa46592d4b05a869deec0c7934262b1afdf8a80e4dfb",
                    "sha256:ca1b7cf901bbd48a2f2067b4d44394407dccbd57d26634170a2c4d13eb9b8630",
                    "sha256:e9f57d937d9a8622d6502a575cd54d02eccc728ba3b6a316d4807c830bd4a12f",
                    "sha256:b9b4a9af4179ff2019fb925c2cc4f3d23916590a2b4160af68f3d4566512ca37",
                    "sha256:426c2b24fdafd3e84e4fe5b66ad27ec09e9632ce0d27aa1c37e0824c8c4d5436",
                    "sha256:14fad4a6993cf0f4cb35c5cf49be6761ffb8b30a392168ed1625dad1514b484e",
                    "sha256:20cee02109e4e391bb79f56de063f3d1511c1cd231292940d0a00ad5aa5b76e0",
                    "sha256:e9f94c07bd3608d6abfd8eddaceb38462f93798882125acf955fd1e4b14b9b42",
                    "sha256:8314d1f206d7d689eb75b8566a30be1b0a36c599e33419eb3c3b0a95cbc1fa69",
                    "sha256:57cb91374a54cf17499a4994962cf353416ed0d7d1177dd92dfddbe53f95e3c8",
                    "sha256:f4ad0a3ad5e0837131057e2b94a63de83da3881e0bf8d474ebf3b5154f1fe486",
                    "sha256:fa7b5cd25c0af8670f15ca2ef6a7606633408e1c5ac2cc02420755443fdb0a26",
                    "sha256:46182547d95353918acf3c89c9fabda076e3f05c7f49ccd121eae3b7ad97b74c",
                    "sha256:6078f8bb1024a67b326cf4ea62edba0ac3c0b0f645b3a95bdf94dd2b3425e74b",
                    "sha256:258df54b824680c11457b43e026337679a96aa9e66f898c1573abe9cffa6e4c0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c9a274197d37a9cf5da949841b075ebd1cb27ac9984ad242b3d7b9905c6a6db",
                    "sha256:e849e163ab07275445686e95912367ef8ca7ae59e86398853e21f73d7dd61555",
                    "sha256:df4617ebb27bc59d03fbee608b2bab47386e6e7c3803d631b15612090a2301b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c"
                ]
            }
        },
        "24.01.gemma": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/cmake/bin:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/opt/tritonserver/backends/tensorrtllm:/usr/local/tensorrt/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "NVTE_APPLY_QK_LAYER_SCALING=0"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-21T04:31:09.369596738Z",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:23.044708454Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:24.329002647Z",
                    "created_by": "RUN /bin/sh -c mkdir s5cmd &&     cd s5cmd &&     wget https://github.com/peak/s5cmd/releases/download/v2.0.0/s5cmd_2.0.0_Linux-64bit.tar.gz &&     tar -xzvf s5cmd_2.0.0_Linux-64bit.tar.gz &&     rm s5cmd_2.0.0_Linux-64bit.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:24.329002647Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:32:53.481975461Z",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/google/sentencepiece.git &&     cd sentencepiece &&     mkdir build &&     cd build &&     cmake .. &&     make &&     make install &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:32:56.726978217Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:32:56.726978217Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T00:52:39.678731349Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:45:44.334655952Z",
                    "created_by": "COPY nemo_multimodal NeMo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:47:30.079359852Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c cd NeMo &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:47:38.414265054Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:47:38.414265054Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T03:52:44.054601894Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd TE_COMMIT=8d62d5c2ab0ab69e300ff9cf2503545720c23262 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:52:44.108836363Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:53:06.506519044Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd TE_COMMIT=8d62d5c2ab0ab69e300ff9cf2503545720c23262 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:53:06.506519044Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T03:53:16.152786289Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=r0.2.0 /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:53:16.152786289Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T03:53:16.249316669Z",
                    "created_by": "COPY NeMo-Megatron-Launcher NeMo-Megatron-Launcher # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:54:02.98035993Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c cd NeMo-Megatron-Launcher &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:54:02.98035993Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T03:54:02.98035993Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T03:54:43.360421584Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:54:43.380230759Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:57:07.94375958Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:57:36.900781384Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:57:43.743178647Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T03:57:44.085793825Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:03:28.137247768Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir wandb==0.15.3         'best_download>=0.0.6'         black==20.8b1         'click>=8.0.1'         'datasets>=1.2.1'         jsonlines==2.0.0         lm_dataformat==0.0.19         mock==4.0.3         'numba>=0.57.1'         'numexpr>=2.7.2'         pybind11==2.8.0         pycountry==20.7.3         pytablewriter==0.58.0         pytest==6.2.5         sacrebleu==1.5.0         'scikit-learn>=0.24.1'         spacy==3.1.3         sqlitedict==1.6.0         'transformers>=4.1'         tqdm-multiprocess==0.0.11         zstandard==0.17.0         tritonclient[all]~=2.33         'nvidia-pytriton==0.4.1'         'nltk>=3.6.7'         'ipython>=7.31.1'         'torchmetrics==0.9.1' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:03:33.201672767Z",
                    "created_by": "RUN /bin/sh -c pip install pytorch_lightning==2.0.7 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:04:08.003280833Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:04:08.011289275Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:04:49.02415592Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:04:49.824731191Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:04:49.833237708Z",
                    "created_by": "COPY llm_train/trtllm_changes/install_tensorrt.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:12.305191196Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_tensorrt.sh && rm /tmp/install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:12.305191196Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/tensorrt/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:08:12.314623895Z",
                    "created_by": "COPY llm_train/tensorrt_llm/docker/common/install_polygraphy.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:18.849939637Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_polygraphy.sh && rm /tmp/install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:18.85897056Z",
                    "created_by": "COPY llm_train/tensorrt_llm/docker/common/install_cmake.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:22.321333551Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_cmake.sh && rm /tmp/install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:08:22.321333551Z",
                    "created_by": "ENV PATH=/usr/local/cmake/bin:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:08:22.331424535Z",
                    "created_by": "COPY llm_train/tensorrt_llm/docker/common/install_mpi4py.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:09:19.461491707Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_mpi4py.sh && rm /tmp/install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:09:20.560476895Z",
                    "created_by": "COPY llm_train/tensorrt_llm /tmp/tensorrt_llm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:09:20.57139632Z",
                    "created_by": "COPY llm_train/trtllm_changes/attention.py /tmp/tensorrt_llm/tensorrt_llm/layers/attention.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:29:55.859418569Z",
                    "created_by": "RUN /bin/sh -c cd /tmp/tensorrt_llm && python3 scripts/build_wheel.py --trt_root /usr/local/tensorrt -i -c &&     pip install --no-cache-dir build/tensorrt_llm*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:29:55.872140556Z",
                    "created_by": "COPY llm_inference/tekit_backend/inflight_batcher_llm /tmp/inflight_batcher_llm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:30:58.354289992Z",
                    "created_by": "RUN /bin/sh -c cd /tmp/inflight_batcher_llm && bash scripts/build.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:30:58.36295278Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:07.766572592Z",
                    "created_by": "COPY /opt/tritonserver tritonserver # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:07.982015181Z",
                    "created_by": "RUN /bin/sh -c mkdir /opt/tritonserver/backends/tensorrtllm &&     cp /tmp/inflight_batcher_llm/build/libtriton_tensorrtllm.so /opt/tritonserver/backends/tensorrtllm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:07.982015181Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/opt/tritonserver/backends/tensorrtllm:/usr/local/tensorrt/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:08.728354398Z",
                    "created_by": "RUN /bin/sh -c rm -r /tmp/inflight_batcher_llm && rm -r /tmp/tensorrt_llm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:08.737116602Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:08.746158245Z",
                    "created_by": "COPY sequence_packing sequence_packing # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "ENV NVTE_APPLY_QK_LAYER_SCALING=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-21T04:31:09.369596738Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:d706498ddd04610ef0a575fa2d39b800f2ca68bd34267d91144a2b092450b839",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d49c45a1ce76e01cbc858a6fdb807f598ca32689d9ffb852481d3808cf877636",
                    "sha256:c19a2e9e2fc68fb116c57d5d13b674d6e63319e989b3f615c9f26f5293ab1692",
                    "sha256:a11b66fb7da81e730460c6b4cba42ef1fca2e129bea88b5a60cf1187b7efee16",
                    "sha256:b7838cda0168c3714671d449485f73846cc0679e6aebeeb9f0d2965caa64047f",
                    "sha256:54637edd78b78eff429a18b1dd854d1afbfcfb145cfc972087aee5458ffdfc7c",
                    "sha256:27e3cfa205ac390527b4f047e509ec3cb1ca79a49626bf90b057767a8bd33094",
                    "sha256:b67911d75b54fe58fb51239c9bd92290b6114a3432f257b3af0650678b3cdd25",
                    "sha256:9a2cc8c85cfddb4f8f10234e9bedcdaa32f64d65bc0a5ad6a45c87be0acfff04",
                    "sha256:2d6f7f65b98f039b79741955e7fe2a526b9276638aa2dc948b365f0f0abceb7c",
                    "sha256:1cb4fb074c6fb5c8c460c80cf6ad47ca06381a86946985973d512c5ff306501e",
                    "sha256:7cbadeda1c929535f788dee6d814879157cdcdefd3a326a0bf2a93d425095264",
                    "sha256:dffdc682f8e3a6c1ab6b46754b4472f74ec63cd24c01d336380c05c618d517d7",
                    "sha256:18a55fcb0d80ced9b951809fccdbd95d67e871c0fcbfcc1720e8d628885531fc",
                    "sha256:fff2edab050797f9fd398b405512dd6ff6d5e91e55f89fbc0247b7af883518d6",
                    "sha256:2f1c79185e8abe48cae5aadebf38daf9c34bc85acde239fcc34953acea0e4b2f",
                    "sha256:fa281fe5a0384a109a5f83f4fe8e78b85826980f531c74589173e48a99ec042e",
                    "sha256:65b184111be864ae1682e2534675d83abf0ec030cd49d538013f2126b51547ed",
                    "sha256:2da1751a579862884fbe2c908d94e6d7a1d4094638df59ee05823d82b154fe0c",
                    "sha256:04832e750d47091eea3c70b9732e07fec1735363c8ccf0425d360f5515bb4831",
                    "sha256:615e8401fa3870d73a1a24daa41e70fbf20af77a8dc53e5c2b79f212aa864358",
                    "sha256:854556223ca7f275cf957594b6f39a5580a73f2dd36975d65379fa081f78c934",
                    "sha256:188bfd3712298d31fdc4fd1ccf39ecdcba9aa34ef8f201958322612c8061f65a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9e8161b5841090e50576b820e92ff46f6a5514655055159450d8142cfdb54e0f",
                    "sha256:c0361d5c84a6a712499b0f8e22171058968cc7639224b3aac67026a622b8c036",
                    "sha256:29e9614bd140c14a85e90ff71e9c47a95ba9d5ba21c7e411961089f27eff411f",
                    "sha256:99a5a16726846a44aaa4bf17870bcdf258dc8f63fd882cd5dd03745dec2aaf83",
                    "sha256:14868c9211917ac7951f31514ebb016777fb39e12f655b5bf464f210f5ed1495",
                    "sha256:ae7d5836363c8310d3bef2aab07e597873e160629772d2b35fd7bf3ebf46cef3",
                    "sha256:c2c424c96bcbc50101fefc760641cceb4466e8cdfcd69cedc880f7b5ddfd4bc7",
                    "sha256:a142c13ed5b097cf6421ac1f54085e9e3ba163f853235879063b1cf6afb11ddc",
                    "sha256:49790339fda2e7bb818315f4408e1102f6207d6431b3d2279a67425a372cfa31",
                    "sha256:68650dd1f89045a3deec56c9cb7c21ac15df2617a64582d438cfff1f31c017b5",
                    "sha256:0e37b1cceab8760f309bf16151c4fe4d439127fb543997496d19855c633a72c3",
                    "sha256:25b7c7fdee6813f46efb4cfb1941b659dad69806cc0c1e9c19a0ec58872d5967",
                    "sha256:cc0fede09dbd06e071f2d439fa361c961c02fa6e4789f70678afd91f9840665b",
                    "sha256:ebee8ab2b9be29c50e22cf1843b64f5b297d7ac1966c59261bd9ce76d8e5db56",
                    "sha256:23e371aa0ded8ca117e1364b4f4162e621bab0318ea2918cdeb359c799723f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d5fc9597876faf297491205ddaab548f502f26d015fd70f9cca8d001676d7ce",
                    "sha256:8e4a776a2d4c6db1068c3054a65b3230e3c17888be61da5cd2e67cef5f12b1d1",
                    "sha256:6b2e3d7a7310fd3ab08e0a814da2f3edaca93e4f210de4665b0dbe0897951ea1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1fb83ba3f523107661d0380ddead880290087ffdb12ac8ab4ba391596495f34c",
                    "sha256:924f62dc7580a9f5fea2a2529468e900b707f3036b3766f26e9daf67657d6dbd"
                ]
            }
        },
        "24.01.speech": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=PyTorch",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LHOTSE_REQUIRE_TORCHAUDIO=0"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "3a8f39e58d71996b362a9358b971d42d695351fd",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T21:37:27.625050893-08:00",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T09:13:27.287810492-08:00",
                    "created_by": "ARG REQUIRE_TORCHAUDIO=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T09:13:27.287810492-08:00",
                    "created_by": "ARG REQUIRE_K2=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T09:13:27.287810492-08:00",
                    "created_by": "ARG REQUIRE_AIS_CLI=false",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T09:13:27.287810492-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T09:13:27.287810492-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get upgrade -y &&   apt-get install -y   libsndfile1 sox   libfreetype6   swig   ffmpeg   libavdevice-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:13:58.651096086-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c apt-get update &&   apt-get install -y   libtool   libltdl-dev   automake   autoconf   bison   flex   tcl   ghostscript   libgd-dev   fontconfig   libcairo2-dev   libpango1.0-dev   libgts-dev &&   rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:13:58.945601182-08:00",
                    "created_by": "WORKDIR /workspace/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:14:16.902608202-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/Megatron-LM.git &&   cd Megatron-LM &&   git checkout 240a8ef7a21df201e47b5b2ae33cc5f4c5486849 &&   pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:50:59.874204494-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/apex.git &&   cd apex &&   git checkout f058162b215791b15507bb542f22ccfde49c872d &&   pip install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:57:49.329216044-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&   cd TransformerEngine &&   git fetch origin da30634a6c9ccdbb6c587b6c93b1860e4b038204 &&   git checkout FETCH_HEAD &&   git submodule init && git submodule update &&   NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:57:49.56198599-08:00",
                    "created_by": "WORKDIR /tmp/",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:57:50.655944675-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip3 uninstall -y sacrebleu torchtext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:57:50.841724538-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T09:57:51.048979363-08:00",
                    "created_by": "COPY scripts/installers /tmp/torchaudio_build/scripts/installers/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:01:37.405523671-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/torchaudio_build/scripts/installers/install_torchaudio_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"torchaudio installation failed\";    if [ \"${REQUIRE_TORCHAUDIO}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed torchaudio installation\"; fi   else echo \"torchaudio installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:01:37.704661511-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:03:45.452744777-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/installers/install_graphviz.sh --docker); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"graphviz installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed graphviz installation\"; fi   else echo \"graphviz installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:03:45.780745274-08:00",
                    "created_by": "COPY scripts /tmp/nemo/scripts/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:08:14.975790935-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c INSTALL_MSG=$(/bin/bash /tmp/nemo/scripts/installers/install_k2.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"k2 installation failed\";    if [ \"${REQUIRE_K2}\" = true ]; then   exit ${INSTALL_CODE};    else echo \"Skipping failed k2 installation\"; fi   else echo \"k2 installed successfully\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:08:15.294666793-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T10:08:15.294666793-08:00",
                    "created_by": "ENV LHOTSE_REQUIRE_TORCHAUDIO=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:42:43.498778905-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:46:43.253250544-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c for f in $(ls requirements*.txt); do pip3 install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:46:53.094366403-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install flash-attn # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:46:57.77448829-08:00",
                    "created_by": "RUN |3 REQUIRE_TORCHAUDIO=false REQUIRE_K2=false REQUIRE_AIS_CLI=false /bin/sh -c pip install numba>=0.57.1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:46:57.77448829-08:00",
                    "created_by": "ARG NEMO_VERSION=1.23.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:46:58.402830273-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.23.0 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&   /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&   /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:36:01.433367608-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.23.0 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:24.722902067-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.23.0 /bin/sh -c python -c \"import nemo.collections.nlp as nemo_nlp\" &&   python -c \"import nemo.collections.tts as nemo_tts\" &&   python -c \"import nemo_text_processing.text_normalization as text_normalization\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:24.921860035-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:25.284563953-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:25.659281889-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:25.957875002-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:26.284134763-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:26.942446751-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.23.0 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&   chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T21:37:27.625050893-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.23.0 /bin/sh -c if [ \"${REQUIRE_AIS_CLI}\" = true ]; then   INSTALL_MSG=$(/bin/bash scripts/installers/install_ais_cli_latest.sh); INSTALL_CODE=$?;   echo ${INSTALL_MSG};   if [ ${INSTALL_CODE} -ne 0 ]; then   echo \"AIS CLI installation failed\";   exit ${INSTALL_CODE};   else echo \"AIS CLI installed successfully\"; fi   else echo \"Skipping AIS CLI installation\"; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:7ffbcad96da15f7f917cf1be997baf8b81ceaeb331de127a154c8b4328b79ddb",
                    "sha256:a086dbaf5b375cd97a3b5e2da1306b07ee9bf2f3e782df1d199d3f11d149ea5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3bc1f2bc07bc0b367fc2cb26a3c8f47d9ae87e79a4f94f0923c3a5045e054fc6",
                    "sha256:8008bf4bfe6cdaa61ab3f2a10d77c43da4988e35d4e57990a193f740deacb1e7",
                    "sha256:11d4f20b2c92480388721af502c5b64ba1867fb83666a20f3a979d908aa9db20",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95580df0d4313599d5545b8dc14636e018884db5c8f0fb813e2b2aa2f365b9c8",
                    "sha256:d8a564de5c0b97cfc80c29f43176b2081dd0814070258e85d48bcd3c8c7e6a08",
                    "sha256:bcd9df0ec005cd48de8e2085f433460277cf335b028dab98a63a00ef2a1d9007",
                    "sha256:cfc7c92df6e5cec6a87f448371cfb63ae3de6bfb5f28fe7f4f12e80781061774",
                    "sha256:1050c6b9fec6aa6c230dede48b99016809210c076c395f6c0834d55104770f87",
                    "sha256:952c4dbb12e9523f7feeb7a11405d02b0b74ac31035e03376e2788d77d99a21e",
                    "sha256:9582353f4e5d35d916060c148bf28536a945c47aacbcd48d3fb163fb4711afc7",
                    "sha256:9b70dfc6679a092874e9765b44aeba9edb21055d4e357ea24e01cfdb016b41aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e55bd6255201ab5dc837cce41bd4dc6d5ea3f801e419107e60ebb670fcc15e48",
                    "sha256:f682611a77865f0c5f3d40dec4e87c71906a019b788d0f8ff0dab697db78ca85",
                    "sha256:a95cdae8685ba286994603dd0bc2ac71c5d5cd4f479c4273a416f89a19607ebe",
                    "sha256:aa2ff8db746da29d8aaec6bde9ea6fe2aa003e87faae5255bc3e73f3ce8fb320",
                    "sha256:91854ce3790216cc617135b897e706333834847dd6fe5e25efdf378ec4db04bc",
                    "sha256:cb0cb50f1ba8f6095617416913db6db0deff948077990f6a2e12e980e1256923",
                    "sha256:263fddef110d23e201ea309d5bd9c611521b40e7f98a085afda9273d3ff12b5a",
                    "sha256:e2e3141620e2cc926c2212f6276dfede997df5435812eec06c3ff7a181e223e0",
                    "sha256:d7a52e618766d59b2e9f86fd752fd771eac7ba4f7b344828154c5eb83a869085",
                    "sha256:ff218fc5f84f49d6e5a9723e03d15085ec7b074a77aa56b6311ca1b529dbe348",
                    "sha256:5a0278cccf22f2a149b5f35b15904a63ce2d86a04bf30634c772d50ccb87d8d0",
                    "sha256:817bacb1fb44de4afb12f5fd0e59385255eb3bb4a85079bab60e9a6c8be880b1",
                    "sha256:acf766beda9dab264c77e04ed4c262956426956b7c18424268849b73b486b64c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "24.01.starcoder2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/cmake/bin:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/tensorrt/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/opt",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-28T07:38:59.052667532-08:00",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:30:22.991852368Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:23.044708454Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:24.329002647Z",
                    "created_by": "RUN /bin/sh -c mkdir s5cmd &&     cd s5cmd &&     wget https://github.com/peak/s5cmd/releases/download/v2.0.0/s5cmd_2.0.0_Linux-64bit.tar.gz &&     tar -xzvf s5cmd_2.0.0_Linux-64bit.tar.gz &&     rm s5cmd_2.0.0_Linux-64bit.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:30:24.329002647Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T17:32:53.481975461Z",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/google/sentencepiece.git &&     cd sentencepiece &&     mkdir build &&     cd build &&     cmake .. &&     make &&     make install &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:32:56.726978217Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T17:32:56.726978217Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:18:20.067579799Z",
                    "created_by": "RUN |1 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:18:20.067579799Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:20:30.705981138Z",
                    "created_by": "RUN |2 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=98186c2e2746139aec71fbc4cbc0b3cd24e03e8b /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:20:38.218850011Z",
                    "created_by": "RUN |2 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=98186c2e2746139aec71fbc4cbc0b3cd24e03e8b /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:20:38.218850011Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:25:41.330376627Z",
                    "created_by": "RUN |3 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=98186c2e2746139aec71fbc4cbc0b3cd24e03e8b TE_COMMIT=da30634a6c9ccdbb6c587b6c93b1860e4b038204 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:25:41.388490471Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:26:03.852333824Z",
                    "created_by": "RUN |3 APEX_COMMIT=f058162b215791b15507bb542f22ccfde49c872d NEMO_COMMIT=98186c2e2746139aec71fbc4cbc0b3cd24e03e8b TE_COMMIT=da30634a6c9ccdbb6c587b6c93b1860e4b038204 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:26:03.852333824Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:26:13.855423971Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=r0.2.0 /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:26:13.855423971Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:27:04.997651082Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:27:04.997651082Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:27:04.997651082Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T18:27:45.881724724Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:27:45.903002659Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:30:09.947254409Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=r0.2.0 LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:30:39.75588529Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:30:46.707747583Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl &&     pip install ninja torchprofile>=0.0.4 tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:30:47.074477142Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:36:29.516085814Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir wandb==0.15.3         'best_download>=0.0.6'         black==20.8b1         'click>=8.0.1'         'datasets>=1.2.1'         jsonlines==2.0.0         lm_dataformat==0.0.19         mock==4.0.3         'numba>=0.57.1'         'numexpr>=2.7.2'         pybind11==2.8.0         pycountry==20.7.3         pytablewriter==0.58.0         pytest==6.2.5         sacrebleu==1.5.0         'scikit-learn>=0.24.1'         spacy==3.1.3         sqlitedict==1.6.0         'transformers>=4.1'         tqdm-multiprocess==0.0.11         zstandard==0.17.0         tritonclient[all]~=2.33         'nvidia-pytriton==0.4.1'         'nltk>=3.6.7'         'ipython>=7.31.1'         'torchmetrics==0.9.1' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T18:36:34.443356041Z",
                    "created_by": "RUN /bin/sh -c pip install pytorch_lightning==2.0.7 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T20:54:43.806569579Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T20:54:43.814230535Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T20:55:24.206446047Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T21:21:24.761760352Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T22:07:44.627216529Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T22:07:44.641439677Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T22:07:45.149155551Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T13:22:24.611369441-08:00",
                    "created_by": "COPY ./nemo/collections/nlp/data/language_modeling/megatron/gpt_fim_dataset.py /opt/NeMo/nemo/collections/nlp/data/language_modeling/megatron/gpt_fim_dataset.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T23:57:02.891841649Z",
                    "created_by": "RUN /bin/sh -c apt-get remove --purge -y tensorrt* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T23:57:03.732564414Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T23:57:03.740622649Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_tensorrt.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:28.318101306Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_tensorrt.sh && rm /tmp/install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:28.326146466Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/tensorrt/lib:/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T00:00:28.326146466Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_polygraphy.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:34.691591118Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_polygraphy.sh && rm /tmp/install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:34.700443019Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_cmake.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:36.890405785Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_cmake.sh && rm /tmp/install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:00:36.890405785Z",
                    "created_by": "ENV PATH=/usr/local/cmake/bin:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/opt/s5cmd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T00:00:36.89845368Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_mpi4py.sh /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:01:35.508591882Z",
                    "created_by": "RUN /bin/sh -c bash /tmp/install_mpi4py.sh && rm /tmp/install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:01:36.976969431Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm /tmp/tensorrt_llm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:38:25.958312973Z",
                    "created_by": "RUN /bin/sh -c cd /tmp/tensorrt_llm && python3 scripts/build_wheel.py --trt_root /usr/local/tensorrt -i -c # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:38:46.203665076Z",
                    "created_by": "RUN /bin/sh -c cd /tmp/tensorrt_llm/build && pip install *.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:38:52.246020919Z",
                    "created_by": "COPY /opt/tritonserver tritonserver # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:38:52.80982993Z",
                    "created_by": "RUN /bin/sh -c rm -r /tmp/tensorrt_llm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T00:38:52.81726771Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T04:08:14.039093044Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/export /opt/NeMo/nemo/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T04:08:14.05132553Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/deploy /opt/NeMo/nemo/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T04:08:14.060214419Z",
                    "created_by": "COPY llm_inference/nemo-fw/scripts/export /opt/NeMo/scripts/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T04:08:14.068119709Z",
                    "created_by": "COPY llm_inference/nemo-fw/scripts/deploy /opt/NeMo/scripts/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-28T07:38:58.809566385-08:00",
                    "created_by": "COPY ./examples/nlp/language_modeling/conf/megatron_starcoder2_config.yaml /opt/NeMo/examples/nlp/language_modeling/conf/megatron_starcoder2_config.yaml # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-28T07:38:58.889032485-08:00",
                    "created_by": "COPY ./scripts/nlp_language_modeling/convert_hf_starcoder2_to_nemo.py /opt/NeMo/scripts/nlp_language_modeling/convert_hf_starcoder2_to_nemo.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-28T07:38:58.970831027-08:00",
                    "created_by": "COPY ./scripts/nlp_language_modeling/convert_nemo_starcoder2_to_hf.py /opt/NeMo/scripts/nlp_language_modeling/convert_nemo_starcoder2_to_hf.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-28T07:38:59.052667532-08:00",
                    "created_by": "COPY ./scripts/nlp_language_modeling/merge_lora_weights/merge.py /opt/NeMo/scripts/nlp_language_modeling/merge_lora_weights/merge.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:d706498ddd04610ef0a575fa2d39b800f2ca68bd34267d91144a2b092450b839",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d49c45a1ce76e01cbc858a6fdb807f598ca32689d9ffb852481d3808cf877636",
                    "sha256:c19a2e9e2fc68fb116c57d5d13b674d6e63319e989b3f615c9f26f5293ab1692",
                    "sha256:a11b66fb7da81e730460c6b4cba42ef1fca2e129bea88b5a60cf1187b7efee16",
                    "sha256:48e29c7a1cc69a0ad8b425821ca671d40650b795513ce48723abb0fb86e5fece",
                    "sha256:2aac3aaca7485515eafc79a7823d4762115fd3a1bb4481c947279db06694f947",
                    "sha256:a18c5ca101a6bbb56d92db64beab978c7e28770a0b17c9005d23cd918442fc60",
                    "sha256:734c83011de493fa8d1b1cf5f50c1aab883e211c0aeb1d940fdd43d6c36e1c4b",
                    "sha256:ab358dfdea953b01147a4041aa4b737bc73dc5a4a6ec17672e1a42693ef35117",
                    "sha256:cb6e77da650920346585b1bf6cbaa6276563de683043387f25175806671df5d0",
                    "sha256:4ef297533e7589f5e61915bd217a1d2dce1eabf3b0e7595ac040baab11b9ac2b",
                    "sha256:0f78cc53110f862f19c2bf9da8f848f33ea1a5dd5f72f1f28522f808a48e5c29",
                    "sha256:4142272ad3ec3710d66df90ef25656c376703094dd0fd2a8ebb03fb416f359aa",
                    "sha256:08bfe91104ee5463139a5b73278b59c3ef17d886bd439e3785f31ff73666a9e4",
                    "sha256:0020ebe787c9f04044eff91354abbc4b78a747ab41ebbe561823bf6f97e286cc",
                    "sha256:039e7945fd72eaf31804de272e08c0b3fa74d385bb58264610948eebc1015ea7",
                    "sha256:5fff7ce32b97b49b5d18b49478aa47ff6c88b1c4a228c4993b74bf2dd16e0ea1",
                    "sha256:7b43aaddfca604486f254c50c98deec032202e3943bd44efb5e02000e1446e22",
                    "sha256:c770bb68737d2a7c9c1a3ade57eebe2fc70041173fb2add30bf2c296f853f8ef",
                    "sha256:35c82ae1f1ef7a0133ce7cec64e08234ccc982a56493ba500641d2827534877d",
                    "sha256:7401c00a028211c3dee5416553e9460e232cb0636e881352e68685868963f5be",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7cd327ee17936286c803bc5b4c6ab455c402b216987d7edecb555d4c7e133e2c",
                    "sha256:e247b1d4594563ca1975a9fd0d439baec8048d6742b61beb3e07026eb72e36fb",
                    "sha256:741f32ea6a5df15c4efca88c11c6574328d3922fa6816bc5bbf1c31a6239c4b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa11dab25b68f5342db6b2a07c78255b2c4ee4dcbafa5d4b6c4aadff7fd9d704",
                    "sha256:4c3def527cd458d3a987a048c76d32d50e5fba07967238b95cf7f5a062ea6ff7",
                    "sha256:110cd5fb17428d62cba0d947305e9c3c5b50aa24faf2e7f03df7a4724d181712",
                    "sha256:87590e718c94b973d8166a42fdbe4e63a0bd2e03244440e1ebd35e478668691a",
                    "sha256:6615c3c3d6b437a2d67042a01eb26597304c4c93704d8ab5c2829fd428b42d60",
                    "sha256:b073c232810df61de1ac01e9e7efb393b9dfc8bbfd269c9bf3931b4a9d512a7a",
                    "sha256:51ebca4ed14b687759d89514a9b7f48f1efc2fcdd58e921f35c81e7fdd68b43f",
                    "sha256:2a13b0f8dbe1e928aaffd9ce347bd8cf41f0cb179ea50f180100fc8d07fa31ef",
                    "sha256:3a12c35e731e305947495da6ddc872f49476dd4c0b5514b11ad057860e4b65d1",
                    "sha256:8a9a70422ea0c1c691f878c2767db5c914897a837e90d85d4c7ae2338f023726",
                    "sha256:6cdc83911e6e26d0a15a28a983cc9e04ea4bd768afff75abe45a60146a975302",
                    "sha256:e4b4f545402dbf0d697a728096168ff704ac2413c1b60c08d09cd1d95e47b9e5",
                    "sha256:bece508764cc86ad9d4af8ceb588e3e3b99ad8893462c5d54038f8c7b3360908",
                    "sha256:bb04be62022b4ce2532208f487a2689a4a0be5cf4aef7fce15b895275873bb86",
                    "sha256:81f2f6204f39558f6510cf12f4cd225d0cb0da4b3dd90fb7d5482d1062d2f318",
                    "sha256:ede50e1070edfafe8e593b49b338e405b47ad1d1e2f06bb44ee9a4d2dba9f786",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d474872cea01705cf9a86e540a53ff1bd4851092259dde33d38e333b56a6c885",
                    "sha256:041e2997f4b37c28cf398704349afef003d05b4a2ccbf73fb3f03eaf9f9386cf",
                    "sha256:5ae2fff017411cfa87090ad910c180ae6c2f94ca96c372125361edf30f79cf86",
                    "sha256:c83c1c7371b7ea5bd9f2520a495ddee9503bd3c659f87fb2836566b850dc2f1a",
                    "sha256:5f8b2e4bad54d3191b2622902e7dabbc67ac6d9a155630c93fe69ec0a3c7ff87",
                    "sha256:543072ca2d4e030f0af8d6af8e9425751f2ed366ff821e659d953ada52d84f63",
                    "sha256:2a04ecd88b56704a9b41f3fd176f5011827813532863eacb2367323877bb5fcd",
                    "sha256:93b63d7eef1057850d991c1e0b66f9d703bdd413cc605b9c37381fac40c00563"
                ]
            }
        },
        "24.03.01.framework": {
            "architecture": "amd64",
            "config": {
                "Hostname": "312b3085c88f",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/compat/lib.real/",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts"
                ],
                "Cmd": null,
                "Image": "nvcr.io/nvidia/nemo:24.03.01.framework",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "container": "312b3085c88f375f9a4d060303551aad38c162ab83d79e5829fa548505aa504d",
            "container_config": {
                "Hostname": "312b3085c88f",
                "Domainname": "",
                "User": "",
                "AttachStdin": true,
                "AttachStdout": true,
                "AttachStderr": true,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": true,
                "OpenStdin": true,
                "StdinOnce": true,
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/compat/lib.real/",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts"
                ],
                "Cmd": null,
                "Image": "nvcr.io/nvidia/nemo:24.03.01.framework",
                "Volumes": null,
                "WorkingDir": "/workspace",
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-09T21:59:48.279352884Z",
            "docker_version": "24.0.6",
            "history": [
                {
                    "created": "2024-01-25T17:54:38.781867928Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.800330656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.818543313Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.845052233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:40.801693556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99224b1f237763b3053ca27ea5641f9a801c21154c7ccbff2c099654cc6db942 in / "
                },
                {
                    "created": "2024-01-25T17:54:41.023950033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.704071281Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.188605412Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.stable.20231214+cuda12.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=9.0.0.306 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ENV DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.921930341Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.979253765Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:46.698776373Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.741287523Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 PYTORCH_VERSION=2.3.0a0+ebedce2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=d0bb811 NVFUSER_VERSION=d0bb811",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+ebedce2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:12.805557831Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.149753441Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.707664416Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.715717867Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:15:20.025684049Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:34.994431848Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.654434893Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:34.580281057Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:36.930086533Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:00.437035426Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:23:33.398433948Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:33.414627422Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:55:55.551690456Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:17.247859682Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:19.241059545Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.710470919Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.824619089Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.831099769Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.838909958Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.888711472Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.031283606Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.266290325Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:58:10.452404385Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:43:55.425357209Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.616277388Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.ref=10200c7981051a74cf2d5e0347eb4b876821d15d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:18:58.037637306-07:00",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T00:18:58.069478757-07:00",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T00:18:58.069478757-07:00",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T00:21:11.412850056-07:00",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T00:21:17.107173007-07:00",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T00:21:17.107173007-07:00",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:18:37.706680123-07:00",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_APEX_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with Apex commit hash: $HEAD_APEX_COMMIT\" &&     pip install -e . -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:18:37.706680123-07:00",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:19:49.665284007-07:00",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_NEMO_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with NeMo commit hash: $HEAD_NEMO_COMMIT\" &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     pip install -e \".[multimodal]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:20:09.044961774-07:00",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');tok_sc2=AutoTokenizer.from_pretrained('bigcode/starcoder2-tokenizer'); _=AutoTokenizer.from_pretrained('THUDM/chatglm2-6b',trust_remote_code=True); _=AutoTokenizer.from_pretrained('THUDM/chatglm3-6b',trust_remote_code=True);\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:20:09.044961774-07:00",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:26:52.63747919-07:00",
                    "created_by": "RUN |4 ALIGNER_COMMIT=dev APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_TE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with TransformerEngine commit hash: $HEAD_TE_COMMIT\" &&    git submodule init && git submodule update &&    NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:26:52.63747919-07:00",
                    "created_by": "ARG MCORE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:27:32.700099091-07:00",
                    "created_by": "RUN |5 ALIGNER_COMMIT=dev APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e MCORE_COMMIT=fbb375d4b5e88ce52f5f7125053068caff47f93f /bin/sh -c CI_JOB_TOKEN=$(cat /run/secrets/CI_JOB_TOKEN) &&     git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/ADLR/megatron-lm.git &&     cd megatron-lm &&     git pull &&     if [ ! -z $MCORE_COMMIT ]; then         git fetch origin $MCORE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_MCORE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with megatron-lm commit hash: $HEAD_MCORE_COMMIT\" &&    pip install . &&    cd megatron/core/datasets &&    make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:27:32.700099091-07:00",
                    "created_by": "ENV PYTHONPATH=:/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:27:32.700099091-07:00",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/compat/lib.real/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:27:32.700099091-07:00",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:28:41.581783654-07:00",
                    "created_by": "RUN |1 LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:28:41.581783654-07:00",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:28:41.581783654-07:00",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T01:29:32.440262117-07:00",
                    "created_by": "RUN |1 LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:29:32.516367089-07:00",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:32:20.269774906-07:00",
                    "created_by": "RUN |1 LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:01.072773831-07:00",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:08.818035896-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl && pip install ninja tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:35.047120893-07:00",
                    "created_by": "RUN /bin/sh -c python -c \"import ammo.torch.quantization as atq\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:35.559415491-07:00",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:53.08677867-07:00",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:33:53.129208278-07:00",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T01:34:02.71122998-07:00",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T02:04:50.710962949-07:00",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T02:55:44.508928025-07:00",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T02:55:44.553257825-07:00",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T02:55:45.439022531-07:00",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T21:59:48.279352884Z"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a102d1cac2bdae8a0160ac4365d4f8653e9d6da56c793a665d556ae07fb7f82",
                    "sha256:8b6a65cdf23ce2d8aabd4149d107434c35ccc8fae84b0ed81ccbb604f52bf6d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b68b25110bd7619adeb72b4b7c19e784f5fc2ce271f044a8440e82d030ccbbf",
                    "sha256:be9c4681d16d45d59eb47adb0e8564ac9f9332cc35851b4386fa5e7dffde169d",
                    "sha256:7a206532e7bb72aa7fb5a37b24ec90166eddfc4c37f1ec75a9299f211fb16ff4",
                    "sha256:cfbd2d5242f13d546b3b8fe19a25f274115703171820832656186561ea5eb7e8",
                    "sha256:7472f9ec0a1999ecdd146a26a9f88cfd728d1e4ea63ce652535150ae88fea821",
                    "sha256:ead76ef131ca1559a8d23a428530f5b5b9e2d47577156cab537df643fcabb2a9",
                    "sha256:68f25652b577beb473321d021f202ed669dce366514db9071a334a56e9af1ddf",
                    "sha256:5987c84bf960b8bd8d1e1deeb49f4d752ac6eb4686cdd644fa39815119709024",
                    "sha256:0831a1130f7db67589ea60b6d7132264d81ee0301dd30bdcb95d09aefd674f60",
                    "sha256:3d30658b2b86e7bd8b01b5ce9577fc673c7ab71b156638c45c8c63079dabfe1f",
                    "sha256:dc36db325a7ab0e11892088f1bd0436076d08f9db3c26bed26863400bb8566e5",
                    "sha256:bd5114e27cdad1f00bb10c98a0d6e9f74ec15524c4bfec93f6e69f47eb5b13ba",
                    "sha256:f91480d37583386ca924f8fc685594071d8d235013b065bcd5c3c039c49b6d8c",
                    "sha256:56988245e5e5f2e9532801d03f42dbcf4157b91aa7e37292f71c3d838eb14751",
                    "sha256:fc4ad3cfb6de57cf07ae8cfaaf4eed16948be52fe0b5bc3f4c4cd69f8c6e2ef9",
                    "sha256:93f1050968b5b5b07079fba47bd5194b3a549f45a914f55951b6ba9c1d749c3c",
                    "sha256:60b8d3f1d4b85165f75220019860c2e1896c427c5fc2371f44768034d0cbdf03",
                    "sha256:d4a638d12e84aec4ae40568a0f667a3f764958e0aa893640deda7c585bfb0963",
                    "sha256:06f023a15b1f36a194b0f90e118da527458417a54e8c1bdb60a38e7e0a8573d5",
                    "sha256:cc719adcd38dbb4515847e12f7d0f704b63cda6052ced99e67ed265b1ae06cac",
                    "sha256:47c372ac6c4f4613b79b7bb59db863270fe402a1db7c8786492bbdd207d42e0a",
                    "sha256:cde176d55a83beb951100402776db1aff4873622c4493b153eddc5a8bb23b607",
                    "sha256:5d068ef3bf1ecbacbfce8f49d9b98d5f7f90c6a339f11f7ca238dc41d10f06ac",
                    "sha256:d1ce2b44a8392a6276137d5078ac7ad15175598082a2c2d9ad801463d0d04478",
                    "sha256:9d8900eb91a6c0d66f7a2efd307c617e21b93206596ce8d0aad817cd6f5491e9",
                    "sha256:d9ebee02a910f565f04bbae98ee6d91626651ad89e0dcf15ced1701abd6d2b2f",
                    "sha256:996967c303c9c422f7c8f5f7ee35e46709f14b8880cadfebefbcd789ceda8a78",
                    "sha256:f86424e78f0d2170c1fe58baa5b7dcafd62d79197cbe5f5adace937aca3139ec",
                    "sha256:db689f5bdd56aef640d383a5a1cbfa053196c538e91e9982ce257b3ff81dc4a1",
                    "sha256:625cbf61ee05045cba77c45b4776fa0caa0e8dbbcb674596f83139d90b086928",
                    "sha256:8768f04ddc6d36e4f47dca8007f4e3a075a7bcb4a177aa826b43ffca5978af9c",
                    "sha256:f754f02e68a58e2c7301813438910abc20e1fcb6c25898a400b534a3a59d177d",
                    "sha256:e2d3146eb46909575bd796b5a04c3d6115b6e95d22d43a58aa40e5da532bf87a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01897edf89c555137aacf1dea2fc2e81c8e60a8cda86fc6376b063da6d84ecf4",
                    "sha256:12ff84e8a639c6be421070ae9fc4adc945572b954dac2ebf12ca7cb5e10cd1cd",
                    "sha256:0bc423f2dad1a533a59c4e3604633517511e7098f35c5a017dfc3d1957ec60e3",
                    "sha256:9efaeaca2e8f96d5af56839f0e5c0a5ee8ec7060b0882814b5c02797fcec3bd4",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:6370df0406b5d02842a8acf23db8d1ba4a06a2c89896fac2f042ff47f00eb71c",
                    "sha256:b451e10fbfb15a52f315313338c81931c9fa64c661ffb473d2bc5369a9e6012f",
                    "sha256:bfdc2257709c5760d5b1f24a98c86ffaaedc40d40589713792f49f771f822dff",
                    "sha256:02d9ae480fe1e8e3c961f29f5778726eff93957885a587da79544dc5c2cba266",
                    "sha256:43fca6cf33f5671f9d2bc8591c3b97cecb2465e9606a69a920a36f2958385d26",
                    "sha256:dd9c6ec46931d2c4da39fe90c69ef51a33511d8b46c3b5aef8aa6df6a776489f",
                    "sha256:f691ea529e57c7fcb84dce3075025ccec54dedbf4c21c92e952f6ffabcbad4bb",
                    "sha256:d3d07bcdd13e4a406b0df92028604b16a009af36508deaf57056310f7078d429",
                    "sha256:729bbd3b195204acfb1e045960927e8eb7a1cb90a3a9dd63e4cd3fbc625bf210",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2745260785b3542adf85af1cdbf08130f47b5334ee401b76d6408f65b2dec616",
                    "sha256:1c8220a2f2b8566f91729c8363a7b5af85e21e41e0cc53b5057c2ca9e532e129",
                    "sha256:c9eaae2f78f494dc6e94cee9d39236c5b12c01d6dd77d62241d6c02a7e38834e",
                    "sha256:cd30c807219732a8fd1394fe0ac8adeb421b7b9b43ce166cbcef97a3177e8265",
                    "sha256:fdb38e5f11040a50ee0cbc9a183d215ea7217b855bd7786c963fc6acfc7a952e",
                    "sha256:cec8d73d3542992a29672207be976a2d3c885798cc264a36ae369fb78a867336",
                    "sha256:e53a767fc8fe2c0329a6d61321f1a325a6457bc7b116bcc48cb42a73832cb62b",
                    "sha256:d0c6c9f1b67eb24444a9dd791ecc2b45920e3d5680a88f9e88256b68bad4d955",
                    "sha256:7ae5843d094e5af14c51d0893a9687a5085d4c69247106af7c94c80907971419",
                    "sha256:119f40d661ca54155421b21e3c10dc8b965fa5bc0139ceb4c5010f3c47b940eb",
                    "sha256:3f92c618bc15a5a04ad69256435cebb5e8c4c1910eaf9d6d4dc45493d5ea6309",
                    "sha256:50bfc5af01cd96eb69795e83de8c23de5c22291b22a942bb173727fb3388bd67",
                    "sha256:955974d55919f38a74d3e7e190709ecec2418336cf85701203f48bce17168af7",
                    "sha256:4ab070f075a429db44987fff915e829bca6daf0dfe97528e0fb98d67273a33f7",
                    "sha256:dafc696393f487276b1c4d993fcaeb6c363b5cd6de894a98a50f67cff380e367",
                    "sha256:6ddb46898e2747d35b08120a0599ab5c5bc08f39752342dfb09a765b7ba74113",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ee004329ed8b08a8b26f2c87f0e4fc2effdbf01e0e9e8270673bbfb8245d7e17",
                    "sha256:f5bf9a7f660b1259c53a8c220aa2b7036068c76272768bd68b2aed82541716fb",
                    "sha256:9e68a1657da138f7b4e38615c05e69ca40e8e1cb6453687b8087b3c0fe0946d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:494c5b2ca63b6ce2efdec3ff1b3c45d701d2f68798a123697275b7d0ebb16531"
                ]
            }
        },
        "24.03.codegemma": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.4",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=8.9.7.29+cuda12.2",
                    "TRT_VERSION=8.6.1.6+cuda12.0.1.011",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.33.0",
                    "DALI_BUILD=11414174",
                    "POLYGRAPHY_VERSION=0.49.1",
                    "TRANSFORMER_ENGINE_VERSION=1.2",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_VERSION=2.2.0a0+81ea7a4",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.01",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=80741402",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/NeMo"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/opt",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "80741402",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.9.7.29+cuda12.2",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.4",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.2.0a0+81ea7a4",
                    "com.nvidia.tensorrt.version": "8.6.1.6+cuda12.0.1.011",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-04-09T02:35:24.358897927Z",
            "history": [
                {
                    "created": "2023-12-12T11:38:57.155589925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.224861025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.286311609Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:57.352164165Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-12T11:38:59.296940147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2b3b5254f38a790d40e31cb26155609f7fc99ef7bc99eae1e0d67fa9ae605f77 in / "
                },
                {
                    "created": "2023-12-12T11:38:59.637410824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:37:01.051179098Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-02T04:48:15.474430861Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.645915749Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:17:25.772213319Z",
                    "created_by": "ENV NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.4 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=8.9.7.29+cuda12.2 com.nvidia.tensorrt.version=8.6.1.6+cuda12.0.1.011 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.660679361Z",
                    "created_by": "ENV DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.695433612Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.4 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=8.9.7.29+cuda12.2 TRT_VERSION=8.6.1.6+cuda12.0.1.011 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.33.0 DALI_BUILD=11414174 POLYGRAPHY_VERSION=0.49.1 TRANSFORMER_ENGINE_VERSION=1.2 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.781682135Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.788587138Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:20:04.794555618Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:19.171425811Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.498970545Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T02:34:26.519067955Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T02:39:17.177298381Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 PYTORCH_VERSION=2.2.0a0+81ea7a4 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.2.0a0+81ea7a4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.685032983Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-04T21:43:56.6894999Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.695367046Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.702596391Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-04T21:43:56.709862565Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:19:11.292969231Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:20:32.511728915Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:49.766289793Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:20:50.09407086Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.80549535Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:22:44.839515477Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-19T23:25:30.553078849Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:08:39.872169931Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:08:42.325591339Z",
                    "created_by": "RUN |5 NVIDIA_PYTORCH_VERSION=24.01 PYTORCH_BUILD_VERSION=2.2.0a0+81ea7a4 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:21.719960534Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:31.12092834Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:13:53.464117829Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:13:53.480656561Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:46:40.242223513Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:01.67828845Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:03.701702896Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:58.898092036Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.013991262Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.022231461Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.030145505Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.091876042Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.185950741Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:47:59.444194336Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:42.77525763Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:48:57.521727766Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:48:58.247863926Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T04:52:00.264742153Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:09:03.002124926Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.0.4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.325655644Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.466687606Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T05:13:50.47453137Z",
                    "created_by": "LABEL com.nvidia.build.ref=3a8f39e58d71996b362a9358b971d42d695351fd",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T07:52:42.922411581Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T07:52:42.943271153Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T07:52:47.393759295Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T07:52:47.393759295Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T08:57:50.186737751Z",
                    "created_by": "RUN |1 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install install -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" ./ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T08:57:50.186737751Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T08:59:56.143786985Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:00:08.004708861Z",
                    "created_by": "RUN |2 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');_=AutoTokenizer.from_pretrained('mistralai/Mixtral-8x7B-v0.1');_=AutoTokenizer.from_pretrained('mistralai/Mistral-7B-v0.1');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:00:08.004708861Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T09:08:26.032472938Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT= TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:08:26.146442814Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:08:54.278961103Z",
                    "created_by": "RUN |3 APEX_COMMIT=b496d85fb88a801d8e680872a12822de310951fd NEMO_COMMIT= TE_COMMIT=9b2fed514ea419141146f843ab2c84b22b86bfd7 /bin/sh -c pip install -e megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:08:54.278961103Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T09:09:05.413890751Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:09:05.413890751Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T09:10:08.04151199Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:10:08.04151199Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T09:10:08.04151199Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T09:11:03.482289583Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:11:03.518226468Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:14:12.104943807Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:14:49.969223817Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:14:57.710945527Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl && pip install ninja tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:15:24.309626732Z",
                    "created_by": "RUN /bin/sh -c python -c \"import ammo.torch.quantization as atq\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:15:24.745522749Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:15:51.661887426Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:15:51.682868222Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:16:39.716354287Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     tritonclient==2.38.0     kornia==0.6     Pillow==9.3.0     webdataset==0.2.48     git+https://github.com/openai/CLIP.git@main#egg=clip     -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers --src /opt     accelerate     seaborn     datasets     prefetch_generator     diffusers==0.19.3     torchdiffeq     torchsde     jiwer     editdistance     pyannote.core     pyannote.metrics     addict     yapf     basicsr     open_clip_torch     torch-ema     trimesh     PyMCubes     xatlas     imageio     pymeshlab     nerfacc==0.5.3     einops_exts     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T09:51:33.753570867Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T10:43:18.773937064Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T10:43:18.794105149Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "LABEL com.nvidia.build.id=80741402",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-13T10:43:20.391811519Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:40.771359876Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_base.sh install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:53.263420994Z",
                    "created_by": "RUN /bin/sh -c bash ./install_base.sh && rm install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:53.272162327Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_cmake.sh install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:55.509328355Z",
                    "created_by": "RUN /bin/sh -c bash ./install_cmake.sh && rm install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:55.517232589Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_ccache.sh install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:55.834770749Z",
                    "created_by": "RUN /bin/sh -c bash ./install_ccache.sh && rm install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "ARG TRT_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "ARG CUDA_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "ARG CUDNN_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "ARG NCCL_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "ARG CUBLAS_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:17:55.843068537Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_tensorrt.sh install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:21:14.596095167Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_tensorrt.sh     --TRT_VER=${TRT_VER}     --CUDA_VER=${CUDA_VER}     --CUDNN_VER=${CUDNN_VER}     --NCCL_VER=${NCCL_VER}     --CUBLAS_VER=${CUBLAS_VER} &&     rm install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:21:14.606248378Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_polygraphy.sh install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:21:20.515359562Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_polygraphy.sh && rm install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:21:20.563678383Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_mpi4py.sh install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:15.080077318Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_mpi4py.sh && rm install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:15.080077318Z",
                    "created_by": "ARG TORCH_INSTALL_TYPE=skip",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:22:15.09088116Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_pytorch.sh install_pytorch.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:15.516902737Z",
                    "created_by": "RUN |6 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= TORCH_INSTALL_TYPE=skip /bin/sh -c bash ./install_pytorch.sh $TORCH_INSTALL_TYPE && rm install_pytorch.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:15.525984243Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.855798741Z",
                    "created_by": "RUN /bin/sh -c pip3 install --no-cache-dir cython          pybind11          'hydra-core>1.3,<=1.3.2'          wget # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.867799461Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/deploy /opt/NeMo/nemo/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.878363006Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/export /opt/NeMo/nemo/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.939966508Z",
                    "created_by": "COPY llm_inference/nemo-fw/tests/export /opt/NeMo/tests/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.955900781Z",
                    "created_by": "COPY llm_inference/nemo-fw/tests/deploy /opt/NeMo/tests/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.965952995Z",
                    "created_by": "COPY llm_inference/nemo-fw/scripts/deploy /opt/NeMo/scripts/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.974760571Z",
                    "created_by": "COPY llm_inference/nemo-fw/tests/infer_data_path.py /opt/NeMo/tests/infer_data_path.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:20.984672763Z",
                    "created_by": "COPY llm_inference/nemo-fw/requirements/requirements_infer.txt requirements_infer.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:35.424837204Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir -r requirements_infer.txt &&     rm requirements_infer.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:22:35.424837204Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/NeMo",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-18T14:22:35.435898466Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:59:17.836863378Z",
                    "created_by": "COPY /src/tensorrt_llm/build/tensorrt_llm*.whl . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:59:46.835822144Z",
                    "created_by": "RUN /bin/sh -c pip install tensorrt_llm*.whl --extra-index-url https://pypi.nvidia.com &&     rm tensorrt_llm*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-18T14:59:47.284379836Z",
                    "created_by": "RUN /bin/sh -c ln -sv $(python3 -c 'import site; print(f\"{site.getsitepackages()[0]}/tensorrt_llm/libs\")') lib &&     test -f lib/libnvinfer_plugin_tensorrt_llm.so &&     ln -sv lib/libnvinfer_plugin_tensorrt_llm.so lib/libnvinfer_plugin_tensorrt_llm.so.9 &&     echo \"/app/tensorrt_llm/lib\" > /etc/ld.so.conf.d/tensorrt_llm.conf &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.143527455Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/deploy /opt/NeMo/nemo/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.155586309Z",
                    "created_by": "COPY llm_inference/nemo-fw/nemo/export /opt/NeMo/nemo/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.164471762Z",
                    "created_by": "COPY llm_inference/nemo-fw/scripts/deploy /opt/NeMo/scripts/deploy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.172799548Z",
                    "created_by": "COPY llm_inference/nemo-fw/scripts/export /opt/NeMo/scripts/export # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.180953349Z",
                    "created_by": "COPY llm_inference/changes/megatron_gpt_model.py /opt/NeMo/nemo/collections/nlp/models/language_modeling/megatron_gpt_model.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:11.188912219Z",
                    "created_by": "WORKDIR /tmp",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:24.349692599Z",
                    "created_by": "RUN /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git checkout chcui/conversion_precision_on_24.03 &&     mkdir -p /opt/NeMo/scripts/checkpoint_converters &&     cp scripts/checkpoint_converters/* /opt/NeMo/scripts/checkpoint_converters &&     rm /tmp/NeMo -r # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T02:35:24.358897927Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1360aae5271bbbf575b4057cb4158dbdfbcae76698189b55fb1039bc0207400",
                    "sha256:aad8fbafa1e9713a4cfad1deccfb8c8a0d06110b8f45f887368d380f6d80726e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a1d5f3691cf238734c1ef4728a8692c760efd720aef59d7ad5c294a3c4375ef4",
                    "sha256:408dbdcce3b1f995d34f8fa23358475ac0152facee78e0e3b79eb4028b3819f9",
                    "sha256:d922555f193d68b8ec4c4e75f69b13ecc539c70249d940f3d68aa3aa79eef568",
                    "sha256:7fa243a59b176545b05707ff123cf4e7ed7e5944a9e32472c3ff4cd4b309f0cd",
                    "sha256:967fc1edf1f6cdedc28558157571ed750a43312aec3db8e20e1e27faf956307f",
                    "sha256:61f4c0fdd1780d8d35d18b6c831ed7cb5d35e1fafdd4e4105fbb29aa30ac7ee2",
                    "sha256:ea7a603182231c7d9330cb24360e0a5dd181829c974e8f42c4cad2cc957a5718",
                    "sha256:c272ef64f0f53f44a389b02d0af93bd1319a06305906871dbf65a789c8473d43",
                    "sha256:5ca5b67aba1f197581b8b58dba67084f099c4825bb3d3e3aef188af732da450e",
                    "sha256:94fb17ce577d6a4c3cb2a1b139be8292d791136ebd226b8864a785aa9e318652",
                    "sha256:7b64623cadb715d200d512836ca83e46ca2842093846d806008aa4a69e9b4c6c",
                    "sha256:3fc4574df7409e8e94aad0d4e249f67282e923512f293cd1be23db9c2ea51ab1",
                    "sha256:bd7fb5f6570e20188a0dd8f4b1f3a45839cb257ccef2b8d5b3d62f18321ef0bd",
                    "sha256:0277b7e58fa6ce4685bbf11f19ec6d62c64ab3e02dd4eac596ae55fb29a4f0eb",
                    "sha256:c3f04d2806955db3368722919bb71b8aff5b40ab134e505926462da05d2f1321",
                    "sha256:c630ef1b7b61d7a5073749de0d1c2e3c2c92574a2ac0be8e8de8c9b54060f934",
                    "sha256:565ddb635a797172c7a4de83e499ac0ec036e3110c684dda7f22062124d644fc",
                    "sha256:7d6bea944b144eda00d8b5ff942aa7af38f120a1e0a0f889e8183e67f5b4ca7a",
                    "sha256:10880933e71506233a2b28e8c1679a0a96d5690da20076efb8a7549d9063f253",
                    "sha256:2646186d85246d0f06c5a926db00ac8a245d4179c0e6af17c6cc3d9025e66d7e",
                    "sha256:acd428170ab7c52df320cf1c999ec140fa54349bdc517cb4ad613f2b9c9f67f2",
                    "sha256:37dc326733c197b2c5abf0c4767784206838dcc5b0a15d55323fee035b28d1a9",
                    "sha256:213a49c786000b40836669d8c37a686665fed24031d0a590e63f940ab1d76aeb",
                    "sha256:818822d7503f6e57fa0abdf07f2a9018ea00c93996f196b96db0dd9b434e708b",
                    "sha256:7b43594788a26eeecb14d091a6fd8dbd3fb0feca9305195cbd870cab8908cabb",
                    "sha256:bc1d39032f971c831defd95368d44f6039e4aae902e269124819064c7756cc06",
                    "sha256:8ae576ba2e9421772581de1267897257be9d0ad15b30a2a64ee1f3f778acffa5",
                    "sha256:1c09125232fc9f5dbdb506663a16cee7be1c848e732a49bfab64aa277d801fa7",
                    "sha256:5c8f5b34bde3273a198e6dfc94a122e4fa179837ca55a813dd2c1aafe1100401",
                    "sha256:09e62598d36f9afe1754e03d66627fb4dba69c525294ed4708b152c771d9c9bc",
                    "sha256:1f5a1978101485d7fd25f65a7933bf1f61c2c8dba014e79f5cba3819ad452000",
                    "sha256:0ea8f48013cae752ac80409b74e1a19a407584eccdee1fc5fa2103d49065336e",
                    "sha256:2cc93dd0720d9f393de109b905fdebc55dcce49c0f5e6cd7430a98acc1a09494",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ccb64ab424a87d498e3a244cbdfce873b16ab39a7fa94827feb01c9f8b3f8791",
                    "sha256:cee9721d2e5dd9c919965cb6041f8bf4eab75d8574fd2a5e0ca9e33d3f9d3bda",
                    "sha256:85f4236315a0941c1da862b4b09191b11b7507ef68c419bf53010e15241da264",
                    "sha256:7e02e3f124abb962c20b8e4e710516a725883cadff579175639345435742669a",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:fa2a013a2a9acf0095dde4812d7b09dd9f53edc1b899aa7f658f2def42b74c20",
                    "sha256:47585a11ae4fb3e4123a32b2bdf4166dbef3da31b9ac0a6768423bc82953f406",
                    "sha256:98a833959cd6619d8e3934eed44d394a461020c7e4ddcfe30bec36af556294ca",
                    "sha256:ee8be49aec6b80da0380eb8c824941b47d3b6272380bb7a5ee7153de5a47020f",
                    "sha256:6ab1e25b0f53f6800629908275257e6d112537c0a431509c44919323ef35b368",
                    "sha256:023d19c1b22ba5f3b9bdfc2296d15c23876d5186af97e5f71092964b58245b32",
                    "sha256:c9daaf1b703deac55ad973f4e7ecd3fb7ea7e38bb17dd59524c46b093bba3fb0",
                    "sha256:6cbef91399c5b8c180ae552ab4d61eab8097fdaca1f17bb3bc04cb979adb1cd9",
                    "sha256:7165fc067f5c89ec1541a07cf09bfbdab70df7bd09bc6169df9c26cbedbbc31a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e9a09d1dc370af871c7bba4cca97f106d3d471427d4b0673b3422e6c1e71f39a",
                    "sha256:877765d96496daf3f29bf59995dfa76cad791304d9b6cd6ce03080593c97d9b7",
                    "sha256:07ba10568e5b6e66a545f9603381ed4f9cefd3d1367f3bf38166173bd0b3795b",
                    "sha256:1294876fecc43dbab3e6230f2f6be7031be480873e1b35e31152e9a2e7d88aa2",
                    "sha256:178a691bd4641a2fc30ce0ed44095c25d942d9c785e9bbbbed2c38bd02432792",
                    "sha256:6fad090596072b2ae3ad0323ca291193f41c74eb58ab01be8f9c8216f38168a0",
                    "sha256:7e99b919399e42dc81b0b8d13d0c9679b30b7a71c4d5e2522a244b5f0e8d11cd",
                    "sha256:6e8a3b9a89f4402551e5694b24003db13d038889458a14516a3a69a52066649d",
                    "sha256:d53295c2567dfa8fdc280da75dde29163268aba754515ac9e2496c06e59d9b68",
                    "sha256:0e33effd252fb2c74f4ab1e37f5f537f6fd6d1effee68c6c97518f5c77098c7f",
                    "sha256:c9eb149d18689b4924ebead7fbf7e0964c14d20fb439175f38517a93f7050285",
                    "sha256:eb5e0af18a186c45f212123a53e1bb453eeeca722672fbe3e7c76567712aeea9",
                    "sha256:f347c75ff68876173860dae2c2986999be4fc5432a37d979eaa49b55bad08110",
                    "sha256:bebf0d76d25f1961a80ad6f8dd9b027e81d1512365a798fe0b91e44cedcaf1a0",
                    "sha256:fb6b40e06a1529f34ccf630a05d374702fb07d09f55ea988fbcac68edb467256",
                    "sha256:1008408fc885ef0036f5c54d8c72c8596b144db37ac6253dff3d54a0c3220a03",
                    "sha256:812421d27cc202d6ddc0e191cd9436143c75a0311e766ca8236c0f7893610b87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:73d93191e0df869a7ff2c229e4b51b123aabd10e147e2fbec91c5c80840a542b",
                    "sha256:fe0b8964ec651d78aa51e6ad85ce1115ee41fb4eeda7497ea44fceb897df3523",
                    "sha256:4b71d47907342a4111efc1753befb72f957c81c7cec20488e8e8efa8362a5ddd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a867e76178d115a64c7dd9124d0859e13b8eed61c9c64533c8793cfb396b3e4c",
                    "sha256:2d87993da6570a0d788a699afba070b1f194dd3d3bd2e9e1e8739e83caafe8fb",
                    "sha256:60e266ba77289508cd0fe090cee1405f117984fdffab9cf513622e7b2a3fdc78",
                    "sha256:af3d709a07c6fd8a068e6cae8e14ca10926386582830610225305b2ef5b765e9",
                    "sha256:470ba6a42b0f3e68b3d3c603e2bf42d817cb801b383e6cb76819371dae8774fa",
                    "sha256:136db95f2787cf7c4c0021f62ffbf8ae6f4ef2466d4288b34026f5a4e241fe72",
                    "sha256:2a96ec5e330d4008eeba6e62de0beea5b01f10ea792d7c9ac2875067cf52b2fb",
                    "sha256:1338f5f3dde8f5ebf4995b211386cc240fb2133b21cc862dad9cb0abbfc5a8cd",
                    "sha256:9e9081a68ad9696094cb60dfbbc095cdfb4a0ef8cebfb0f71fd087d9143c607e",
                    "sha256:91a9462100773f7d9d01087e1e35424741b57d1641d60723464fe2f9521a08fd",
                    "sha256:666b400b94ef03544329d2f31461ff28808ce9eef4ca42c782f581310c8290d8",
                    "sha256:ade9dccf78781b09f3207c3b802b6c90b58ab40501cfdb5b641f5835224ed6e4",
                    "sha256:3c8551125226f1b04627062332da69159cfce9022e2f31b58ddb10bef14dab6e",
                    "sha256:68b8e1316962e73a80568534569ce3034cb83d79ed81c958e5aff1d8d80a92f9",
                    "sha256:a7669d0d606a5fc599b9808167660097c391779739b522f73cd37e58262155a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1579bb1c7092e8f44f8b7e6767417465e7ecda994f566c88da6ee4fb7729ec35",
                    "sha256:a53fb4ad22447ebfcd4753f7f97abf208e527e0c51405e46477c466e3837e3a8",
                    "sha256:2ccfd7e382174c5dee905bb50fc005b91f470b40dfb71f9f8282c4ff00192364",
                    "sha256:2d731dff4ccbcff01420a844bdbbb6fc4de1ca6bd8a7eff4233bf65f9a453e3c",
                    "sha256:2fb94b5c9a08262ec14890d0b87689f3655950336bc97bdccb5f985da476f101",
                    "sha256:3491730ccdd421429212ebbf8fd748117db5455563d05a5eb8ef4034f3d63535",
                    "sha256:819aa66d3e3a70af39499d95010a762227ba2ad055dd014a36a26c3295012bcd",
                    "sha256:765582ce960aeef938aa434c25bb2cd9b296325271a658b5b0d0c20b2be00dc9",
                    "sha256:62b63bb849533bb6d89f5ef8221b7bbec0d2473a6f1d5a6836a2c25f69bfa54c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39ddcbf5376762275195d6ce0fe169c5f760f9fb16684e73beda7f374b89e1e1",
                    "sha256:c1534780267884d5dae1bebe4f423d40c37b77bde0b101904c8aee42dd0b49ff",
                    "sha256:cffe5e7d3ff0fe02f44d5e34013cd5c6c12eac3760e6b48639c38ef52fc397ec",
                    "sha256:dd07e88821b747d37ac150d1bcae4839fdd3baed3c560882ccc436fde6cbe388",
                    "sha256:17211519f919bfce291c8537b6f66103048c6c6684a5a7c21a8cedd7dd40f4ed",
                    "sha256:81fdf6b66c25380a0920069dc53710612dd4168616a92ab56362452c37638421",
                    "sha256:e370c58809a6e4a33ec81f5da0a124ad1acb8a8ec0ca995e3d376451d4291eba",
                    "sha256:8f7bbcf8b7531965f497c02847d6663f10ed3e995ac047eaded003666ab90e4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe6fc73c9a9eeb5b2da2856f288ee243d28845a40a6938fec081e84c5378adc6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "24.03.framework": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-04-01T19:22:51.979827196Z",
            "history": [
                {
                    "created": "2024-01-25T17:54:38.781867928Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.800330656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.818543313Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.845052233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:40.801693556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99224b1f237763b3053ca27ea5641f9a801c21154c7ccbff2c099654cc6db942 in / "
                },
                {
                    "created": "2024-01-25T17:54:41.023950033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.704071281Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.188605412Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.stable.20231214+cuda12.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=9.0.0.306 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ENV DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.921930341Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.979253765Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:46.698776373Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.741287523Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 PYTORCH_VERSION=2.3.0a0+ebedce2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=d0bb811 NVFUSER_VERSION=d0bb811",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+ebedce2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:12.805557831Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.149753441Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.707664416Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.715717867Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:15:20.025684049Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:34.994431848Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.654434893Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:34.580281057Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:36.930086533Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:00.437035426Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:23:33.398433948Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:33.414627422Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:55:55.551690456Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:17.247859682Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:19.241059545Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.710470919Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.824619089Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.831099769Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.838909958Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.888711472Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.031283606Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.266290325Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:58:10.452404385Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:43:55.425357209Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.616277388Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.ref=10200c7981051a74cf2d5e0347eb4b876821d15d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:24.080772658Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:26.715071Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:26.715071Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T17:54:50.764088234Z",
                    "created_by": "RUN |1 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install -e . -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:54:50.764088234Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T17:56:43.981916939Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     git rev-parse HEAD &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     pip install -e \".[multimodal]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:56:57.779364357Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');_=AutoTokenizer.from_pretrained('mistralai/Mixtral-8x7B-v0.1');_=AutoTokenizer.from_pretrained('mistralai/Mistral-7B-v0.1'); tok_sc2=AutoTokenizer.from_pretrained('bigcode/starcoder2-tokenizer')\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:56:57.779364357Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:01.608198456Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=1ec33ae1191ae6644365155f8e8f618145c44cd7 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:01.670897742Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=1ec33ae1191ae6644365155f8e8f618145c44cd7 /bin/sh -c pip install ./megatron-lm &&     cd megatron-lm/megatron/core/datasets &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "ENV PYTHONPATH=:/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:40.224446985Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:40.224446985Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:04:10.96493175Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:04:10.986685421Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:06:28.356445539Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:06:55.315956696Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:00.708730084Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl && pip install ninja tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:19.20714081Z",
                    "created_by": "RUN /bin/sh -c python -c \"import ammo.torch.quantization as atq\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:19.680226637Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:34.312504314Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:34.320466721Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:42.136134697Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:35:18.173598789Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.399711176Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.408302386Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a102d1cac2bdae8a0160ac4365d4f8653e9d6da56c793a665d556ae07fb7f82",
                    "sha256:8b6a65cdf23ce2d8aabd4149d107434c35ccc8fae84b0ed81ccbb604f52bf6d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b68b25110bd7619adeb72b4b7c19e784f5fc2ce271f044a8440e82d030ccbbf",
                    "sha256:be9c4681d16d45d59eb47adb0e8564ac9f9332cc35851b4386fa5e7dffde169d",
                    "sha256:7a206532e7bb72aa7fb5a37b24ec90166eddfc4c37f1ec75a9299f211fb16ff4",
                    "sha256:cfbd2d5242f13d546b3b8fe19a25f274115703171820832656186561ea5eb7e8",
                    "sha256:7472f9ec0a1999ecdd146a26a9f88cfd728d1e4ea63ce652535150ae88fea821",
                    "sha256:ead76ef131ca1559a8d23a428530f5b5b9e2d47577156cab537df643fcabb2a9",
                    "sha256:68f25652b577beb473321d021f202ed669dce366514db9071a334a56e9af1ddf",
                    "sha256:5987c84bf960b8bd8d1e1deeb49f4d752ac6eb4686cdd644fa39815119709024",
                    "sha256:0831a1130f7db67589ea60b6d7132264d81ee0301dd30bdcb95d09aefd674f60",
                    "sha256:3d30658b2b86e7bd8b01b5ce9577fc673c7ab71b156638c45c8c63079dabfe1f",
                    "sha256:dc36db325a7ab0e11892088f1bd0436076d08f9db3c26bed26863400bb8566e5",
                    "sha256:bd5114e27cdad1f00bb10c98a0d6e9f74ec15524c4bfec93f6e69f47eb5b13ba",
                    "sha256:f91480d37583386ca924f8fc685594071d8d235013b065bcd5c3c039c49b6d8c",
                    "sha256:56988245e5e5f2e9532801d03f42dbcf4157b91aa7e37292f71c3d838eb14751",
                    "sha256:fc4ad3cfb6de57cf07ae8cfaaf4eed16948be52fe0b5bc3f4c4cd69f8c6e2ef9",
                    "sha256:93f1050968b5b5b07079fba47bd5194b3a549f45a914f55951b6ba9c1d749c3c",
                    "sha256:60b8d3f1d4b85165f75220019860c2e1896c427c5fc2371f44768034d0cbdf03",
                    "sha256:d4a638d12e84aec4ae40568a0f667a3f764958e0aa893640deda7c585bfb0963",
                    "sha256:06f023a15b1f36a194b0f90e118da527458417a54e8c1bdb60a38e7e0a8573d5",
                    "sha256:cc719adcd38dbb4515847e12f7d0f704b63cda6052ced99e67ed265b1ae06cac",
                    "sha256:47c372ac6c4f4613b79b7bb59db863270fe402a1db7c8786492bbdd207d42e0a",
                    "sha256:cde176d55a83beb951100402776db1aff4873622c4493b153eddc5a8bb23b607",
                    "sha256:5d068ef3bf1ecbacbfce8f49d9b98d5f7f90c6a339f11f7ca238dc41d10f06ac",
                    "sha256:d1ce2b44a8392a6276137d5078ac7ad15175598082a2c2d9ad801463d0d04478",
                    "sha256:9d8900eb91a6c0d66f7a2efd307c617e21b93206596ce8d0aad817cd6f5491e9",
                    "sha256:d9ebee02a910f565f04bbae98ee6d91626651ad89e0dcf15ced1701abd6d2b2f",
                    "sha256:996967c303c9c422f7c8f5f7ee35e46709f14b8880cadfebefbcd789ceda8a78",
                    "sha256:f86424e78f0d2170c1fe58baa5b7dcafd62d79197cbe5f5adace937aca3139ec",
                    "sha256:db689f5bdd56aef640d383a5a1cbfa053196c538e91e9982ce257b3ff81dc4a1",
                    "sha256:625cbf61ee05045cba77c45b4776fa0caa0e8dbbcb674596f83139d90b086928",
                    "sha256:8768f04ddc6d36e4f47dca8007f4e3a075a7bcb4a177aa826b43ffca5978af9c",
                    "sha256:f754f02e68a58e2c7301813438910abc20e1fcb6c25898a400b534a3a59d177d",
                    "sha256:e2d3146eb46909575bd796b5a04c3d6115b6e95d22d43a58aa40e5da532bf87a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01897edf89c555137aacf1dea2fc2e81c8e60a8cda86fc6376b063da6d84ecf4",
                    "sha256:12ff84e8a639c6be421070ae9fc4adc945572b954dac2ebf12ca7cb5e10cd1cd",
                    "sha256:0bc423f2dad1a533a59c4e3604633517511e7098f35c5a017dfc3d1957ec60e3",
                    "sha256:9efaeaca2e8f96d5af56839f0e5c0a5ee8ec7060b0882814b5c02797fcec3bd4",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:6370df0406b5d02842a8acf23db8d1ba4a06a2c89896fac2f042ff47f00eb71c",
                    "sha256:b451e10fbfb15a52f315313338c81931c9fa64c661ffb473d2bc5369a9e6012f",
                    "sha256:bfdc2257709c5760d5b1f24a98c86ffaaedc40d40589713792f49f771f822dff",
                    "sha256:02d9ae480fe1e8e3c961f29f5778726eff93957885a587da79544dc5c2cba266",
                    "sha256:43fca6cf33f5671f9d2bc8591c3b97cecb2465e9606a69a920a36f2958385d26",
                    "sha256:dd9c6ec46931d2c4da39fe90c69ef51a33511d8b46c3b5aef8aa6df6a776489f",
                    "sha256:f691ea529e57c7fcb84dce3075025ccec54dedbf4c21c92e952f6ffabcbad4bb",
                    "sha256:d3d07bcdd13e4a406b0df92028604b16a009af36508deaf57056310f7078d429",
                    "sha256:68370a658f18ae6534d078032d6ce23fa6174a4271d7ed45f24c0aed046bc324",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc1afd8d534c8cd45b47a2d469b3d6c879d161482e19db36d943549f2b3a1765",
                    "sha256:6aa94497f66e2da05273e65c0361f86d9f0bc9f7dafd66a471265c83a4376077",
                    "sha256:8cb6e79b8d0a504c5d24278118b206cfeac019ebb9de70a927735c3905c30a5a",
                    "sha256:d5d685fe5fb46152822e40720e263eabb71141e798a4d348ac948a1513f429aa",
                    "sha256:8e7ac319f5836cce117c4accada81ce1bc133230c6ae078521c8ad089c2db1c8",
                    "sha256:9052d05213c8e5419e3de8ae691ef383db18b79915f8950b22712a910cea2f56",
                    "sha256:4ff04693d09bdbc60013a8049a6044a06312b581a433ac3eecedf61bd80d860f",
                    "sha256:b1c8181f4f0fe244f6b675ece9665af8bcf349a81b7e0d1b2448e050161f1b70",
                    "sha256:6adb260cfb4ea0d820330f56257451d952b3b2651f907416079ef725c951abd4",
                    "sha256:64afd4914997b6037ede56f3da9f87a0c0707296846a069cdc153e56ba7a0f39",
                    "sha256:0d30a2348afe5d2c2c495f1ae1e188b490d4b8e96c1c2b69140e7a18c155cea6",
                    "sha256:fb6822996e4cb0d73312a7c193eb79ddd6492b32b9160e2dd597dd146f81974e",
                    "sha256:06c22265bf8c75966f01833982fc0d4abdec38f81dd8f0a8abb3f1ef2d113339",
                    "sha256:ffcd77a8ad3c768d54589090d247c517d8d1385cc8296a45d2ee072e5c1f3a9f",
                    "sha256:639c795e5ce4846001ec10758f53825ff29709776cdb81ff98304d57032a757b",
                    "sha256:183a0b4d602eec474896502de25c1b524bed70ea66611f7c97bc366754be5141",
                    "sha256:6a968ddb26f264e76512c8e66ffcc55495b19df5c1d201968a6b06155e88371d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec3e3cc2443f5138a6e3dc735dc2d090648186a02338d756ab798c362ea835ab",
                    "sha256:908ad902f835c22619fbc108773fdd4125558fe7e7e50502ef35ef74ac4e1239",
                    "sha256:d3fdae5cf22a890ca5d78a9990c286f35025b51a01bc322b6d4237188e9938dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9"
                ]
            }
        },
        "24.03": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-04-01T19:22:51.979827196Z",
            "history": [
                {
                    "created": "2024-01-25T17:54:38.781867928Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.800330656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.818543313Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.845052233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:40.801693556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99224b1f237763b3053ca27ea5641f9a801c21154c7ccbff2c099654cc6db942 in / "
                },
                {
                    "created": "2024-01-25T17:54:41.023950033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.704071281Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.188605412Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.stable.20231214+cuda12.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=9.0.0.306 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ENV DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.921930341Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.979253765Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:46.698776373Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.741287523Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 PYTORCH_VERSION=2.3.0a0+ebedce2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=d0bb811 NVFUSER_VERSION=d0bb811",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+ebedce2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:12.805557831Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.149753441Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.707664416Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.715717867Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:15:20.025684049Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:34.994431848Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.654434893Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:34.580281057Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:36.930086533Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:00.437035426Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:23:33.398433948Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:33.414627422Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:55:55.551690456Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:17.247859682Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:19.241059545Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.710470919Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.824619089Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.831099769Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.838909958Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.888711472Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.031283606Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.266290325Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:58:10.452404385Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:43:55.425357209Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.616277388Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.ref=10200c7981051a74cf2d5e0347eb4b876821d15d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T13:56:24.071659016Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:24.080772658Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:26.715071Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T13:56:26.715071Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T17:54:50.764088234Z",
                    "created_by": "RUN |1 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex && \tcd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install -e . -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:54:50.764088234Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T17:56:43.981916939Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     git rev-parse HEAD &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[nlp]\" &&     pip install -e \".[multimodal]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:56:57.779364357Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');_=AutoTokenizer.from_pretrained('mistralai/Mixtral-8x7B-v0.1');_=AutoTokenizer.from_pretrained('mistralai/Mistral-7B-v0.1'); tok_sc2=AutoTokenizer.from_pretrained('bigcode/starcoder2-tokenizer')\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T17:56:57.779364357Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:01.608198456Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=1ec33ae1191ae6644365155f8e8f618145c44cd7 /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&     git submodule init && git submodule update &&     NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:01.670897742Z",
                    "created_by": "COPY megatron-lm megatron-lm # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c NEMO_COMMIT= TE_COMMIT=1ec33ae1191ae6644365155f8e8f618145c44cd7 /bin/sh -c pip install ./megatron-lm &&     cd megatron-lm/megatron/core/datasets &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "ENV PYTHONPATH=:/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:27.560490976Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:02:40.224446985Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-deps -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:02:40.224446985Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Megatron-Launcher.git &&     cd NeMo-Megatron-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Megatron-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:03:31.318305071Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Megatron-Launcher/launcher_scripts::/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T18:04:10.96493175Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:04:10.986685421Z",
                    "created_by": "COPY nemo-data-curator nemo-data-curator # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:06:28.356445539Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e ./nemo-data-curator &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:06:55.315956696Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:00.708730084Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl && pip install ninja tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:19.20714081Z",
                    "created_by": "RUN /bin/sh -c python -c \"import ammo.torch.quantization as atq\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:07:19.680226637Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:34.312504314Z",
                    "created_by": "RUN /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:34.320466721Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:08:42.136134697Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T18:35:18.173598789Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.399711176Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.408302386Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T19:22:51.979827196Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a102d1cac2bdae8a0160ac4365d4f8653e9d6da56c793a665d556ae07fb7f82",
                    "sha256:8b6a65cdf23ce2d8aabd4149d107434c35ccc8fae84b0ed81ccbb604f52bf6d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b68b25110bd7619adeb72b4b7c19e784f5fc2ce271f044a8440e82d030ccbbf",
                    "sha256:be9c4681d16d45d59eb47adb0e8564ac9f9332cc35851b4386fa5e7dffde169d",
                    "sha256:7a206532e7bb72aa7fb5a37b24ec90166eddfc4c37f1ec75a9299f211fb16ff4",
                    "sha256:cfbd2d5242f13d546b3b8fe19a25f274115703171820832656186561ea5eb7e8",
                    "sha256:7472f9ec0a1999ecdd146a26a9f88cfd728d1e4ea63ce652535150ae88fea821",
                    "sha256:ead76ef131ca1559a8d23a428530f5b5b9e2d47577156cab537df643fcabb2a9",
                    "sha256:68f25652b577beb473321d021f202ed669dce366514db9071a334a56e9af1ddf",
                    "sha256:5987c84bf960b8bd8d1e1deeb49f4d752ac6eb4686cdd644fa39815119709024",
                    "sha256:0831a1130f7db67589ea60b6d7132264d81ee0301dd30bdcb95d09aefd674f60",
                    "sha256:3d30658b2b86e7bd8b01b5ce9577fc673c7ab71b156638c45c8c63079dabfe1f",
                    "sha256:dc36db325a7ab0e11892088f1bd0436076d08f9db3c26bed26863400bb8566e5",
                    "sha256:bd5114e27cdad1f00bb10c98a0d6e9f74ec15524c4bfec93f6e69f47eb5b13ba",
                    "sha256:f91480d37583386ca924f8fc685594071d8d235013b065bcd5c3c039c49b6d8c",
                    "sha256:56988245e5e5f2e9532801d03f42dbcf4157b91aa7e37292f71c3d838eb14751",
                    "sha256:fc4ad3cfb6de57cf07ae8cfaaf4eed16948be52fe0b5bc3f4c4cd69f8c6e2ef9",
                    "sha256:93f1050968b5b5b07079fba47bd5194b3a549f45a914f55951b6ba9c1d749c3c",
                    "sha256:60b8d3f1d4b85165f75220019860c2e1896c427c5fc2371f44768034d0cbdf03",
                    "sha256:d4a638d12e84aec4ae40568a0f667a3f764958e0aa893640deda7c585bfb0963",
                    "sha256:06f023a15b1f36a194b0f90e118da527458417a54e8c1bdb60a38e7e0a8573d5",
                    "sha256:cc719adcd38dbb4515847e12f7d0f704b63cda6052ced99e67ed265b1ae06cac",
                    "sha256:47c372ac6c4f4613b79b7bb59db863270fe402a1db7c8786492bbdd207d42e0a",
                    "sha256:cde176d55a83beb951100402776db1aff4873622c4493b153eddc5a8bb23b607",
                    "sha256:5d068ef3bf1ecbacbfce8f49d9b98d5f7f90c6a339f11f7ca238dc41d10f06ac",
                    "sha256:d1ce2b44a8392a6276137d5078ac7ad15175598082a2c2d9ad801463d0d04478",
                    "sha256:9d8900eb91a6c0d66f7a2efd307c617e21b93206596ce8d0aad817cd6f5491e9",
                    "sha256:d9ebee02a910f565f04bbae98ee6d91626651ad89e0dcf15ced1701abd6d2b2f",
                    "sha256:996967c303c9c422f7c8f5f7ee35e46709f14b8880cadfebefbcd789ceda8a78",
                    "sha256:f86424e78f0d2170c1fe58baa5b7dcafd62d79197cbe5f5adace937aca3139ec",
                    "sha256:db689f5bdd56aef640d383a5a1cbfa053196c538e91e9982ce257b3ff81dc4a1",
                    "sha256:625cbf61ee05045cba77c45b4776fa0caa0e8dbbcb674596f83139d90b086928",
                    "sha256:8768f04ddc6d36e4f47dca8007f4e3a075a7bcb4a177aa826b43ffca5978af9c",
                    "sha256:f754f02e68a58e2c7301813438910abc20e1fcb6c25898a400b534a3a59d177d",
                    "sha256:e2d3146eb46909575bd796b5a04c3d6115b6e95d22d43a58aa40e5da532bf87a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01897edf89c555137aacf1dea2fc2e81c8e60a8cda86fc6376b063da6d84ecf4",
                    "sha256:12ff84e8a639c6be421070ae9fc4adc945572b954dac2ebf12ca7cb5e10cd1cd",
                    "sha256:0bc423f2dad1a533a59c4e3604633517511e7098f35c5a017dfc3d1957ec60e3",
                    "sha256:9efaeaca2e8f96d5af56839f0e5c0a5ee8ec7060b0882814b5c02797fcec3bd4",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:6370df0406b5d02842a8acf23db8d1ba4a06a2c89896fac2f042ff47f00eb71c",
                    "sha256:b451e10fbfb15a52f315313338c81931c9fa64c661ffb473d2bc5369a9e6012f",
                    "sha256:bfdc2257709c5760d5b1f24a98c86ffaaedc40d40589713792f49f771f822dff",
                    "sha256:02d9ae480fe1e8e3c961f29f5778726eff93957885a587da79544dc5c2cba266",
                    "sha256:43fca6cf33f5671f9d2bc8591c3b97cecb2465e9606a69a920a36f2958385d26",
                    "sha256:dd9c6ec46931d2c4da39fe90c69ef51a33511d8b46c3b5aef8aa6df6a776489f",
                    "sha256:f691ea529e57c7fcb84dce3075025ccec54dedbf4c21c92e952f6ffabcbad4bb",
                    "sha256:d3d07bcdd13e4a406b0df92028604b16a009af36508deaf57056310f7078d429",
                    "sha256:68370a658f18ae6534d078032d6ce23fa6174a4271d7ed45f24c0aed046bc324",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc1afd8d534c8cd45b47a2d469b3d6c879d161482e19db36d943549f2b3a1765",
                    "sha256:6aa94497f66e2da05273e65c0361f86d9f0bc9f7dafd66a471265c83a4376077",
                    "sha256:8cb6e79b8d0a504c5d24278118b206cfeac019ebb9de70a927735c3905c30a5a",
                    "sha256:d5d685fe5fb46152822e40720e263eabb71141e798a4d348ac948a1513f429aa",
                    "sha256:8e7ac319f5836cce117c4accada81ce1bc133230c6ae078521c8ad089c2db1c8",
                    "sha256:9052d05213c8e5419e3de8ae691ef383db18b79915f8950b22712a910cea2f56",
                    "sha256:4ff04693d09bdbc60013a8049a6044a06312b581a433ac3eecedf61bd80d860f",
                    "sha256:b1c8181f4f0fe244f6b675ece9665af8bcf349a81b7e0d1b2448e050161f1b70",
                    "sha256:6adb260cfb4ea0d820330f56257451d952b3b2651f907416079ef725c951abd4",
                    "sha256:64afd4914997b6037ede56f3da9f87a0c0707296846a069cdc153e56ba7a0f39",
                    "sha256:0d30a2348afe5d2c2c495f1ae1e188b490d4b8e96c1c2b69140e7a18c155cea6",
                    "sha256:fb6822996e4cb0d73312a7c193eb79ddd6492b32b9160e2dd597dd146f81974e",
                    "sha256:06c22265bf8c75966f01833982fc0d4abdec38f81dd8f0a8abb3f1ef2d113339",
                    "sha256:ffcd77a8ad3c768d54589090d247c517d8d1385cc8296a45d2ee072e5c1f3a9f",
                    "sha256:639c795e5ce4846001ec10758f53825ff29709776cdb81ff98304d57032a757b",
                    "sha256:183a0b4d602eec474896502de25c1b524bed70ea66611f7c97bc366754be5141",
                    "sha256:6a968ddb26f264e76512c8e66ffcc55495b19df5c1d201968a6b06155e88371d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec3e3cc2443f5138a6e3dc735dc2d090648186a02338d756ab798c362ea835ab",
                    "sha256:908ad902f835c22619fbc108773fdd4125558fe7e7e50502ef35ef74ac4e1239",
                    "sha256:d3fdae5cf22a890ca5d78a9990c286f35025b51a01bc322b6d4237188e9938dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9"
                ]
            }
        },
        "dev.framework": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Framework",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "PIP_NO_CACHE_DIR=1",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Framework-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Framework-Launcher/launcher_scripts"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                }
            },
            "created": "2024-05-19T10:14:47.362155462Z",
            "history": [
                {
                    "created": "2024-01-25T17:54:38.781867928Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.800330656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.818543313Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.845052233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:40.801693556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99224b1f237763b3053ca27ea5641f9a801c21154c7ccbff2c099654cc6db942 in / "
                },
                {
                    "created": "2024-01-25T17:54:41.023950033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.704071281Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.188605412Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.stable.20231214+cuda12.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=9.0.0.306 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ENV DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.921930341Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.979253765Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:46.698776373Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.741287523Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 PYTORCH_VERSION=2.3.0a0+ebedce2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=d0bb811 NVFUSER_VERSION=d0bb811",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+ebedce2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:12.805557831Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.149753441Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.707664416Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.715717867Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:15:20.025684049Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:34.994431848Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.654434893Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:34.580281057Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:36.930086533Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:00.437035426Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:23:33.398433948Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:33.414627422Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:55:55.551690456Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:17.247859682Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:19.241059545Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.710470919Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.824619089Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.831099769Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.838909958Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.888711472Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.031283606Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.266290325Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:58:10.452404385Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:43:55.425357209Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.616277388Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.ref=10200c7981051a74cf2d5e0347eb4b876821d15d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Framework",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "ENV PIP_NO_CACHE_DIR=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:10:49.86271701Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server         ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:10:49.958561027Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_base.sh install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:01.287785074Z",
                    "created_by": "RUN /bin/sh -c bash ./install_base.sh && rm install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:01.358425442Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_cmake.sh install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:04.28335459Z",
                    "created_by": "RUN /bin/sh -c bash ./install_cmake.sh && rm install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:06.122454119Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_ccache.sh install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "RUN /bin/sh -c bash ./install_ccache.sh && rm install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "ARG TRT_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "ARG CUDA_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "ARG CUDNN_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "ARG NCCL_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:11:06.460014989Z",
                    "created_by": "ARG CUBLAS_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T07:11:06.518438686Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_tensorrt.sh install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:15:07.664964862Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_tensorrt.sh     --TRT_VER=${TRT_VER}     --CUDA_VER=${CUDA_VER}     --CUDNN_VER=${CUDNN_VER}     --NCCL_VER=${NCCL_VER}     --CUBLAS_VER=${CUBLAS_VER} &&     rm install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:15:07.742587823Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_polygraphy.sh install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:15:11.967172389Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_polygraphy.sh && rm install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:15:12.026486922Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_mpi4py.sh install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:16:14.282119536Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_mpi4py.sh && rm install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T07:16:21.697340198Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T08:01:08.051479171Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T08:52:19.808447762Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T09:49:15.564664853Z",
                    "created_by": "RUN |1 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex &&         cd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_APEX_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with Apex commit hash: $HEAD_APEX_COMMIT\" &&     pip install -e . -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T09:49:15.564664853Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T09:55:53.753749Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_TE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with TransformerEngine commit hash: $HEAD_TE_COMMIT\" &&    git submodule init && git submodule update &&    NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T09:55:53.753749Z",
                    "created_by": "ARG MCORE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:03:54.243335003Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e MCORE_COMMIT= /bin/sh -c CI_JOB_TOKEN=$(cat /run/secrets/CI_JOB_TOKEN) &&     git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/ADLR/megatron-lm.git &&     cd megatron-lm &&     git pull &&     if [ ! -z $MCORE_COMMIT ]; then         git fetch origin $MCORE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_MCORE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with megatron-lm commit hash: $HEAD_MCORE_COMMIT\" &&    pip install . &&    rm -rf .git &&    cd megatron/core/datasets &&    make &&    pip install git+https://github.com/fanshiqing/grouped_gemm@v1.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:03:54.243335003Z",
                    "created_by": "ENV PYTHONPATH=:/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:03:58.059339009Z",
                    "created_by": "COPY /src/tensorrt_llm/build/tensorrt_llm*.whl . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:05:10.439123498Z",
                    "created_by": "RUN /bin/sh -c pip install tensorrt_llm*.whl --extra-index-url https://pypi.nvidia.com &&     rm tensorrt_llm*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:05:10.891359845Z",
                    "created_by": "RUN /bin/sh -c ln -sv $(python3 -c 'import site; print(f\"{site.getsitepackages()[0]}/tensorrt_llm/libs\")') lib &&     test -f lib/libnvinfer_plugin_tensorrt_llm.so &&     ln -sv lib/libnvinfer_plugin_tensorrt_llm.so lib/libnvinfer_plugin_tensorrt_llm.so.9 &&     echo \"/app/tensorrt_llm/lib\" > /etc/ld.so.conf.d/tensorrt_llm.conf &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:05:10.891359845Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:05:42.294589275Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     sed -i \"/nemo_toolkit/d\" requirements.txt &&     pip install -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:05:42.294589275Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:06:57.900953105Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Framework-Launcher.git &&     cd NeMo-Framework-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:06:57.900953105Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Framework-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:06:57.900953105Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Framework-Launcher/launcher_scripts::/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:06:57.900953105Z",
                    "created_by": "ARG DATA_CURATOR_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:07:04.748153893Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Curator.git &&     cd NeMo-Curator &&     git pull &&     if [ ! -z $DATA_CURATOR_COMMIT ]; then         git fetch origin $DATA_CURATOR_COMMIT &&         git checkout FETCH_HEAD;     fi &&     sed -i \"/nemo_toolkit/d\" setup.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:11:15.134320244Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e \"./NeMo-Curator[cuda12x]\" &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:11:56.61465144Z",
                    "created_by": "COPY /opt/modelopt/dist /opt/modelopt/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:12:04.540275827Z",
                    "created_by": "RUN /bin/sh -c pip install /opt/modelopt/dist/*.whl &&     pip install --no-deps nvidia-ammo~=0.9.0 --extra-index-url https://pypi.nvidia.com --no-cache-dir # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:12:04.920619391Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:12:04.920619391Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:28.514204448Z",
                    "created_by": "RUN |1 NEMO_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_NEMO_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with NeMo commit hash: $HEAD_NEMO_COMMIT\" &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[all]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:39.505187093Z",
                    "created_by": "RUN |1 NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');tok_sc2=AutoTokenizer.from_pretrained('bigcode/starcoder2-tokenizer'); _=AutoTokenizer.from_pretrained('THUDM/chatglm2-6b',trust_remote_code=True); _=AutoTokenizer.from_pretrained('THUDM/chatglm3-6b',trust_remote_code=True);\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:43.744455601Z",
                    "created_by": "RUN |1 NEMO_COMMIT= /bin/sh -c python -c \"from transformers import AutoTokenizer; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:46.588717047Z",
                    "created_by": "RUN |1 NEMO_COMMIT= /bin/sh -c python -c \"from transformers import CLIPImageProcessor; vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "RUN |1 NEMO_COMMIT= /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-19T10:14:47.362155462Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a102d1cac2bdae8a0160ac4365d4f8653e9d6da56c793a665d556ae07fb7f82",
                    "sha256:8b6a65cdf23ce2d8aabd4149d107434c35ccc8fae84b0ed81ccbb604f52bf6d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b68b25110bd7619adeb72b4b7c19e784f5fc2ce271f044a8440e82d030ccbbf",
                    "sha256:be9c4681d16d45d59eb47adb0e8564ac9f9332cc35851b4386fa5e7dffde169d",
                    "sha256:7a206532e7bb72aa7fb5a37b24ec90166eddfc4c37f1ec75a9299f211fb16ff4",
                    "sha256:cfbd2d5242f13d546b3b8fe19a25f274115703171820832656186561ea5eb7e8",
                    "sha256:7472f9ec0a1999ecdd146a26a9f88cfd728d1e4ea63ce652535150ae88fea821",
                    "sha256:ead76ef131ca1559a8d23a428530f5b5b9e2d47577156cab537df643fcabb2a9",
                    "sha256:68f25652b577beb473321d021f202ed669dce366514db9071a334a56e9af1ddf",
                    "sha256:5987c84bf960b8bd8d1e1deeb49f4d752ac6eb4686cdd644fa39815119709024",
                    "sha256:0831a1130f7db67589ea60b6d7132264d81ee0301dd30bdcb95d09aefd674f60",
                    "sha256:3d30658b2b86e7bd8b01b5ce9577fc673c7ab71b156638c45c8c63079dabfe1f",
                    "sha256:dc36db325a7ab0e11892088f1bd0436076d08f9db3c26bed26863400bb8566e5",
                    "sha256:bd5114e27cdad1f00bb10c98a0d6e9f74ec15524c4bfec93f6e69f47eb5b13ba",
                    "sha256:f91480d37583386ca924f8fc685594071d8d235013b065bcd5c3c039c49b6d8c",
                    "sha256:56988245e5e5f2e9532801d03f42dbcf4157b91aa7e37292f71c3d838eb14751",
                    "sha256:fc4ad3cfb6de57cf07ae8cfaaf4eed16948be52fe0b5bc3f4c4cd69f8c6e2ef9",
                    "sha256:93f1050968b5b5b07079fba47bd5194b3a549f45a914f55951b6ba9c1d749c3c",
                    "sha256:60b8d3f1d4b85165f75220019860c2e1896c427c5fc2371f44768034d0cbdf03",
                    "sha256:d4a638d12e84aec4ae40568a0f667a3f764958e0aa893640deda7c585bfb0963",
                    "sha256:06f023a15b1f36a194b0f90e118da527458417a54e8c1bdb60a38e7e0a8573d5",
                    "sha256:cc719adcd38dbb4515847e12f7d0f704b63cda6052ced99e67ed265b1ae06cac",
                    "sha256:47c372ac6c4f4613b79b7bb59db863270fe402a1db7c8786492bbdd207d42e0a",
                    "sha256:cde176d55a83beb951100402776db1aff4873622c4493b153eddc5a8bb23b607",
                    "sha256:5d068ef3bf1ecbacbfce8f49d9b98d5f7f90c6a339f11f7ca238dc41d10f06ac",
                    "sha256:d1ce2b44a8392a6276137d5078ac7ad15175598082a2c2d9ad801463d0d04478",
                    "sha256:9d8900eb91a6c0d66f7a2efd307c617e21b93206596ce8d0aad817cd6f5491e9",
                    "sha256:d9ebee02a910f565f04bbae98ee6d91626651ad89e0dcf15ced1701abd6d2b2f",
                    "sha256:996967c303c9c422f7c8f5f7ee35e46709f14b8880cadfebefbcd789ceda8a78",
                    "sha256:f86424e78f0d2170c1fe58baa5b7dcafd62d79197cbe5f5adace937aca3139ec",
                    "sha256:db689f5bdd56aef640d383a5a1cbfa053196c538e91e9982ce257b3ff81dc4a1",
                    "sha256:625cbf61ee05045cba77c45b4776fa0caa0e8dbbcb674596f83139d90b086928",
                    "sha256:8768f04ddc6d36e4f47dca8007f4e3a075a7bcb4a177aa826b43ffca5978af9c",
                    "sha256:f754f02e68a58e2c7301813438910abc20e1fcb6c25898a400b534a3a59d177d",
                    "sha256:e2d3146eb46909575bd796b5a04c3d6115b6e95d22d43a58aa40e5da532bf87a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01897edf89c555137aacf1dea2fc2e81c8e60a8cda86fc6376b063da6d84ecf4",
                    "sha256:12ff84e8a639c6be421070ae9fc4adc945572b954dac2ebf12ca7cb5e10cd1cd",
                    "sha256:0bc423f2dad1a533a59c4e3604633517511e7098f35c5a017dfc3d1957ec60e3",
                    "sha256:9efaeaca2e8f96d5af56839f0e5c0a5ee8ec7060b0882814b5c02797fcec3bd4",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:6370df0406b5d02842a8acf23db8d1ba4a06a2c89896fac2f042ff47f00eb71c",
                    "sha256:b451e10fbfb15a52f315313338c81931c9fa64c661ffb473d2bc5369a9e6012f",
                    "sha256:bfdc2257709c5760d5b1f24a98c86ffaaedc40d40589713792f49f771f822dff",
                    "sha256:02d9ae480fe1e8e3c961f29f5778726eff93957885a587da79544dc5c2cba266",
                    "sha256:43fca6cf33f5671f9d2bc8591c3b97cecb2465e9606a69a920a36f2958385d26",
                    "sha256:dd9c6ec46931d2c4da39fe90c69ef51a33511d8b46c3b5aef8aa6df6a776489f",
                    "sha256:f691ea529e57c7fcb84dce3075025ccec54dedbf4c21c92e952f6ffabcbad4bb",
                    "sha256:d3d07bcdd13e4a406b0df92028604b16a009af36508deaf57056310f7078d429",
                    "sha256:e999237184d576721c5a1e599c8f4c1bebbd3c9cae5e57c976e35a0f8c1da1ec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8fdca7d13b4e93c2cc9cb1e7080a2461f77e4bc1450a6164c04fc5e1c2146beb",
                    "sha256:125d9c5f22703260c74040e1448dafc6b9599573613b8f3a943c59ec8d183548",
                    "sha256:277d4cb8f11bb39f1676d7a2091e9f4963156beb4b8408e12eb93f2dcaa74a9b",
                    "sha256:ca0ca4a791b9f54a5db305fd179063fd3ab595f90db298bbfe8b01e4642136e4",
                    "sha256:5cb57a2946ef9dd9dbb4ac28f7db85b0a92bfea597b5fadee4a507a22938df3b",
                    "sha256:bab8a09092923c32958699bc441674d09d8d63fbe78a53cd4fcf4750d46c2d3d",
                    "sha256:2fe9ba47f9bd270bad9f9514b39614270deeb98c6f61b4cc151c0670b82bf99a",
                    "sha256:98a734b5b2e802116ab59acae23e7a19cf515e93228243d93bde9db79f078554",
                    "sha256:be0aeffa76fa2647e8bdf6224153075ab1c1bc7038b570d85d2f76c5edf7217d",
                    "sha256:e5632baf118067659eabed42c978e152d737a7ceae0960b6c3bbbf9d1d50e383",
                    "sha256:c7625de262189fc68cd029dbe353ad645d39062182430088cdbf781c31f7a27f",
                    "sha256:a2c675c7d297b85e65deca8689dfc3e0c329a5c09bb73f42ea6b2dd951e40693",
                    "sha256:9d09b020585027d6077303d1658a89ac7d01ac6a31d54f2a0e319179bb4b202b",
                    "sha256:c7b4b91657dceb2605489063632dc32cf0e5e8035e051ec3e5df4300db14e716",
                    "sha256:29a56f208731fec4d0d377181989cabe656af892de65e37909db21071a0fe78c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cd629f00e52427c21ab6d01055486f7d1ef5be3aca515beefe46255836ff8877",
                    "sha256:8d6f235030ced4c2318c6d936616790cd9d1d08aec58de6ca4eb6474fe2d479c",
                    "sha256:4f42b38ab288d8f43bc45cd77e37a625b91618adf61b256ad06298b885bc18c6",
                    "sha256:e4d23cfea2690aaa1d52924e33f5d741a4725bb81bf0e6d14e156eaa5123fca0",
                    "sha256:df73504aa5c141071d5bcc9ef41cb103f043e5bad791c0eabbc26bbb6e5442ef",
                    "sha256:1d7105ba157e73a9483ea65a3d4bd58df38fa6d7b857570b7e5d9328858e5747",
                    "sha256:3cfdaa53b673114d5c0c7e7c0c394500f92359d3c4119741bbe89c05af2b12f5",
                    "sha256:f860a3f0edf3c599e1ddc9b5e38b3e89fcdb1e61b0e129b8f17c03c419513bec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f87a0ef03068045e36f62b93143543202464ae79842414827f8e615b9d3110c2",
                    "sha256:c04ec81848699b68d15ed50dd9d608baa71267a7f20540ae56e606feca215a0f",
                    "sha256:8e01778d5582870a3b083c62dc2b480561ca519f0ee067af1342f2cb5815c306",
                    "sha256:31d8cf2e1b203b0a254e1f5fb6ac55df5340b6550c324f9fc3441fc9308a9102",
                    "sha256:4f35d91995b136dd2143d3b19ca47c9fde098bcc524d8c23e758f5a2aac5b765",
                    "sha256:23fb2c30c902b2dc5ce281549c36a223c9944e5b6e745e16a522986bf5ee213c",
                    "sha256:b7fb4b625c14f8b14d0a9497fd3c7a6f497071fda58633fe6ee49ac92b6c5fb0",
                    "sha256:5bf37b70ac0df462b6965e6b713532a3344362305bbfc3a3b112f1b3d4618acd",
                    "sha256:8ea35d77596dfb465ac01a19e4479c1ab17b7525cc01809738641336e2309903",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "dev": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=12.3.2.001",
                    "CUDA_DRIVER_VERSION=545.23.08",
                    "CUDA_CACHE_DISABLE=1",
                    "NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "SHELL=/bin/bash",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.19.stable.20231214+cuda12.3",
                    "CUBLAS_VERSION=12.3.4.1",
                    "CUFFT_VERSION=11.0.12.1",
                    "CURAND_VERSION=10.3.4.107",
                    "CUSPARSE_VERSION=12.2.0.103",
                    "CUSOLVER_VERSION=11.5.4.101",
                    "CUTENSOR_VERSION=2.0.0.7",
                    "NPP_VERSION=12.2.3.2",
                    "NVJPEG_VERSION=12.3.0.81",
                    "CUDNN_VERSION=9.0.0.306",
                    "TRT_VERSION=8.6.3.1+cuda12.2.2.009",
                    "TRTOSS_VERSION=23.11",
                    "NSIGHT_SYSTEMS_VERSION=2023.4.1.97",
                    "NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "DALI_VERSION=1.34.0",
                    "DALI_BUILD=12152788",
                    "POLYGRAPHY_VERSION=0.49.4",
                    "TRANSFORMER_ENGINE_VERSION=1.3",
                    "LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/compat/lib.real/",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "GDRCOPY_VERSION=2.3",
                    "HPCX_VERSION=2.16rc4",
                    "MOFED_VERSION=5.4-rdmacore39.0",
                    "OPENUCX_VERSION=1.15.0",
                    "OPENMPI_VERSION=4.1.5rc2",
                    "RDMACORE_VERSION=39.0",
                    "OPAL_PREFIX=/opt/hpcx/ompi",
                    "OMPI_MCA_coll_hcoll_enable=0",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_VERSION=2.3.0a0+ebedce2",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=24.02",
                    "NVFUSER_BUILD_VERSION=d0bb811",
                    "NVFUSER_VERSION=d0bb811",
                    "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "PIP_DEFAULT_TIMEOUT=100",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "UCC_CL_BASIC_TLS=^sharp",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "PYTORCH_HOME=/opt/pytorch/pytorch",
                    "CUDA_HOME=/usr/local/cuda",
                    "TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "COCOAPI_VERSION=2.0+nv0.8.0",
                    "TORCH_CUDNN_V8_API_ENABLED=1",
                    "CUDA_MODULE_LOADING=LAZY",
                    "NVIDIA_BUILD_ID=82611821",
                    "PIP_NO_CACHE_DIR=1",
                    "NVIDIA_BIGNLP_VERSION=",
                    "DEBIAN_FRONTEND=noninteractive",
                    "PYTHONPATH=/opt/NeMo-Framework-Launcher/launcher_scripts::/opt/megatron-lm",
                    "LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Framework-Launcher/launcher_scripts"
                ],
                "Entrypoint": [
                    "/opt/nvidia/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace",
                "Labels": {
                    "com.nvidia.bignlp.version": "",
                    "com.nvidia.build.id": "82611821",
                    "com.nvidia.build.ref": "",
                    "com.nvidia.cublas.version": "12.3.4.1",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "9.0.0.306",
                    "com.nvidia.cufft.version": "11.0.12.1",
                    "com.nvidia.curand.version": "10.3.4.107",
                    "com.nvidia.cusolver.version": "11.5.4.101",
                    "com.nvidia.cusparse.version": "12.2.0.103",
                    "com.nvidia.cutensor.version": "2.0.0.7",
                    "com.nvidia.nccl.version": "2.19.stable.20231214+cuda12.3",
                    "com.nvidia.npp.version": "12.2.3.2",
                    "com.nvidia.nsightcompute.version": "2023.3.1.1",
                    "com.nvidia.nsightsystems.version": "2023.4.1.97",
                    "com.nvidia.nvjpeg.version": "12.3.0.81",
                    "com.nvidia.pytorch.version": "2.3.0a0+ebedce2",
                    "com.nvidia.tensorrt.version": "8.6.3.1+cuda12.2.2.009",
                    "com.nvidia.tensorrtoss.version": "23.11",
                    "com.nvidia.volumes.needed": "nvidia_driver",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "22.04"
                },
                "OnBuild": null
            },
            "created": "2024-05-07T18:02:12.573992112Z",
            "history": [
                {
                    "created": "2024-01-25T17:54:38.781867928Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.800330656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.818543313Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:38.845052233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=22.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-25T17:54:40.801693556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99224b1f237763b3053ca27ea5641f9a801c21154c7ccbff2c099654cc6db942 in / "
                },
                {
                    "created": "2024-01-25T17:54:41.023950033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.704071281Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         libncurses5         libncursesw5         patch         wget         rsync         unzip         jq         gnupg         libtcmalloc-minimal4 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ARG JETPACK_HOST_MOUNTS",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "ENV CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 CUDA_CACHE_DISABLE=1 NVIDIA_REQUIRE_JETPACK_HOST_MOUNTS=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:38.788435254Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c if [ -n \"${JETPACK_HOST_MOUNTS}\" ]; then        echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf     && echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.188605412Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "RUN |3 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= /bin/sh -c cp -vprd /nvidia/. /  &&  patch -p0 < /etc/startup_scripts.patch  &&  rm -f /etc/startup_scripts.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc SHELL=/bin/bash NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUTENSOR_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:24:52.275062798Z",
                    "created_by": "ENV NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "RUN |17 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUTENSOR.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "LABEL com.nvidia.nccl.version=2.19.stable.20231214+cuda12.3 com.nvidia.cublas.version=12.3.4.1 com.nvidia.cufft.version=11.0.12.1 com.nvidia.curand.version=10.3.4.107 com.nvidia.cusparse.version=12.2.0.103 com.nvidia.cusolver.version=11.5.4.101 com.nvidia.cutensor.version=2.0.0.7 com.nvidia.npp.version=12.2.3.2 com.nvidia.nvjpeg.version=12.3.0.81 com.nvidia.cudnn.version=9.0.0.306 com.nvidia.tensorrt.version=8.6.3.1+cuda12.2.2.009 com.nvidia.tensorrtoss.version=23.11 com.nvidia.nsightsystems.version=2023.4.1.97 com.nvidia.nsightcompute.version=2023.3.1.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG POLYGRAPHY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ARG TRANSFORMER_ENGINE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.913862523Z",
                    "created_by": "ENV DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.921930341Z",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "RUN |21 CUDA_VERSION=12.3.2.001 CUDA_DRIVER_VERSION=545.23.08 JETPACK_HOST_MOUNTS= NCCL_VERSION=2.19.stable.20231214+cuda12.3 CUBLAS_VERSION=12.3.4.1 CUFFT_VERSION=11.0.12.1 CURAND_VERSION=10.3.4.107 CUSPARSE_VERSION=12.2.0.103 CUSOLVER_VERSION=11.5.4.101 CUTENSOR_VERSION=2.0.0.7 NPP_VERSION=12.2.3.2 NVJPEG_VERSION=12.3.0.81 CUDNN_VERSION=9.0.0.306 TRT_VERSION=8.6.3.1+cuda12.2.2.009 TRTOSS_VERSION=23.11 NSIGHT_SYSTEMS_VERSION=2023.4.1.97 NSIGHT_COMPUTE_VERSION=2023.3.1.1 DALI_VERSION=1.34.0 DALI_BUILD=12152788 POLYGRAPHY_VERSION=0.49.4 TRANSFORMER_ENGINE_VERSION=1.3 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ARG _LIBPATH_SUFFIX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.967704901Z",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "COPY entrypoint/ /opt/nvidia/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=CUDA",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.974177107Z",
                    "created_by": "ENTRYPOINT [\"/opt/nvidia/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:27:30.979253765Z",
                    "created_by": "COPY NVIDIA_Deep_Learning_Container_License.pdf /workspace/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:46.698776373Z",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnl-3-dev         libnl-route-3-dev         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim         wget  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG GDRCOPY_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG HPCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG RDMACORE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG MOFED_VERSION=5.4-rdmacore39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENUCX_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG OPENMPI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 RDMACORE_VERSION=39.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c cd /nvidia  && ( export DEBIAN_FRONTEND=noninteractive        && apt-get update                            && apt-get install -y --no-install-recommends              libibverbs1                                  libibverbs-dev                               librdmacm1                                   librdmacm-dev                                libibumad3                                   libibumad-dev                                ibverbs-utils                                ibverbs-providers                     && rm -rf /var/lib/apt/lists/*               && rm $(dpkg-query -L                                    libibverbs-dev                               librdmacm-dev                                libibumad-dev                            | grep \"\\(\\.so\\|\\.a\\)$\")          )                                            && ( cd opt/gdrcopy/                              && dpkg -i libgdrapi_*.deb                   )                                         && ( cp -r opt/hpcx /opt/                                         && cp etc/ld.so.conf.d/hpcx.conf /etc/ld.so.conf.d/          && ln -sf /opt/hpcx/ompi /usr/local/mpi                      && ln -sf /opt/hpcx/ucx  /usr/local/ucx                      && sed -i 's/^\\(hwloc_base_binding_policy\\) = core$/\\1 = none/' /opt/hpcx/ompi/etc/openmpi-mca-params.conf         && sed -i 's/^\\(btl = self\\)$/#\\1/'                             /opt/hpcx/ompi/etc/openmpi-mca-params.conf       )                                                         && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OPAL_PREFIX=/opt/hpcx/ompi PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.722234896Z",
                    "created_by": "ENV OMPI_MCA_coll_hcoll_enable=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-09T22:42:54.741287523Z",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "RUN |7 GDRCOPY_VERSION=2.3 HPCX_VERSION=2.16rc4 RDMACORE_VERSION=39.0 MOFED_VERSION=5.4-rdmacore39.0 OPENUCX_VERSION=1.15.0 OPENMPI_VERSION=4.1.5rc2 TARGETARCH=amd64 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installCUTENSOR.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-09T22:47:10.716478185Z",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=PyTorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG NVFUSER_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 PYTORCH_VERSION=2.3.0a0+ebedce2 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=24.02",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV NVFUSER_BUILD_VERSION=d0bb811 NVFUSER_VERSION=d0bb811",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=2.3.0a0+ebedce2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG PYVER=3.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ARG L4T=0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c export PYSFX=`echo \"$PYVER\" | cut -c1-1` &&     export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y --no-install-recommends         python$PYVER-dev         python$PYSFX         python$PYSFX-dev         python$PYSFX-distutils         python-is-python$PYSFX         autoconf         automake         libatlas-base-dev         libgoogle-glog-dev         libbz2-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         libtool         nasm         protobuf-compiler         pkg-config         unzip         sox         libsndfile1         libpng-dev         libhdf5-103         libhdf5-dev         gfortran         rapidjson-dev         ninja-build         libedit-dev         build-essential         patchelf      && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:04.838954091Z",
                    "created_by": "ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:12.805557831Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.149753441Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir pip setuptools==68.2.2 &&     pip install --no-cache-dir cmake # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.707664416Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c curl \"https://gitlab-master.nvidia.com/api/v4/projects/105799/packages/generic/OpenBLAS/0.3.24-$(uname -m)/OpenBLAS-0.3.24-$(uname -m).tar.gz\" --output OpenBLAS.tar.gz &&     tar -xf OpenBLAS.tar.gz -C /usr/local/ &&     rm OpenBLAS.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:17.715717867Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:14:36.580469377Z",
                    "created_by": "ENV PIP_DEFAULT_TIMEOUT=100",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:15:20.025684049Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir         numpy==1.24.4         scipy==1.11.3         \"PyYAML>=5.4.1\"         astunparse         typing_extensions         cffi         spacy         mock         tqdm         librosa==0.10.1         expecttest==0.1.3         hypothesis==5.35.1         xdoctest==1.0.2         pytest         pytest-xdist         pytest-rerunfailures         pytest-shard         pytest-flakefinder         pybind11         Cython         \"regex>=2020.1.8\"         protobuf==4.24.4 &&     if [[ $TARGETARCH = \"amd64\" ]] ; then pip install --no-cache-dir mkl==2021.1.1 mkl-include==2021.1.1 mkl-devel==2021.1.1 ;     find /usr/local/lib -maxdepth 1 -type f -regex '.*\\/lib\\(tbb\\|mkl\\).*\\.so\\($\\|\\.[0-9]*\\.[0-9]*\\)' -exec rm -v {} + ; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:34.994431848Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c git config --global url.\"https://github\".insteadOf git://github &&     pip install --no-cache-dir notebook==6.4.10 jupyterlab==2.3.2 python-hostlist traitlets==5.9.0 &&     pip install --no-cache-dir tensorboard==2.9.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c PATCHED_FILE=$(python -c \"from tensorboard.plugins.core import core_plugin as _; print(_.__file__)\") &&     sed -i 's/^\\( *\"--bind_all\",\\)$/\\1 default=True,/' \"$PATCHED_FILE\" &&     test $(grep '^ *\"--bind_all\", default=True,$' \"$PATCHED_FILE\" | wc -l) -eq 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:15:35.313906003Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.654434893Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --disable-pip-version-check --no-cache-dir git+https://github.com/cliffwoolley/jupyter_tensorboard.git@0.2.0+nv21.03  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install 16.20.2 node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext@1.2.2  && ( cd /usr/local/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/  && jupyter lab clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:17:28.6885127Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c OPENCV_VERSION=4.7.0 &&     cd / &&     wget -q -O - https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} &&     cmake -GNinja -Bbuild -H.           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DPYTHON3_PACKAGES_PATH=\"/usr/local/lib/python${PYVER}/dist-packages\"           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF -DWITH_PROTOBUF=OFF &&     cmake --build build --target install &&     cd modules/python/package &&     pip install --no-cache-dir --disable-pip-version-check -v . &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV UCC_CL_BASIC_TLS=^sharp",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.2 7.5 8.0 8.6 8.7 9.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV PYTORCH_HOME=/opt/pytorch/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV CUDA_HOME=/usr/local/cuda",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:06.331324697Z",
                    "created_by": "ENV USE_EXPERIMENTAL_CUDNN_V8_API=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:20:34.580281057Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c mkdir -p /tmp/pip/     && cp /opt/transfer/torch*.whl /tmp/pip/.     && pip install /tmp/pip/torch*.whl     && patchelf --set-rpath '/usr/local/lib' /usr/local/lib/python3.10/dist-packages/torch/lib/libtorch_global_deps.so # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:20:36.930086533Z",
                    "created_by": "RUN |6 NVIDIA_PYTORCH_VERSION=24.02 PYTORCH_BUILD_VERSION=2.3.0a0+ebedce2 NVFUSER_BUILD_VERSION=d0bb811 TARGETARCH=amd64 PYVER=3.10 L4T=0 /bin/sh -c pip install --no-cache-dir -v -r /opt/pytorch/pytorch/requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:00.437035426Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir /tmp/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "RUN /bin/sh -c if [ -z \"${DALI_VERSION}\" ] ; then   echo \"Not Installing DALI for L4T Build.\" ; else   export DALI_PKG_SUFFIX=\"cuda${CUDA_VERSION%%.*}0\"   && pip install --disable-pip-version-check --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-dali${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali-${DALI_PKG_SUFFIX}==${DALI_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:09.971515336Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.8.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:23:33.398433948Z",
                    "created_by": "RUN /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --disable-pip-version-check --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:23:33.414627422Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:55:55.551690456Z",
                    "created_by": "RUN /bin/sh -c ( cd vision && CFLAGS=\"-g0\" FORCE_CUDA=1 NVCC_APPEND_FLAGS=\"--threads 8\" pip install --no-cache-dir --no-build-isolation --disable-pip-version-check . )  && ( cd vision && cmake -Bbuild -H. -GNinja -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` && cmake --build build --target install && rm -rf build )  && ( cd fuser && pip install -r requirements.txt &&  python setup.py -version-tag=a0+${NVFUSER_VERSION} install && python setup.py clean)  && ( cd apex && CFLAGS=\"-g0\" NVCC_APPEND_FLAGS=\"--threads 8\" pip install -v --no-build-isolation --no-cache-dir --disable-pip-version-check --config-settings \"--build-option=--cpp_ext --cuda_ext --bnp --xentropy --deprecated_fused_adam --deprecated_fused_lamb --fast_multihead_attn --distributed_lamb --fast_layer_norm --transducer --distributed_adam --fmha --fast_bottleneck --nccl_p2p --peer_memory --permutation_search --focal_loss --fused_conv_bias_relu --index_mul_2d --cudnn_gbn --group_norm\" . )  && ( cd data && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && rm -rf build )  && ( cd text && export TORCHDATA_VERSION=\"$(python -c 'import torchdata; print(torchdata.__version__)')\" && pip install --no-build-isolation --no-cache-dir --disable-pip-version-check --no-deps -v . && unset TORCHDATA_VERSION )  && ( cd pytorch/third_party/onnx && pip uninstall typing -y && CMAKE_ARGS=\"-DONNX_USE_PROTOBUF_SHARED_LIBS=ON\" pip install --no-build-isolation --no-cache-dir --disable-pip-version-check . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:17.247859682Z",
                    "created_by": "RUN /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/9.5.0  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && patch -p1 < /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && patch -p1 < /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && rm /opt/pytorch/pil_10.0.0_CVE-2023-44271_for_pillow_simd_9.5.0.patch  && rm /opt/pytorch/pil_CVE-2023-50447_for_pillow_sim_9.5.0.patch  && if [[ $TARGETARCH = \"amd64\" ]] ; then CC=\"cc -mavx\" pip install --no-cache-dir --disable-pip-version-check  . ; fi  && if [[ $TARGETARCH = \"arm64\" ]] ; then pip install --no-cache-dir --disable-pip-version-check  . ; fi  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:56:19.241059545Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir --disable-pip-version-check tabulate # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.710470919Z",
                    "created_by": "RUN /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then     echo \"Not installing rapids for L4T build.\" ; else     find /rapids  -name \"*-Linux.tar.gz\" -exec     tar -C /usr --exclude=\"*.a\" --exclude=\"bin/xgboost\" --strip-components=1 -xvf {} \\;  && find /rapids -name \"*.whl\"     ! -name \"Pillow-*\"     ! -name \"certifi-*\"     ! -name \"protobuf-*\" -exec     pip install --no-cache-dir {} +  && pip install --no-cache-dir networkx==2.6.3  && rm $(pip show xgboost | grep Location | awk '{print $2}')/xgboost/lib/libxgboost.so; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.824619089Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.831099769Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.838909958Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:14.888711472Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.031283606Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:15.266290325Z",
                    "created_by": "RUN /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "RUN /bin/sh -c set -x  && URL=$(VERIFY=1 /nvidia/build-scripts/installTRT.sh | sed -n \"s/^.*\\(http.*\\)tar.*$/\\1/p\")tar  && FILE=$(wget -O - $URL | sed -n 's/^.*href=\"\\(TensorRT[^\"]*\\)\".*$/\\1/p' | egrep -v \"internal|safety\")  && wget $URL/$FILE -O - | tar -xz  && PY=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')  && pip install TensorRT-*/python/tensorrt-*-cp$PY*.whl  && pip install TensorRT-*/graphsurgeon/graphsurgeon-*.whl  && pip install TensorRT-*/uff/uff-*.whl  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -r TensorRT-*  && UFF_PATH=$(pip show uff | sed -n 's/Location: \\(.*\\)$/\\1/p')/uff  && sed -i 's/from tensorflow import GraphDef/from tensorflow.python import GraphDef/'     $UFF_PATH/converters/tensorflow/conversion_helpers.py  && chmod +x ${UFF_PATH}/bin/convert_to_uff.py  && ln -sf ${UFF_PATH}/bin/convert_to_uff.py /usr/local/bin/convert-to-uff # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:57:54.050837343Z",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T01:58:10.452404385Z",
                    "created_by": "RUN /bin/sh -c pip --version && python -c 'import sys; print(sys.platform)'     && pip install --no-cache-dir nvidia-pyindex     && if [ \"${L4T}\" = \"1\" ]; then pip install polygraphy; else       pip install --extra-index-url https://urm.nvidia.com/artifactory/api/pypi/sw-tensorrt-pypi/simple --no-cache-dir polygraphy==${POLYGRAPHY_VERSION}; fi     && pip install --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl --no-cache-dir pytorch-quantization==2.1.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "COPY torch_tensorrt/ /opt/pytorch/torch_tensorrt/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T01:58:11.44970353Z",
                    "created_by": "ARG PYVER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c pip install --no-cache-dir /opt/pytorch/torch_tensorrt/dist/*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:01:41.851458469Z",
                    "created_by": "ENV PATH=/usr/local/lib/python3.10/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:43:55.425357209Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c env MAX_JOBS=4 pip install flash-attn==2.4.2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c if [ \"${L4T}\" = \"1\" ]; then echo \"Not installing Transformer Engine in iGPU container until Version variable is set\"; else     pip install --no-cache-dir --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@release_v${TRANSFORMER_ENGINE_VERSION}; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV TORCH_CUDNN_V8_API_ENABLED=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.444245991Z",
                    "created_by": "ENV CUDA_MODULE_LOADING=LAZY",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.616277388Z",
                    "created_by": "RUN |1 PYVER=3.10 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "COPY entrypoint.d/ /opt/nvidia/entrypoint.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-10T02:48:50.623674648Z",
                    "created_by": "LABEL com.nvidia.build.ref=10200c7981051a74cf2d5e0347eb4b876821d15d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "ENV NVIDIA_PRODUCT_NAME=NeMo Megatron",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "ENV PIP_NO_CACHE_DIR=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "ARG NVIDIA_BIGNLP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "ENV NVIDIA_BIGNLP_VERSION=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "LABEL com.nvidia.bignlp.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:44.606396104Z",
                    "created_by": "RUN |1 NVIDIA_BIGNLP_VERSION= /bin/sh -c apt-get update && apt-get install -y --no-install-recommends         libsndfile1         sox         swig         libb64-dev         redis-server         redis-tools         openssh-server &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:44.616838072Z",
                    "created_by": "WORKDIR /opt",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:44.624565651Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_base.sh install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:55.099269618Z",
                    "created_by": "RUN /bin/sh -c bash ./install_base.sh && rm install_base.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:55.108678613Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_cmake.sh install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:58.131868348Z",
                    "created_by": "RUN /bin/sh -c bash ./install_cmake.sh && rm install_cmake.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:58.24183406Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_ccache.sh install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "RUN /bin/sh -c bash ./install_ccache.sh && rm install_ccache.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "ARG TRT_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "ARG CUDA_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "ARG CUDNN_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "ARG NCCL_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:58.63361348Z",
                    "created_by": "ARG CUBLAS_VER",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T15:29:58.644823926Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_tensorrt.sh install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:33:28.684951244Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_tensorrt.sh     --TRT_VER=${TRT_VER}     --CUDA_VER=${CUDA_VER}     --CUDNN_VER=${CUDNN_VER}     --NCCL_VER=${NCCL_VER}     --CUBLAS_VER=${CUBLAS_VER} &&     rm install_tensorrt.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:33:28.694324203Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_polygraphy.sh install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:33:32.404351209Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_polygraphy.sh && rm install_polygraphy.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:33:32.445043046Z",
                    "created_by": "COPY llm_inference/tekit_backend/tensorrt_llm/docker/common/install_mpi4py.sh install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:34:22.287636401Z",
                    "created_by": "RUN |5 TRT_VER= CUDA_VER= CUDNN_VER= NCCL_VER= CUBLAS_VER= /bin/sh -c bash ./install_mpi4py.sh && rm install_mpi4py.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T15:34:27.880875766Z",
                    "created_by": "RUN /bin/sh -c pip install --no-cache-dir     git+https://github.com/NVlabs/nvdiffrast.git@c5caf7bdb8a2448acc491a9faa47753972edd380 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:06:10.080380357Z",
                    "created_by": "RUN /bin/sh -c cd /tmp                                                                                                  &&     git clone https://github.com/ashawkey/stable-dreamfusion.git                                             &&     cd stable-dreamfusion                                                                                    &&     git checkout 5550b91862a3af7842bb04875b7f1211e5095a63                                                    &&     find . -type f -name 'setup.py' -exec sed -i 's/c++14/c++17/g' {} +                                      &&     pip install --no-cache-dir ./raymarching                                                                 &&     pip install --no-cache-dir ./shencoder                                                                   &&     pip install --no-cache-dir ./freqencoder                                                                 &&     TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 7.5 8.0 8.6 9.0+PTX\" pip install --no-cache-dir ./gridencoder          &&     cd /opt                                                                                                  &&     rm -rf /tmp/stable-dreamfusion # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:53:25.535971851Z",
                    "created_by": "RUN /bin/sh -c TCNN_CUDA_ARCHITECTURES=\"52,60,61,70,75,80,86,89,90\" pip install --no-cache-dir    git+https://github.com/NVlabs/tiny-cuda-nn@6f018a9cd1b369bcb247e1d539968db8e48b2b3f#subdirectory=bindings/torch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:53:28.39131993Z",
                    "created_by": "RUN /bin/sh -c pip install packaging # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:53:28.39131993Z",
                    "created_by": "ARG APEX_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:39:00.147921203Z",
                    "created_by": "RUN |1 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c /bin/sh -c pip uninstall -y apex &&     git clone https://github.com/NVIDIA/apex &&         cd apex &&     if [ ! -z $APEX_COMMIT ]; then         git fetch origin $APEX_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_APEX_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with Apex commit hash: $HEAD_APEX_COMMIT\" &&     pip install -e . -v --no-build-isolation --disable-pip-version-check --no-cache-dir --config-settings \"--build-option=--cpp_ext --cuda_ext --fast_layer_norm --distributed_adam --deprecated_fused_adam --group_norm\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:39:00.147921203Z",
                    "created_by": "ARG TE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:43:57.527424137Z",
                    "created_by": "RUN |2 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e /bin/sh -c git clone https://github.com/NVIDIA/TransformerEngine.git &&     cd TransformerEngine &&     if [ ! -z $TE_COMMIT ]; then         git fetch origin $TE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_TE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with TransformerEngine commit hash: $HEAD_TE_COMMIT\" &&    git submodule init && git submodule update &&    NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=/usr/local/mpi pip install . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:43:57.527424137Z",
                    "created_by": "ARG MCORE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:49:10.858458762Z",
                    "created_by": "RUN |3 APEX_COMMIT=810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c TE_COMMIT=bfe21c3d68b0a9951e5716fb520045db53419c5e MCORE_COMMIT=2297178a452cd3935e076bcb182d862e525b3e2f /bin/sh -c CI_JOB_TOKEN=$(cat /run/secrets/CI_JOB_TOKEN) &&     git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/ADLR/megatron-lm.git &&     cd megatron-lm &&     git pull &&     if [ ! -z $MCORE_COMMIT ]; then         git fetch origin $MCORE_COMMIT &&         git checkout FETCH_HEAD;    fi &&    HEAD_MCORE_COMMIT=$(git rev-parse HEAD) &&    echo \"Container built with megatron-lm commit hash: $HEAD_MCORE_COMMIT\" &&    pip install . &&    cd megatron/core/datasets &&    make &&    pip install git+https://github.com/fanshiqing/grouped_gemm@v1.0 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:49:10.858458762Z",
                    "created_by": "ENV PYTHONPATH=:/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:49:10.858458762Z",
                    "created_by": "ENV LD_LIBRARY_PATH=/usr/local/lib/python3.10/dist-packages/torch/lib:/usr/local/lib/python3.10/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/compat/lib.real/",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:49:12.367134224Z",
                    "created_by": "COPY /src/tensorrt_llm/build/tensorrt_llm*.whl . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:50:06.345937224Z",
                    "created_by": "RUN /bin/sh -c pip install tensorrt_llm*.whl --extra-index-url https://pypi.nvidia.com &&     rm tensorrt_llm*.whl # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:50:06.829414386Z",
                    "created_by": "RUN /bin/sh -c ln -sv $(python3 -c 'import site; print(f\"{site.getsitepackages()[0]}/tensorrt_llm/libs\")') lib &&     test -f lib/libnvinfer_plugin_tensorrt_llm.so &&     ln -sv lib/libnvinfer_plugin_tensorrt_llm.so lib/libnvinfer_plugin_tensorrt_llm.so.9 &&     echo \"/app/tensorrt_llm/lib\" > /etc/ld.so.conf.d/tensorrt_llm.conf &&     ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:50:06.829414386Z",
                    "created_by": "ARG ALIGNER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:50:28.082092824Z",
                    "created_by": "RUN |1 ALIGNER_COMMIT=dev /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Aligner.git &&     cd NeMo-Aligner &&     git pull &&     if [ ! -z $ALIGNER_COMMIT ]; then         git fetch origin $ALIGNER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     sed -i \"/nemo_toolkit/d\" requirements.txt &&     pip install -e . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:50:28.082092824Z",
                    "created_by": "ARG LAUNCHER_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:51:33.91631709Z",
                    "created_by": "RUN |2 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Framework-Launcher.git &&     cd NeMo-Framework-Launcher &&     git pull &&     if [ ! -z $LAUNCHER_COMMIT ]; then         git fetch origin $LAUNCHER_COMMIT &&         git checkout FETCH_HEAD;     fi &&     pip install --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:51:33.91631709Z",
                    "created_by": "ENV LAUNCHER_SCRIPTS_PATH=/opt/NeMo-Framework-Launcher/launcher_scripts",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:51:33.91631709Z",
                    "created_by": "ENV PYTHONPATH=/opt/NeMo-Framework-Launcher/launcher_scripts::/opt/megatron-lm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:51:33.91631709Z",
                    "created_by": "ARG DATA_CURATOR_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T17:51:38.659405848Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c pip install mpi4py --no-build-isolation  # this line is temp solution to current mpi4py install issue: remove later # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:51:40.81023751Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c git clone https://github.com/NVIDIA/NeMo-Curator.git &&     cd NeMo-Curator &&     git pull &&     if [ ! -z $DATA_CURATOR_COMMIT ]; then         git fetch origin $DATA_CURATOR_COMMIT &&         git checkout FETCH_HEAD;     fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:00.237467772Z",
                    "created_by": "RUN |3 ALIGNER_COMMIT=dev LAUNCHER_COMMIT= DATA_CURATOR_COMMIT= /bin/sh -c pip install --extra-index-url=https://pypi.nvidia.com -e \"./NeMo-Curator[cuda12x]\" &&     pip install protobuf==4.24.4  # extra-index-url pypi could cause dependencies conflicts (later on) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:31.626059304Z",
                    "created_by": "COPY /opt/ammo/dist /opt/ammo/dist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:37.850294184Z",
                    "created_by": "RUN /bin/sh -c pip install --no-deps /opt/ammo/dist/*.whl && pip install ninja tqdm scipy # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:54.923180332Z",
                    "created_by": "RUN /bin/sh -c python -c \"import ammo.torch.quantization as atq\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:55.297187684Z",
                    "created_by": "RUN /bin/sh -c echo \"    UserKnownHostsFile /dev/null\" >> /etc/ssh/ssh_config &&     sed -i 's/#\\(StrictModes \\).*/\\1no/g' /etc/ssh/sshd_config &&     sed -i 's/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/' /etc/ssh/ssh_config &&     mkdir -p /var/run/sshd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T17:58:55.297187684Z",
                    "created_by": "ARG NEMO_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T18:00:44.797275942Z",
                    "created_by": "RUN |1 NEMO_COMMIT=6843d865438b31ed336549d0bfb291174edbcd78 /bin/sh -c git clone https://github.com/NVIDIA/NeMo.git &&     cd NeMo &&     git pull &&     if [ ! -z $NEMO_COMMIT ]; then         git fetch origin $NEMO_COMMIT &&         git checkout FETCH_HEAD;     fi &&     HEAD_NEMO_COMMIT=$(git rev-parse HEAD) &&     echo \"Container built with NeMo commit hash: $HEAD_NEMO_COMMIT\" &&     pip uninstall -y nemo_toolkit sacrebleu &&     pip install -e \".[all]\" &&     cd nemo/collections/nlp/data/language_modeling/megatron &&     make # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T18:00:59.064244426Z",
                    "created_by": "RUN |1 NEMO_COMMIT=6843d865438b31ed336549d0bfb291174edbcd78 /bin/sh -c python -c \"from transformers import AutoTokenizer; tok_gpt=AutoTokenizer.from_pretrained('gpt2'); tok_bert=AutoTokenizer.from_pretrained('bert-base-cased'); tok_large_bert=AutoTokenizer.from_pretrained('bert-large-cased'); tok_large_uncased_bert=AutoTokenizer.from_pretrained('bert-large-uncased');tok_sc2=AutoTokenizer.from_pretrained('bigcode/starcoder2-tokenizer'); _=AutoTokenizer.from_pretrained('THUDM/chatglm2-6b',trust_remote_code=True); _=AutoTokenizer.from_pretrained('THUDM/chatglm3-6b',trust_remote_code=True);\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T18:02:11.974779168Z",
                    "created_by": "RUN |1 NEMO_COMMIT=6843d865438b31ed336549d0bfb291174edbcd78 /bin/sh -c python -c \"from transformers import AutoModel, AutoTokenizer; from transformers import CLIPImageProcessor; vit_l_tokenizer=AutoTokenizer.from_pretrained('openai/clip-vit-large-patch14'); vit_l=AutoModel.from_pretrained('openai/clip-vit-large-patch14'); vit_l_336=AutoModel.from_pretrained('openai/clip-vit-large-patch14-336'); vit_p=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14'); vit_p_336=CLIPImageProcessor.from_pretrained('openai/clip-vit-large-patch14-336');\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T18:02:11.986185647Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "RUN |1 NEMO_COMMIT=6843d865438b31ed336549d0bfb291174edbcd78 /bin/sh -c chmod -R a+w /workspace # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "LABEL com.nvidia.build.id=82611821",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T18:02:12.573992112Z",
                    "created_by": "LABEL com.nvidia.build.ref=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a102d1cac2bdae8a0160ac4365d4f8653e9d6da56c793a665d556ae07fb7f82",
                    "sha256:8b6a65cdf23ce2d8aabd4149d107434c35ccc8fae84b0ed81ccbb604f52bf6d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b68b25110bd7619adeb72b4b7c19e784f5fc2ce271f044a8440e82d030ccbbf",
                    "sha256:be9c4681d16d45d59eb47adb0e8564ac9f9332cc35851b4386fa5e7dffde169d",
                    "sha256:7a206532e7bb72aa7fb5a37b24ec90166eddfc4c37f1ec75a9299f211fb16ff4",
                    "sha256:cfbd2d5242f13d546b3b8fe19a25f274115703171820832656186561ea5eb7e8",
                    "sha256:7472f9ec0a1999ecdd146a26a9f88cfd728d1e4ea63ce652535150ae88fea821",
                    "sha256:ead76ef131ca1559a8d23a428530f5b5b9e2d47577156cab537df643fcabb2a9",
                    "sha256:68f25652b577beb473321d021f202ed669dce366514db9071a334a56e9af1ddf",
                    "sha256:5987c84bf960b8bd8d1e1deeb49f4d752ac6eb4686cdd644fa39815119709024",
                    "sha256:0831a1130f7db67589ea60b6d7132264d81ee0301dd30bdcb95d09aefd674f60",
                    "sha256:3d30658b2b86e7bd8b01b5ce9577fc673c7ab71b156638c45c8c63079dabfe1f",
                    "sha256:dc36db325a7ab0e11892088f1bd0436076d08f9db3c26bed26863400bb8566e5",
                    "sha256:bd5114e27cdad1f00bb10c98a0d6e9f74ec15524c4bfec93f6e69f47eb5b13ba",
                    "sha256:f91480d37583386ca924f8fc685594071d8d235013b065bcd5c3c039c49b6d8c",
                    "sha256:56988245e5e5f2e9532801d03f42dbcf4157b91aa7e37292f71c3d838eb14751",
                    "sha256:fc4ad3cfb6de57cf07ae8cfaaf4eed16948be52fe0b5bc3f4c4cd69f8c6e2ef9",
                    "sha256:93f1050968b5b5b07079fba47bd5194b3a549f45a914f55951b6ba9c1d749c3c",
                    "sha256:60b8d3f1d4b85165f75220019860c2e1896c427c5fc2371f44768034d0cbdf03",
                    "sha256:d4a638d12e84aec4ae40568a0f667a3f764958e0aa893640deda7c585bfb0963",
                    "sha256:06f023a15b1f36a194b0f90e118da527458417a54e8c1bdb60a38e7e0a8573d5",
                    "sha256:cc719adcd38dbb4515847e12f7d0f704b63cda6052ced99e67ed265b1ae06cac",
                    "sha256:47c372ac6c4f4613b79b7bb59db863270fe402a1db7c8786492bbdd207d42e0a",
                    "sha256:cde176d55a83beb951100402776db1aff4873622c4493b153eddc5a8bb23b607",
                    "sha256:5d068ef3bf1ecbacbfce8f49d9b98d5f7f90c6a339f11f7ca238dc41d10f06ac",
                    "sha256:d1ce2b44a8392a6276137d5078ac7ad15175598082a2c2d9ad801463d0d04478",
                    "sha256:9d8900eb91a6c0d66f7a2efd307c617e21b93206596ce8d0aad817cd6f5491e9",
                    "sha256:d9ebee02a910f565f04bbae98ee6d91626651ad89e0dcf15ced1701abd6d2b2f",
                    "sha256:996967c303c9c422f7c8f5f7ee35e46709f14b8880cadfebefbcd789ceda8a78",
                    "sha256:f86424e78f0d2170c1fe58baa5b7dcafd62d79197cbe5f5adace937aca3139ec",
                    "sha256:db689f5bdd56aef640d383a5a1cbfa053196c538e91e9982ce257b3ff81dc4a1",
                    "sha256:625cbf61ee05045cba77c45b4776fa0caa0e8dbbcb674596f83139d90b086928",
                    "sha256:8768f04ddc6d36e4f47dca8007f4e3a075a7bcb4a177aa826b43ffca5978af9c",
                    "sha256:f754f02e68a58e2c7301813438910abc20e1fcb6c25898a400b534a3a59d177d",
                    "sha256:e2d3146eb46909575bd796b5a04c3d6115b6e95d22d43a58aa40e5da532bf87a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01897edf89c555137aacf1dea2fc2e81c8e60a8cda86fc6376b063da6d84ecf4",
                    "sha256:12ff84e8a639c6be421070ae9fc4adc945572b954dac2ebf12ca7cb5e10cd1cd",
                    "sha256:0bc423f2dad1a533a59c4e3604633517511e7098f35c5a017dfc3d1957ec60e3",
                    "sha256:9efaeaca2e8f96d5af56839f0e5c0a5ee8ec7060b0882814b5c02797fcec3bd4",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9",
                    "sha256:6370df0406b5d02842a8acf23db8d1ba4a06a2c89896fac2f042ff47f00eb71c",
                    "sha256:b451e10fbfb15a52f315313338c81931c9fa64c661ffb473d2bc5369a9e6012f",
                    "sha256:bfdc2257709c5760d5b1f24a98c86ffaaedc40d40589713792f49f771f822dff",
                    "sha256:02d9ae480fe1e8e3c961f29f5778726eff93957885a587da79544dc5c2cba266",
                    "sha256:43fca6cf33f5671f9d2bc8591c3b97cecb2465e9606a69a920a36f2958385d26",
                    "sha256:dd9c6ec46931d2c4da39fe90c69ef51a33511d8b46c3b5aef8aa6df6a776489f",
                    "sha256:f691ea529e57c7fcb84dce3075025ccec54dedbf4c21c92e952f6ffabcbad4bb",
                    "sha256:d3d07bcdd13e4a406b0df92028604b16a009af36508deaf57056310f7078d429",
                    "sha256:a0a4ea207082d18fe49a8c02a53e68e2ea29611b3d3910d5159e9449f2d5ca90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c80bc72c68d2028a248d3a3b6dbe1b306c3b7d58f3be2ac06d6556728ac2a1cf",
                    "sha256:9e3b45b99ca0a068efe9d0111aa7e3b9f63e2e207734fec1c433f7608ffe4a4b",
                    "sha256:287bb7bdf1ac74b93d2f2ddbb26f407ed254343e97512868a7fe74a9fa998b8f",
                    "sha256:ae8d1ab080b880c936dfad909ec73008704e0c17b660b33c5275cc1dd43e6144",
                    "sha256:44f00f7f57a2748cb3c001b55339eedafc67a72023351bf86efb709892e5d268",
                    "sha256:dbea615d13c8bbc16197e2dc4d922d3e1f5a3ff02ff5194e4d1f94083e35436c",
                    "sha256:e58ab5378ae568703202114ea906c1d0ecd6d6c39ee7d35d6d3bf0a0d5a413e4",
                    "sha256:1e77adeacd982a7e32319c89cf94e1c256c99b9355e3c286aabef35763524126",
                    "sha256:48bd7d6310fe495ab88e882406e7dcdb3ec7b695cb24a83fc567ba8e1a0581fa",
                    "sha256:93ea99201a4d82171c61a819b7a114befac4e36889c8a7df35eef9f76303ea28",
                    "sha256:a248acc1e0b3119c834757bdb2357ed23b01bda6857c1099efa4578a2bb17783",
                    "sha256:ba015da9bbba82cb4b89a8a211734f224df2f2c9d6bc9664755d3a3c3ee97358",
                    "sha256:4cb54203f929c2d3854e4a575f66372b1edd5691fdab67725392593346472d20",
                    "sha256:6723407fe4ad537ac6e692bf3914861f61f912e332d58130f411e2bdd2ab40ba",
                    "sha256:4eeedcad0c66e4011eb84c90ae5967af7fddb21ae097428e75cb098777206f18",
                    "sha256:b5330917b1a90177cda2af8aa29e2ff288ffbe17c99872abfe0d455c19d91334",
                    "sha256:aeb3273dee008bf3b4488ec04fa675dfba2752b7f0dd5d57edb4475182580c36",
                    "sha256:94bd6bd2709aabde9ea40279d4228479d9f538dc2eebf9f5f359e4f1d70b3baf",
                    "sha256:d954a89c9792129da6ff5d4199a4cee9a40ff9a5e109285bf0ff09beff76a373",
                    "sha256:27b79dcb3014daa2115b00079b9c9c12380df75f27fb8cb15c0a5920e20a1034",
                    "sha256:670e33f491471c168d5641b01dd041afefef49fb0c07a8d26736d90993aa3ecd",
                    "sha256:7d8ad2e8fc602cfb6055c954a1fd618268e5dd2786bc831fec4bc546b0e03bec",
                    "sha256:b28991b4bbd38970e8000e6abc4a0434545e2498ed3d475cb05c0727adfcca1d",
                    "sha256:00e6f73662bcd284a5c745e48dfb6c8d25f53c7e6dc505156abc636cab631792",
                    "sha256:bd98f9262841540bf4181c9b82fdbfbc6836ed41199db96cf2ba515da60ccfac",
                    "sha256:a6d7f92eab25ab1073673142aa1f5e1f52ea0fe135c2fe83df5b48a4a18d88e7",
                    "sha256:8f3fb6967be255e1531d913df882a49e9b3fea22487db3d3cb8c6237ea1d4da3",
                    "sha256:9b5372dc1bde0f7670be4cd92395064351220bfcf1d22edbb37d88f61b3bcce8",
                    "sha256:39652179fb4219c25b6ac61318291279e385d9cbee4e1aef080756dfcd0f97f4",
                    "sha256:7d382daa8c5b08f594a0d710748cd8a69f6211051482277575b6637732f5be9c",
                    "sha256:f0b79c9fe35829e7483e1860e6ae8bb56c8aff1db1c08b5a6136c41dbecddabb",
                    "sha256:11debce7f899f6b4f2a917200b4e93b8e71e2669689e629b6782ffd207e4d999",
                    "sha256:8f32873afc97ee66ed8570d2672e7e3608b1ca30f1e177c1386b4a686d474d3a",
                    "sha256:dc1cf1bb37ada9a8c98858f182b1559c13d3f8c35aa87e1738007fc5594ace21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:252d11d607fe4462e35e9262a41269dc65458c250e82ff9c347057791bb6eee9"
                ]
            }
        },
        "v0.10": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "CUDA_VERSION=10.2.89",
                    "CUDA_DRIVER_VERSION=440.33.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.5.6",
                    "CUBLAS_VERSION=10.2.2.89",
                    "CUDNN_VERSION=7.6.5.32",
                    "TRT_VERSION=7.0.0.11",
                    "NSIGHT_SYSTEMS_VERSION=2019.6.1",
                    "NSIGHT_COMPUTE_VERSION=2019.5.0.14",
                    "DALI_VERSION=0.17.0",
                    "DALI_BUILD=1030354",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.6-1.0.1",
                    "OPENMPI_VERSION=3.1.4",
                    "OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78",
                    "PYTORCH_VERSION=1.4.0a0+a5b4d78",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.01",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "COCOAPI_VERSION=2.0+nv0.3.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=9332039",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "9332039",
                    "com.nvidia.build.ref": "2bbf429ed67611e52bd93e8e32c2fa60673d37d5",
                    "com.nvidia.cublas.version": "10.2.2.89",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "7.6.5.32",
                    "com.nvidia.nccl.version": "2.5.6",
                    "com.nvidia.nsightcompute.version": "2019.5.0.14",
                    "com.nvidia.nsightsystems.version": "2019.6.1",
                    "com.nvidia.pytorch.version": "1.4.0a0+a5b4d78",
                    "com.nvidia.tensorrt.version": "7.0.0.11",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2020-03-24T10:40:25.509381598-07:00",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T11:00:36.540972091-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         gnupg  &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ENV CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:18.852742173-08:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:19.448795208-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:20.080916424-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:20.704769105-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:21.14072925-08:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:21.62074551-08:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.032743332-08:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ENV NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "RUN |8 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.5.6 com.nvidia.cublas.version=10.2.2.89 com.nvidia.cudnn.version=7.6.5.32 com.nvidia.tensorrt.version=7.0.0.11 com.nvidia.nsightsystems.version=2019.6.1 com.nvidia.nsightcompute.version=2019.5.0.14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ENV DALI_VERSION=0.17.0 DALI_BUILD=1030354",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.900754963-08:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:25.48885086-08:00",
                    "created_by": "RUN |10 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14 DALI_VERSION=0.17.0 DALI_BUILD=1030354 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:25.48885086-08:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:25.976741607-08:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:26.432737625-08:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:45.256492117-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:45.744844171-08:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ARG MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ENV MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "RUN |1 MOFED_VERSION=4.6-1.0.1 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ARG OPENMPI_VERSION=3.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ENV OPENMPI_VERSION=3.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:37.258001046-08:00",
                    "created_by": "RUN |2 MOFED_VERSION=4.6-1.0.1 OPENMPI_VERSION=3.1.4 /bin/sh -c wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:52:37.258001046-08:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:37.692740938-08:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:52:37.692740938-08:00",
                    "created_by": "ENV OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:38.076718617-08:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:54:08.601124068-08:00",
                    "created_by": "RUN |2 MOFED_VERSION=4.6-1.0.1 OPENMPI_VERSION=3.1.4 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:54:08.601124068-08:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYTORCH_VERSION=1.4.0a0+a5b4d78 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.4.0a0+a5b4d78",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:59:36.109417092-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:59:36.109417092-08:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:59:39.472590394-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:21.58420137-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:47.43575513-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:47.43575513-08:00",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:02:47.945714115-08:00",
                    "created_by": "COPY text/requirements.txt text/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:48.445746413-08:00",
                    "created_by": "COPY caffe2_requirements.txt . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:48.093323384-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.0.4 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:48.637686097-08:00",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:56.404177108-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir 'tensorboard>=1.14'  && TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:56.404177108-08:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:04.260158201-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir https://github.com/lspvic/jupyter_tensorboard/archive/1b4f2cec5fe7416a125cf753e52addcfc9810b2e.zip  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:44.812071784-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c source \"$NVM_DIR/nvm.sh\"  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:45.417766184-08:00",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:49.333810542-08:00",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:49.85382121-08:00",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:50.605919591-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c patch -p0 < mkldnn.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:16:25.746105272-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:16:25.746105272-08:00",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T15:14:38.431541156-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:14:43.855022597-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple/cuda/${CUDA_VERSION%%.*}.0 --trusted-host sqrl         nvidia-dali==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:14:43.855022597-08:00",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.3.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T15:15:12.623728498-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:15:13.065761515-08:00",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:15:24.553340463-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:07:50.156397952-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--pyprof\" --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl/pytorch && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -r trt/requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:24.569764026-08:00",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:25.081690005-08:00",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:25.813753752-08:00",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:26.361692262-08:00",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:28.857975045-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:29.56783559-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:30.101785471-08:00",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:30.101785471-08:00",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ENV NVIDIA_BUILD_ID=9332039",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "LABEL com.nvidia.build.id=9332039",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "LABEL com.nvidia.build.ref=2bbf429ed67611e52bd93e8e32c2fa60673d37d5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-25T11:55:36.164447346-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-25T11:55:36.164447346-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     python-setuptools     python-dev &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-02-25T11:55:36.164447346-08:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-24T10:39:13.893503454-07:00",
                    "created_by": "WORKDIR /tmp/trt-oss",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:39:58.597773647-07:00",
                    "created_by": "RUN /bin/sh -c git clone --recursive --branch release/7.0 https://github.com/NVIDIA/TensorRT.git && cd TensorRT &&      mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release -DTRT_LIB_DIR=/usr/lib/x86_64-linux-gnu/ -DTRT_BIN_DIR=`pwd`     -DBUILD_PARSERS=OFF -DBUILD_SAMPLES=OFF -DBUILD_PLUGINS=ON -DGPU_ARCHS=\"70 75\" &&     make -j nvinfer_plugin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:39:58.65100604-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:39:58.725533534-07:00",
                    "created_by": "COPY requirements/requirements_docker.txt requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:10.197998209-07:00",
                    "created_by": "RUN /bin/sh -c pip install --disable-pip-version-check --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:10.197998209-07:00",
                    "created_by": "ARG NEMO_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-24T10:40:10.197998209-07:00",
                    "created_by": "ARG BASE_IMAGE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-24T10:40:10.390223563-07:00",
                    "created_by": "COPY /tmp/trt-oss/TensorRT/build/libnvinfer_plugin.so* /usr/lib/x86_64-linux-gnu/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:11.186408424-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.9.0-1149-g4884cb37 BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.242075093-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.9.0-1149-g4884cb37 BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.298932992-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.401473397-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.513503201-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.649522113-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:24.801520623-07:00",
                    "created_by": "COPY README.rst LICENSE /workspace/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-24T10:40:25.509381598-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.9.0-1149-g4884cb37 BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:79b7fbf47bcc86d7f7dda1e5d0f540a9ca336213e6b1d1e09d8887c63f505f9a",
                    "sha256:f8f5668e1f79026491d3acc2fe6141f0fad8010b37ba6ac93aaf4f9080ac73da",
                    "sha256:82a4c6f5e044c202d4eb9753d4be44c3c47f9d08512a14726dcd47ab307224be",
                    "sha256:2d1abb440f06ee9371b98be4b6c81fb76a1cccb58e878210a0ee7df51986b00b",
                    "sha256:9ac1b86de2c8f86ede71521b2ab6ce5dd8e16a826fa55cedf8c67019b0469320",
                    "sha256:7ef6f04888b6d4727ba7518f215526987c85ff85d0151cfbeb4e8e19a99407f6",
                    "sha256:85f67224fe519ef1c275507f04dcfce04834272ad830b726bc508ffce02df316",
                    "sha256:3d1ef4e91a9cea696bd0c2721b67d3d9a548ab843a4b7fc14dfa37395d556355",
                    "sha256:02a3ba2a61fde65d65733bee77b93224abecb6f0b1cadf1fae44f277319ba1b4",
                    "sha256:f02a2627736d6c651ea32ff469e3edb4acbad9cba27d4f951531ef702efdcf61",
                    "sha256:db84dd47b0b4bdd4d33aa8254272c965ecd1b3b720dc3bb27c721ec30d87466a",
                    "sha256:358db9146d52873506d1c864f1a09b6b99e327528496766e7e4e03bfd3021170",
                    "sha256:bff5ab474cefacac5ba4e26dd9a59ba7b972f4dbeef2918aadb875894bb3101a",
                    "sha256:93c6abe0d3aeabffa8842bed38795d44f8da9ecbf8eabae86b776db68b03cd5f",
                    "sha256:65af1b6ed3221101c02ddd8d1cecd8e60a56b76386bdb2f9dc976ce451db8042",
                    "sha256:7eca755faa456b704c0bc3bd7fd45c918ba989ffd814429474482def2357f4b1",
                    "sha256:91da4ca4207fbd694232f6d78b63ef116c1acdbea4130d4ce646a8797b8792b6",
                    "sha256:8f7fec3e372843ad41f3178a1ad0631e793c97e62f6e0905e71b8a9a1d3b7c5d",
                    "sha256:c61f56b72ef12795788211ecb4646ff3119b0ff229feed804f6e3fa84ad8d9a4",
                    "sha256:302681633205a74f93278057c345da0cb0b4b665c8ab96eaba511f12a5f873ed",
                    "sha256:d1795b649cdfa22e434484ebcd5288feae7272ae59269cb73bc9fb50b6e2b027",
                    "sha256:c4ad7d2201975ef27c474d686772e1600b821a84be90d3b47c87a5c7d470dd8e",
                    "sha256:660b007dba04cb50e9fa734ddf0d6ec13b095f46dab53e6053ab39c0ef47a050",
                    "sha256:1813f8a1ef2f121ed076d00c8d4257832e44d513e5ba1e8f4251995ecca8ad07",
                    "sha256:b1ee32a9ff2c026efab62eeedba8b9b9be6e6a76f04461b2df9cf11242dc1597",
                    "sha256:441358b471a7235284a28949f47415e885238e29e49d3061a4296c4623a9cc6e",
                    "sha256:b2468557518838ba4d99dfe0ce19951ddb4fb8c0ca5bb08718e19b9e9990ba88",
                    "sha256:460ef6259e19ba75982048d01a9bfd5f11064ad82919546d1cb85c6e892d64d5",
                    "sha256:764a60319b8b9a2bce4c29a4050f6841f298ba99daa8e8020fe2929c6c4f8640",
                    "sha256:efdbf1c8aa881938586f51718cc0ac6eb1ce8f8ed7e44db7ccb3988f28387df7",
                    "sha256:03a017b1e4cb1ee167d756c670786dd692d3eb38dd5aeeda6a33baf66eb12a81",
                    "sha256:2b3f69404aaa4e04f55f40a8ecf85e3c252e521f1b5e8503274c7c8546808388",
                    "sha256:95c31069799744b1921eb82c0b164d070c99b06ae9220069b4afd349dc889fab",
                    "sha256:30b9dfb209c0fc48e33bc70e3491cb3444c47ff013538ec2ae0949a87b4cc21f",
                    "sha256:93b6b3728a22de69b70956fe8dd73234c0aeba52c96b9720f592d51b545025a7",
                    "sha256:1c8c7c252c3dd00a631846886bab2d13e9f7dc683468a0a2d23c8bcf4ea8633e",
                    "sha256:42d40fbff7a9379196ec8ae3e7a340bb971e7fb59b0c5f72f4ebc2920182c4fd",
                    "sha256:d1325acb3a9ef277f4b6f5d6d246da26efa57ebf65d089762e7006a36747b633",
                    "sha256:526236bdde3a781ef968486fd9b079b675243d68b83f64d7e409c3168f2e8978",
                    "sha256:82bc873c45bf6cda23ac409114e41f2a9bfea6a3caf5ec7cdea9e9fa55556c41",
                    "sha256:29b0274c0fa2551510c9c4b2627a73de858f145d0de464bf4a636d29c823c76e",
                    "sha256:5540e151e4eb8f57d85779d3eac1cc6337974652986375da43aa2864afcdcaaf",
                    "sha256:17a064615418dde7c84a034e5ccc37a5d57aabf9231ed5c3c455b23d9c062a72",
                    "sha256:b5e8c4628bb8b82e38f1db59023ae465d8ef0f7c01ce01b9d667b4beb851b48e",
                    "sha256:4420d2eeeab270ae47e5b82f18e877bbc94c51573fe2b4012ffafd5516e12862",
                    "sha256:4c63078dd4386dffcb3d2d85bb3b6edefd8f669724bb2ef3994dcbc67acf84c8",
                    "sha256:e9c2d13ca9ed7d239373123a6c3a415534cbecea20e2b9b18f4c4102a6431163",
                    "sha256:8a3d8d8597ae37788f243ad3ab9e06795a87ff6a7edbbc89a81560d25009a8d5",
                    "sha256:aaddf87d36e8028e62237acc28a41dcb383993aa9b01a2582ac5f6daceb453f5",
                    "sha256:be876efb2f5fb9a913eaa7a857e472a56f9eafb0892504cbe2eea577b1962101",
                    "sha256:64249421f53a3fe58c1d0aec5f25a90dc56cdf60038c67bc89720e37285ff29f",
                    "sha256:dbb120fd5c3beb61e009b2e2d0ba926d8eb9dc9a9765d0aace5154de6ed32c04",
                    "sha256:d4f75c1f72f9d8cda3b9832082fd2c30748cb2469fae24c7c5119404ba006c48",
                    "sha256:1fe09a3db301dd91eb564601b7d8b2dbbfc7f070e067381c4dccc96d87a4dd78",
                    "sha256:eff5d73e22281ab94e97fba95492e477a2b454ace8288a77c3e08ff001b54112",
                    "sha256:d4af22a053a63f1680ddbbd44489132531c631eaf79067ab9001e4776fc5e02c",
                    "sha256:0fa94b14e95a4b04804f9e51afb98f4084cb65c13f7b69f08d5e794e2def2bd2",
                    "sha256:06d58041ff1a253e6663aa267140c9817ea6a8b60bcb9a5dae139e061bd0df5d",
                    "sha256:c4cb20a1f3159a482f3acf0fd5920235de55fa5d64d73425605375fef43daf6e",
                    "sha256:cadb0c554edf7f99ea55116d15f325992b5bed94a7fb0449e106bb520fe56b30",
                    "sha256:6191f585ddbfa81c584e601d0f4dae56ff9804b9a509fcdead4afd86304f6280",
                    "sha256:aca7b93b5de4e69c8508e9d724dfe87a9daf0196427b00a80475aad9e6b746fe",
                    "sha256:a1948cfa38e916cc3214b2b8ef1f219ba7a8f3667e98d7ac0b347f99260d049f",
                    "sha256:6abd432f9d10d9bf62b48adfa4da5bc3ef87a296e925a1bf7cdaa1dbf9768e1c",
                    "sha256:cc550f181cfa7e8629ca1147250794ba7b99983a9c900ca0e504c0fe2746569d",
                    "sha256:1cf041ea20ff79716aec70fc14565e13629df9704c719f5ac15b517e1991c611",
                    "sha256:5a5d185ce7f9dc716963923d1f7aee02439066c4bdd3e7c7240026f54996bed7",
                    "sha256:6256567e5a74083142b05da43e236160e70506ac4c3b49a0e4853b999b5d5dfe",
                    "sha256:a67a92e3a4e0d8170d86442353e2208fb3ea33cdf6af33c2c51e5898a7892946",
                    "sha256:15b800dc671c62346b2ffa1466dfa00e71ea387a4b1fdbcaf3c312bb4f49deb6",
                    "sha256:b9b8c9ad593f94c9e65f7195301319456dd9d4b1312da46ed210cc2359f4d921"
                ]
            }
        },
        "v0.11": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "CUDA_VERSION=10.2.89",
                    "CUDA_DRIVER_VERSION=440.33.01",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.5.6",
                    "CUBLAS_VERSION=10.2.2.89",
                    "CUDNN_VERSION=7.6.5.32",
                    "TRT_VERSION=7.0.0.11",
                    "NSIGHT_SYSTEMS_VERSION=2019.6.1",
                    "NSIGHT_COMPUTE_VERSION=2019.5.0.14",
                    "DALI_VERSION=0.17.0",
                    "DALI_BUILD=1030354",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.6-1.0.1",
                    "OPENMPI_VERSION=3.1.4",
                    "OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78",
                    "PYTORCH_VERSION=1.4.0a0+a5b4d78",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.01",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "COCOAPI_VERSION=2.0+nv0.3.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=9332039",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "9332039",
                    "com.nvidia.build.ref": "2bbf429ed67611e52bd93e8e32c2fa60673d37d5",
                    "com.nvidia.cublas.version": "10.2.2.89",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "7.6.5.32",
                    "com.nvidia.nccl.version": "2.5.6",
                    "com.nvidia.nsightcompute.version": "2019.5.0.14",
                    "com.nvidia.nsightsystems.version": "2019.6.1",
                    "com.nvidia.pytorch.version": "1.4.0a0+a5b4d78",
                    "com.nvidia.tensorrt.version": "7.0.0.11",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2020-07-09T16:15:55.976540195-07:00",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T11:00:36.540972091-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         gnupg  &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "ENV CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:18.360022936-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:18.852742173-08:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:19.448795208-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:20.080916424-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:20.704769105-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:21.14072925-08:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:21.62074551-08:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.032743332-08:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "RUN |2 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:45:22.637034707-08:00",
                    "created_by": "ENV NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "RUN |8 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.5.6 com.nvidia.cublas.version=10.2.2.89 com.nvidia.cudnn.version=7.6.5.32 com.nvidia.tensorrt.version=7.0.0.11 com.nvidia.nsightsystems.version=2019.6.1 com.nvidia.nsightcompute.version=2019.5.0.14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.445740621-08:00",
                    "created_by": "ENV DALI_VERSION=0.17.0 DALI_BUILD=1030354",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:24.900754963-08:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:25.48885086-08:00",
                    "created_by": "RUN |10 CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.33.01 NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=7.0.0.11 NSIGHT_SYSTEMS_VERSION=2019.6.1 NSIGHT_COMPUTE_VERSION=2019.5.0.14 DALI_VERSION=0.17.0 DALI_BUILD=1030354 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:25.48885086-08:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:46:25.976741607-08:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:46:26.432737625-08:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:45.256492117-08:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:45.744844171-08:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ARG MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ENV MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "RUN |1 MOFED_VERSION=4.6-1.0.1 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ARG OPENMPI_VERSION=3.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:47:46.693842729-08:00",
                    "created_by": "ENV OPENMPI_VERSION=3.1.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:37.258001046-08:00",
                    "created_by": "RUN |2 MOFED_VERSION=4.6-1.0.1 OPENMPI_VERSION=3.1.4 /bin/sh -c wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:52:37.258001046-08:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:37.692740938-08:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:52:37.692740938-08:00",
                    "created_by": "ENV OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-17T10:52:38.076718617-08:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:54:08.601124068-08:00",
                    "created_by": "RUN |2 MOFED_VERSION=4.6-1.0.1 OPENMPI_VERSION=3.1.4 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-17T10:54:08.601124068-08:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYTORCH_VERSION=1.4.0a0+a5b4d78 PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.01",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.4.0a0+a5b4d78",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:30.017621706-08:00",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:58:46.067117873-08:00",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:59:36.109417092-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T13:59:36.109417092-08:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T13:59:39.472590394-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:21.58420137-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:47.43575513-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:47.43575513-08:00",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:02:47.945714115-08:00",
                    "created_by": "COPY text/requirements.txt text/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:02:48.445746413-08:00",
                    "created_by": "COPY caffe2_requirements.txt . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:48.093323384-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.0.4 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:48.637686097-08:00",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:56.404177108-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir 'tensorboard>=1.14'  && TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:03:56.404177108-08:00",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:04.260158201-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir https://github.com/lspvic/jupyter_tensorboard/archive/1b4f2cec5fe7416a125cf753e52addcfc9810b2e.zip  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:44.812071784-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c source \"$NVM_DIR/nvm.sh\"  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:45.417766184-08:00",
                    "created_by": "COPY jupyter_notebook_config.py /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:46.20189812-08:00",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T14:05:49.333810542-08:00",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:49.85382121-08:00",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:05:50.605919591-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c patch -p0 < mkldnn.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:16:25.746105272-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T14:16:25.746105272-08:00",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T15:14:38.431541156-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:14:43.855022597-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple/cuda/${CUDA_VERSION%%.*}.0 --trusted-host sqrl         nvidia-dali==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:14:43.855022597-08:00",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.3.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T15:15:12.623728498-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:15:13.065761515-08:00",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T15:15:24.553340463-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:07:50.156397952-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--pyprof\" --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl/pytorch && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -r trt/requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:24.014046479-08:00",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:24.569764026-08:00",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:25.081690005-08:00",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:25.813753752-08:00",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:26.361692262-08:00",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:28.857975045-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:29.56783559-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:30.101785471-08:00",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:30.101785471-08:00",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.01 PYTORCH_BUILD_VERSION=1.4.0a0+a5b4d78 PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ENV NVIDIA_BUILD_ID=9332039",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "LABEL com.nvidia.build.id=9332039",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-20T16:08:31.568076479-08:00",
                    "created_by": "LABEL com.nvidia.build.ref=2bbf429ed67611e52bd93e8e32c2fa60673d37d5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:28.452152945-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:28.452152945-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     python-setuptools     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:28.452152945-07:00",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:28.51928271-07:00",
                    "created_by": "WORKDIR /tmp/trt-oss",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:28.51928271-07:00",
                    "created_by": "ARG NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:29.386488689-07:00",
                    "created_by": "RUN |1 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /bin/sh -c cd /tmp/trt-oss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:29.386488689-07:00",
                    "created_by": "ARG DEB=libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:32.338394867-07:00",
                    "created_by": "RUN |2 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb /bin/sh -c curl -sL --output ${DEB} ${NV_REPO}/${DEB} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:32.338394867-07:00",
                    "created_by": "ARG DEB=libnvinfer7_7.0.0-1+cuda10.2_amd64.deb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:34.094946899-07:00",
                    "created_by": "RUN |3 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=libnvinfer7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvinfer7_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c curl -sL --output ${DEB} ${NV_REPO}/${DEB} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:34.094946899-07:00",
                    "created_by": "ARG DEB=libnvinfer-plugin7_7.0.0-1+cuda10.2_amd64.deb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:35.147593763-07:00",
                    "created_by": "RUN |4 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=libnvinfer-plugin7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvinfer-plugin7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvinfer-plugin7_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c curl -sL --output ${DEB} ${NV_REPO}/${DEB} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:35.147593763-07:00",
                    "created_by": "ARG DEB=libnvonnxparsers7_7.0.0-1+cuda10.2_amd64.deb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:35.95608775-07:00",
                    "created_by": "RUN |5 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=libnvonnxparsers7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvonnxparsers7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvonnxparsers7_7.0.0-1+cuda10.2_amd64.deb DEB=libnvonnxparsers7_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c curl -sL --output ${DEB} ${NV_REPO}/${DEB} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:20:35.95608775-07:00",
                    "created_by": "ARG DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:20:36.931073659-07:00",
                    "created_by": "RUN |6 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c curl -sL --output ${DEB} ${NV_REPO}/${DEB} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:21:00.507193943-07:00",
                    "created_by": "RUN |6 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c dpkg -i *.deb && cd ../.. && rm -rf /tmp/trt-oss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:21:00.575103144-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:21:00.677517247-07:00",
                    "created_by": "COPY requirements/requirements_docker.txt requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:21:11.07552471-07:00",
                    "created_by": "RUN |6 NV_REPO=https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb DEB=python-libnvinfer_7.0.0-1+cuda10.2_amd64.deb /bin/sh -c pip install --disable-pip-version-check --no-cache-dir -r requirements.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-01T15:21:11.07552471-07:00",
                    "created_by": "ARG NEMO_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-01T15:21:11.07552471-07:00",
                    "created_by": "ARG BASE_IMAGE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-09T16:15:30.718507325-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.10.1-428-g4b7bbc4a BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:54.320425259-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.10.1-428-g4b7bbc4a BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:54.443719403-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:54.585541387-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:54.761520571-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:54.95351048-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:55.213509829-07:00",
                    "created_by": "COPY README.rst LICENSE /workspace/nemo/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-09T16:15:55.976540195-07:00",
                    "created_by": "RUN |2 NEMO_VERSION=v0.10.1-428-g4b7bbc4a BASE_IMAGE=nvcr.io/nvidia/pytorch:20.01-py3 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:79b7fbf47bcc86d7f7dda1e5d0f540a9ca336213e6b1d1e09d8887c63f505f9a",
                    "sha256:f8f5668e1f79026491d3acc2fe6141f0fad8010b37ba6ac93aaf4f9080ac73da",
                    "sha256:82a4c6f5e044c202d4eb9753d4be44c3c47f9d08512a14726dcd47ab307224be",
                    "sha256:2d1abb440f06ee9371b98be4b6c81fb76a1cccb58e878210a0ee7df51986b00b",
                    "sha256:9ac1b86de2c8f86ede71521b2ab6ce5dd8e16a826fa55cedf8c67019b0469320",
                    "sha256:7ef6f04888b6d4727ba7518f215526987c85ff85d0151cfbeb4e8e19a99407f6",
                    "sha256:85f67224fe519ef1c275507f04dcfce04834272ad830b726bc508ffce02df316",
                    "sha256:3d1ef4e91a9cea696bd0c2721b67d3d9a548ab843a4b7fc14dfa37395d556355",
                    "sha256:02a3ba2a61fde65d65733bee77b93224abecb6f0b1cadf1fae44f277319ba1b4",
                    "sha256:f02a2627736d6c651ea32ff469e3edb4acbad9cba27d4f951531ef702efdcf61",
                    "sha256:db84dd47b0b4bdd4d33aa8254272c965ecd1b3b720dc3bb27c721ec30d87466a",
                    "sha256:358db9146d52873506d1c864f1a09b6b99e327528496766e7e4e03bfd3021170",
                    "sha256:bff5ab474cefacac5ba4e26dd9a59ba7b972f4dbeef2918aadb875894bb3101a",
                    "sha256:93c6abe0d3aeabffa8842bed38795d44f8da9ecbf8eabae86b776db68b03cd5f",
                    "sha256:65af1b6ed3221101c02ddd8d1cecd8e60a56b76386bdb2f9dc976ce451db8042",
                    "sha256:7eca755faa456b704c0bc3bd7fd45c918ba989ffd814429474482def2357f4b1",
                    "sha256:91da4ca4207fbd694232f6d78b63ef116c1acdbea4130d4ce646a8797b8792b6",
                    "sha256:8f7fec3e372843ad41f3178a1ad0631e793c97e62f6e0905e71b8a9a1d3b7c5d",
                    "sha256:c61f56b72ef12795788211ecb4646ff3119b0ff229feed804f6e3fa84ad8d9a4",
                    "sha256:302681633205a74f93278057c345da0cb0b4b665c8ab96eaba511f12a5f873ed",
                    "sha256:d1795b649cdfa22e434484ebcd5288feae7272ae59269cb73bc9fb50b6e2b027",
                    "sha256:c4ad7d2201975ef27c474d686772e1600b821a84be90d3b47c87a5c7d470dd8e",
                    "sha256:660b007dba04cb50e9fa734ddf0d6ec13b095f46dab53e6053ab39c0ef47a050",
                    "sha256:1813f8a1ef2f121ed076d00c8d4257832e44d513e5ba1e8f4251995ecca8ad07",
                    "sha256:b1ee32a9ff2c026efab62eeedba8b9b9be6e6a76f04461b2df9cf11242dc1597",
                    "sha256:441358b471a7235284a28949f47415e885238e29e49d3061a4296c4623a9cc6e",
                    "sha256:b2468557518838ba4d99dfe0ce19951ddb4fb8c0ca5bb08718e19b9e9990ba88",
                    "sha256:460ef6259e19ba75982048d01a9bfd5f11064ad82919546d1cb85c6e892d64d5",
                    "sha256:764a60319b8b9a2bce4c29a4050f6841f298ba99daa8e8020fe2929c6c4f8640",
                    "sha256:efdbf1c8aa881938586f51718cc0ac6eb1ce8f8ed7e44db7ccb3988f28387df7",
                    "sha256:03a017b1e4cb1ee167d756c670786dd692d3eb38dd5aeeda6a33baf66eb12a81",
                    "sha256:2b3f69404aaa4e04f55f40a8ecf85e3c252e521f1b5e8503274c7c8546808388",
                    "sha256:95c31069799744b1921eb82c0b164d070c99b06ae9220069b4afd349dc889fab",
                    "sha256:30b9dfb209c0fc48e33bc70e3491cb3444c47ff013538ec2ae0949a87b4cc21f",
                    "sha256:93b6b3728a22de69b70956fe8dd73234c0aeba52c96b9720f592d51b545025a7",
                    "sha256:1c8c7c252c3dd00a631846886bab2d13e9f7dc683468a0a2d23c8bcf4ea8633e",
                    "sha256:42d40fbff7a9379196ec8ae3e7a340bb971e7fb59b0c5f72f4ebc2920182c4fd",
                    "sha256:d1325acb3a9ef277f4b6f5d6d246da26efa57ebf65d089762e7006a36747b633",
                    "sha256:526236bdde3a781ef968486fd9b079b675243d68b83f64d7e409c3168f2e8978",
                    "sha256:82bc873c45bf6cda23ac409114e41f2a9bfea6a3caf5ec7cdea9e9fa55556c41",
                    "sha256:29b0274c0fa2551510c9c4b2627a73de858f145d0de464bf4a636d29c823c76e",
                    "sha256:5540e151e4eb8f57d85779d3eac1cc6337974652986375da43aa2864afcdcaaf",
                    "sha256:17a064615418dde7c84a034e5ccc37a5d57aabf9231ed5c3c455b23d9c062a72",
                    "sha256:b5e8c4628bb8b82e38f1db59023ae465d8ef0f7c01ce01b9d667b4beb851b48e",
                    "sha256:4420d2eeeab270ae47e5b82f18e877bbc94c51573fe2b4012ffafd5516e12862",
                    "sha256:4c63078dd4386dffcb3d2d85bb3b6edefd8f669724bb2ef3994dcbc67acf84c8",
                    "sha256:e9c2d13ca9ed7d239373123a6c3a415534cbecea20e2b9b18f4c4102a6431163",
                    "sha256:8a3d8d8597ae37788f243ad3ab9e06795a87ff6a7edbbc89a81560d25009a8d5",
                    "sha256:aaddf87d36e8028e62237acc28a41dcb383993aa9b01a2582ac5f6daceb453f5",
                    "sha256:be876efb2f5fb9a913eaa7a857e472a56f9eafb0892504cbe2eea577b1962101",
                    "sha256:64249421f53a3fe58c1d0aec5f25a90dc56cdf60038c67bc89720e37285ff29f",
                    "sha256:dbb120fd5c3beb61e009b2e2d0ba926d8eb9dc9a9765d0aace5154de6ed32c04",
                    "sha256:d4f75c1f72f9d8cda3b9832082fd2c30748cb2469fae24c7c5119404ba006c48",
                    "sha256:1fe09a3db301dd91eb564601b7d8b2dbbfc7f070e067381c4dccc96d87a4dd78",
                    "sha256:eff5d73e22281ab94e97fba95492e477a2b454ace8288a77c3e08ff001b54112",
                    "sha256:d4af22a053a63f1680ddbbd44489132531c631eaf79067ab9001e4776fc5e02c",
                    "sha256:24ee4b7fa2f7c79f92d2d20fc7a21fcc4ef945a710019045db416316f897abf4",
                    "sha256:337d58ef6d594e3a3664f7342aef222068fa5db0020b2ec32d7f5fdb15c059a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0c081e43e2ab852cce5a90860903c18028718b432a6b7862b4ac1cff7f7381f",
                    "sha256:adfd52bb3bf35e8cc5ac448c13826e481b243a7a96ae9ed34dcc8a5c0aa7c339",
                    "sha256:a21746e01d052c907ee012080d51eac7a0c5c12fa927222d339e0be925e1f523",
                    "sha256:6853d10db428649084f86f17648601160135c3a15f99756f19e67473235693a3",
                    "sha256:f87bdceab33179b8e4e1c511779fe0374e3079298148cad57e4b672c9e559ff9",
                    "sha256:12e046e74e58f115d4d28887fb06e3b129204b04d1b2626a74703142b4660f84",
                    "sha256:55205c41b91bcf1d01a443df36eda6a7ce95ef66cbd4c7394549f8b259beab79",
                    "sha256:aef2ef9e902d68c05076eb2ea3556c4cba396c5a15d16ff8d12bbed190555e33",
                    "sha256:5f444753396f6c59e3b38da1e88a5c6f8c90538c1a44f875eb85ac744df396c3",
                    "sha256:88e7ae85c0c163057a78af1617e23b7321dda83894df7f1a33562149acdd5689",
                    "sha256:5e8e43b72f27438622c2a95e31ee7155637d2c765212ece680fc9d37ff47837d",
                    "sha256:25d231bddc14703ad16f5c25cb134255da1595e4c171a1446d26e2d51cf011d2",
                    "sha256:756efa9a4bd0bd60224590ddffd9e1d1d923029a09b11ab9e909c64f457231ce",
                    "sha256:8b56a085cbad0c922620c6cbc73338f4dce57d7ee17d7dd8ba0c9f3d5eb273fe",
                    "sha256:ab53d53ad135a458494c2780619ccb733c834a7fbbd67d1aff749d336f94014a",
                    "sha256:4979790bb03ad2095f1bcda5196f60cb2ba5ce5f567e88e54083128ed4c814f2",
                    "sha256:373d5fadf4d8449e13c6c7c5c3619bf160ca0b9140ad5464734e34160e12dcdf"
                ]
            }
        },
        "v0.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "CUDA_VERSION=10.2.89",
                    "CUDA_DRIVER_VERSION=440.30.00",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.5.6",
                    "CUBLAS_VERSION=10.2.2.89",
                    "CUDNN_VERSION=7.6.5.32",
                    "TRT_VERSION=6.0.1.8",
                    "NSIGHT_SYSTEMS_VERSION=2019.5.2",
                    "DALI_VERSION=0.15.0",
                    "DALI_BUILD=947079",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.4-1.0.0",
                    "IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "OPENMPI_VERSION=3.1.4",
                    "OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.4.0a0+649135b",
                    "PYTORCH_VERSION=1.4.0a0+649135b",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=19.11",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "COCOAPI_VERSION=2.0+nv0.3.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=8777600",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:97bd863616ff4696a0abc9c28c322e66e15afcf54cfa4bd95c0367e67c24405b",
                "Volumes": null,
                "WorkingDir": "/workspace/nemo_examples",
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "8777600",
                    "com.nvidia.build.ref": "b16656a96f38aa26442503e85770be61c5fb8b30",
                    "com.nvidia.cublas.version": "10.2.2.89",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "7.6.5.32",
                    "com.nvidia.nccl.version": "2.5.6",
                    "com.nvidia.nsightsystems.version": "2019.5.2",
                    "com.nvidia.pytorch.version": "1.4.0a0+649135b",
                    "com.nvidia.tensorrt.version": "6.0.1.8",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "container": "149345ecf0f1d84f9a8ee727c19559457e9123a63963b221a63c564ab386e32c",
            "container_config": {
                "Hostname": "149345ecf0f1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "CUDA_VERSION=10.2.89",
                    "CUDA_DRIVER_VERSION=440.30.00",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.5.6",
                    "CUBLAS_VERSION=10.2.2.89",
                    "CUDNN_VERSION=7.6.5.32",
                    "TRT_VERSION=6.0.1.8",
                    "NSIGHT_SYSTEMS_VERSION=2019.5.2",
                    "DALI_VERSION=0.15.0",
                    "DALI_BUILD=947079",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.4-1.0.0",
                    "IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "OPENMPI_VERSION=3.1.4",
                    "OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.4.0a0+649135b",
                    "PYTORCH_VERSION=1.4.0a0+649135b",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=19.11",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "COCOAPI_VERSION=2.0+nv0.3.1",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=8777600",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /workspace/nemo_examples"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97bd863616ff4696a0abc9c28c322e66e15afcf54cfa4bd95c0367e67c24405b",
                "Volumes": null,
                "WorkingDir": "/workspace/nemo_examples",
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.build.id": "8777600",
                    "com.nvidia.build.ref": "b16656a96f38aa26442503e85770be61c5fb8b30",
                    "com.nvidia.cublas.version": "10.2.2.89",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "7.6.5.32",
                    "com.nvidia.nccl.version": "2.5.6",
                    "com.nvidia.nsightsystems.version": "2019.5.2",
                    "com.nvidia.pytorch.version": "1.4.0a0+649135b",
                    "com.nvidia.tensorrt.version": "6.0.1.8",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                }
            },
            "created": "2020-01-02T18:35:03.587164883Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:03:26.890460299Z",
                    "created_by": "/bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         ca-certificates         curl         patch         wget         gnupg  &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-01T21:03:28.000185895Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:75d056d20c46e220f077e6efe3599524fc2700d10fb01a051f1a13ec9121a38d in /nvidia/build-scripts "
                },
                {
                    "created": "2019-11-01T21:03:28.333835543Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CUDA_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:03:29.280012279Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CUDA_DRIVER_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:03:30.292446823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=10.2.89 CUDA_DRIVER_VERSION=440.30.00 CUDA_CACHE_DISABLE=1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:13.310484431Z",
                    "created_by": "/bin/sh -c /nvidia/build-scripts/installCUDA.sh"
                },
                {
                    "created": "2019-11-01T21:05:14.024464341Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2008ae75c542d782148832c609b39cc4e327d4e6f2bf732a837b31bc635b1dc9 in /bin/sh-wrap "
                },
                {
                    "created": "2019-11-01T21:05:15.000189633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:89b70e66afee46dcb696e50d3fbdda2924b0e9b9bb815960bfde9fb6cf3341f2 in /usr/local/bin/ "
                },
                {
                    "created": "2019-11-11T13:46:14.000182372Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4412baefcc69894e26ccecb1eb479cfe6a285867b15fb83f4215d95c4e39b47d in /etc/shinit_v2 "
                },
                {
                    "created": "2019-11-11T13:46:15.000141596Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:d90d75745c57633896423e02abab3b8b287c588d001ee987964ecbfc4dee8010 in /tmp "
                },
                {
                    "created": "2019-11-11T13:46:16.000129965Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:3b17293c842ab7ebaa966fcd91fefaabd257e1de98f3d72061c898e86d4c6a35 in /.singularity.d "
                },
                {
                    "created": "2019-11-11T13:46:17.530329184Z",
                    "created_by": "/bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh"
                },
                {
                    "created": "2019-11-11T13:46:18.543829296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:19.45711079Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:20.477152303Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NCCL_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:21.463047014Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CUBLAS_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:22.51428843Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CUDNN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:23.515193661Z",
                    "created_by": "/bin/sh -c #(nop)  ARG TRT_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:24.556124153Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NSIGHT_SYSTEMS_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:46:25.450437582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NCCL_VERSION=2.5.6 CUBLAS_VERSION=10.2.2.89 CUDNN_VERSION=7.6.5.32 TRT_VERSION=6.0.1.8 NSIGHT_SYSTEMS_VERSION=2019.5.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:47.01263849Z",
                    "created_by": "/bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh"
                },
                {
                    "created": "2019-11-11T13:47:47.887696761Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.nccl.version=2.5.6 com.nvidia.cublas.version=10.2.2.89 com.nvidia.cudnn.version=7.6.5.32 com.nvidia.tensorrt.version=6.0.1.8 com.nvidia.nsightsystems.version=2019.5.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:48.48710664Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DALI_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:49.571283116Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DALI_BUILD",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:50.514419216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DALI_VERSION=0.15.0 DALI_BUILD=947079",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:52.670157509Z",
                    "created_by": "/bin/sh -c rm -rf /nvidia"
                },
                {
                    "created": "2019-11-11T13:47:54.000135944Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6e2f1800f7a39ebee5daef25047cbaf7706fd42c55b78236d57f0cc86c73185e in / "
                },
                {
                    "created": "2019-11-11T13:47:55.33476952Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2019-11-11T13:47:55.851385617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:47:57.000171201Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e475a93e37fc1b0bc0dbdee7d196f3b5a44faa0e1bc10b2be2feed8807e83767 in /usr/local/bin/ "
                },
                {
                    "created": "2019-11-11T13:47:58.000155522Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:98526337940e33debb6d24f31ea9e1dbc7b4aaab0f1c2b4650975b5a8017a091 in /usr/local/bin/ "
                },
                {
                    "created": "2019-11-11T13:49:27.176286913Z",
                    "created_by": "/bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         build-essential         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-11T13:49:28.000159037Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:64456308596515067c5a5e38e144b80a437fd80d9e39f490353fa9a37785f8b2 in /opt/mellanox "
                },
                {
                    "created": "2019-11-11T13:49:28.601439668Z",
                    "created_by": "/bin/sh -c #(nop)  ARG MOFED_VERSION=4.4-1.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:49:29.628447911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV MOFED_VERSION=4.4-1.0.0 IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:49:31.975939333Z",
                    "created_by": "/bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*.deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/*"
                },
                {
                    "created": "2019-11-11T13:49:32.541144633Z",
                    "created_by": "/bin/sh -c #(nop)  ARG OPENMPI_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:49:33.587481155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV OPENMPI_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:53:42.998621725Z",
                    "created_by": "/bin/sh -c wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig"
                },
                {
                    "created": "2019-11-11T13:53:43.70208291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:53:45.000208774Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:115b4689eaa7d202bbf5bc2a423e7e7f8a32ebacbc019687f72df82a3730fd67 in /.singularity.d "
                },
                {
                    "created": "2019-11-11T13:53:45.607294865Z",
                    "created_by": "/bin/sh -c #(nop)  ENV OMPI_MCA_btl_vader_single_copy_mechanism=none",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T13:53:47.00017604Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:75d056d20c46e220f077e6efe3599524fc2700d10fb01a051f1a13ec9121a38d in /nvidia/build-scripts "
                },
                {
                    "created": "2019-11-11T13:53:48.000191684Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:fcaa53ecffdb008543bb209b678ac58fc889becd2848f5d34f18aa0a4a903ade in /tmp "
                },
                {
                    "created": "2019-11-11T13:56:22.192109818Z",
                    "created_by": "/bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installCUBLAS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && rm -f /tmp/cuda-*.patch  && rm -rf /nvidia"
                },
                {
                    "created": "2019-11-11T13:56:23.025154253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:08:29.054153311Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_PYTORCH_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:08:30.349622343Z",
                    "created_by": "/bin/sh -c #(nop)  ARG PYTORCH_BUILD_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:08:31.463837442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTORCH_BUILD_VERSION=1.4.0a0+649135b PYTORCH_VERSION=1.4.0a0+649135b PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=19.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:08:32.50565271Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.pytorch.version=1.4.0a0+649135b",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:11:11.183531231Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-11T17:11:31.703877553Z",
                    "created_by": "/bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd"
                },
                {
                    "created": "2019-11-11T17:11:33.079794128Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:11:34.490741832Z",
                    "created_by": "/bin/sh -c #(nop)  ARG PYVER=3.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:12:49.059974897Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya"
                },
                {
                    "created": "2019-11-11T17:29:23.383434265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:30:12.327852072Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c conda install pip=18.0 -c conda-forge"
                },
                {
                    "created": "2019-11-11T17:34:31.670605082Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION}"
                },
                {
                    "created": "2019-11-11T17:35:00.67000521Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION}"
                },
                {
                    "created": "2019-11-11T17:35:03.280599041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /opt/pytorch"
                },
                {
                    "created": "2019-11-11T17:35:05.719301876Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1e3ce8777af8a65b169f43b6e79c6032d500cfd7cb988bf362e1ce5c7557cf81 in text/ "
                },
                {
                    "created": "2019-11-11T17:35:08.329132127Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5cb3fc55d60008a64d47b2efd86c73ac3cf180c644fe6e7e0b734c2017cce52b in . "
                },
                {
                    "created": "2019-11-11T17:36:07.524212794Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.0.4 python-hostlist"
                },
                {
                    "created": "2019-11-11T17:36:10.840199385Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a2e3bb04fa6d382476cec423ba4a7a2b3bbaf3a8035b0458e04d5f8b4f012ae7 in /tmp/ "
                },
                {
                    "created": "2019-11-11T17:36:23.059989057Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip install --no-cache-dir 'tensorboard>=1.14'  && TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch"
                },
                {
                    "created": "2019-11-11T17:36:26.094976188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVM_DIR=/usr/local/nvm",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:37:49.678824555Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip install --no-cache-dir https://github.com/lspvic/jupyter_tensorboard/archive/1b4f2cec5fe7416a125cf753e52addcfc9810b2e.zip  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab"
                },
                {
                    "created": "2019-11-11T17:38:31.415553256Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c source \"$NVM_DIR/nvm.sh\"  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext"
                },
                {
                    "created": "2019-11-11T17:38:36.087500793Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:afbf9a402a0f9d49291c1925439542f038e4b9d984c1529da8ea840f0b143794 in /usr/local/etc/jupyter/ "
                },
                {
                    "created": "2019-11-11T17:38:41.970618629Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c mv /root/.jupyter/jupyter_notebook_config.json /usr/local/etc/jupyter/"
                },
                {
                    "created": "2019-11-11T17:38:46.539053759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV JUPYTER_PORT=8888",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:38:51.095389267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV TENSORBOARD_PORT=6006",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:38:55.813831552Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8888",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T17:39:00.89058111Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 6006",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T01:43:13.087986495Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:0ac70267da3c04402380e1ff4917ca7e14be7ab63f3b1228aeeb6b35f32d6c33 in . "
                },
                {
                    "created": "2019-11-13T01:43:19.668309313Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c patch -p0 < mkldnn.patch"
                },
                {
                    "created": "2019-11-13T01:47:38.493477264Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya"
                },
                {
                    "created": "2019-11-13T01:47:43.323719667Z",
                    "created_by": "/bin/sh -c #(nop)  ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5+PTX",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T02:38:11.242894953Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c cd pytorch &&     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v ."
                },
                {
                    "created": "2019-11-13T02:38:21.383285695Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple --trusted-host sqrl         nvidia-dali==${DALI_VERSION}"
                },
                {
                    "created": "2019-11-13T02:38:26.231858073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV COCOAPI_VERSION=2.0+nv0.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T02:40:47.739227621Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI"
                },
                {
                    "created": "2019-11-13T02:40:52.62832741Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:00ab67c165273c295336b31361079f0e202ef1cf99b1903521c00baea894e46b in /.singularity.d/ "
                },
                {
                    "created": "2019-11-13T02:41:03.846180901Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3"
                },
                {
                    "created": "2019-11-13T03:14:10.70205218Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--pyprof\" --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl/pytorch && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -r trt/requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . )"
                },
                {
                    "created": "2019-11-13T03:19:18.2312333Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd"
                },
                {
                    "created": "2019-11-13T03:19:23.304949096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:19:28.483995167Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /workspace"
                },
                {
                    "created": "2019-11-13T03:19:33.609160903Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e52263c85c97b4e8ab7ef62191bf7da11650395ef18281d7d19ff55ff0105f53 in README.md "
                },
                {
                    "created": "2019-11-13T03:19:38.716209513Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:8937b6a837494f8c3de1e1744d2a51942d7e45dc8e64cf58aedfbbc7bcf22e0f in docker-examples "
                },
                {
                    "created": "2019-11-13T03:19:44.943613171Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:a61ce57ff85dba18a59f312ad6a64017e529d94936a94d40906f06f77b55e262 in examples "
                },
                {
                    "created": "2019-11-13T03:19:50.652568308Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:9f2ee738594b1516c65dd8c091b345be1e566dfef5c1124f3a7e50fd14cf77e6 in tutorials "
                },
                {
                    "created": "2019-11-13T03:19:57.357270301Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c chmod -R a+w ."
                },
                {
                    "created": "2019-11-13T03:20:05.278990537Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib"
                },
                {
                    "created": "2019-11-13T03:20:10.448250332Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e8ab7804f1650b8b980b8575cba47d71c25e482c8a4aef4a5d25d799accbd0b8 in /usr/local/bin "
                },
                {
                    "created": "2019-11-13T03:20:15.657873207Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:21.075013433Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:75d056d20c46e220f077e6efe3599524fc2700d10fb01a051f1a13ec9121a38d in /nvidia/build-scripts "
                },
                {
                    "created": "2019-11-13T03:20:28.202802163Z",
                    "created_by": "|1 PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt  && rm -rf /nvidia"
                },
                {
                    "created": "2019-11-13T03:20:33.545861609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:38.781539249Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_BUILD_ID",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:44.008337813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_BUILD_ID=8777600",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:49.177725272Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.id=8777600",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:54.372410584Z",
                    "created_by": "/bin/sh -c #(nop)  ARG NVIDIA_BUILD_REF",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:20:59.649327026Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.build.ref=b16656a96f38aa26442503e85770be61c5fb8b30",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-13T03:21:04.847046444Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a74c07c6f8a9c7dada9009d94eb7ad5d07856d0fec154a36d8a33a222a4c76a0 in /opt/mellanox "
                },
                {
                    "created": "2019-11-13T03:21:10.9608137Z",
                    "created_by": "|2 NVIDIA_BUILD_REF=b16656a96f38aa26442503e85770be61c5fb8b30 PYVER=3.6 /bin/sh -c mv /opt/mellanox/DEBS/4.7-1.0.0/DEBS/* /opt/mellanox/DEBS/4.7-1.0.0/"
                },
                {
                    "created": "2019-11-13T03:21:17.077597532Z",
                    "created_by": "|2 NVIDIA_BUILD_REF=b16656a96f38aa26442503e85770be61c5fb8b30 PYVER=3.6 /bin/sh -c rm -rf /opt/mellanox/DEBS/4.7-1.0.0/DEBS"
                },
                {
                    "created": "2019-12-06T23:47:19.366905142Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-06T23:47:25.271774619Z",
                    "created_by": "/bin/sh -c apt-get update -y"
                },
                {
                    "created": "2019-12-07T00:01:38.974224267Z",
                    "created_by": "/bin/sh -c apt-get install -y libsndfile1 sox python-setuptools python-dev"
                },
                {
                    "created": "2019-12-07T00:01:40.471579147Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-07T00:01:40.811381048Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/tensorrt/bin:/usr/src/tensorrt/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-07T00:01:41.203130959Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /tmp/onnx-trt"
                },
                {
                    "created": "2019-12-07T00:06:42.841280422Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb7f4cca84118efd71812253639709aaeedd2d8c2598146315c1d3aea330b04 in . "
                },
                {
                    "created": "2019-12-07T00:07:05.127195728Z",
                    "created_by": "/bin/sh -c git clone https://github.com/onnx/onnx-tensorrt.git   && cd onnx-tensorrt   && git submodule update --init --recursive   && patch -f < ../onnx-trt.patch   && mkdir build && cd build   && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DGPU_ARCHS=\"60 70 75\"   && make -j16   && make install   && mv -f /usr/lib/libnvonnx* /usr/lib/x86_64-linux-gnu/   && ldconfig"
                },
                {
                    "created": "2019-12-07T00:07:06.015316146Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /workspace/nemo"
                },
                {
                    "created": "2019-12-07T00:07:06.415556367Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:133daf3065d6e3ce2917f4aa30f7a36dc743a7331f787c4c87306ccc50d4af78 in . "
                },
                {
                    "created": "2019-12-07T00:08:20.967111069Z",
                    "created_by": "/bin/sh -c pip install --disable-pip-version-check -U -r requirements.txt"
                },
                {
                    "created": "2020-01-02T18:34:43.611007459Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:bd5d0adc28f5127bd0193eac1ea9433f2281da7a24bfe029cbd9f9c41fc98040 in . "
                },
                {
                    "created": "2020-01-02T18:34:58.496994838Z",
                    "created_by": "/bin/sh -c cd nemo   && pip install .   && cd ../collections/nemo_asr   && pip install .   && cd ../nemo_nlp && pip install .   && cd ../nemo_simple_gan && pip install .   && cd ../nemo_tts && pip install ."
                },
                {
                    "created": "2020-01-02T18:34:59.143162353Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /workspace/nemo",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-02T18:35:01.401632292Z",
                    "created_by": "/bin/sh -c mv examples/ /workspace/nemo_examples   && rm -rf /workspace/nemo"
                },
                {
                    "created": "2020-01-02T18:35:03.020013965Z",
                    "created_by": "/bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh"
                },
                {
                    "created": "2020-01-02T18:35:03.587164883Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /workspace/nemo_examples",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:e35c1be53e84fe03fc129b524bddb994cfdf72969d34b5aad8bb52444af5e0ca",
                    "sha256:f73c85960e15d8e4ba2ec0fd290559ec211a3286eecfdbb03c9786af9f57254c",
                    "sha256:f8f61fdf7ce4c45f0ba5f13ebbc399623165bfd47254391d278e27def0afcc10",
                    "sha256:adef6c78ff233da7bcf453ad3337ebd8a467af8f653c02b580cd99dddf35e7d0",
                    "sha256:ae4e367d4ed51db809e26e0f1f230801d8076602c9a7b6401038ff5933a5850d",
                    "sha256:de6c5dc71cb43ac90fe81bc7307e226f61382d245cf4da79fd7c2cbdd7a60adb",
                    "sha256:2106c85f8c72b3d8a2405f4b2b3b722c9e9ae36bb9448db097303156b650d4da",
                    "sha256:5e264a05c849b6af4b8ff87146cbfd28e3f2a357290b3993b7551f49a4390168",
                    "sha256:beb23c3afc158931d3200a170a36b570332b0017ecf21482fcef630b3993013f",
                    "sha256:3c9a751db107a666f027ec2baf48bf66e7afdb2ca1f1f1d482ddc484e5172cca",
                    "sha256:ed4756d335c4438d43a3e0f93426e09d45a272739c64f444f4a47986c0d47861",
                    "sha256:da726e533907b231ca9b445518e07a7119d0395dd41973e173249fa0b08184cd",
                    "sha256:508c51636b2485a29e74b581f9c27b2c5f732d8d9788730cfa2af0791a5c7549",
                    "sha256:adedafa15dc0cbe221afe07a2a1890a0da927ae9d1884cd92d0567bc39e54202",
                    "sha256:565c2c6c1ca72546a246d1015c02c9f3acd051d5e2614ccf208e1d738f63168d",
                    "sha256:58bdc6c643be328a676ebd1fbf3df206cae1eb5f45b82fb4e2a97463ef26762f",
                    "sha256:9d95fde9a949ac1ada33a5566508193ed0d803518f35762fff245afa0dd5843f",
                    "sha256:29376ed98ab664437eacf1068158b7cc071237d51b788d277ef037754d091635",
                    "sha256:221e6eae7d02b6c3de89e1d673e111899ad80088bf705806dea5466e76fa8dba",
                    "sha256:2fd758fbadbe8e3002d4f15bc0f6756829af9377ed894b3e534422a67cc6dcc6",
                    "sha256:4a461b14e46a86044d543c576765ede48f3eae5c55bd9defa6d55a8fe2c6f607",
                    "sha256:c37abfc1104a7bb5c84366e1b743e9f19bf826276052c8a38dad9ce92f58006d",
                    "sha256:d7cbcee439626781f2beb72cf1ce3b359a31db438683fd3beb995b4284ca873c",
                    "sha256:0d456eb55901cd62cef95b877615e2bc5e54e8db91cfcd84a891783abd34c3f4",
                    "sha256:c12affd2f5325bdfc986f01e5f1c564279f7fd2e0c72e81767009ac427fa49e0",
                    "sha256:e4e7385ea0c856f7a0aae8fd32a9dbc69e673b4a87f0aebc0d32cd98cd7245d6",
                    "sha256:43681b50a1a62932a063af4054250205f8a98fde865c16df842ffc60f2bc697b",
                    "sha256:bad6928471573992cf918cd683bc9100ffa0459474a3297db8e147b51d343c87",
                    "sha256:d93772cd213230ec6dd7f3834a4ab7003e05a8d38363f9d84109040d5b53865f",
                    "sha256:e906380b23943ca7b1bc028ae6e23dad67c66012bfe462b77875bcb6ac00dcd7",
                    "sha256:474941a7c443b0375f1963a371187596eb0a9fa8d283dc53d0901d773a7fd7eb",
                    "sha256:7557900086bc338650da8836700fa08e44da5fed12e31a707cc1015aa564e7c2",
                    "sha256:4a0120a15628e633ca2bcb6432fd85ac4ece36e0ec86cf73086d24d417c3c18e",
                    "sha256:147ad738998cd47d87a3edf378037f75ad7ba797ab998007e9b7fcd5f0769313",
                    "sha256:ac53e1d2b05c13e308f0420263f9d4107093600d5a1d95e14cbcc8b2f5681490",
                    "sha256:502f9be875912bb108f4c27a97c589040014f32d95dbae3c2bd34b7c1e6ac438",
                    "sha256:352a3dba74647347ca81139d31fcc9aed780b1f7f395774d2d2b5e7315bbd953",
                    "sha256:462fff43e91a9a3a83fdd27a10f77e7e7c1c188ded113e974db4b43b97a40fab",
                    "sha256:ae2dad97cc499757af69d0c3a4708a5f407c50e68692cb9af951fe4783630ea2",
                    "sha256:b86320a0ec06c6494bf5bb634a113e86f34ebece563fe1922aa7ea45de36396d",
                    "sha256:66e403fa714727ecb4c9f84a7a6b721eb8419da8fb1a9a4c727e3f7a143a4553",
                    "sha256:535951164008029437f7e125d91448760015f6218f45a636c3d0daf6073fd726",
                    "sha256:77c953b42bcedd1ddbacca2824da2ff39bb7b6356f48b74b5f07f8ffcf7f811f",
                    "sha256:d7ff0ae378618dcbc3caa7dbcd174621b30c45cb1159dd7517b5efb43315e3a3",
                    "sha256:18af83990ad92cc40b341084c266684870575e6689b6105f5ddd7317f4302adb",
                    "sha256:df35668880b7a9a343b582906b356e199419dd95dcb76a2746a226f11074351d",
                    "sha256:408953c162981048a3e5755969fe88fc8eb58dad3eb73dabe5d310a84ea58d54",
                    "sha256:72ec6c006eaeafa8466fc24b3b55ef2c22138c0b6faf15cd52a7205e905be06f",
                    "sha256:4371a4dd3932cc14de1d77c00eefa27bd54b3cd2b0780f52a547597f9afc6559",
                    "sha256:cc868917156f59da87acf56c80ef21062af2c89c2e311cdd2a14f479f3af2ea6",
                    "sha256:63a8a9ceaa534d376366d1688735c4bfb194ee3b46012d8a2e5878a184259f36",
                    "sha256:70ab69ac7fb9f074d6adb562af613e4ef6ffe539e8d3d54e6fb11128d8dc8c0f",
                    "sha256:0cf8a1ca8f5c0bd24ad9d6f1d81ff24941c7f5781a9a5cbc64dbeeeb5c4507bb",
                    "sha256:81f6882c2289added29ff9a42f97bb0e95fdea5b59eef89173bc0280bcafc0a3",
                    "sha256:1b04f5721d26c39e2449a5ca681476a5f77b18b103b8cef6b9fa80b7968b52d2",
                    "sha256:718d26f997c94b3d6807b25f7def37831ffd200ac697cf4d905ca54de8e1227f",
                    "sha256:8bd5a96d8a14e2cc3f2f47e35fef61bd6be7ea8c6622fcd1ae6a2b5d1cb6a286",
                    "sha256:37fee6f0455b2baa0b8f024b9b86afaf0616e160e1da495e698e94bdd3926a0b",
                    "sha256:5ef96ab88e020007eec11336d843ad4064e4e178c8191ca905677f06ada1ba6f",
                    "sha256:f271d7e22662ff8569cae7283a8ce6d092787f28dbcddedf19eca33ee4961ace",
                    "sha256:dd4f4b19710ae5d880a8ab7c02b5739b48324ab9cc0f8dd22c2df14541b28625",
                    "sha256:7c1f9e32575b4122795124f82264a719fb1b63ddb0d5876ec47daf5cd4b91468",
                    "sha256:ddbf95372818b73a1425017742fd25fc1cc9de427a257f7b82a2ae61ec940be8",
                    "sha256:170901b3266fee8cf4aae06774cb374a73800da400d903dec4695be005f08501",
                    "sha256:cee32fce2cb72fc22da5a41fe3c296374a7a58270e453eee0e9291e960f33984",
                    "sha256:3fa83d778133dcb232d17b0ae60f5110160cae8a16c671375b802de4f37643d0",
                    "sha256:c87948ae601e6f6523b90033ba6c76148283679d8f63746bdd7e764d88b31d07",
                    "sha256:de9df0584db57359af81d2f79bf46290296f6c6f60dd9d5e199fefda9da35a90",
                    "sha256:9fa6cdad7eb5c182f032f9d76c224844c183268c42038639beca976a3436c998",
                    "sha256:8d846fec70d21f7806336d886dbc8e723ca6c264e51108528aecb69648d77b14",
                    "sha256:15a77a0d325664b289fc7517019ed78588cf3333c132267f02c3c2fafddaee6d",
                    "sha256:e512269a1145afb78b88519a4f094f10481e34aa2c8d913ed9e5e6e76106a43f",
                    "sha256:31c1df0cf7dc21b9093e912b24f8fc7ecb1d0dbe61a7d9504dfc53719bc4ca9b",
                    "sha256:e6015c1b25648c72f99c860ba72fd2702e502f84357c139fc6b15456313d07e0",
                    "sha256:a0b2379eae74495cbaeaac2b261390a59ba9a3135207b1e9a0d1d26de0d59c43"
                ]
            }
        },
        "v1.0.0b1": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.0.221",
                    "CUDA_DRIVER_VERSION=450.51.06",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.7.8",
                    "CUBLAS_VERSION=11.2.0.252",
                    "CUFFT_VERSION=10.2.1.245",
                    "CURAND_VERSION=10.2.1.245",
                    "CUSPARSE_VERSION=11.1.1.245",
                    "CUSOLVER_VERSION=10.6.0.245",
                    "NPP_VERSION=11.1.0.245",
                    "NVJPEG_VERSION=11.1.1.245",
                    "CUDNN_VERSION=8.0.2.39",
                    "TRT_VERSION=7.1.3.4",
                    "TRTOSS_VERSION=20.08-01",
                    "NSIGHT_SYSTEMS_VERSION=2020.3.2.6",
                    "NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "DALI_VERSION=0.24.0",
                    "DALI_BUILD=1472979",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.6-1.0.1",
                    "IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "OPENUCX_VERSION=1.6.1",
                    "OPENMPI_VERSION=3.1.6",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.08",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "COCOAPI_VERSION=2.0+nv0.4.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=15516749",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "15516749",
                    "com.nvidia.build.ref": "1888dc9fa05ea9e1d24276ba2eaf96e843b1ea6e",
                    "com.nvidia.cublas.version": "11.2.0.252",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.0.2.39",
                    "com.nvidia.cufft.version": "10.2.1.245",
                    "com.nvidia.curand.version": "10.2.1.245",
                    "com.nvidia.cusolver.version": "10.6.0.245",
                    "com.nvidia.cusparse.version": "11.1.1.245",
                    "com.nvidia.nccl.version": "2.7.8",
                    "com.nvidia.npp.version": "11.1.0.245",
                    "com.nvidia.nsightcompute.version": "2020.1.2.4",
                    "com.nvidia.nsightsystems.version": "2020.3.2.6",
                    "com.nvidia.nvjpeg.version": "11.1.1.245",
                    "com.nvidia.pytorch.version": "1.7.0a0+8deb4fe",
                    "com.nvidia.tensorrt.version": "7.1.3.4",
                    "com.nvidia.tensorrtoss.version": "20.08-01",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2020-10-05T10:06:33.783941083-07:00",
            "history": [
                {
                    "created": "2020-07-24T14:38:19.482143079Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9bbf45a5b2510d44d3206a028cf6502757884d49e46d3d2e6356c3a92c4309 in / "
                },
                {
                    "created": "2020-07-24T14:38:20.335965442Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-24T14:38:21.071294363Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-24T14:38:21.85928744Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-24T14:38:22.027273323Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-29T10:24:57.341605894-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:11.985717693-07:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:11.985717693-07:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:11.985717693-07:00",
                    "created_by": "ENV CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:11.985717693-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:13.59069993-07:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:14.564839091-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:15.720054564-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:16.810830696-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:17.689649561-07:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:18.387193532-07:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:19.113764539-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:38:20.014562929-07:00",
                    "created_by": "ENV NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.2.39 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.08-01 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:40:59.092506229-07:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.2.39 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.08-01 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:40:59.092506229-07:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.7.8 com.nvidia.cublas.version=11.2.0.252 com.nvidia.cufft.version=10.2.1.245 com.nvidia.curand.version=10.2.1.245 com.nvidia.cusparse.version=11.1.1.245 com.nvidia.cusolver.version=10.6.0.245 com.nvidia.npp.version=11.1.0.245 com.nvidia.nvjpeg.version=11.1.1.245 com.nvidia.cudnn.version=8.0.2.39 com.nvidia.tensorrt.version=7.1.3.4 com.nvidia.tensorrtoss.version=20.08-01 com.nvidia.nsightsystems.version=2020.3.2.6 com.nvidia.nsightcompute.version=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:40:59.092506229-07:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:40:59.092506229-07:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:40:59.092506229-07:00",
                    "created_by": "ENV DALI_VERSION=0.24.0 DALI_BUILD=1472979",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:41:00.099277438-07:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:41:01.264501155-07:00",
                    "created_by": "RUN |17 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.2.39 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.08-01 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 DALI_VERSION=0.24.0 DALI_BUILD=1472979 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:41:01.264501155-07:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:41:02.169978585-07:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:41:02.884024108-07:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:46:45.203396795-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:46:46.612042716-07:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:46:48.33282109-07:00",
                    "created_by": "ARG MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:46:48.33282109-07:00",
                    "created_by": "ENV MOFED_VERSION=4.6-1.0.1 IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:46:48.33282109-07:00",
                    "created_by": "RUN |1 MOFED_VERSION=4.6-1.0.1 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:46:49.240748275-07:00",
                    "created_by": "COPY openpmix-pmi1.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:46:49.240748275-07:00",
                    "created_by": "ARG OPENUCX_VERSION=1.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:46:49.240748275-07:00",
                    "created_by": "ARG OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:46:49.240748275-07:00",
                    "created_by": "ENV OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:58:15.511032726-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c wget -q -O - https://github.com/openucx/ucx/releases/download/v${OPENUCX_VERSION}/ucx-${OPENUCX_VERSION}.tar.gz | tar -xzf -  && cd ucx-${OPENUCX_VERSION}  && ./configure --prefix=/usr/local/ucx --enable-mt  && make -j\"$(nproc)\" install  && cd .. && rm -rf ucx-${OPENUCX_VERSION}  && echo \"/usr/local/ucx/lib\" >> /etc/ld.so.conf.d/openucx.conf  && wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ( cd opal/mca/pmix/pmix2x/pmix && patch -p1 < /tmp/openpmix-pmi1.patch && rm -f /tmp/openpmix-pmi1.patch )  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --with-ucx=/usr/local/ucx --with-ucx-libdir=/usr/local/ucx/lib --enable-mca-no-build=btl-uct                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:58:15.511032726-07:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T14:58:16.431891101-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T14:58:17.081666624-07:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T15:01:30.595678236-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && if [ ! -f /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h ]; then cp /nvidia/build-scripts/cudnn_backend.h /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h; ln -s /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h /usr/include/x86_64-linux-gnu/cudnn_backend.h; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T15:01:30.595678236-07:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:18.846305817Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:18.846305817Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:18.846305817Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYTORCH_VERSION=1.7.0a0+8deb4fe PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.08",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:18.846305817Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.7.0a0+8deb4fe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:18.846305817Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:41:57.504410853Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:41:57.504410853Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:41:57.504410853Z",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:43:45.172708307Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:43:45.172708307Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T22:44:39.820463812Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:51:52.620472364Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:52:38.959903134Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-05T22:52:38.959903134Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:31:30.128371362Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:32:31.393233986Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.2.14 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:32:39.876329758Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir tensorboard-*  && pip install --no-cache-dir tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:32:40.099977869Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:32:40.730090263Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:32:40.730090263Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:36:11.784087921Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir jupyter_tensorboard==0.2.0  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && ( cd node_modules/libnpx            && npm install update-notifier@^4.1.0 --production            && npm install yargs@^15.3.1 --production --force            && cd ../..            && npm install update-notifier@^4.1.0 --production )       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:36:12.264291319Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:36:12.264291319Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:36:12.264291319Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:36:12.264291319Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:36:12.264291319Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T22:36:12.560052502Z",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:47:26.795653185Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T22:47:26.795653185Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T23:44:33.160807132Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T23:44:57.524546521Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T23:44:57.524546521Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-18T23:45:34.568465377Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T23:45:34.808367093Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T23:45:49.177711993Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-18T23:45:49.388141823Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c patch -p0 < apex_sm80.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:13.712710552Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd pyprof && pip install --no-cache-dir -v .)  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:45.584159489Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:45.584159489Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:45.584159489Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:45.836057274Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:46.168098998Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:46.856504131Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:47.228206398Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:50.558339275Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:50.849551786Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:51.092654916Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:51.092654916Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.08 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=15516749",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "LABEL com.nvidia.build.id=15516749",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-19T00:45:52.146961748Z",
                    "created_by": "LABEL com.nvidia.build.ref=1888dc9fa05ea9e1d24276ba2eaf96e843b1ea6e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T10:58:31.206728641-07:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T10:58:31.206728641-07:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     python-setuptools     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-25T10:58:31.27989895-07:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-25T11:03:06.940969813-07:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.6 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-25T11:03:07.002856768-07:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T09:59:49.031676036-07:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T09:59:49.633716477-07:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements/*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T09:59:49.633716477-07:00",
                    "created_by": "ARG NEMO_VERSION=1.0.0b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-05T09:59:50.316571321-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0b1 /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:32.779831305-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0b1 /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:32.838774357-07:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:32.943737827-07:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:33.039823954-07:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:33.143799984-07:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:33.22379228-07:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-10-05T10:06:33.783941083-07:00",
                    "created_by": "RUN |1 NEMO_VERSION=1.0.0b1 /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7ef3687765828a9cb2645925f27febbac21a5adece69e8437c26184a897b6ec7",
                    "sha256:83f4287e1f0496940f8c222ca09cbaf2c7f564a10c57b4609800babe8d1b5b32",
                    "sha256:d3a6da143c913c5e605737a9d974638f75451b5c593e58eb7e132fcf0e23c6db",
                    "sha256:8682f9a74649fb9fc5d14f827a35259aae8b58c57df8d369f6aa2e92865930c2",
                    "sha256:996f146f5dbd1b652ab6aeec85178a96af12073dbd29ac6dc5e8ffb8ec975add",
                    "sha256:3445877f8a1f91d33b124397a69f0636db5b58fb1ea56e6f58272249ae019ae8",
                    "sha256:026b36b4dc3dbf618dea6edfc27621fd7cc09a100540f439086bbc5e36dc4488",
                    "sha256:417dc169ba53394cfed93a61ebb4b75d093be502315ac7fd7764eb5f4b22545c",
                    "sha256:f11c5173a9ae0f58aafd8f5d9bc4acc2acc9f4ea738dbd06596c8f6dd59b0e56",
                    "sha256:c3fd4487ecb72aea667cb1d0e1e9b04e15a227c210d7d77e8291ae1dd0e79d4b",
                    "sha256:e606b71a5be79716aaf9b9fc9c1ce6df934cd4a6ff47d2d2bf59cbc68fa18dd3",
                    "sha256:84ad3c4877ef367aa67c92d3eea1e19ef82d73291f213a53451a8c8e1e4934e9",
                    "sha256:9b50b917ef502e304d9c836e2152123658015e25ad2fb1c5a6d841a61e47393b",
                    "sha256:7fccf1b5f44c3e18e501a9bec6a24b15b5ef91a465c93d9a586e18f092a6542d",
                    "sha256:4e5530055b29b32a9b9f47bb7d0a9d86c5aee7fa140cd278f9425fb4286260c4",
                    "sha256:dd623a2b059bd9700a067f6a23a72b5f1376366c51919585651556d64ea2353a",
                    "sha256:31108b3c8971a36d2f4d23b31cc80756732ae86c964b95e3a9afe291854a69e1",
                    "sha256:9642546ec63571580b736f06a8c29c683b475acca9c005acd6128ad85fef3bb5",
                    "sha256:fc052a1a62051ae2ebe4ecf9cfe933efa786dd7daaf46ba7b29af815f0b5f584",
                    "sha256:f6a451c2f8add970d9faa3b1446101e68e3303f923526c07b6cb85ba41376642",
                    "sha256:3b1f1ccf7ee0d73d66de6441353eac23b1469540cf785de37b24f49c16760936",
                    "sha256:32877aea68cd3415251e2073afbfa832c3dea45537b2fbb219028a2b3b101d2b",
                    "sha256:a42876287df58187ba66ba8be141685f093631fe56ad6f6a6fa8270a5ee88ac9",
                    "sha256:d7dc87a0f3368380bcb5cebdcbe1596d63c3939ffef5b710b29c2f91b0df12b4",
                    "sha256:6d85dc9d77d9b50d76fae5987601eb5164f1b6974298db744cec16523d936e39",
                    "sha256:7f25196d29b9df3df424bddb598bed5efaf073e252f7d9b7eca192fbaf25257b",
                    "sha256:31b8fd8604331f17e3e8bbc705f1ef3ebc5d8c23c4b59c2a4e223503e8077e7e",
                    "sha256:9e623105ea4925defae5c60c9f8b1836addc5787b247246cc78f5b13b3016c07",
                    "sha256:8d378e883ce0f657d1a293575502a120d592088d868abf94226671551ab26de7",
                    "sha256:d12b34539c4b3325dab766271cb00fd958b1719372991726a65cc9127299cb5e",
                    "sha256:e4c2d305b6fe3fd92785f665e7b319c995de6a4b97cab76d3c91bcf77649d05d",
                    "sha256:919e6bba3a546ff5ec10069552199c96bcd23fd0575f31dd3be959d024322daa",
                    "sha256:db6473b919570492552d1837181574081023c9919e9d28e494b9635fc341a516",
                    "sha256:7b1e3347c77e57e05c671feb72819657dd8238edf73aca19e94ff778f9f8dd92",
                    "sha256:a36dc1b005d079a46deea886dbdab3d61ecb30194aa3ff7f4215e5dea5987a9e",
                    "sha256:0eb1ef29593c6f5a5ea27e9dd08c30cce91cffe73ad68e13e78dfdc68a0ce577",
                    "sha256:614e05efbb850fe9c45887066708fb91737753524a7e1050e358b383ac58397e",
                    "sha256:b6c838ca324c80fcf6da5bcd0e3d380c657ef628d6f7be38a5bab08413c35dd2",
                    "sha256:e24f08e715aae6be886f098ea0764d79f2d5cbd718fbdb8f3197b5c1b9965389",
                    "sha256:23f701b6160fe4937e193b155f03a937df52eb7b37fe6d45362dafcbf17437d7",
                    "sha256:449cc8ca60ec04b64ea345295a7788c6bab6076ccce0035bb99749c4ea552cc6",
                    "sha256:a09a757968f74a5908bc92a0fe47043c9cae392de29eba0adecc5e1338f7e162",
                    "sha256:f01f1df9aa18b3d63b01d3bdd54948f7bd398bd76798f99cec014dff4616b63a",
                    "sha256:d3bfbcc85b52905f23801d1f33974214f17b6a68c1b7252b95aaaaf53fba2f6a",
                    "sha256:83d7d45c9936c017f099f26b5ebf2db20001750aef9a8fd00224b3095929595d",
                    "sha256:495020ece1bb6fd286ef464ad8bd3a840006294858936c265bfeec0c360581d9",
                    "sha256:ca935b178613d31706236ff1c2fe8907d10d5e3c635e8f90beebb9eacc8d8521",
                    "sha256:aac92d1617bdfa39820a2e48ceb364fd0e2afd4cc6f08c2a81b2a0eadbb7583d",
                    "sha256:64cd481d042b4b8efce994e3712e451062dd53ee343d20ea2c1b1b857aab2c4e",
                    "sha256:b5f26cc777e6bdc03f5c910415ddd65be0af38c7a2ab8550025bc9a860f6e57a",
                    "sha256:f09079876d58380b42a8b0dacddd8ea25b9190b433b95d1470d19eecc368f22d",
                    "sha256:46093a8487546ccff6257be15b23dd806c1bb6ccbc33f537fe4e5ce645a273a7",
                    "sha256:1d34bedfd29d3a6028c76cb33f45854a53d7e574be4e192e2bc08b088c5644b1",
                    "sha256:2f558bfdeee72dd3da12c093695bd672ea78d6c353f09edf71b1058733a7c378",
                    "sha256:23554a3f2ae369f424b029fccd2db83a6c4eaa6a2dda350325fac03f21db3836",
                    "sha256:3a4bf1144bfae9feaa268ff10fe4e7ccc5e0f1f0a3bff0b20e334c962f05651a",
                    "sha256:ded3f2fc23bed287e5a0b2d5dc256355a89d6e117583af94d2cffddd869454b7",
                    "sha256:863d535cf0b1ce3a28be8eced77b34c13aeafc07f6dc8b9205e95c1da8c36879",
                    "sha256:a23756a3d8b680f41023f405cd1b0feb42d050d917d6836e656eca296f7b33ef",
                    "sha256:83aa2963b71e8983206309f4a0a3ce921a718d47f69fab4e857e32e793858d23",
                    "sha256:f4d57bf7e2652aac051ce7ed4372058936d30b8091e5a17fb34a891b94f385ad",
                    "sha256:b6f91c28957cf3935603ce17cbfffd69253ee6d765897b3a66f2a1da841724a3",
                    "sha256:2517a41037336a3871cd183836085569c26aaa62023a9f5a99169c43971f999a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9ef06f7805330a9d2dd53f95c42baef5246262aaa8db4e53513fcd9b656cd515",
                    "sha256:7eef71cc46551a06ebe9e8cace27b388fdaf44fcfa1d07853bd36db96e35f528",
                    "sha256:28b7a4ce42be81bfe4d987e36087dd87ead1b3854078464c0912b10f8317c698",
                    "sha256:266e1732b19b442dee872e3c4e4f9ed7cc180b5302b18e1f7021f786de398b3d",
                    "sha256:2696d1b2a0ee2279f1bbdff142a29727709f401bccf5b0cc425d74bbb46d2add",
                    "sha256:607512681c021e907decd3a077748d9a57e146ad0dbb7cd1af12edea572adaa1",
                    "sha256:40181b0ec13d838c9523faaa11105c381a7e2999a7b295564c9e67e985fe5392",
                    "sha256:f949b7fe170faf802a41e71d3658acaee645ade8e0bd2e02f16b13dc3244b467"
                ]
            }
        },
        "v1.0.0b2": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "6006/tcp": {},
                    "8888/tcp": {}
                },
                "Env": [
                    "PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "CUDA_VERSION=11.0.221",
                    "CUDA_DRIVER_VERSION=450.51.06",
                    "CUDA_CACHE_DISABLE=1",
                    "_CUDA_COMPAT_PATH=/usr/local/cuda/compat",
                    "ENV=/etc/shinit_v2",
                    "BASH_ENV=/etc/bash.bashrc",
                    "NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "NCCL_VERSION=2.7.8",
                    "CUBLAS_VERSION=11.2.0.252",
                    "CUFFT_VERSION=10.2.1.245",
                    "CURAND_VERSION=10.2.1.245",
                    "CUSPARSE_VERSION=11.1.1.245",
                    "CUSOLVER_VERSION=10.6.0.245",
                    "NPP_VERSION=11.1.0.245",
                    "NVJPEG_VERSION=11.1.1.245",
                    "CUDNN_VERSION=8.0.4.12",
                    "TRT_VERSION=7.1.3.4",
                    "TRTOSS_VERSION=20.09",
                    "NSIGHT_SYSTEMS_VERSION=2020.3.2.6",
                    "NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "DALI_VERSION=0.25.1",
                    "DALI_BUILD=1612461",
                    "DLPROF_VERSION=20.09",
                    "LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "MOFED_VERSION=4.6-1.0.1",
                    "IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "OPENUCX_VERSION=1.6.1",
                    "OPENMPI_VERSION=3.1.6",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_VERSION=1.7.0a0+8deb4fe",
                    "PYTORCH_BUILD_NUMBER=0",
                    "NVIDIA_PYTORCH_VERSION=20.09",
                    "NVM_DIR=/usr/local/nvm",
                    "JUPYTER_PORT=8888",
                    "TENSORBOARD_PORT=6006",
                    "TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "COCOAPI_VERSION=2.0+nv0.4.0",
                    "PYTHONIOENCODING=utf-8",
                    "LC_ALL=C.UTF-8",
                    "NVIDIA_BUILD_ID=16003719",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Entrypoint": [
                    "/usr/local/bin/nvidia_entrypoint.sh"
                ],
                "WorkingDir": "/workspace/nemo",
                "Labels": {
                    "com.nvidia.build.id": "16003719",
                    "com.nvidia.build.ref": "274fff44becb9e96ab3e4d344dad2c05c56138e8",
                    "com.nvidia.cublas.version": "11.2.0.252",
                    "com.nvidia.cuda.version": "9.0",
                    "com.nvidia.cudnn.version": "8.0.4.12",
                    "com.nvidia.cufft.version": "10.2.1.245",
                    "com.nvidia.curand.version": "10.2.1.245",
                    "com.nvidia.cusolver.version": "10.6.0.245",
                    "com.nvidia.cusparse.version": "11.1.1.245",
                    "com.nvidia.nccl.version": "2.7.8",
                    "com.nvidia.npp.version": "11.1.0.245",
                    "com.nvidia.nsightcompute.version": "2020.1.2.4",
                    "com.nvidia.nsightsystems.version": "2020.3.2.6",
                    "com.nvidia.nvjpeg.version": "11.1.1.245",
                    "com.nvidia.pytorch.version": "1.7.0a0+8deb4fe",
                    "com.nvidia.tensorrt.version": "7.1.3.4",
                    "com.nvidia.tensorrtoss.version": "20.09",
                    "com.nvidia.volumes.needed": "nvidia_driver"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2020-11-16T14:42:56.17548212-08:00",
            "history": [
                {
                    "created": "2020-08-19T21:13:50.365403739Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c125b7f411566e9daa738d8cb851098f36197810f06488c2609074296f294b2 in / "
                },
                {
                    "created": "2020-08-19T21:13:52.155890193Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:13:53.836167983Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:13:55.267773342Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:13:55.60892786Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:48.563694713-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         apt-utils         build-essential         ca-certificates         curl         patch         wget         jq         gnupg         libtcmalloc-minimal4 &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&         echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&         rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ARG CUDA_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ARG CUDA_DRIVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "ENV CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 CUDA_CACHE_DISABLE=1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:00:58.32029575-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c /nvidia/build-scripts/installCUDA.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:00:59.535084544-07:00",
                    "created_by": "COPY cudaCheck /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:00.646126284-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/sh-wrap /bin/sh-wrap # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:01.746149019-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c cp /tmp/cudaCheck/$(uname -m)/cudaCheck /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:02.787129419-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c rm -rf /tmp/cudaCheck # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:03.741007121-07:00",
                    "created_by": "COPY cudaCheck/shinit_v2 /etc/shinit_v2 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:04.430597304-07:00",
                    "created_by": "COPY cudaCheck/startup_scripts.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:05.066610849-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "RUN |2 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 /bin/sh -c patch -p0 < /tmp/startup_scripts.patch  &&  rm -f /tmp/startup_scripts.patch  &&  ln -sf /.singularity.d/libs /usr/local/lib/singularity  &&  ln -sf sh-wrap /bin/sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ENV _CUDA_COMPAT_PATH=/usr/local/cuda/compat ENV=/etc/shinit_v2 BASH_ENV=/etc/bash.bashrc NVIDIA_REQUIRE_CUDA=cuda>=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "LABEL com.nvidia.volumes.needed=nvidia_driver com.nvidia.cuda.version=9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NCCL_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUBLAS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUFFT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CURAND_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUSPARSE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUSOLVER_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NPP_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NVJPEG_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG CUDNN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG TRT_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG TRTOSS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NSIGHT_SYSTEMS_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ARG NSIGHT_COMPUTE_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:01:06.076419806-07:00",
                    "created_by": "ENV NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "RUN |15 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 /bin/sh -c /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && /nvidia/build-scripts/installNCU.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "LABEL com.nvidia.nccl.version=2.7.8 com.nvidia.cublas.version=11.2.0.252 com.nvidia.cufft.version=10.2.1.245 com.nvidia.curand.version=10.2.1.245 com.nvidia.cusparse.version=11.1.1.245 com.nvidia.cusolver.version=10.6.0.245 com.nvidia.npp.version=11.1.0.245 com.nvidia.nvjpeg.version=11.1.1.245 com.nvidia.cudnn.version=8.0.4.12 com.nvidia.tensorrt.version=7.1.3.4 com.nvidia.tensorrtoss.version=20.09 com.nvidia.nsightsystems.version=2020.3.2.6 com.nvidia.nsightcompute.version=2020.1.2.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DALI_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DALI_BUILD",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ARG DLPROF_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:24.884156206-07:00",
                    "created_by": "ENV DALI_VERSION=0.25.1 DALI_BUILD=1612461 DLPROF_VERSION=20.09",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:26.067359444-07:00",
                    "created_by": "ADD docs.tgz / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:27.382263266-07:00",
                    "created_by": "RUN |18 CUDA_VERSION=11.0.221 CUDA_DRIVER_VERSION=450.51.06 NCCL_VERSION=2.7.8 CUBLAS_VERSION=11.2.0.252 CUFFT_VERSION=10.2.1.245 CURAND_VERSION=10.2.1.245 CUSPARSE_VERSION=11.1.1.245 CUSOLVER_VERSION=10.6.0.245 NPP_VERSION=11.1.0.245 NVJPEG_VERSION=11.1.1.245 CUDNN_VERSION=8.0.4.12 TRT_VERSION=7.1.3.4 TRTOSS_VERSION=20.09 NSIGHT_SYSTEMS_VERSION=2020.3.2.6 NSIGHT_COMPUTE_VERSION=2020.1.2.4 DALI_VERSION=0.25.1 DALI_BUILD=1612461 DLPROF_VERSION=20.09 /bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf  && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:27.382263266-07:00",
                    "created_by": "ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=compute,utility,video",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:03:28.278192958-07:00",
                    "created_by": "COPY deviceQuery/deviceQuery /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:03:29.050477242-07:00",
                    "created_by": "COPY deviceQuery/checkSMVER.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:41.664073841-07:00",
                    "created_by": "RUN /bin/sh -c export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y --no-install-recommends         git         libglib2.0-0         less         libnl-route-3-200         libnuma-dev         libnuma1         libpmi2-0-dev         nano         numactl         openssh-client         vim  && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:43.073960325-07:00",
                    "created_by": "COPY mellanox /opt/mellanox # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "ARG MOFED_VERSION=4.6-1.0.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "ENV MOFED_VERSION=4.6-1.0.1 IBV_DRIVERS=/usr/lib/libibverbs/libmlx5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:44.724305603-07:00",
                    "created_by": "RUN |1 MOFED_VERSION=4.6-1.0.1 /bin/sh -c dpkg -i /opt/mellanox/DEBS/${MOFED_VERSION}/*_$(dpkg --print-architecture).deb  && ln -sf /opt/mellanox/change_mofed_version.sh /usr/local/bin/  && cd /usr/bin  && chmod a+w ibv_*  && cd /usr/lib  && touch libmlx5.so.1.0.0  && chmod -R a+w libibverbs* libmlx5.so.1.0.0  && ln -sf libmlx5.so.1.0.0 libmlx5.so.1  && chmod a+w libmlx5.so.1  && rm -f /etc/libibverbs.d/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "COPY openpmix-pmi1.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ARG OPENUCX_VERSION=1.6.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ARG OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:45.426341723-07:00",
                    "created_by": "ENV OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:20:09.33362069-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c wget -q -O - https://github.com/openucx/ucx/releases/download/v${OPENUCX_VERSION}/ucx-${OPENUCX_VERSION}.tar.gz | tar -xzf -  && cd ucx-${OPENUCX_VERSION}  && ./configure --prefix=/usr/local/ucx --enable-mt  && make -j\"$(nproc)\" install  && cd .. && rm -rf ucx-${OPENUCX_VERSION}  && echo \"/usr/local/ucx/lib\" >> /etc/ld.so.conf.d/openucx.conf  && wget -q -O - https://www.open-mpi.org/software/ompi/v$(echo \"${OPENMPI_VERSION}\" | cut -d . -f 1-2)/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf -  && cd openmpi-${OPENMPI_VERSION}  && ln -sf /usr/include/slurm-wlm /usr/include/slurm  && ( cd opal/mca/pmix/pmix2x/pmix && patch -p1 < /tmp/openpmix-pmi1.patch && rm -f /tmp/openpmix-pmi1.patch )  && ./configure --enable-orterun-prefix-by-default --with-verbs                 --with-pmi --with-pmix=internal                 --with-ucx=/usr/local/ucx --with-ucx-libdir=/usr/local/ucx/lib --enable-mca-no-build=btl-uct                 --prefix=/usr/local/mpi --disable-getpwuid  && make -j\"$(nproc)\" install  && cd .. && rm -rf openmpi-${OPENMPI_VERSION}  && echo \"/usr/local/mpi/lib\" >> /etc/ld.so.conf.d/openmpi.conf  && rm -f /usr/lib/libibverbs.so /usr/lib/libibverbs.a  && ldconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:20:09.33362069-07:00",
                    "created_by": "ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:20:10.311378343-07:00",
                    "created_by": "COPY singularity /.singularity.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:20:11.022321132-07:00",
                    "created_by": "COPY cuda-*.patch /tmp # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:23:00.474752623-07:00",
                    "created_by": "RUN |3 MOFED_VERSION=4.6-1.0.1 OPENUCX_VERSION=1.6.1 OPENMPI_VERSION=3.1.6 /bin/sh -c export DEVEL=1 BASE=0  && /nvidia/build-scripts/installNCU.sh  && /nvidia/build-scripts/installCUDA.sh  && /nvidia/build-scripts/installNCCL.sh  && /nvidia/build-scripts/installLIBS.sh  && /nvidia/build-scripts/installCUDNN.sh  && /nvidia/build-scripts/installTRT.sh  && /nvidia/build-scripts/installNSYS.sh  && if [ -f \"/tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch\" ]; then patch -p0 < /tmp/cuda-${_CUDA_VERSION_MAJMIN}.patch; fi  && if [ ! -f /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h ]; then cp /nvidia/build-scripts/cudnn_backend.h /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h; ln -s /usr/include/x86_64-linux-gnu/cudnn_backend_v8.h /usr/include/x86_64-linux-gnu/cudnn_backend.h; fi  && rm -f /tmp/cuda-*.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-09T22:23:00.474752623-07:00",
                    "created_by": "ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ARG NVIDIA_PYTORCH_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ARG PYTORCH_BUILD_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "ENV PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYTORCH_VERSION=1.7.0a0+8deb4fe PYTORCH_BUILD_NUMBER=0 NVIDIA_PYTORCH_VERSION=20.09",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "LABEL com.nvidia.pytorch.version=1.7.0a0+8deb4fe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:12:53.373169496Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c apt-get update && apt-get install -y --no-install-recommends          autoconf          automake          graphviz          libatlas-base-dev          libboost-program-options-dev          libgoogle-glog-dev          libbz2-dev          libleveldb-dev          liblmdb-dev          libprotobuf-dev          libsnappy-dev          libtool          libjsoncpp-dev          nasm          protobuf-compiler          pkg-config          cython          unzip          sox          libsndfile1          libpng-dev &&      rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "RUN |2 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe /bin/sh -c curl -L -k -o /opt/cmake-3.14.6-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.14.6/cmake-3.14.6-Linux-x86_64.tar.gz &&         pushd /opt &&         tar -xzf cmake-3.14.6-Linux-x86_64.tar.gz &&         rm cmake-3.14.6-Linux-x86_64.tar.gz &&         popd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "ENV PATH=/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:13:12.131892818Z",
                    "created_by": "ARG PYVER=3.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:14:23.749832158Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYVER cmake conda-build numpy pyyaml scipy ipython mkl=2019.1 mkl-include=2019.1 ninja spacy mock numba=0.43.1 openblas!=0.3.6 &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:14:23.749832158Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:14:48.406311121Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install hypothesis==4.50.8 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:15.055055131Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c OPENCV_VERSION=3.4.0 &&     cd / &&     wget -q -O - https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf - &&     cd /opencv-${OPENCV_VERSION} && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr           -DWITH_CUDA=OFF -DWITH_1394=OFF           -DBUILD_opencv_cudalegacy=OFF -DBUILD_opencv_stitching=OFF -DWITH_IPP=OFF .. &&     make -j\"$(nproc)\" install &&     rm -rf /opencv-${OPENCV_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:55.029907304Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c JPEG_TURBO_VERSION=1.5.2 &&     wget -q -O - https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf - &&     cd libjpeg-turbo-${JPEG_TURBO_VERSION} &&     autoreconf -fiv &&     ./configure --enable-shared --prefix=/usr 2>&1 >/dev/null &&     make -j\"$(nproc)\" install 2>&1 >/dev/null &&     rm -rf /libjpeg-turbo-${JPEG_TURBO_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:21:55.029907304Z",
                    "created_by": "WORKDIR /opt/pytorch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-10T06:22:41.183014537Z",
                    "created_by": "COPY . . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-10T06:24:08.821509591Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir -r text/requirements.txt  && pip install --no-cache-dir -r caffe2_requirements.txt  && pip install --no-cache-dir jupyterlab==1.2.14 python-hostlist # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:14.444569704Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c mkdir -p /opt/dlprof  && cp /nvidia/opt/dlprof/bin/dlprof /opt/dlprof/  && cp /nvidia/workspace/LICENSE     /opt/dlprof/  && cp /nvidia/workspace/README.md   /opt/dlprof/  && ln -sf /opt/dlprof/dlprof /usr/local/bin/dlprof  && cd /nvidia/opt/tensorboard_install  && pip install --no-cache-dir tensorboard-*  && pip install --no-cache-dir tensorboard_plugin_dlprof-* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:14.807133991Z",
                    "created_by": "COPY tensorboard.patch /tmp/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:18.161360797Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c TBFILE=$(find $(find /usr /opt -type d -name tensorboard) -type f -name core_plugin.py)  && patch $TBFILE < /tmp/tensorboard.patch  && rm -f /tmp/tensorboard.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T00:57:18.161360797Z",
                    "created_by": "ENV NVM_DIR=/usr/local/nvm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:50.371977717Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir jupyter_tensorboard==0.2.0  && mkdir -p $NVM_DIR  && curl -Lo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  && source \"$NVM_DIR/nvm.sh\"  && nvm install node  && jupyter labextension install jupyterlab_tensorboard  && jupyter serverextension enable jupyterlab  && pip install --no-cache-dir jupytext  && jupyter labextension install jupyterlab-jupytext  && ( cd $NVM_DIR/versions/node/$(node -v)/lib/node_modules/npm       && ( cd node_modules/libnpx            && npm install update-notifier@^4.1.0 --production            && npm install yargs@^15.3.1 --production --force            && cd ../..            && npm install update-notifier@^4.1.0 --production )       && npm prune --production )  && ( cd /opt/conda/share/jupyter/lab/staging       && npm prune --production )  && npm cache clean --force  && rm -rf /usr/local/share/.cache  && echo \"source $NVM_DIR/nvm.sh\" >> /etc/bash.bashrc  && mv /root/.jupyter/jupyter_notebook_config.json /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "COPY jupyter_notebook_config.py /opt/conda/etc/jupyter/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "ENV JUPYTER_PORT=8888",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "ENV TENSORBOARD_PORT=6006",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "EXPOSE map[8888/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.185312816Z",
                    "created_by": "EXPOSE map[6006/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T01:00:51.598898623Z",
                    "created_by": "COPY trtis/* pytorch/caffe2/core/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:12:43.480641038Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c conda build magma-cuda/ &&     conda install `conda build --output magma-cuda` &&     rm -rf conda `conda build --output magma-cuda` &&      /opt/conda/bin/conda clean -ya # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T01:12:43.480641038Z",
                    "created_by": "ENV TORCH_CUDA_ARCH_LIST=5.2 6.0 6.1 7.0 7.5 8.0+PTX",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:04:57.760793231Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c cd pytorch &&     CUDA_HOME=\"/usr/local/cuda\"     CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"     NCCL_INCLUDE_DIR=\"/usr/include/\"     NCCL_LIB_DIR=\"/usr/lib/\"     USE_SYSTEM_NCCL=1     USE_OPENCV=1     pip install --no-cache-dir -v . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:10.283351614Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c if dpkg --compare-versions ${DALI_VERSION} lt 0.23; then       DALI_URL_SUFFIX=\"/cuda/${CUDA_VERSION%%.*}.0\";     else       DALI_PKG_SUFFIX=\"-cuda${CUDA_VERSION%%.*}0\";     fi  && pip install --no-cache-dir                 --extra-index-url https://developer.download.nvidia.com/compute/redist                 --extra-index-url http://sqrl/dldata/pip-simple${DALI_URL_SUFFIX:-} --trusted-host sqrl         nvidia-dali${DALI_PKG_SUFFIX:-}==${DALI_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:10.283351614Z",
                    "created_by": "ENV COCOAPI_VERSION=2.0+nv0.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:05:34.586094024Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//')  && pip install --no-cache-dir cython pybind11  && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:35.012061967Z",
                    "created_by": "COPY singularity/ /.singularity.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:49.060933044Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip install --no-cache-dir librosa==0.6.3 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:05:49.425955207Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c patch -p0 < apex_sm80.patch # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:58:59.287416598Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ( cd vision && FORCE_CUDA=1 pip install --no-cache-dir -v . )  && ( cd vision && mkdir build && cd build && cmake -DWITH_CUDA=1 -DCMAKE_PREFIX_PATH=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` .. && make && make install )  && ( cd apex && pip install --no-cache-dir -v --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--bnp\" --global-option=\"--xentropy\" --global-option=\"--deprecated_fused_adam\" --global-option=\"--fast_multihead_attn\" --global-option=\"--distributed_lamb\" . )  && ( cd text && pip install --no-cache-dir -v . )  && ( cd pyprof && pip install --no-cache-dir -v .)  && ( cd examples/gnmt && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ncf && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/tacotron2 && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/ssd && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/maskrcnn/pytorch && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -v . )  && ( cd examples/bert/ && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/transformer-xl && pip install --no-cache-dir -r requirements.txt )  && ( cd examples/jasper && pip install --no-cache-dir -r requirements.txt )  && ( cd pytorch/third_party/onnx && pip install --no-cache-dir -v . ) # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c pip uninstall -y pillow  && cd /tmp  && git clone https://github.com/uploadcare/pillow-simd  && cd pillow-simd  && git fetch --all --tags --prune  && git checkout tags/v5.3.0.post1  && sed -i 's/DEBUG = False/DEBUG = True/' setup.py  && CC=\"cc -mavx\" pip install --no-cache-dir -v .  && rm -rf ../pillow-simd # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "ENV PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:59:31.995879811Z",
                    "created_by": "WORKDIR /workspace",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T02:59:32.409605835Z",
                    "created_by": "COPY NVREADME.md README.md # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:33.699345172Z",
                    "created_by": "COPY docker-examples docker-examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:36.068674849Z",
                    "created_by": "COPY examples examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T02:59:37.25331325Z",
                    "created_by": "COPY tutorials tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:00.148975309Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c chmod -R a+w . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:00.972903963Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c ln -sf ${_CUDA_COMPAT_PATH}/lib.real ${_CUDA_COMPAT_PATH}/lib  && echo ${_CUDA_COMPAT_PATH}/lib > /etc/ld.so.conf.d/00-cuda-compat.conf  && ldconfig  && rm -f ${_CUDA_COMPAT_PATH}/lib # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:01.355010604Z",
                    "created_by": "COPY nvidia_entrypoint.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:01.355010604Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/nvidia_entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "RUN |3 NVIDIA_PYTORCH_VERSION=20.09 PYTORCH_BUILD_VERSION=1.7.0a0+8deb4fe PYVER=3.6 /bin/sh -c BASE=0 DEVEL=0 SAMPLES=0 PYTHON=1 /nvidia/build-scripts/installTRT.sh  && mv /usr/src/tensorrt /opt  && ln -s /opt/tensorrt /usr/src/tensorrt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/opt/cmake-3.14.6-Linux-x86_64/bin/:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ARG NVIDIA_BUILD_ID",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ENV NVIDIA_BUILD_ID=16003719",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "LABEL com.nvidia.build.id=16003719",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "ARG NVIDIA_BUILD_REF",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-11T03:00:03.477272144Z",
                    "created_by": "LABEL com.nvidia.build.ref=274fff44becb9e96ab3e4d344dad2c05c56138e8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-16T14:36:48.632101893-08:00",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-16T14:36:48.632101893-08:00",
                    "created_by": "RUN /bin/sh -c apt-get update &&     apt-get install -y     libsndfile1 sox     libfreetype6     python-setuptools swig     python-dev ffmpeg &&     rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:36:48.687185497-08:00",
                    "created_by": "WORKDIR /tmp/torchaudio_build",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:41:00.348332658-08:00",
                    "created_by": "RUN /bin/sh -c git clone --depth 1 --branch release/0.6 https://github.com/pytorch/audio.git &&     cd audio &&     BUILD_SOX=1 python setup.py install &&     cd .. && rm -r audio # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:41:00.407163075-08:00",
                    "created_by": "WORKDIR /tmp/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:41:00.485963192-08:00",
                    "created_by": "COPY requirements . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:41:01.225851972-08:00",
                    "created_by": "RUN /bin/sh -c for f in $(ls requirements/*.txt); do pip install --disable-pip-version-check --no-cache-dir -r $f; done # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:41:01.325910766-08:00",
                    "created_by": "COPY scripts/install_ctc_decoders.sh . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:06.910485084-08:00",
                    "created_by": "RUN /bin/sh -c ./install_ctc_decoders.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:06.910485084-08:00",
                    "created_by": "ARG NEMO_VERSION=1.0.0b2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-16T14:42:07.764596261-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=stable-76-g624099bd /bin/sh -c /usr/bin/test -n \"$NEMO_VERSION\" &&     /bin/echo \"export NEMO_VERSION=${NEMO_VERSION}\" >> /root/.bashrc &&     /bin/echo \"export BASE_IMAGE=${BASE_IMAGE}\" >> /root/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.024918138-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=stable-76-g624099bd /bin/sh -c cd /tmp/nemo && pip install \".[all]\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.079234531-08:00",
                    "created_by": "WORKDIR /workspace/nemo",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.177833717-08:00",
                    "created_by": "COPY scripts /workspace/nemo/scripts # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.27396466-08:00",
                    "created_by": "COPY examples /workspace/nemo/examples # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.397845872-08:00",
                    "created_by": "COPY tests /workspace/nemo/tests # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:55.625857691-08:00",
                    "created_by": "COPY tutorials /workspace/nemo/tutorials # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-16T14:42:56.17548212-08:00",
                    "created_by": "RUN |1 NEMO_VERSION=stable-76-g624099bd /bin/sh -c printf \"#!/bin/bash\\njupyter lab --no-browser --allow-root --ip=0.0.0.0\" >> start-jupyter.sh &&     chmod +x start-jupyter.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79bde4d54386664324ce9b6179a3265ca96e6c8f05c06ded53856a670874c715",
                    "sha256:2f37d11021878811b25cc6a3c6d48a0eb6f57a0b0d42f954123a18c17e2abf56",
                    "sha256:2ba5b91ca2b0c27b8ca3503b93164e9ec29ef5ae72e5272192839347e9f951dd",
                    "sha256:001e4a80973b4bc154292425871684a0c1fa422c344186516dd6f792606ed9d6",
                    "sha256:103b2366deb90ace8862004394afe46bc75ba6b1884a74889f5216cf787047e8",
                    "sha256:673d2e71c352f8e576febc45dedf2d09f2be3c846299aca87711778a3e7b3c24",
                    "sha256:6cdd3f5c0c4772191874a82f2a51ae7acd8d5f1e8686780de410342c9a621629",
                    "sha256:9cb9bbdf26c764ceb1e43746afbad1cb7c00081ef7eaa34815c4b5c8daf7fc50",
                    "sha256:3c88796a316a292a4e0d23506ab0f7bc1a028df3caf72509e23f0ef3e877910f",
                    "sha256:7e406f205b51ebbc546b70f85a1198a75eb7f9cedd968659e0859e414aa0e9fc",
                    "sha256:8ca008540bf67adf2ebcbaa114328e3880cec5bcc510e4870c3c23895be03ad0",
                    "sha256:7cc099a5180a7ef9db482abe386f212af4f47d29d888d154568c19b61d1065a0",
                    "sha256:7ccd2ebdfbd9c6d8131cd52ee46d62fe05968c0614ed956587439bef758ef835",
                    "sha256:55529d514af9914921058f02c1e4c73251eef4ddbeee656801afeb5b408011d4",
                    "sha256:aa80a21342cbf1282858579a5497359c6190ad81b925282013c74d7d30de2e6a",
                    "sha256:3d6f4e939f523d94c01868371ef4474d8a4cb0db0597563348dd30a5bbcd126d",
                    "sha256:59a3e34640487f5ca0339ce01cdd13a0aee2b354c69a9ad3ceb17fb9c8c5a999",
                    "sha256:be7aa80d83c6f0b0ed33fddb705dedbead1c13413863eda50a19082b02e6a7e3",
                    "sha256:e464e35a7e2755cec80f4f08f07aba0070486b9334ab9339a3ae30b8e550b3e0",
                    "sha256:07e00fb9a50420ea6eb1c9ac44028335693e6f37a4e0e63d65e2be757ccdab74",
                    "sha256:1b8fe36779c8439102c6f8e12c025a6238077d5bd05007faeb50c4e7fdaa6873",
                    "sha256:8703b41846a4e4ad7b95268df3d49ab3702e3ff6bcf6cbce423ad33d7b117a91",
                    "sha256:df45a1d0ab62f79061698c33bdd7de3b47f3b335e858545b6b9dd1bf225c7afd",
                    "sha256:492f93eff8c5528f91f32dcde495b7fb29ac694c9278e1911941a13b00099334",
                    "sha256:27d83e489ae575c345b625fda58d7fc9512c629a3317658b3f64806d83bd8a7b",
                    "sha256:59d833a95ec42b496ff74e23a3cc0093ddbb6d3aad1ea7f7981d65c8eab29f62",
                    "sha256:c2cc1342212061cb919e945d076a38ccf48f5703cabba44fc2f923b9064a4bb6",
                    "sha256:136744e2d2d033027ef19d8a6f6fff047fa361534cca0939aefe525b387bec89",
                    "sha256:3a4d7dd80641b0cd8ea5a7113c61207dbdc45f69abbc5f7f8f5e67a242fe4f62",
                    "sha256:ee413f311bd0154b1050028749ed2df682c752ecc1e1c4585052c0ef68734d2b",
                    "sha256:b9c72692e9f58d740628de02840759954f12271ab8a8435116f39b5cc6f7fc3c",
                    "sha256:71d5929dd334693526aa02efa3ea23fed9b3a19e78ca4d3dc04b9748cd1c0313",
                    "sha256:7a5edbb3a3b6fbd466187db395ca904f149859fedf4e9a9de61807f0a6e49976",
                    "sha256:13e630d9c7cc5fc12d54030b2bed559fdd00af32cdf349d815d26f601da41024",
                    "sha256:1dc92ee1883cfef35421a2178815c0dce057e540615ba099365eb4ba4f9bfe51",
                    "sha256:f0926799772f4308794908181fde293f04f849d6348fa8664b50ea7c21d21a10",
                    "sha256:86befe175c1500fcb990cf57c7ceca4a4e825f9aa8dd43d27b29fd19cb51cd39",
                    "sha256:73e2ce40fc1c3d701cec0c042706cf3c35ac05e9a25142df31d9bf570f6487fd",
                    "sha256:632b08b9e97609666427022c6fad9e7bb38f5938a418ff0834cc5a5de2c156f9",
                    "sha256:54b2cad44a0563156e5b821efaa142ace4cbf0173cb9c858240cc5d9f4de5698",
                    "sha256:67a27083b7e939cf291d209fc734b9fb7c8716d35117aab616d6c276cb355a0f",
                    "sha256:734592521cf5401a1503b5419e0fa043cd98698f69c3b19a537874af248bb161",
                    "sha256:711495c4ccae94240c6a80b51cf72df63df5167fff9c0967b498135b9ce12526",
                    "sha256:5ba8d7b881317f6bcce0d7cabc0d1ed77f233dcdac8cd7fabfee0257eaf5d349",
                    "sha256:198d0c99ad360c10c81376beaf66c5d02382138413bf19a74788546999c57737",
                    "sha256:669ebd7d2be2618ed12b120e57b8655c078de77ef613de31c77c6568ca26b0c6",
                    "sha256:2dd9e80f85623b894631a4d1d2dc09c784ae437ece9da06918af1f6a5ad720f2",
                    "sha256:bd8da533b7bc0670ad4dd4a5ab917a0ac92138dff75e6043bcf83201ffca526e",
                    "sha256:a770f2e2a7783a503fef3b333e98a29264dd3aeffcf350e9867c15796416e0f0",
                    "sha256:81c13de9fc30a03ea2560ee4b8cd536d367484b00148a6278a5419f524eee8f6",
                    "sha256:60e9127fdb2f750f52b1609e0c2c42581b1450b8201b1ea69bb20bb7cd2fadb8",
                    "sha256:4384af49a52a372ed2db916cbf7f1af6648ddc51e08bccb93ab00a9d88cda4bd",
                    "sha256:af598e1a5e94a8506e626c02521156fe71a9debf58aed4620684c213cd8fa95f",
                    "sha256:9bda65e014b20cbfd8319f39552878fe8a2541c653f52906033766a45e568fb6",
                    "sha256:5b7f27e61382bbc65384db4385ac99fc27dab1254d34cf5b584480fce2ddbc8b",
                    "sha256:2d019f42b7a481d2f58b2c201b448ece608982453ca859b635785e4ee90925ef",
                    "sha256:a20990e2cf5f17bbd62629e4b342da8591bc76a01ebb1300fa2aabd9b0a91988",
                    "sha256:076b98ac822c630de572ed03a0b56dd501e14a016182b3f207f517f04857cab5",
                    "sha256:2370658067b61580efa90905cd478dc1bbbc73383c6184b81f4c4c5c87eb868e",
                    "sha256:ddddf13ce0cca69cf7d2dc0976f129bdc8416131a92587ec26190bcbb377ad59",
                    "sha256:1d98ad1b2f97b0bc6595e55081e81ef09b4bede10494e03f05a30047d86074ca",
                    "sha256:1ae73ff822e571d836da5406468e8d6e4949fdf95ed90c0cb1e5f5ddc4744ad0",
                    "sha256:a2e7101b399e5d5090aa9cd2b108eebda44f191106c8b1337ca1ec9aff202927",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:685de77017c72d9b106f29ea776af04e47e51e986c92c7011443dcfab0fe25b4",
                    "sha256:19681bbe8727ab6484cda9c956367755848726af10d2b657cfdda1c0dc5fd231",
                    "sha256:f212b50db176a3310c8fcf7cd04d60afdd919bdae16fea20fbb0f1bc586d9a46",
                    "sha256:b31be0907acfb6ae96e4173e01a3ad42086f4ecd053f15b30710d1009d3ec4e8",
                    "sha256:258369e36186303386e38ad8106eefc9186d16303a41c25d59215a49f07ad114",
                    "sha256:f862f6474ac8e0f5bf33030022eb91ce76035fcc48ddc437360a34a14cda4123",
                    "sha256:650d338c91646c9f4817663f350ae8e6a99284da88fabf5926a9c9faab12fb41",
                    "sha256:672f234ea60dd26c80aa80415f9a45b6860b23de3522952e405605bd6c397097",
                    "sha256:af412c9c16130bcdd632762ab5de8d5f60ae31a6468675d982e121414d132006",
                    "sha256:ae0a46e005ffc717894e5b9efb2a6de07efb8bb189abc421679e0446cca4d47f"
                ]
            }
        }
    }
}