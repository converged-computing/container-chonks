{
    "manifests": {
        "10-2.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12513,
                "digest": "sha256:db42e582f5237c99eada2e6e75aa624041942f0f109fde559e6e9fa366de7eae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22567461,
                    "digest": "sha256:bff3e048017eab8adaed886bad4b3c5c81f7d952b65b056dca8d6dbc198222dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4504012,
                    "digest": "sha256:e3e180bf7c2b75cbe0539bdda86be1778c5cff515fd4d2fd1671cee474767247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1809,
                    "digest": "sha256:62eff3cc0cffa06c87b054d80b9cf7b92dc8a30a79ffd76615d8a094bc8db529"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1379540,
                    "digest": "sha256:3d90a128d4ff28427727132505393f13a12f3a48de87d34d6da7311c74f84725"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6185518,
                    "digest": "sha256:ba4ce0c5ab294a5ee7552124f1f3c98e3b3e79ae31292e4dc53cf5e71cf01b24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1249914,
                    "digest": "sha256:a8f4b87076a9ea0651d3daaeeeef4d715f2ce6a4a56c5343699137f7ddec9912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:4b437d281a7ef52bf6cd87d29a8f876221df939c81c370acadd60ac14e510396"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5584,
                    "digest": "sha256:f1841d9dcb1709582688c9abedfda93683814753599bb05d62061e5c92d7c826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38194685,
                    "digest": "sha256:b05674a6c170d7fe34d5a066a31aa6239b50060a5db05ef80df47e6619454390"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8075,
                    "digest": "sha256:d59b5be914c60503a052995c2374272a714acbba300daac3df6d80433e229fbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:901d5d9b0beba7d0524d6b184d53cb88a0ba72096cc5aa830bfb0b7e80117852"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:4a7aa9546b2c75d933a74dd0afc45a3040a35fe61070d23085b509f95ee4b27b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:0a0d389be22ff72bd1be5e24615e9a163b138f08809fce95213a47fec76cf795"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:fb7bd7cfbcd22ead436a96964deeba89c34d1bb1c2bc252a182e36dd9a7256f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42600646,
                    "digest": "sha256:202743dae66f2350be0f63829765ef97a6daa4fbee401f06f9dd95f4c093c3a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:2f1037ffdf48d077c6037d1e3f7c57f8d5b7965a708f1cacaa5dad7470922872"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 602,
                    "digest": "sha256:100ca40d1b66c3d0849b8df31b3b273446bef044e80e50c96e7df3c0795e08a9"
                }
            ]
        },
        "10-2.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12894,
                "digest": "sha256:82cadaebf2adb4f5ccb7ac58986d53737e348c2c03f25fba5fe13f927958bdd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28346415,
                    "digest": "sha256:908b209f0e5d4d547facdf10b8cbebfdfdf8af44711d926600fffc38cd990a0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7727,
                    "digest": "sha256:0c2662bedcd0091b46f2e7a86d419285a675bd5645aaef7b4dee874890174f6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:90917b39c4535167c5d2c476232cf7a2b52535b9187640210c9890f13246f193"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:ad56e86c71b4b90a2b7c24932ea24f4f145809b36ad4f4bf06c5f4ab4d365c8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4703,
                    "digest": "sha256:0978010571cc0259e3c73bf65a854766479971c061ea67c581755540eb070ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:e9f6f0b81bdb47a74db802fd87df1787855405b6b2c7e9b5985944004b3870ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39701461,
                    "digest": "sha256:17ddc79162c68c19fb35cbd192ddabddf6e08dccfab27220f3e47c9c1c1d5bd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:9d3de1cccae1eaac89723becbb18efcadb4565dcabe8cfc220a3976a185faba3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:fdbd505661de820f3eccb3b6fc2d4e8f1d602f1cfc61d017cdb0c9729267c568"
                }
            ]
        },
        "10-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12389,
                "digest": "sha256:e80159768c72a15e3dd58837ba22547f8fee7e79cb7f3b9761ad7c59bb640a4e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22527860,
                    "digest": "sha256:e50c3c9ef5a201a24959788dcbc7ebf88d95c63e132a4d7396ce541127afd88e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4502081,
                    "digest": "sha256:fad6bf221c0213499cecb70cead9ad7c1f35409b559ef2a70d496bcf45bc80ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1778,
                    "digest": "sha256:0dcec84eca9f0a5aa4b27b1ba88fe8a6cc971f383b6a431bc3ff04fa750f9dca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412088,
                    "digest": "sha256:a24f79fe54f505dd21dc3e687787834c53791bc9087639dd7c41213f5ee60031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6183102,
                    "digest": "sha256:71577bc8bcc3f22a71e8ea09e2096e64ca1ddb4472374b7b8b0d8a94d15b3554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 384923,
                    "digest": "sha256:88bf41ecdbbc463670707ad57424ee63acef869288abcb7891df2c4acf0da653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:ada30a92552b95d357827688622b283e0a00bbd052380baa0427773736feb575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5345,
                    "digest": "sha256:834f3991a1d69d82a0cb722b80c8e53a18956ab1f9ca134dd5e3b0a240d774c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38111736,
                    "digest": "sha256:e4cbcadaefe362f8e5d494c66507276e08bbc7d04b02acc94a57622935dcb78a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8066,
                    "digest": "sha256:4208290a961c73cf47d3e63c7fdaef98171b9e01cebc72c963d9cb2e0c8c4f2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:9d5e9c97f16e9ac4cc9ed1ddcb9fba8f0d33b62524b1ebf222b9b7b87b1be715"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:b8fb9b65af3c401952fd22d2073565100a9dd5629c6906e9cab147cf68c4d37b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4267,
                    "digest": "sha256:a8c2c8be4011cb5dc29447b99e5d7b0314a6887d2021d6ea42f1c27f75fd69f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:76c1901131843b68af1a4294611a2a5c15df6628dc4b7196d5e6794665ca3912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42761865,
                    "digest": "sha256:d5f9d49eacfe7001723513c63e8e17e46badadf382eb3bd4130fceb2aab3a8f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:57dcd4644ee3c0b9bbd03a78d42e87d03958895c3b1f45b606cc19277e3d977e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:747c4cde8d9e99be58075a7c9f27ae4ea4f0b75d1707b2ef2abd8d8a2c505a1d"
                }
            ]
        },
        "10-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10711,
                "digest": "sha256:2184fd94bc7261a880d4c723872c94d1e1e4824bbeb21c8442dcf3251e8cefe8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2796945,
                    "digest": "sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1247,
                    "digest": "sha256:b05eb41eecb97b89919d2eacdc86aa1332e168aa4ff3750c35c41525c333054c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:8a37c8fecb6acc85d913b4779946759124998986425d194ff748d6c12dabb1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25696921,
                    "digest": "sha256:de50a4fd56040315dc0ff87df7323bb6db79a15d27a886d98a15bb5adec41eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7352,
                    "digest": "sha256:8e124ac57ff6179447a5f7d08f4354f886526aafa926c677ee5ef38f9c873260"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:0c4ef1eef9a9ca517edddb3b0a32369e83df0b73733e00d8f01f4d4aee51a906"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:181d832227f3609a6b528b3c9df5c8dc48778c80ee9ab2ec746a54b7481c93cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4263,
                    "digest": "sha256:77db0df79fc6c4e82e845d8d4ddf6a3579906477390841fef259ae43426d0900"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:46f72f96f6f462384b01a27c8dbc9a15ac244821e2a0d603c3920d24a19d0c79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41488708,
                    "digest": "sha256:d3990654d5d521fd42441b90ee82468b93d26384b22ca4ceb9780b52c0d6d76f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:05382ebf3d27dd4406e8d49fe1cc98a24c09e18e4e9d25601990080c8eadce83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:b2d44a171b62cbec3a767d7cde121d9d248d7ed05d35b4e07a4dcbc7a476b199"
                }
            ]
        },
        "10-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12193,
                "digest": "sha256:374c1ddf2256e76825bbb1f4c27251131775fd453f7f02f9337710028e86663d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38785620,
                    "digest": "sha256:9141e83d9f7f1e0e3f8995b873b1d7069ff4651d313dd8f1a68d989cad49b8ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8078,
                    "digest": "sha256:a5bf94b645ab43b577855f0455c37c2dfd8f3faabc98601cc6eefa45b8152635"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:ccde8c33b2505072b08761899b18ce5f50c736ed253968e4e819dff94bb172b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:25338b1c24c6ce317b21177273c13f75499ce56950efbd9e786322cdae01073e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4715,
                    "digest": "sha256:4590f159f44944037f269d53995a07ff7032861c4b1d111a15ee7adae6661c6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:0860f861e4e46e94c100df6759c21c4091ee86d33c2f78e6cb1860b68d253932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62145744,
                    "digest": "sha256:4c51cf29e56d86c6350c287553da2c16ed0c5ec70f1dbd5d65d7b94f59858c1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:65b6db67b4191f8d77d4d98471080ec3949720f1da25a60a4375433dc0bf7586"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 591,
                    "digest": "sha256:9ef827b98841e65342fa9194d9b2f94e215778231e3b2f1809b12d16baa4ef9b"
                }
            ]
        },
        "10-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12427,
                "digest": "sha256:a809bc60160cc9840226fdad884dcdb6b158344c7538836cfa4b96b41c699dd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27339504,
                    "digest": "sha256:56f4969648c1c572ea27f0a7cd3c48b280bc9d6581cd472667df85c02934f3a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7731,
                    "digest": "sha256:873087b046a30b84bfdaf0e8353a556fabd0b8eff8066f26cb1a0dc5e951b015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:06a6d947c2c198ea8de758660b6d66cb4199ba632c15c3bd04692822cae62d35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:d6794ec70f65d39fecfbad50714de02b51f905d6a9ed4c54176c67ccde6eb88f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4719,
                    "digest": "sha256:4315d91b89ea549cb795a2e7432e5edacb786aaec75e226a3fe13dffadbe05b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:399ee0bc35333f74d1b1c631727cb3827cd0263e68c7acdf57a10e7a89a196f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37010671,
                    "digest": "sha256:3900122875ed3d40dde3a65f8f40f38142cd9269f62852b8e5a637bc9bee6ff9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:8a4e800a3b47dbba83ff10272923aba7c1812c691cc701afc0108cf070525c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:be1651247786fbd764390aa42278b26c24ee8618e69782f817eb4ef0bc2f63eb"
                }
            ]
        },
        "10-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12509,
                "digest": "sha256:81f622387779dc8441cbe1eb7c8904337ee8524c33e94e34a150cddcad39cca0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31420038,
                    "digest": "sha256:e9995326b091af7b3ce352fad4d76cf3a3cb62b7a0c35cc5f625e8e649d23c50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415507,
                    "digest": "sha256:a0cb03f17886fc51a53cec26190af59b8e739507ef5bff4543311aeed4a9b071"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:bb26f7e781341d91b88e10b63a797b7280c5ae91f763c380eda74d76d0cacc92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419561,
                    "digest": "sha256:c8e073b7ae91fcbbea9bf8bc215a4f1747fc9a502d4d6c59a98ed6e991d7f13b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045995,
                    "digest": "sha256:99b5b16799151c247c851b6b9c5f9c4144dd4d2c12a790bc5e394ff4a8d18bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261877,
                    "digest": "sha256:55c520fc03c5ba8a051dbd57e91dbde2ad6a3791c0bca9490122d699bbeaae55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:d0ac84d6672cd62439a128c3af18351298b1896f5e04ff9816d8cbdea10a6ff8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:4effb95d58493b11895d08a0b66116d4da0784076a854643d26c65d27d524947"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38837566,
                    "digest": "sha256:15536da42867a7f77f764abe5784c64c44474487d47787d6e2a2322c081d17e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8073,
                    "digest": "sha256:47d8146f4d2d2bab1712986a73aef725de5952fab0ddc044c83714eac73cb0d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:2df8268bf0a1d961aeab5ee1aaf701b0e1e4d43263f97f586a37540e9719f0e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:336961a7f15c8d297e54689c014b4514283f19a7e20ca120e562a5b8743d755e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:78addc1d9282859db3c41fcd836b6ef27c0e73a4e7221dcd2ef6c7078a8edfeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:fe2fecc4b8aeaba3a0f64be53a42477c80d905732ab2636f5af4662c8799e049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62666385,
                    "digest": "sha256:959ec859442d0f0f1537593c7bcc3cad5aa2bbd302968333acf3ad840d77dbc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:249fe2b2d10bf336cc31801adbdb4bddf576fe503ccd8e821865cf2c70df352a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:250209baac451d6fb120178c20af3f0fabfa899c98e725dffd69699e0e2c3f52"
                }
            ]
        },
        "10-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12899,
                "digest": "sha256:47cabf8e487dc8da74afb3f3379bdd88bd507af8506b2b327850a72778d18007"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806272,
                    "digest": "sha256:ca7dd9ec2225f2385955c43b2379305acd51543c28cf1d4e94522b3d94cce3ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:126ca7716c09ec1f08a62eb634b126706be0d1dff6b095919018aafad7d6bae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:72a45366ffb3469a8a1b2f8dc27e3caeaefd52b94ff5f2e71164b55d3937d2f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28332568,
                    "digest": "sha256:fe5f8c70e89ace803a52e1d62bc7c2851e72c712be46e96dc8bae476c8bfa6b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7737,
                    "digest": "sha256:f2b8bcd3cdb216e2457ecda6f5915967990f00bbf56866b8150935b4f51ed776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6c83c4f8fa7484b9d79b464247363bb4c82af7103bd0a9d1fac55a1765b52c70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:d17dc833559890382aea2a7f2ece58c34227de88c2792fcb49c35375eb51c2bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:3c86850a05efb4a6470f2630de8631b7fd0995840c73a2e5ef491994030ad66d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:cae66d64382ae98a98babae4f1d2777e323639838cb275770c0c8de65d357874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50626554,
                    "digest": "sha256:07353d1acc3a1075db85ed315a4fb270bf6b91db0e1de653f1247ae8051341a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:1b40e80b9eeb23097eab9967dfbef604d0b461da3a7d641ea8c2121ea35d3831"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:9897f2f85640440d1faff02aee51b62bb4cecc4ac06531c13b970d85e0bd2f65"
                }
            ]
        },
        "11-2.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12513,
                "digest": "sha256:a41091bc57ec9d636aa35e0dac38d259ea4ae1f5924c89a336f959d2b267ef2e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22567461,
                    "digest": "sha256:bff3e048017eab8adaed886bad4b3c5c81f7d952b65b056dca8d6dbc198222dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4504012,
                    "digest": "sha256:e3e180bf7c2b75cbe0539bdda86be1778c5cff515fd4d2fd1671cee474767247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1809,
                    "digest": "sha256:62eff3cc0cffa06c87b054d80b9cf7b92dc8a30a79ffd76615d8a094bc8db529"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1379540,
                    "digest": "sha256:3d90a128d4ff28427727132505393f13a12f3a48de87d34d6da7311c74f84725"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6185518,
                    "digest": "sha256:ba4ce0c5ab294a5ee7552124f1f3c98e3b3e79ae31292e4dc53cf5e71cf01b24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1249914,
                    "digest": "sha256:a8f4b87076a9ea0651d3daaeeeef4d715f2ce6a4a56c5343699137f7ddec9912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:4b437d281a7ef52bf6cd87d29a8f876221df939c81c370acadd60ac14e510396"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5584,
                    "digest": "sha256:f1841d9dcb1709582688c9abedfda93683814753599bb05d62061e5c92d7c826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71543869,
                    "digest": "sha256:bf897300657d31ebd80970e908946be17acc877b0c31869aca7519b2a570d096"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8324,
                    "digest": "sha256:3bfdfb831df44db175be75a5e1b065b5eb502658f6c1742b0e7d2b2846b3b559"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:c44ac1fcc543b35d2ad23055fb8eb5dd7f92cc4226d19f192d171d917b1b49a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:9ad3441d354a529b6c66411493683702733ed73aa74af2fad73013eb78945b07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4709,
                    "digest": "sha256:2d79312566dd2d4cb0bce91a005db42dbe1c1bc97c24f66acfa9ab890288aa14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45973624,
                    "digest": "sha256:4d874bc90f2efaa85df95cd2c9828b85bd6c311554dbbfdd951d91888c58e4fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:e8e935c0b44fc37b5daaee032bf26e2b040f6af3abe817cc3974e1e02a4f2b45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 602,
                    "digest": "sha256:86a990d78a0809567531916deb92e5c57592f98093fc5764bd07a5543489d992"
                }
            ]
        },
        "11-2.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12730,
                "digest": "sha256:7685466071ff184e7b2a8d63d0f938bd7151c1562141324cce06e4dcb5cc7820"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78648345,
                    "digest": "sha256:e3ec3e4c430c2d5096b6314c08330905966038c330e6f2930aca5d585c4235d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7991,
                    "digest": "sha256:ce947cda4a3a068ef031d8b04f0104499a2be86fc623e49179a7aaf63a63b276"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:467c068db8c65ae4bbbb51f0ee38c9449b1bf7d2066d620a8abe0281051c84d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9e5ec76ab5c56be9f938cf9c4a79f3ad81644db22683ee2d3d4881de6b79896b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4704,
                    "digest": "sha256:416dc278231aa381f574961f102d7298ecefc91695f427bfc8c0d57bca42dd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43096300,
                    "digest": "sha256:defd3990865d662f82f2e59c0921f72510d09fcab043835d184e022de5e0a592"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:35389f88b90a4e28d2a8cf55c747311a64dfbfb6aaeca89bc8e6e96d21d84741"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:b05ce214050a3c5e2126575e74418b483f810c42bf0fc13a0ae01cd9aba59a94"
                }
            ]
        },
        "11-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12387,
                "digest": "sha256:1dd39e8e9c4251f22a082a77ee807abbf865d97bb20015b6df375cffc929f3c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22527860,
                    "digest": "sha256:e50c3c9ef5a201a24959788dcbc7ebf88d95c63e132a4d7396ce541127afd88e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4502081,
                    "digest": "sha256:fad6bf221c0213499cecb70cead9ad7c1f35409b559ef2a70d496bcf45bc80ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1778,
                    "digest": "sha256:0dcec84eca9f0a5aa4b27b1ba88fe8a6cc971f383b6a431bc3ff04fa750f9dca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412088,
                    "digest": "sha256:a24f79fe54f505dd21dc3e687787834c53791bc9087639dd7c41213f5ee60031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6183102,
                    "digest": "sha256:71577bc8bcc3f22a71e8ea09e2096e64ca1ddb4472374b7b8b0d8a94d15b3554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 384923,
                    "digest": "sha256:88bf41ecdbbc463670707ad57424ee63acef869288abcb7891df2c4acf0da653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:ada30a92552b95d357827688622b283e0a00bbd052380baa0427773736feb575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5345,
                    "digest": "sha256:834f3991a1d69d82a0cb722b80c8e53a18956ab1f9ca134dd5e3b0a240d774c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71419896,
                    "digest": "sha256:c0d2b5a13feea94f4861b57115865393b2ab1f79abacb7f3a5e52728b88c3f52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8309,
                    "digest": "sha256:69eb74984bbc3219546d8d5f0abd2a4b139787fa522dfd4db0d3ecb6256523ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:92a1822f9c675c1a124e587be165ea96d090b6bd12a96d2998d2f3eda6b02de7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:7aaadd37bce63aa19faa4bc34291187ad30868d6981926a21a7327710e54bd9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4268,
                    "digest": "sha256:9575f688f2f572d568ca864bbbbba9bfa94abad5db19bda48e3093fffd97f581"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:9df0c7d4e011a7b76bc8eb839e46926f1d81f2c5feb7a890d422c0fd86676388"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46274137,
                    "digest": "sha256:c9f4f6ca8c7445a112d3727108830a7a905a9fc03d966ec2c05a656d29f8134c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:b05ef2bffbccc551174a166129789920f4ef41bffc30fd86eccef5a064fac633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:a000d873b78bf5d5868a2ad766970206f363813966d2c4a010ba21808eccefc0"
                }
            ]
        },
        "11-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10752,
                "digest": "sha256:4605eb1b22239b9a9055bc25006ba58dada1a2c8b6eb65e450a2b11a1526ee1f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2796945,
                    "digest": "sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1247,
                    "digest": "sha256:b05eb41eecb97b89919d2eacdc86aa1332e168aa4ff3750c35c41525c333054c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:8a37c8fecb6acc85d913b4779946759124998986425d194ff748d6c12dabb1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57603861,
                    "digest": "sha256:68f18fd82683a5cd1c58de4e5227abf65e160171e3967da38106508300e3cd53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7571,
                    "digest": "sha256:21afd23d5570c42044cbf5b2fa33a321c9037281e53787e8b8e3aee621ac60e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:65568d26f1ae38b7229dba834ab79d7e5f64a048b90c866ef95d4f02205caadd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:5c3b431943106a0f816d31be42f948a534157daed6ba6cf4201e2e45950309d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4262,
                    "digest": "sha256:2204a66587f990cadadcbc0a56c609afa783a3bd3591eac2ea818786618d28e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:525dd1990a36025226428172f145b0c4f70282683ff296e5667760300039e233"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44528497,
                    "digest": "sha256:3d940aa8ee6a8c320fa4cf77525f833c84f238c3456a666bfdb9e104b73b3d04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:ff6ab9f07dbfbe0840c2524db2a3834d1467c7dbaca495664902f3363e10a8b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:ef0bd89aec163874e63b31f77b26cae94e167c4bb8daca67b241725e024e12ed"
                }
            ]
        },
        "11-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11984,
                "digest": "sha256:1641642d1a31c148bb55811a9b5374365a76f3e410137fc4508b136aa62a33a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 88624192,
                    "digest": "sha256:d83dfee21ba064a08e8e75c280caf8db2b6f2790a61b22477979f5f3f83c44e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8331,
                    "digest": "sha256:08b99f11f3b03af1d37a7eeb729a2efcb52ffb26b84b14f4c4df82edc846de72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:1bbffe6e2a478b581a1fac84fef724407bd18a91844c118ad3923e5b3f7213a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:663e75c487745e0cb7a2270a5078c166d034b1b48d9e803d49c1e99c8a944a47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4713,
                    "digest": "sha256:bee11ffcc781420ff113bb04aadd76f7ab9e4b6a9a1361cd6c71d6a953b6b8dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65872053,
                    "digest": "sha256:4a979225b75b7333a0196fd7f6e182ef292e77488cec56388c8a57924a180c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:420149e68eca9d3e1f2750a207350ef8f2d86cf82e22d27c967e5eeb53c7fcb6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:0fa3f04e52f80ae2c6396f10aa5ea508bddb46bdb8fee16a8bd6ccb39130611f"
                }
            ]
        },
        "11-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12264,
                "digest": "sha256:f8c3965c17b845cc47743562338f5b965c5f62453cb16fdd2c92eaef50626d63"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72840898,
                    "digest": "sha256:0b55bd375f37214bb6b1476fb22aa047d9c3be2f38a156850980ffc63cae97ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7989,
                    "digest": "sha256:f251bb3017479d0cbc68b821516c688e26ba2b2702889f0541a4eb27bf3c3acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:2632dad32f2ac663101a03496a61adef74684e04249e7ca429fc0e25c1be41c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:6cf50738726f55e0d9b90475e44550dee391b003091219b1b976f0fbdf4082ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4719,
                    "digest": "sha256:8bb76b302b86379c7032d8a832df3726ff1c4cbb34264ab0e5fdec6b7fd98a9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40657399,
                    "digest": "sha256:36558a9b22527205a525b1b2d7ddd824356a9cdad44c8d7a0b3834a6357b0e0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:cca76f48a4a338658ffed608db4ea0b2c5ea7e0d18f2502e1d56d65664aa9ecb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:3e52057e2e7b7ed94b842a3711791ba112d5891845cf2cd3033c8d720aaa750e"
                }
            ]
        },
        "11-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12312,
                "digest": "sha256:c27445a4f5419c580e728074ead010526207172e0164845f42be559c3e0c6bc9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 88668689,
                    "digest": "sha256:6ba1fe9b0b2ca8cc00ecb802812ee369421df7b6acec9ca1b6d61a635d78ad00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8329,
                    "digest": "sha256:8dd061b8ada4e9d5ab91c632bc54507c5b941add838767e14751661db27d11d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:1d7eb6a67a3de5689a6d93e9fa907719ee691103542aaf6d1cd3d1c1847abfb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:484916253c1fda25bbea24936e5403b0e3d58cc47ce4aa65411e60609436e1bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4701,
                    "digest": "sha256:6f7c0ad048c6d862880f69f1543551d9904c591cd4869a816135821369571a5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66517746,
                    "digest": "sha256:bf18691881661da8e82b52b908d09324941d9a3c610cab154be19c5be57276d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:ae6fde72e556b4bcf3d63ca4befa1c20a7d72ad3ffe97fa4979d311b2b10cdae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 588,
                    "digest": "sha256:904d0c014c99538558907378c13f98014c7c154ba2b6e3f4fe8751ed741f199c"
                }
            ]
        },
        "11-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12731,
                "digest": "sha256:409cefad1e106d3592e38fe7ebcc6d38e4df945820b588db5e2ac626318d781e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78648345,
                    "digest": "sha256:e3ec3e4c430c2d5096b6314c08330905966038c330e6f2930aca5d585c4235d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7991,
                    "digest": "sha256:ce947cda4a3a068ef031d8b04f0104499a2be86fc623e49179a7aaf63a63b276"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:467c068db8c65ae4bbbb51f0ee38c9449b1bf7d2066d620a8abe0281051c84d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9e5ec76ab5c56be9f938cf9c4a79f3ad81644db22683ee2d3d4881de6b79896b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4704,
                    "digest": "sha256:416dc278231aa381f574961f102d7298ecefc91695f427bfc8c0d57bca42dd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54543171,
                    "digest": "sha256:bc1926db4916c6cd061d7607c5521af321cff38ea326725807fef8317eeec638"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:3e90bfeafe4260acc92fa2c99577a0e83a37618b3b0a89d2d3b88c30cc37022f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:22440931a9185ac8939ccbafa9a247054f5e82e922aadb390e492a0e658ae74b"
                }
            ]
        },
        "11-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12103,
                "digest": "sha256:d5c73faf11857d7589f4467dc2a8481bf0551c0c7f379153d0845a4d2c92dcf0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417824,
                    "digest": "sha256:b7f91549542cca4b35a34cdee5364339f17468971ea730bb072864d3e78c8b94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1686,
                    "digest": "sha256:2a8eeda3ee97da906984208e6f0447f7364deab48b51d0ebc413fd2ba56b2c72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4207464,
                    "digest": "sha256:c7d80e163fd14825c6db387a5888badcb73f44d6e5590671bb0cb6443032a2f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1472448,
                    "digest": "sha256:18645305d9048bdd566918b889a9b36cfd96f12a8f3b77dcd6c2c2e8a943d486"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045263,
                    "digest": "sha256:7b292c9e4fc0ed9bcec4f0b38a02473316a89fa8defa82cfd9c3a64c84b5267c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037425,
                    "digest": "sha256:cca4a0495b6ace92da3623cb45bcb0f2e7806d38adc7d38fc414c77b3e74c4ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:c33c4a75b0f686674a3341ae29f02af748f534deda830efc55c3f6790ba16f7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3142,
                    "digest": "sha256:e7dee0dd847b5765bb6933e1b73938fa882b7394aab90e57141a47ed847d4d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 88808467,
                    "digest": "sha256:ad2667c4fb09dd605a928907d4191f11731fc4ad6c5af7853203c2931ab05a0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8326,
                    "digest": "sha256:858f56b660b01c16423863038b9f342dbc68ae087f2971e5856947c0d55c9d71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:5e4cf68957b800be8fb1d5d710b782a383367e53f251284a212bc5fac51fdb0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:4d1e2891e31d68a06e828ab213d7288009ab9db87f403b36286c7a9ae27f0ab1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4783,
                    "digest": "sha256:37b53aa30362490af128a13e2d323e5b51c207730494f3b41b950261a6488df7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67146713,
                    "digest": "sha256:53154d2e81c90c9dfe91c0cda5a08a42280991237121b7d26023528cc7e265b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553,
                    "digest": "sha256:ff19ad6cdff32a5a03a2506c4049f197a2f0b454f89adb55861c6d0afd6e3853"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 588,
                    "digest": "sha256:fce768dba619539eb48c892e9134dca6500e0dbe6497830fabcbefc3fb94ab63"
                }
            ]
        },
        "11-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13106,
                "digest": "sha256:39db213eb526660095fc5fb44929c9de6a6563b70d1c1174143aa1806b401128"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402422,
                    "digest": "sha256:c926b61bad3b94ae7351bafd0c184c159ebf0643b085f7ef1d47ecdc7316833c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1263,
                    "digest": "sha256:e915d0b8530143b20886c020822068391e6db91b6fd0db7f327ac0fcc360d670"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:ddf151f63d3273cb2b290eace3b147e1b3a075383cc5e4a3d74cf7d876a9beef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85988230,
                    "digest": "sha256:8cb994074e8c502f89efd63f30cb4138bad8b5e5535d3bb38f9cf4e769ab9594"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7982,
                    "digest": "sha256:2e8cbb16f6188c3a18c43f84cde5504c73d2d5db4ad3c804d57e23004e9f7c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:1151c9479185ff27568f80472d586983daaf7b46816cf7731339f351e0eafd95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:105d9670556043a80fba35deb532e5e1cd8be1ed91505da9f134f209fe8ae8d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4782,
                    "digest": "sha256:31427546244d366a7a55b1e0471fbd7320a47d99f3a1c4ff385c66e7e8b51951"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61799302,
                    "digest": "sha256:aafc13c13a18f78e338e1959ebbd8894f4cc673c4163a0ac74849c8c6b5d36b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:54ef994e703e6f5b0bef41e1cc952898fd5e9649b0a2258cc93c81b4e34fb11c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:0d3ac677ddb3f8426ebbb5769d0d3c52050225a10eed1574488717133c03679c"
                }
            ]
        },
        "12-2.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11990,
                "digest": "sha256:b477a7698b2fd602eb1f1f42e497e31d001f9db21ec22ec4cf2b0b45e255ff23"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145844,
                    "digest": "sha256:a330b6cecb98cd2425fd25fce36669073f593b3176b4ee14731e48c05d678cdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4179226,
                    "digest": "sha256:3b0b899b4747d6bc70cad80eeed88a5c38c2ad412e7a12e2197ad2be1ce1833c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:cc0b2671a55266e6ffd407341f385f3a493f6cbab55d331076b0ef45a44d3f68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419392,
                    "digest": "sha256:1a7c7505993a44cccc920866751e3ed610903cf1449e2997adb393851c0273b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7965275,
                    "digest": "sha256:02cdead795569f50b49c1b43b01c2465c9be8405db719d97b260035807b4dfac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391183,
                    "digest": "sha256:0d8fbe9259d66338ae858c41f634446a66d711a90c23e4d7e9f00bc7cf17e167"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:974e6d476aa76e52a4e1a98b6269c67c813858fc26367b7dcd748712bc040bd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3055,
                    "digest": "sha256:e9abf0d5d0bc96acb1620e55fb84dc2742dd6b916b1559a54f87a7336369eee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73426163,
                    "digest": "sha256:7e183c298f9056378fd02e5436e62d70eb13e7d9cf196502fc9410ae61554074"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9014,
                    "digest": "sha256:4629bd6083ca1817e0b53cc588076cee591027672c6d1144c89e222db7524964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:ea9afb153dc4c2caf7c4d9c4d81dcae5c280b7e116bc462a9671b12167011d5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:5db27f65d6962c719e190a92a3c393e19932ce6650bebdb4bda5cfe95d860cfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4394,
                    "digest": "sha256:5c9bcf85b9a6a33db6ba4522e589f56cd17efb8054b3a90afc4724d7aaf56d54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54380781,
                    "digest": "sha256:3d59d99b73fea75998e2712496619c6d4e4fe9f8871d553f874d34503bfa2df0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:18dcdaea045536eb7be5e15738f00abce010ef83f55c306facea2384bcc482c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:fdfa3c87265435279adc6ee9405432ff883a81cada3ae6954724a7c0caca8dc4"
                }
            ]
        },
        "12-2.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12051,
                "digest": "sha256:1edd63745c1f10fcf1a634fc97b1c7c2d77b920338d741fdc531726de5fe4e30"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2814446,
                    "digest": "sha256:a0d0a0d46f8b52473982a3c466318f479767577551a53ffc9074c9fa7035982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:5034a66b99e67db609bf6b4f82bea915e39a42e6f03d11889f7406b4de9e99da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:82e9eb77798bd506a06a9adab733c822c718be829c54d514b5789b07c0f1c164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72322443,
                    "digest": "sha256:57a44591d957552dc7e14c76e1dc436b97b5c1ef0228786742075e6a2abce481"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8693,
                    "digest": "sha256:b1c9e53bf891ae35017b88b1b43f9063f28841a4f78d2fdd2b17eb3cd047ceb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:3783fb52ad9d7f237df9a8c98265ee6c6738baf152c5b5f67e1dfdec32645b86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:5a73087232a9ed788892771d4f22df6d93388b023b14de63806771011081a569"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4405,
                    "digest": "sha256:0e9916d2468d0724aa5631ab6b09bd30d12e8678aea6a81456e8e11ec0b68263"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41997439,
                    "digest": "sha256:7a960d85146cdb80724f87a446bede86e32bd08494bfb2c87fe4d8774fcbfa1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:afccc18b1e6b85c5e838787c57835619c06f504c4447957234fa605a26e386a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:750b26439469eb47bbea9defb3b64dd5cf202541ea7848940afbc50ddcc31c93"
                }
            ]
        },
        "12-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12401,
                "digest": "sha256:482fdb8c36cff477d22de38f9cf73beb8fcc2b6e6d14e5b4dbc92506bedbed17"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27099295,
                    "digest": "sha256:6ec7b7d162b24bd6df88abde89ceb6d7bbc2be927f025c9dd061af2b0c328cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4178358,
                    "digest": "sha256:a7d6065bfd9053561ddb586c42ddaa73146e301cb2061ce0b09d5374bdfbfbf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1772,
                    "digest": "sha256:1b99004acb42abb15229b95fca3a5a3a27ed80a0420723a019badf9bcb828352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419246,
                    "digest": "sha256:e11ab41f048997f4cfc3d6dd4879b14c6b97dd8c20ff529b2e50739e616fc86b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7964598,
                    "digest": "sha256:eaa59f6a7cf02626b81cc2e24170466776a80d5bc3f9c545c963a689317c8a84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391062,
                    "digest": "sha256:e27743da9368e8e13da9001989a89317c15369db402ec577b5d5f3e5bc3784e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:10ffdd8ade2998394eae1c304c957a0d6aab58cff22a7349ac7f63a0685f7631"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:bdaa066489bc36d9456331d13d6e9670a5ef990e5beffea4607db3e402e05732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73313705,
                    "digest": "sha256:889684a529fa1d5d854d2f4946d8d5fe71b687595aedc3768e2b650d1fb20af9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8996,
                    "digest": "sha256:a89eb4df2d615bea45d41b4f6ba9242b09ca77bfdead9b6b1168f3b8689a480b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:053ae58e148940aa24ce14eecfa0bffd0f5f2799c20d69c2955ec80835c8e1b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:d2c54ffd195a6af53d65ff562e340afb0d6797df0aa9bf98a26e97923570194c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4260,
                    "digest": "sha256:9af5769854f94ac14a370b3935c42c169c10d43424ff1e69fe8e8ae2a76e9d28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:e4d29704758716eee844a6dd22212a9cd0bd2bed11c889ccf90adecedea782c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55031942,
                    "digest": "sha256:6386bdaacccf049aed432104c11d0e03a78501812a8ac34212001ab3a468cd1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:8465164d8e51eae39e93864c62c0b6a7e65a6999c1f2eae3d9423e4af37d5ab7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:c40d89e482a5ee42da8a782d93d2ceb933c1809738aba41d9e97bb8cd1b2706a"
                }
            ]
        },
        "12-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10543,
                "digest": "sha256:3ae0f526a1670eb009c02e31b9d012dd27aec553c43cc7f4f3687b3d37431b04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2796945,
                    "digest": "sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1247,
                    "digest": "sha256:b05eb41eecb97b89919d2eacdc86aa1332e168aa4ff3750c35c41525c333054c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:8a37c8fecb6acc85d913b4779946759124998986425d194ff748d6c12dabb1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58684251,
                    "digest": "sha256:d12aec7362872b4f20e1dfcdd154e4c11b298f5cb95a93cbda0f7697c46f8456"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8209,
                    "digest": "sha256:12e1301484819722bde6b2571211fb5940ed9fc89b5e829eff986ff2a439fa48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:d3ead0534f3423ecde538ead27252c1c17d0e5bb174c509c244f80184e81a6a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:a26495baeec134ea1460ce54ef3a1823553ed4a7c3f25a45f717b003914aa24a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4263,
                    "digest": "sha256:0caf83ba4da87683c6142c8816779c1eea8abd67d702ce7d33ee0d9c5a3a975c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44702570,
                    "digest": "sha256:a6986707d152253becdc616bb566ed505eec083a41e53f0ea2057fd2a66c3a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:297906a4586c4856294faccee2affe09732491e4767b11df16e69353f017418e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:37297d328ef6968c1b458dbafad56139dd1ebb6a68a895d450dd0e86e9ecf080"
                }
            ]
        },
        "12-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11983,
                "digest": "sha256:3a52fc08827449894e9b754e1136a96d93c02a85afafcf4509c775fd4b13d61b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89551452,
                    "digest": "sha256:b0ad2ad02221e8a3dc614020fe8cf4d223e25c520fd629d029b9959186348c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9026,
                    "digest": "sha256:ba0b3c9b093e5e5d96bb467d58143c39dd7e98a08d351ae739f5156e260b53fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:d490162d0c7a98d3b625bdce4aa3a7b73a8f0408d429ff7f522b9605d41aac1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:cbcb854c9dae1d5070766742cca3f02699db7930cce2d63b8eb7529d9808b256"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4717,
                    "digest": "sha256:d043a087049f651fde5b99f477664133c4901b25b68b8fe1e362150b77a5bab9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65991317,
                    "digest": "sha256:17cc04488e5e3f95bc5de8637c9ea0cd2e41038524848cb77da4bdfd66af29e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:13311e0708c1cfe1d6312d7d42d4e6f83dc6910a31cbcaf6bac8c5debec87cc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:724c4b8d9f170660d3c92e1e310f3630efa106b6f09d3fd6cdcdc517b0ce1d58"
                }
            ]
        },
        "12-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12261,
                "digest": "sha256:b4fc193fbd0287496e1acada54b67d41777c2611a28d6d4338e0fbdddad6bbaa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73943047,
                    "digest": "sha256:cb8f2f5119c686a96dcef5f18e20e83ff26de865c57d1914c4693ec4a63f5371"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8694,
                    "digest": "sha256:b57620381b8d728db83d3a76194bc855ccc0217d7205af123e13e730fe5b411a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:658eae40354eb6e0a6049e0e9aa344a9b4fb070e08ce2bdef9efc3a0f666526e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:b0dcf0b5ef76f67a0ebb130c622af941cc18b424d99c033328105a4341b9e6f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4719,
                    "digest": "sha256:247af8bcecb797032dd0d686ef5c196316bf8943ffef81b0b0030c7d9c284a3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40851487,
                    "digest": "sha256:bff66a83a33c414dea603700b05115195c39217e50fe825d21657e09d9fcec06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:a493149edc7e21861e48592dcaad7fa0617a51385245dd93fb8aa8ee5fac0218"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:a5e75e6ee11b26c99a46427a7b1e808292a7bb892e0a120dbdc6fb5801208cfb"
                }
            ]
        },
        "12-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12305,
                "digest": "sha256:82f04f4ca5e737bb883e7a131986221097db3492c85181910a8189e3a9a9e82c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89580517,
                    "digest": "sha256:add9c6f96747207c5db962b89acf40ed83eb0f53aa30bdf9536c5dc04bd62b84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9025,
                    "digest": "sha256:03095be05119712746fc28cb7d0e447b4bfb005fcdc985a677086f42ddc30250"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:58acdb363e1b66f5da6abdcdc819b4fe35494f3bc15837e5b7112674297a838a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:0a3ce596ea85034a2d8c321716e679ec47ade58a2501f1c2def25c65e15aec26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4701,
                    "digest": "sha256:acd9cd87ac430304190afbc96ddc7827016d7eb34dcdf0cb9ce7698f00252379"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66660772,
                    "digest": "sha256:3f9fbc230b514fe4e49ca3ee8dbca682117d8ba6d8d4a46319adacbd79076bc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553,
                    "digest": "sha256:bb6c5bf17915c95ba54d7a72ebd88297ce3101612b902ba45e3fb573d05f433b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 588,
                    "digest": "sha256:cf7babd0226d3070e5c8d5546fe6dcddb017ef5ebcc5b5f26667f47cad8eb30c"
                }
            ]
        },
        "12-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12730,
                "digest": "sha256:77f5f84634f132c87935df286a2d5976e25795647fe28babd7d4f4b4617357b1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79726486,
                    "digest": "sha256:563d10e07bd17889dd09266d2f5737a8f4387bae0328977b1ebc473d65c4f68c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8689,
                    "digest": "sha256:5a08087803d4652a87d56de10fff50b71e94b009ce5fd0a96d901de663809916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:e156d6e93944c0fd2c51a20a619cc34329802250cfbbdceafffc747ded7b185c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:4cdc78c6909cf47f3cb5a53dd6a33814d55b94750e2950c38ac207458d0dce17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:7a3361fe23fd94b56f2fb1da60aa4dc802db61ac4dd13019e4b4419dcffa3f69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54745569,
                    "digest": "sha256:d3fe124099b6b099583c74dfc8b88663b1e8e7c8a15cc241417805dc289dfa7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:029d112ed97c12c95b55faeaab5139c26eae423d6e38749168aff9a94879a793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:b665dde620766a4e57d0179594608d87cbc6b71898234abad57cd0673f50f1b4"
                }
            ]
        },
        "12-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11906,
                "digest": "sha256:e61517b9755a782be892dd69a45c41bfcd0571159085d9ac3d5a0dfe439d7a57"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89675198,
                    "digest": "sha256:82073bf505e733d5524bf7c90c3e0104debff4b4813b8829fbebcfc66785428f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9024,
                    "digest": "sha256:5d340aed59c54a54d0e134295055eb3940df12334a708919127e9aab16538af1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:2299f882072d1a669beb0b4efc003389f3df821f662a68b05a36b1c48aab64a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:753d9624a86f3b9573f64e61d7aae9376c614807bcdf1399d85210c3e46d4a9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:3bdbc71f5de15a8f269740690345f69b1a6a0653494589019b337f62429bfe0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67334956,
                    "digest": "sha256:665968e3dc5e38b6359982bdf00ac534ae8d2995a10b9e2e0758bf21fa13916d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:589efeb9cc450b0c6f86e1f508fa290a32c5038be9002b224a682dce89cf2111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 591,
                    "digest": "sha256:134575999bac9912ffd5a893dc99047886410677f091184655946b0335c2c4e7"
                }
            ]
        },
        "12-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12698,
                "digest": "sha256:7cc49a10d81d0fe149b1fe15d1f7a58062091941d1e193acdf94cea1251fd3ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87094286,
                    "digest": "sha256:f366013f8cd65b7b82e58544c8faee338b4e8e0ea2aeea41f9af018cb8959e8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8691,
                    "digest": "sha256:1af780e8bcfb8532da9a6f13694cc71d9a82998d3f0b28b7feeb187c14be309c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:9aca5db19b477c3e7e2ddec3c6d41457103a1a1ed254a08855a98279757f1162"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:368f591a7da68122f6855737174493388869f876775dcf06a10152cf770a484e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:9c801f8478935b4e153ff2c27f43a20ceeb0d88d2e5ac974dfa7e1fcd2d4eadb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59957146,
                    "digest": "sha256:d842394e12a64b4746a27de9eef168f29cae78e8fcf1ed48846c26766e744685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:b53ce4d9c251e03c7d2f78964d15aea42179a097a8ebc50c45cef8f4c3007eb0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:ea3ff07253abc83ced84943d8d525490eec23cd7eedab5702c8ff7761299ed53"
                }
            ]
        },
        "12-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12375,
                "digest": "sha256:fa77997a35cb8de30685209689b63c34c69b0ed40118427889e0ce6b80c233ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1683,
                    "digest": "sha256:57e87889d376df97a42f93852776e008e337fb0c84777d7ac964da6b82e23287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308176,
                    "digest": "sha256:de2da59996413e2a8a0fe9d583b5941c27cdd622c3736993b738e7176a37201d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473530,
                    "digest": "sha256:24a079d0c139fa6469dc716113ae0156ca33c8b8d884174018ae75b1a8da5d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045842,
                    "digest": "sha256:958aac2ffaed9379359bef22d2d35707fbeaa4af4e0a30605fa5ee1f8d88a7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038350,
                    "digest": "sha256:4d982aaf2e8f1f7e18dc6598e4eb57bb69e827a1ce7f1a8888cd3e17ffebe640"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:b1931bdb76a00e51abb44415018e02bec69473f1577a994a2753ac956772538e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:3ab0fe21ea2706c772153c187ae862abacb15d1dc03ddee6f3e303a1195db5db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93726500,
                    "digest": "sha256:48667d83a28b7e277ed80efb227de3978074f0aac2e3792a3fbd468f1a090f4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9015,
                    "digest": "sha256:514db78b190e177b7989ba8a42463df0fb6295b3629ec7f4a5b319e9c74e63a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:6e26886c4a32665478dd2cd4857105d822d7cfa0dbbd05644944683721bee8fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f03692c705d1adf87abb77a6c918a5a8f904eef323d54b991825cc5514f54f04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5414,
                    "digest": "sha256:5ff64b856830e2ae1ee4e0fe7cf47c2e1832cbd69ef7362f6cabb67791d0b27d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183,
                    "digest": "sha256:eb1f4f45aca5f8d7ac3de8f2dad9e0a821f8b154487958c8d66536e30ae61184"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67302389,
                    "digest": "sha256:1962bdfc79b010a2de06146aef55ae45fe585ea083470f019d3b0574d63a4a4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:c40e17a8f655a51361ac8485c713e1dc7f852cd6a71397f5d55096616769cb05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 587,
                    "digest": "sha256:f09e89fca4298b8675238226c0c56e0f9999d64005c06bf93af617e29f367ceb"
                }
            ]
        },
        "12-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12949,
                "digest": "sha256:035392a0749b53b7453ff456a5a2689f7c2bfbce9292c046d2035dde5ab20c2c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402542,
                    "digest": "sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:5e97ca9cd67ff988d5770c96ef1f77a79f0da74fbb064c1f6411f3bfeff0a17b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:ab9379064714b0d03265f80d9c907bdd8457cc755dd26b83478d52ff9032082b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89188685,
                    "digest": "sha256:48ff23803df978cf140773929f6190bce9aaeacb9f4242f0113b77d7f60c7c66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8685,
                    "digest": "sha256:fb92d89a823d39ceb011a2b47860f7c88edfab1cd1b9bcbcdacad05ea57b2c83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:f5924031a0c84d9714dc0e65c67cf7ef72a9ce49a23404bef034a06f4356f421"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:4ed8d9831554bc5b24ad2b996ab366081c75c0e80b8401f3e4a253e4e38468e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5419,
                    "digest": "sha256:5cf40d532fbedee92c1ebfd11f98d1ca6dfd0e17f3fde9be9dbe763413ff8f0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:dcba33dd0e0aecee04719086536a2e051059df304b589ac53bfde02a167edcc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62747114,
                    "digest": "sha256:c77d691e074cc67bf4548681069dad06220853b769cc134c1247b77a5bd5b937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:3af1708bc5f6a7db8f4b78e7bda752de6ef8f9dc1bd8651770ee2a3f31a86d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:df1fad0ae8910b1009f856a3a91166a33f1dfd9e45273e55ba2aaf26971c35bc"
                }
            ]
        },
        "12-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16075,
                "digest": "sha256:a3bc29b0e63a6dddc7a1a62fb7395d0cc48c9f10b96e8ad8ac23de445269ac85"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145844,
                    "digest": "sha256:a330b6cecb98cd2425fd25fce36669073f593b3176b4ee14731e48c05d678cdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4179226,
                    "digest": "sha256:3b0b899b4747d6bc70cad80eeed88a5c38c2ad412e7a12e2197ad2be1ce1833c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:cc0b2671a55266e6ffd407341f385f3a493f6cbab55d331076b0ef45a44d3f68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419392,
                    "digest": "sha256:1a7c7505993a44cccc920866751e3ed610903cf1449e2997adb393851c0273b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7965275,
                    "digest": "sha256:02cdead795569f50b49c1b43b01c2465c9be8405db719d97b260035807b4dfac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391183,
                    "digest": "sha256:0d8fbe9259d66338ae858c41f634446a66d711a90c23e4d7e9f00bc7cf17e167"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:974e6d476aa76e52a4e1a98b6269c67c813858fc26367b7dcd748712bc040bd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3055,
                    "digest": "sha256:e9abf0d5d0bc96acb1620e55fb84dc2742dd6b916b1559a54f87a7336369eee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73426163,
                    "digest": "sha256:7e183c298f9056378fd02e5436e62d70eb13e7d9cf196502fc9410ae61554074"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9014,
                    "digest": "sha256:4629bd6083ca1817e0b53cc588076cee591027672c6d1144c89e222db7524964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:ea9afb153dc4c2caf7c4d9c4d81dcae5c280b7e116bc462a9671b12167011d5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:5db27f65d6962c719e190a92a3c393e19932ce6650bebdb4bda5cfe95d860cfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4394,
                    "digest": "sha256:5c9bcf85b9a6a33db6ba4522e589f56cd17efb8054b3a90afc4724d7aaf56d54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7174142,
                    "digest": "sha256:f84995a2db6f3e705e8c995deb6e9372b66971ae33444889a30d9b2429d13618"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119634652,
                    "digest": "sha256:facb669d30dd723c2f5dd5fe2ab8909a94f2ff77351b51f098f8dad8c42cff30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5318,
                    "digest": "sha256:0bdb2e719bfe5c834386f18d08f67db5439a412a824f97b5ca73715da6961c1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15469474,
                    "digest": "sha256:500bb5d719f9192b006be3cf1959ae85886f258ada0c674464c6cd615889ae66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:f2f72450291163d02b8263bfd0f21216d9d02c7b8744d4c8aaa5d4ff9a5f9edf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:23aa2fe885edb68bbd9e26114a4a30311e9b1cf13a103c93f2159b0b6a79c939"
                }
            ]
        },
        "13-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12436,
                "digest": "sha256:c9d553ffe14f2e2984756f8cb905c14f79efa5dbd34ef4f651c09486d6468d54"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27099295,
                    "digest": "sha256:6ec7b7d162b24bd6df88abde89ceb6d7bbc2be927f025c9dd061af2b0c328cfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4178358,
                    "digest": "sha256:a7d6065bfd9053561ddb586c42ddaa73146e301cb2061ce0b09d5374bdfbfbf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1772,
                    "digest": "sha256:1b99004acb42abb15229b95fca3a5a3a27ed80a0420723a019badf9bcb828352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419246,
                    "digest": "sha256:e11ab41f048997f4cfc3d6dd4879b14c6b97dd8c20ff529b2e50739e616fc86b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7964598,
                    "digest": "sha256:eaa59f6a7cf02626b81cc2e24170466776a80d5bc3f9c545c963a689317c8a84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391062,
                    "digest": "sha256:e27743da9368e8e13da9001989a89317c15369db402ec577b5d5f3e5bc3784e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:10ffdd8ade2998394eae1c304c957a0d6aab58cff22a7349ac7f63a0685f7631"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:bdaa066489bc36d9456331d13d6e9670a5ef990e5beffea4607db3e402e05732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73684682,
                    "digest": "sha256:18fcf6a7b4579d12199de24be136bbb1ce71d3eaf4e11b98dbdc38766f57ac4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9310,
                    "digest": "sha256:7e48453e674b7fa389d61b185370614f0d317165fa6c4c2e8fe674970d4cf8e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:d6a3ea95116d493242fdc1ce5be5f9d2434e43b219d5db55362f7bcd63e27fc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:0cd33e8b20bb1c4cdcdb855c706f1321dda10d9cb718d2f3ec8354f2c49d7f96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4260,
                    "digest": "sha256:75f979730af2aac747ac96f90cf00a6f907cad27abc95c6a1c6d657d3a8a56c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:17a2798f3b3f9268f3713e899aac0ef36100df863034b18a784de5fe5bfcc9f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55012444,
                    "digest": "sha256:96aadbea7a3750deb086b879bdc0075bd9b600e39557923d8323213ccd2fb06c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 485,
                    "digest": "sha256:9c33238b0279390ad36e50fe4d8d5f90a30b605696fe0d982c41d8dec9305efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:79ce9f00412ffd3297a49c0ffcb0ff6faa3efa0aeb68fff4fd95c837984afc4b"
                }
            ]
        },
        "13-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10544,
                "digest": "sha256:42431954d6fdac15546285a76bd21ec4129a2ac77027a86d44646e44eb704529"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2796945,
                    "digest": "sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1247,
                    "digest": "sha256:b05eb41eecb97b89919d2eacdc86aa1332e168aa4ff3750c35c41525c333054c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:8a37c8fecb6acc85d913b4779946759124998986425d194ff748d6c12dabb1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59334116,
                    "digest": "sha256:ccad999f964e7c828cdee085845e59f29f98768d0343b6fa79cc78182cdc03b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8542,
                    "digest": "sha256:b2ca942b5238b87b226bd0d43f4134cdf523f1f9462b3c7a4e16f2433a85f06a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:b39228c90d11faa13d7c611a64be2eb100593a6a72950bb70e103c915b580c0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:0be8ebd0ef6225a8e0c5a7727301b0f965f8fcce134a03f06c33419bfcc12c52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4264,
                    "digest": "sha256:976c32ae61dcebf4a7eb670fa2d3af155efd4b45368eb9f027d8b87456e526ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44708726,
                    "digest": "sha256:ad09df17844e6d09378d17df23edbdd785198735b8da30c0f744b94e4c17bcb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9ce3bd1610f59d853cfa013d316db4b32cd80920972003af287fecd7c91b1134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:712bebee58113336712fb24a05c04f8524631f89e2f3ea7a9170cbe0c13334bd"
                }
            ]
        },
        "13-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12020,
                "digest": "sha256:3a40ce4c6592655e0a6b04741db0139c14120d34d98b4844a3a3deb28968dc89"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90017602,
                    "digest": "sha256:25fa46cd24d51854e25c601e43309071b064b11de9e606acbb2102de48932044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9360,
                    "digest": "sha256:6c2e03535137e9f64a8f4ba0dae9eb3f59a9a921fc5fec613f11ed73b32301aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:9c4af5cab2949d828d9d3008a1e3c753e246eab049815ad317253fca61bfb9d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:774b879291967464eaee02f974d5b979304b9454f4c4db8eb2f3dad703e09a4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4718,
                    "digest": "sha256:9799686c8835cd006142ecaa77dc7efa6a3fcfe414bbc99bbdc367ff70e1da75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65991547,
                    "digest": "sha256:cb6011ab110e56f75d3b8ad42ac798a621db4b4cb1a603be86612d2745108993"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:99c3b7b4bff1f0f79a94312564a3f22eaf6417b3cd165789e75fd2e2c7998de6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 590,
                    "digest": "sha256:78b6fdb341717cbd8f470e466eb4ff9ccf8d46f753f567e39bfecb99667a891a"
                }
            ]
        },
        "13-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12257,
                "digest": "sha256:fedbf24d9ddc3614a36ed6a613d3e6d33850a42f58389757008d35742a1f6d39"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74619773,
                    "digest": "sha256:a9b45738ddef0866c2eeb82aeac88f1229f64e7b63c375f8904ab39fd3b219af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9020,
                    "digest": "sha256:e7d25fff751597196cf36ec175c3e7cd5b3086aff7975244be9879c826f0b420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:ff3b69b1c175caf70d200661c65af9ccb6e865049ef14c746ef2420f4b9989c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:2f27e5e43d9419802735112a4bae9fde74babcd3868156d3673aa0985cbd4a9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4719,
                    "digest": "sha256:5110a924e71792dc0ba276d161e14f51bd3e77eb5527a25f5d2fcfccbc04dd43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40872618,
                    "digest": "sha256:af22a7cbcb58abc416c44ab6e3049950e50cb46ec56e3f8364782650aeafa23b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:d7020c8e6f8a4663ce4de0e86f97464a7a474069b150984d0d656d6f149b9599"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:c1175fe68f197275c89910f3760ad22f08981fffd38aa884ac17b64885ae1120"
                }
            ]
        },
        "13-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12344,
                "digest": "sha256:9720ee6e95f8313602037193b75dd24b3132d7cb18240a543261c67177c6b07c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90056770,
                    "digest": "sha256:12a108d73293aa2072ebad27f7bc4d3cff40764378f41a032e185c8ff42fc4cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9356,
                    "digest": "sha256:571fe07398a877447b9e76796ab046c13001ca0773132ac9c1fd9098e473e201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:a4fbf402944a76462263044d333136cf3175808a7bb8b501df0444b46b5061e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:6758531885ddd44028ff329d91c4c9e3cd3c1e2c00f57477d0421f5b8b29bce9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:2835dcbc025e0bb40784ca28f7adc9a757885dd2c51c5cfcdee74c7ab71ec774"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66659925,
                    "digest": "sha256:92431e28548345e86d04c8ad5db58e51d7bce5ffd7704b5180c0c4d22eb9f891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:573b1dd4b8bb1d377c59831c051d41a60e230b0223b7f08a6f208adf44f5c6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:31f43ee08edc6201d814b73dd401c95cbbbde5bd7231fc251965d8d5048f629c"
                }
            ]
        },
        "13-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12727,
                "digest": "sha256:ba21243d14a24b4f62240b3a18e863cfd8d86c851b79aec4906609e980a39cbb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 80401284,
                    "digest": "sha256:6b14d22dbf6408b9a5dda69fd65cab82ea68dd5fdfa5a93ae60e97a6a78003a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9030,
                    "digest": "sha256:2d8ab7259e6e90ba1f2e4acaa2d2f53ef0d2d66f9a94af18e21b99e8dd202027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:51f6defbaf81f75deb8c01925c3f191abd6f9fead61bd1ab056fe58739c9c3bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:ede0ecb57b789ff5dfabbd63d241a0f10365165d03e3f7a3bf1bb6696c221498"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:06aa039a894a8f885bc75f13540014c2dd2380ba3da769c2a2016655157f1437"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54744921,
                    "digest": "sha256:11e5b998a31260f905e73a68e0091c3261ae35204645d72e040b37c01ed8b641"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:e632c7d39173cce56c476b770099155b82a7a74227699ec7c7bca76003b4d755"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:8c1475894a20e1e2b5db503638865a84006d1f78bcc9d59db13073fdde27e3b8"
                }
            ]
        },
        "13-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11946,
                "digest": "sha256:bbbc0958eba9e0a0b126ee4b53eff6b844cf05d39628e929670b9f9a0cadc909"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90160260,
                    "digest": "sha256:3a0b104cf1909d6d2518e34af4bdfb656da3b31fbd722745651c4b966ec171b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9359,
                    "digest": "sha256:d095078f0e5d3c175866aad7d6aece34e85cad62377fe5d8895d107997078215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:5aa27c6d3b9288696cee1c009ef6fe3a771ea9bc0e0081464acf2a5b944740f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:6aadb388bf7aa759007e3c6a83818f1c19498d10f90410eb412e77e056c40398"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:a24851d03a752af505c345a2de2e602fb19f6d44b24970d959461a5c38e67896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67331648,
                    "digest": "sha256:dc071291fc07f5c4fa3ff1e1abe3350b35ad3d243b6944774398737a356a3280"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:9baaa09577419588cb697dbfbaf3279041ff580f31bb7639be5d317a248aa12c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:84739c925e15b75ef6ffd86e577a57beac548c5d35c75b29a44e74b07a7d5109"
                }
            ]
        },
        "13-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12698,
                "digest": "sha256:8a4e704e9ccdd3158a7fa2f12f373daee7830e28a5a685f15d63c4e56791472c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87817503,
                    "digest": "sha256:0cd8eb83892cdaf5ec977a694c2dabb29adbcf7be138ee96be4604956124bf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9024,
                    "digest": "sha256:95f458afd8063965bdecf915a7b20af067472ee75654d7b3cca0aaaabea2e8a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:fa15749fa9cba77243de5fe9654e226d3490dd22e797afc8f8c409596798ae7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:b7c5ae294be3be26e0ca074aaca4b1bb6bef33b4bf0ee0320fcf1e960facc402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:9206a81cc33329e0c73c0ec0629f1b398d8fa341daf6dc623879efd617f2f557"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59972001,
                    "digest": "sha256:884a8bc923beafea13381af8ecad419558b49266af6be57a9549ec9109b6d86c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:774b349e836656d7240345dbaad4e29aab8230a1c8ca0aea8c267a3e71db4cd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:a03466cd75aad3dbcc0eb18fe6e49367d6845667ee3b5b1eae339371165d3713"
                }
            ]
        },
        "13-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12412,
                "digest": "sha256:5bd76e7ac78b6272375c5a89e286e4cec4e0cd4f5b9d945ee2e0b219e163007e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1683,
                    "digest": "sha256:57e87889d376df97a42f93852776e008e337fb0c84777d7ac964da6b82e23287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308143,
                    "digest": "sha256:5943dc45001f9cf206203321ec188f9a377f387a788ba89797dea91d7c01d8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473551,
                    "digest": "sha256:0e3cdf4ad9ff27ba465a0ec5e00659fe7c70a5283ab3edb5c31a7d482a542a2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045801,
                    "digest": "sha256:5ab922395bea11d61a9b28a16d97f139bea0a52be93097d831591ab5429997b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038376,
                    "digest": "sha256:f8e14acaf72eb939d306d1579d0984fc65a373c4b7e9f7e71d38ae7b3a5431f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:178128ace648cac55075a04edf360d662941a59c9add163ae8f3d3a0180f3d89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:cb692c392ad02b9cea51a8c06a470e7383458f8e7c37fede1f894b13ca56f2c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94204864,
                    "digest": "sha256:5b66c6d5e9733d5a89a8bda238b5fed886865fb49b7d532363612a586fe904ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9346,
                    "digest": "sha256:0d3dcd23c90f4d2346b215c519b6d9a0bbfeba5fe648ab123ab9cc554fb8a163"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:b506e8884152b53f3f1c61041fe3bcd4273be1374f10d64e264967241d65520c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:1a50f51b6c8e22f3434a2fd707deae9a4509139048763c87c04995fad11901d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5414,
                    "digest": "sha256:946b6e741b0e9a02b1ca74f0a53494a4b3e29d2b7bb477f8bff34c0707c1d738"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:efb99a6e3550a95ba682b927c69904c01737ba04efbb568115c301ef6e072f7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67297027,
                    "digest": "sha256:7e45d9e6472185a194b539a36827e1d273013a3b4ce83105dbe1e7026ced5e2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:4f5d14b344b5ffc8657f01ca17b945de1451ae413b7cc9d7e30b0a6941632f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 588,
                    "digest": "sha256:552aeed549b3b4ed7f5466b7b6d508a0c7cd0ff346dd61a182ddbc66ffb86d58"
                }
            ]
        },
        "13-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12949,
                "digest": "sha256:868fcb6fdd3828847028a1aaabe4301e9df8de20b1a284bb8202cf4f02cfa81c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402542,
                    "digest": "sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:65e6cda13bf3edc426931327d402edf47769ad7d0f37f3a0032d955e4842e3cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a1848dd6094cf1686d38fcbdef52e8bebcc21d39ad47f3a1b38864d767282936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89911987,
                    "digest": "sha256:e07a6a5ab0176b2094c84fb1d8231476d6f656ae5d3520e15ea5a56415acd821"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9015,
                    "digest": "sha256:2e61ff105c4da556f4da3a6600a59ac38e5a4e12514efff87791a3c5af2d02d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:c26158f907a1428c5f84bc2d11d09c1ed4336ccae76f9839af13c801cb9c0f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:2bc0f4eeceea6a90456d3f7a4a2dbdb39a2d6c3a05d44be2f9b7a127945f79f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5420,
                    "digest": "sha256:734e0c7662b64c65421fc12339f88eb861592ce6390197f25beb1a3ac01538b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:ff6db83171497a8d7d72dcd1c38f7188412574c2cf711f6295efb69930f1a803"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62762408,
                    "digest": "sha256:9bc320a504136cc5f03a8afffbf48ccb3323040519df09279b36255eefbe14c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:20df366d3e29df54fcb018699830b13cb28e524e99c5244ffcf0705bcc076ea2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:ead8655012c743df950bb6f02d0142978d083c3c8db91ed55b52786a737ff7f2"
                }
            ]
        },
        "13-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16996,
                "digest": "sha256:9c157e08512981639395422e791b76ce4f564c0db86bac429fdb2124fd857f7f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31420102,
                    "digest": "sha256:bd159e379b3b1bc0134341e4ffdeab5f966ec422ae04818bb69ecef08a823b05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414816,
                    "digest": "sha256:b955aac8d5e0d207685a6cd7a217df9d87471da8ac4397775b5f6d568ea2c786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1799,
                    "digest": "sha256:922fe4565b9a396df0877e3c888aa96dd85cc09f7d79c538d365e1db38b566bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418461,
                    "digest": "sha256:c39aa91943e97eb06ef46b96595e238868e65b3611895b9ca0a661662b2301fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045332,
                    "digest": "sha256:59e6d12f4c90b92e80334d61252257d4904f40ada76c8597d1cf4bb03b7b92a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261120,
                    "digest": "sha256:d058e68b87506639738b8886182e3c8bd62cc67c964f42ea96ff720bf44e537a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:03549096a05886d11da6836383ab150c405345c3414d13242acd897da434d3e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:c941aeed5670bce23a8676c0a25e6d8f5e9df2c9861ed631e188b9bc55e486f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90056852,
                    "digest": "sha256:e9ef221e319681070d8a7027595acc4b88b61b9eeb653561673258a422b43261"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9361,
                    "digest": "sha256:3f8b796beddc098a2feb85b5b5e9f70fcaeea2af5198f5c75cde6c6ed899225c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:ea86c34b7e75fdf3ecbd4c68c5fc6c71e4c15e418634f0da0b41361244f8c91d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:c5a56a4056cc719bb4c9c0eb567e3d8ff8941b3053599085221145b4f3cf87cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4698,
                    "digest": "sha256:28155096b4b060b43da022a4c311bbe3e0542d3f26fb1506940439b86615358d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667916,
                    "digest": "sha256:489259c27ea80441871f3f6b84126df0fcc17a8f3de853f812a793ead690bfbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21150524,
                    "digest": "sha256:27ac4f1ea520d9e91079da70f1bfd4adc7067fdc9ca8b4e643d871e82cf567a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4831,
                    "digest": "sha256:76135d5d9cfbac88c4e39eef8557f094a98d96c23067142b538810464a15bff6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16534308,
                    "digest": "sha256:1173333402a08f91af29bcc067ad953d2d4e9620186571e9cb0d02be23b14d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:da91556de253e11f699f917786f36e166fad3a7195e60d883690e9801f9b109d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:0822a7fb0857ddd5d6722c9d40396c8780930a1b88e759b7867f6a8cb5ad88c6"
                }
            ]
        },
        "14-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11982,
                "digest": "sha256:0bcd02c9f5430189e86423bcf586fba8d06436674e8610a591b2cb3ec8167b12"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91227807,
                    "digest": "sha256:7677029670ff4fe3625939c77c161e208cdc1e9c21ff9095d23160380ff492e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9536,
                    "digest": "sha256:1d24b3d9557e5acd875742dd0d101e562a5f2ca32ed7cc3351d3b4d8bb8bed7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:e085b018338cc45b376fb135133a09b9736b5ea35be6d9925dc8fbde17e7e98b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:063b09ff12e95630f4462889f6f1fb572de84bbde104ea7f469d6497799a9736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4716,
                    "digest": "sha256:a39fee215a44ffe3b744f8a79378afe57a00606a5f28856ddbd0096000c0d95d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66027841,
                    "digest": "sha256:69f4e9af33c972c47a4a4b9ff6d0e1132b17639efbda86962bcdeae9b7728f69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:bc9c8cea49adcd147bc701e85e5d3ebd32737acaa14c570108197543e1ae57f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 590,
                    "digest": "sha256:267beb94409759d4ee9bc63dddd41d843cafd063159740f3fb0439bac25f40e4"
                }
            ]
        },
        "14-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12286,
                "digest": "sha256:25aae3e77333ab441314d85b8329515667ae59e9379eb6f35354bc2502fb59e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76122423,
                    "digest": "sha256:2174501dfc980edaf733046f19df37ef6433b9712c9c0c978e246d0313c74745"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9199,
                    "digest": "sha256:02158f600dbee959aac9ce456b4be1461dfb9d495efe163797379436c36576da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:10baee6da8565de77317ad9481f5b35078e4dbcbeb6b182c6de7738d7867f3a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:e8c3775c206c35d4ff8c013fc4309b7da518f2171ad40483b370431a4fd09d1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4720,
                    "digest": "sha256:e0d373c771015cf2d7fd73319a72b47d2a4fb6072b11d4fa3063bca7f64aacfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40922088,
                    "digest": "sha256:8828c8c5064e315bc771dbb7fd68593116be5d50040439bb5a07d89beca7c4a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 485,
                    "digest": "sha256:71283fe9695301c8ac7592262e116283fe7d5141575ddbf1a3805199c30adfae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:1973a58cc96d3779f0548801bb4aac5d4841b5ad6fa54a0060c82bb892405aa8"
                }
            ]
        },
        "14-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12307,
                "digest": "sha256:bdcdd504ff0586c359592976ec9a2ea07177e77306eb207a7b661732866bb076"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91323885,
                    "digest": "sha256:36220bd76bfa74f421f8f7ea0c1b5c51fd535da9b5293a7f8ba607d0c7db0704"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9533,
                    "digest": "sha256:b79e75c4a0c2421b5a9c306931174c697d6e3d93eba60e197b0230bcbf24f99b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:cc1ab699dda54ab0b1c04fc62aca501f047db7c411aef00c77e7fc6b5129c3fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:37312064dd9b96f455d7551ed22cc5ecc08a305f0b257d4e3a382b06009c7db1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:4bce56fcbfe5d2ace822f10bf40b8ba3286bf87539212e9c8998a1600fac68fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66699638,
                    "digest": "sha256:e511dca02d1b39b0b9faee4c1e832aad945cc44ed3787096c2558973fcbd617e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:2f1037ffdf48d077c6037d1e3f7c57f8d5b7965a708f1cacaa5dad7470922872"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:9f7f04fcc25c8edfbd1c66575cbf33151486aed71eeefbf2812470a28aadbbfc"
                }
            ]
        },
        "14-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12753,
                "digest": "sha256:8e858c825b8fcf146b63c544326c81a2b59290f566bebfa7f266a511c273e831"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81870452,
                    "digest": "sha256:2a37e244d86bf079f46a22a20d896d8b0e4e1dbff849d1c399d8ef6209661465"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9203,
                    "digest": "sha256:36d7202aa1cff1485e2200b2b3a33e070531da4c5541bd117f35253a944a0b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3acdddb9790a8c4cd9d07ca6ff721e53d823633d657cd7dc82702d2b7fe14282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9a938759f2bf4769486746117f5608b0bdef9bcce3e55c85b8000cf7fd9a136b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:5d65a62412489e32d9805551e2cac85ac99195303d79b15058d5f7d405a78f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54706887,
                    "digest": "sha256:dbb70fb41fb652658af890285a2e9283dd474d890b1548c63291e1c892adc861"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:67d6b097c6c7bbf388000e756d3195044ca840fd7026dba1ea65771c9260a0f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:bd335a8171c601964faab07138e2b08a63da2bf095402a0a6d9a50a269d35420"
                }
            ]
        },
        "14-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11905,
                "digest": "sha256:80f3732b16e2e2ecd82acb4984beca5c3d95d8dc2b9f59d943f02743f64fe44e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91435090,
                    "digest": "sha256:326352838239c3f4bb72aba515a2f6ab8b14c190341c651f7773d4d95e12f226"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9532,
                    "digest": "sha256:f15572e10e4f364b51697dd8ebbcdaa40995ba6d0f89fce93c4e7444d4a09b72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:4a201387d30583f6c1a3bd44e6b8c86389bfc410bec51c0ae61c38413f78f31f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:5e5b9be0a18535ff5765d619679ad652f91797e97ceeb2b58456e8828f84d664"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4786,
                    "digest": "sha256:83e4962bf44dadb8d602f497d66bf49a4874c5e456106256f293a97e444646bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67366296,
                    "digest": "sha256:8f833a19a69b33f24d185454724ae8fe149281a69d566d983eecdbd3aa6ad937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 552,
                    "digest": "sha256:3f6395273557454602fac0f1a620cb49b425afdf27dabc27ac1774bbac9f3ef4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:3c21d830a42f23b100d79fc9512bfafaf1a898844153b3adcd830cb746065ae1"
                }
            ]
        },
        "14-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12722,
                "digest": "sha256:a5df9826350203cea282185787c7d60b9b17d5ec7eba3cf686877dea968b07fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89309014,
                    "digest": "sha256:a6a18be65c77e9319834e50186387cbc4a69d31d077fdfcd9389bc14101b5ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9205,
                    "digest": "sha256:6da10a7bbed1e64a0a0f5eefa2cc4722390d510b6d16be76583b628dba8b0306"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:ab7e93c0ebb7dd8c5445ef7b744ca9af2ae97dbd18ccfd9881ff8c4ee3dfbd58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:fdfea4fc215a196321a2c62494ce0c6ace85fecfff3c7bbf1bb6528c4206566e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4793,
                    "digest": "sha256:79def4ab94234d69e24cf787f3b2b1222805e49dde598f17606ad55bbcbeb27d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 59962153,
                    "digest": "sha256:c4ba2d209cf232b7b32247106a25df3f821070b544f29f0e0b2d580a0b714c94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:73c8783ea0ec3c3d69967043e2e93eba26daab2eae1f3f3684076a1a2b690c65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:ca95dc44886ec57001080ede8698b28575bb3292521389ca17cd30251d4bc5e7"
                }
            ]
        },
        "14-3.3.0alpha1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12736,
                "digest": "sha256:81df775a000155396dc76b9c8e57b7984ea6060866ff2e7f90ffc2f8b3f2c49d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2798889,
                    "digest": "sha256:2408cc74d12b6cd092bb8b516ba7d5e290f485d3eb9672efc00f0583730179e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:cde4337df78db353166be0e52015f790ef243152b9e250db922937c6c4435943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:55ba5f4947805e5929e7a1bc92a0d59a6aac5ef362202d33f26391fa79e09df9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81868868,
                    "digest": "sha256:318a26d10ae8188c69bd22d535ec7f6645e31ab64b6ccc6c9ea5f5cdba487112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9201,
                    "digest": "sha256:530301ea6c88ad9861169f8aab112621a18940dbebdf029bc597df319442b0eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:ed2568629342c3f5a2cc8e0e0fa1d809b45cdcdc58084becb8abcbfe4035679e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:6fb10f3b2fadd56f80dbce3b3447447459e3d8cd25f1bd13991abc64de257203"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:2e56f3b9dd60dc115f3f284dc2414f243178fee622b1909202b0644c3b5eaa14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56214782,
                    "digest": "sha256:bd15194854e14a30d4142af3627372a36d25064bb106e147bc4ff59fe3cf969d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:82a8713a6fc5c55f81c286c9067df66c038e44d917f567a43a7f5224938eaa9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:a890e171aaa08bec33df6ffece2a742998509afe2fb6eccac1a5f8de34573d4e"
                }
            ]
        },
        "14-3.3.0beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12738,
                "digest": "sha256:56fc2991ee3aa3bfa644b6f0bf8461882366daf994e5eaa7f08e79b8e329e8b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2798889,
                    "digest": "sha256:2408cc74d12b6cd092bb8b516ba7d5e290f485d3eb9672efc00f0583730179e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:cde4337df78db353166be0e52015f790ef243152b9e250db922937c6c4435943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:55ba5f4947805e5929e7a1bc92a0d59a6aac5ef362202d33f26391fa79e09df9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81868868,
                    "digest": "sha256:318a26d10ae8188c69bd22d535ec7f6645e31ab64b6ccc6c9ea5f5cdba487112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9201,
                    "digest": "sha256:530301ea6c88ad9861169f8aab112621a18940dbebdf029bc597df319442b0eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:ed2568629342c3f5a2cc8e0e0fa1d809b45cdcdc58084becb8abcbfe4035679e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:6fb10f3b2fadd56f80dbce3b3447447459e3d8cd25f1bd13991abc64de257203"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:2e56f3b9dd60dc115f3f284dc2414f243178fee622b1909202b0644c3b5eaa14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56211730,
                    "digest": "sha256:a2de0476c62649875a573cb0748e55ecde7e8e03c220d73d7c7c234c29071409"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:652ead9e9a4ca6fcf94c9e19fe66d58411a926152a63f76ed7fb4195e6fa774c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:4d260553031d773833e9f539ab6375203443f9fe124f992349fbc5faf3837ada"
                }
            ]
        },
        "14-3.3.0beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12736,
                "digest": "sha256:1ab61c4cd814e6f0e7cb7269ee96483e24048b5b20e21ff9e50ea35a6a5773b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81870452,
                    "digest": "sha256:2a37e244d86bf079f46a22a20d896d8b0e4e1dbff849d1c399d8ef6209661465"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9203,
                    "digest": "sha256:36d7202aa1cff1485e2200b2b3a33e070531da4c5541bd117f35253a944a0b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3acdddb9790a8c4cd9d07ca6ff721e53d823633d657cd7dc82702d2b7fe14282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9a938759f2bf4769486746117f5608b0bdef9bcce3e55c85b8000cf7fd9a136b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:5d65a62412489e32d9805551e2cac85ac99195303d79b15058d5f7d405a78f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55880361,
                    "digest": "sha256:fc47e4b1405c9df5787009e5f37cf88d023365c1816f596432f6718f83d00577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:a6c45249e8b2cea181ac39a02a990cfcad1a1580ecacca4fde1344cc0f9efa66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:df3a28c7ed3e7d127bbfa0b88d083441a8a03f1ffd4d51a575a4a51fbf9678bf"
                }
            ]
        },
        "14-3.3.0rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12731,
                "digest": "sha256:7b7a0390d5b5dd6fe9bed0ddea6bd017424a9b8b6c44d28981317c2726da48ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81870452,
                    "digest": "sha256:2a37e244d86bf079f46a22a20d896d8b0e4e1dbff849d1c399d8ef6209661465"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9203,
                    "digest": "sha256:36d7202aa1cff1485e2200b2b3a33e070531da4c5541bd117f35253a944a0b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3acdddb9790a8c4cd9d07ca6ff721e53d823633d657cd7dc82702d2b7fe14282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9a938759f2bf4769486746117f5608b0bdef9bcce3e55c85b8000cf7fd9a136b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:5d65a62412489e32d9805551e2cac85ac99195303d79b15058d5f7d405a78f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55882309,
                    "digest": "sha256:8efbda6baee152a1a7942b4052c9b1f9624c58cdf75171617b36dcf2d7cc7bf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:0d61e84401a8040c4b0ac5639768499b150ff44af1a6aafd19bff13f05cd5679"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:32d59dc0b3645732a53ee965df1723e8b792ad7c8f4250a0bfd40ec48e61895f"
                }
            ]
        },
        "14-3.3.0rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12763,
                "digest": "sha256:a730aefec16e113a3a54c1e6139c04daa24e7c2a851d8d43e8bd9630bcf6f180"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81870452,
                    "digest": "sha256:2a37e244d86bf079f46a22a20d896d8b0e4e1dbff849d1c399d8ef6209661465"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9203,
                    "digest": "sha256:36d7202aa1cff1485e2200b2b3a33e070531da4c5541bd117f35253a944a0b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3acdddb9790a8c4cd9d07ca6ff721e53d823633d657cd7dc82702d2b7fe14282"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:9a938759f2bf4769486746117f5608b0bdef9bcce3e55c85b8000cf7fd9a136b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:5d65a62412489e32d9805551e2cac85ac99195303d79b15058d5f7d405a78f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55889673,
                    "digest": "sha256:19b517e968b99bfda4277f869bffa75f60029a298cbe995ef535b6f34c18edcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:759e989484056878f03898e2b7137e9e032b1b30208b232cdff42a2743314e5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:57571d17a583fc09da2a3f35a11924daf784dd09d4be20925f695e2cc7c2f7bd"
                }
            ]
        },
        "14-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12375,
                "digest": "sha256:a0197e9976b8160edfc8666706c7cedc0ce6a8d30eea183ddcd339550ea861e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:5ca8b1d8067965682c153a99403513917c43667bcb24e6e5e9a1f2722eefe33d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308199,
                    "digest": "sha256:a30464904938ebff7034ef58863655bcc44652678cac08541c10e59a3caabfc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473545,
                    "digest": "sha256:923d4bd2222aaa12ac3bb2506c125d2d3833a36e5c45cac65032e405ee1437a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045815,
                    "digest": "sha256:c4b20953c85d655b0d8732c347eeb9195a6f7fe74bc901829de06e2537b4c063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038358,
                    "digest": "sha256:cba38dac81f561910b1128a62316cf529790cde39c9200ffb2b586e3809cd5ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:4d86b29e4558ca2c9c5eb4258dfcea574f12aa785c3831a4d15139d9f718d3f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:1c42d8ac920e1cf412b9201ff23b15b6eb9d006db1af0b5f6fb1e384b005665d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95449163,
                    "digest": "sha256:9dfe1a03239ad5972b9c3aa32821a0acf0022a2eb146916f39b1cb82b3f215fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9523,
                    "digest": "sha256:277e41134633dd8a21b1a9590af8e156ecc6ae98007fde80b49ae8aa2329f695"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:cef5b6dd3ad16c6ffa305771e484750f3a6ef62b89ff37ca0b7e6a9988803c0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:ff5496d1ae7d66a8c015c1db8d493785ab9c6f9e483289624e898195b3ad1934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5415,
                    "digest": "sha256:174c4550acb7f5a4ff16c35bef1a068ff319d3944ba2150802f99f6bd54ecea9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:faf3364210ef90cae391fed55f17178bde201bc49388c4cde66335ad550a0b72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67346814,
                    "digest": "sha256:3cf17fd943fe3b264820f9d0a9c330aa463e22e90f685c079c603af496a6e3ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553,
                    "digest": "sha256:bccab9b225f2c6ccec46966623e40f1ea56a8f145ab5eddc09f0f837b4df5ba1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 586,
                    "digest": "sha256:35e43eff0bfc4421280daf910d8f86946eb464db5d89e7f3214eea364fe8af41"
                }
            ]
        },
        "14-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12976,
                "digest": "sha256:af4fe101122e016a1c7f250edaafc5ab3de2d00975ee8b07a3ca6c6cfa5cde40"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402542,
                    "digest": "sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:65e6cda13bf3edc426931327d402edf47769ad7d0f37f3a0032d955e4842e3cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a1848dd6094cf1686d38fcbdef52e8bebcc21d39ad47f3a1b38864d767282936"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91404686,
                    "digest": "sha256:0054b8974bfae03be71be99cb3d99f0d9162443f38ffdcdff58cf3518a8b1f33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9206,
                    "digest": "sha256:90b69097ec5ddc9601bbd2574ad4fa1e27f2cbc334cec3838e3212cb587e63a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:66a866bde633ed4842475adadc6bbdc2c5661d65f2064d26ecbf5a750afe7384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:82962a23f2a05663a1fa55133bb688dccf1fba18f0e4693edcc80360d758d85d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5420,
                    "digest": "sha256:a7493c553a1037692035b3c5a66950afa03673342732384ed01a43162a162258"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:b8c0cb0234dc52dffe29c5e956e50eb6dfe4ea26baf6d86462cb8dc161cf17f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62753334,
                    "digest": "sha256:160981a6172daa21b1ccfd1c057be1401fe5bd6e130940f49b75ad187a1fc62a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:9316bad8e6ebfd5a2dbad715d46628709d2f126e5ea381b0dc8f6255209a7d8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:9e79c56ece97a3045e5279eb1e050c131c6c1ac9d83adb402029fe3bfce0ce69"
                }
            ]
        },
        "14-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18972,
                "digest": "sha256:46632723a746d948e69dbfe6c022bd1072f46a0b16d7123f2099d46e052c00b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417503,
                    "digest": "sha256:7d97e254a0461b0a30b3f443f1daa0d620a3cc6ff4e2714cc1cfd96ace5b7a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1796,
                    "digest": "sha256:109a7ddf1bac19161a48105feb68c7b04ddf1845a241f50884645b2e21fffa0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415040,
                    "digest": "sha256:d2f3f56119bdd28d10c57cdab715b0f94e0679bc4fe22a74c31b38707f685cec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471571,
                    "digest": "sha256:bf2df7937fd911a95420a63e8fff99cc2ea86028bcd3e2a770628868f4a1b517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045587,
                    "digest": "sha256:cc0ab32f40785aa27f46fd81933a5c09736584fa532980a1f581a01d9e867215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261270,
                    "digest": "sha256:98bd85ddf81ea215a5ad1cfbdbb73d706b3cd3b70c9935f4d6212be72240e8ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:28b11156967cfb55be4fd723803ac71fb44e027cba96098d37a8a98012e3424e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3194,
                    "digest": "sha256:90521879f20bc16a06f6001899496eb14391034afacb7aa402eca101fcec90d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91435174,
                    "digest": "sha256:b6b6f969c23ac8882d4fc197e04fa2850fa5be661a526c6ed13936e40241363f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9528,
                    "digest": "sha256:4b392a58299d4465746f8119172065e2e996e3e2e9ab903847533c6d2f5e0a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:ef79a7692d5d91525f00313ada34a7b04df2e7a6d3c43148535fbe9c1a07433a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:621b58129b0e346a3a565938bbda17d535a4bfc005c263e608bd8bf06b60d0ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4784,
                    "digest": "sha256:7f011a1ba76365d2df806e75afeff1f6312c10904f8b47018600265fce2c9156"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12852232,
                    "digest": "sha256:d03f92a2d4b95e9f1b5e60045d23c6b66b5ab74ac8a2359de221f5778e6b3035"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 895,
                    "digest": "sha256:b40b1fd6a1492cfb201db7f8eef25295a0fa30b42f62244e787913592606239e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23025433,
                    "digest": "sha256:d16bb3be28fdc98481ca4edd790296703f9c24933ab64dbad7d7b2b9e079c00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5358,
                    "digest": "sha256:a4ded77da8f0fc30c902d86fbba9867c02d975b3b7345c718e137f0e943251ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14392598,
                    "digest": "sha256:4b3221d15699f5b4237a6b93007ef405b50a6fc98c44de8030d4c78c098a8ecd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:5889adfab3b9f9522cfffb818d5607e2f11ddcaaed9289dc4e48adbe6d1852f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:ffecb1f3e1c048d97be4577e90f87e20f2f36c81d3114f52def232a15bf3b706"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5388,
                    "digest": "sha256:5578a150378d5bfa5c73341da53eaed57f88b5de22445e0f34a6a3f631646a53"
                }
            ]
        },
        "14beta2-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12023,
                "digest": "sha256:a8fd609685fb96a0c8483c33ddf6625c0a91d19abd4d4a0d05b0f9e93a5013b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145795,
                    "digest": "sha256:33847f680f63fb1b343a9fc782e267b5abdbdb50d65d4b9bd2a136291d67cf75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4179243,
                    "digest": "sha256:1b09e96014b303a331110f03dc2f8b8543183b503fec12f7b85aebb5f1e27bfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1804,
                    "digest": "sha256:eb49b6d9d1f38734e1b4531670431729b8ae8c63f5e4e4481d921a81f3b54373"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419431,
                    "digest": "sha256:4057ebf78d2d3cbb32a26f1a65bc02ecb28e214cdfdfd59dae1d12961b2818f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7965277,
                    "digest": "sha256:f92d870e2c4fac13501f4e11687665b1b7c75e0da5d4003a44ea24feed600f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391212,
                    "digest": "sha256:b03847575a18ce18de174a813000152eccacf3d2205842bdd79eb581cce340c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:475945131fa9d329c4e4cd85862244dd6d1b468fe4a8a986f10b464e40558063"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3054,
                    "digest": "sha256:c042b5a6607d69d45e2e680be60e60139bce50474f0bf79a75f3fdd8a83e41d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76079174,
                    "digest": "sha256:f42c4574165ad5f966175784b4cc3723eaadbeba1524515babc9143cfdee85e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9549,
                    "digest": "sha256:68d31b3edc30969933acfb2fbc1f99b583cb81759138008c73ca0cf7789392b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:6abba01615dfe257226453888fa7fa4f5ff481d7fab8f024593e280d095231d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:369c317794fd6f613c2131d021174b969960987342c7dd3dc9ebea3e46c2b95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4400,
                    "digest": "sha256:81b69ff9c12d0ecfe699ce654fba6f970d4f3d3479f24bd9f7a1799ed34ee975"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55296400,
                    "digest": "sha256:12fd775aa12b968ef36c0a2581d443afa7747e2d52d543983ca0a67ed3f8efd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:834de88b0dc6e13eac8bfd69f91d77f097161b86ba93183742a2da522c567691"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 591,
                    "digest": "sha256:bb385da464c3f4f32f25eade613bae7555d58b508326eba191b893b26a6539a3"
                }
            ]
        },
        "14beta2-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12084,
                "digest": "sha256:17d1e7ce881c9d5396fcf4aa6871552f418b8f0c7c7f6b3250f01780da46a6b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2813006,
                    "digest": "sha256:29291e31a76a7e560b9b7ad3cada56e8c18d50a96cca8a2573e4f4689d7aca77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1284,
                    "digest": "sha256:c7f8a1ea71cb44639c871a69f095baa1737555205a3ea7ce92b116c1462ffc37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:64d8912b293dcd54c830c025ee7d3c1e3774037bc917800fc4db4a04959855ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74481817,
                    "digest": "sha256:49c2161a5f51ffb4d061c58eef7efc67c3a354ba87d3c33a9a40bf6a1d8fe02e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9228,
                    "digest": "sha256:c4645a9b11a65b8c79314534aa5aa348f92c1cd953f5a43beee999d7fbe3a8dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:57a8396f450c8cd2e71af6b2166c77a174de27c42b624ad5c1ff112023ec17a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:0a16ead3754771b0dd830c5fb9dda573629d007d27c4317b18bbc2cd31da179e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4406,
                    "digest": "sha256:929db4455aba178a2e3d6a3a1135733e2b29615bc71c4bfdf8b18d3fde63067a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42204939,
                    "digest": "sha256:88ce14cc39cc8586b71959f093a1d6b7b6211f713b0cffd6ff6c287ab0910311"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:6ca93c1fa94d8d4fbad1452e9d71d54a9ae57e8cf55e055096f82b74421b0b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:325fd6c474cff6072c00f86917c8a462c64eaf935afee74fe9db7f5417a7c4d6"
                }
            ]
        },
        "14beta3-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12021,
                "digest": "sha256:b54cea3f2bc0d170c2e549736d50a0c21298070d0703e5d7a0e3f9df60de2822"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145844,
                    "digest": "sha256:a330b6cecb98cd2425fd25fce36669073f593b3176b4ee14731e48c05d678cdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4179226,
                    "digest": "sha256:3b0b899b4747d6bc70cad80eeed88a5c38c2ad412e7a12e2197ad2be1ce1833c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:cc0b2671a55266e6ffd407341f385f3a493f6cbab55d331076b0ef45a44d3f68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419392,
                    "digest": "sha256:1a7c7505993a44cccc920866751e3ed610903cf1449e2997adb393851c0273b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7965275,
                    "digest": "sha256:02cdead795569f50b49c1b43b01c2465c9be8405db719d97b260035807b4dfac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 391183,
                    "digest": "sha256:0d8fbe9259d66338ae858c41f634446a66d711a90c23e4d7e9f00bc7cf17e167"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:974e6d476aa76e52a4e1a98b6269c67c813858fc26367b7dcd748712bc040bd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3055,
                    "digest": "sha256:e9abf0d5d0bc96acb1620e55fb84dc2742dd6b916b1559a54f87a7336369eee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76151416,
                    "digest": "sha256:7727f07884f976a9c0e29609545f332e5bed41e3e2a895e4be075e5a38b1b3bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9524,
                    "digest": "sha256:3c1e54ff02843ac67ed07aacc2a227194430487ff9afeb11d8ec5621a0712fa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:c0d053c9be5d791a8da61d923ae81141a90d9b56ec4f2897217c4c0c01c30669"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:4175b6cfc59a91bd3101e747e4fd4feec6425e72ceab1b7c0dbf03566bc68de1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4397,
                    "digest": "sha256:6675869a10d7c8a85af4de31947a9d4d035635942d60b6ff520814235a98d97c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55299875,
                    "digest": "sha256:50d24552fd55b4ecedfc5460bbb4251e05833a066605e154e5ce1dfa9342119a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:9d4d85614988d66d915d557a72eb155952e4f82062503f8e37a98a2c9b616974"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 587,
                    "digest": "sha256:28269b1d25d9a1360bdb3c09a392fae485657bae67fc9acf7f8b524f7664fc70"
                }
            ]
        },
        "14beta3-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12083,
                "digest": "sha256:f8631b7e3d95255ed030ca232caba642debef4ae476bf01a161552184cb7d0c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2814446,
                    "digest": "sha256:a0d0a0d46f8b52473982a3c466318f479767577551a53ffc9074c9fa7035982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:5034a66b99e67db609bf6b4f82bea915e39a42e6f03d11889f7406b4de9e99da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:82e9eb77798bd506a06a9adab733c822c718be829c54d514b5789b07c0f1c164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74491047,
                    "digest": "sha256:c2306860552496fb9a83f67b39ee50fb7d3cf9204bb835c309b5740f00a8c9bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9204,
                    "digest": "sha256:1a63ccf89bce168b7fa490646c096cbd2e3ba3169aaf2035b0e70a8965494fa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e3dbe99abe7d69e1622373957826eb1ba46e95f22a4d77b2f5db6d622d8b9374"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:5397f06ed4f5fea67bdbf4710cf71a591d4f08cc33095b24a56560c30f0bb125"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4404,
                    "digest": "sha256:57c459d6b3d2376df61e8100f598bc722bccd1233a08bb4f9a7de34dddd9bd47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42207925,
                    "digest": "sha256:3a4dbd5ed10faaed4136f383240e769848485619954c4ad96bf37c77a17ac776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:b6e134ed5a3534e4ac124ff0a8c0f24b5f3b66ce3f1d59ddeecb06eeba8bf8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:ddf63237e83502ff8ff8c6549e907d449e3f41fd308282b8316a33f6b25dc1ed"
                }
            ]
        },
        "14rc1-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12009,
                "digest": "sha256:95a98a78d4ebdd96f779e731f59c5e6ddb21fde5cb04fce2367115287a002bff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368702,
                    "digest": "sha256:f8416d8bac72cefc0ce17bd2dc0c03aa43e123d309db92ee23be9382192cf2ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414347,
                    "digest": "sha256:858331474a6973db99f1d2343adebce057c67fa5a394c38cb84d7e38310198fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1803,
                    "digest": "sha256:4ee930e806cf68d514327ca629b1450ae5da5a5d4f75127380e21033b2a8e2ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1450472,
                    "digest": "sha256:6748b551eaabf3a6f6a033cbd73645d6fee7756867336986c621ce6cb8beca3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045261,
                    "digest": "sha256:3885f0ed3c9aa6d6399bcb4953cbfe6380960ed6bc601d4ad1bcbebf4c9ba84a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441491,
                    "digest": "sha256:f9aac1b6637a0995cfc53a2d2fe9487da28d86fe2aad5967f93e99506384e4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:c67f57ae254c0d300e13c307ca8229df6cbbef6c1e677eb3b008215374a78eaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3054,
                    "digest": "sha256:1cba9dccd3375aacc8b39f5bbb0a0366011d6b1cb52b44a419ebd75ea669e748"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91201619,
                    "digest": "sha256:2b1a8abff68d3e26f4d86f15c8adb29b53a455fa704b12a4a65d870e0c631eb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9529,
                    "digest": "sha256:b96dd618d864452c70da6aef448ac91c3fc1e0d26526d9458670828d24130483"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:1756b016da03fbc084c53828831eedef93aa8358fb6dbce27e624286f856d715"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:0bea4efc8332623d58ad94a5c547332b2dececc4f0626f79e836b2bdf130bcc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4399,
                    "digest": "sha256:1fc348588bccda00c157145a56c5afde4438b7f82cc62de4c6e24dc3f238af9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66030648,
                    "digest": "sha256:9ee1816a2419fd33158c380f5ba68e4a365cf7db919783835b34af26e35f5f68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:e20a28efc0844ed2086792d33dfcdce18456c4bff08258c664393f944ca215ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:a4a88f643b7f639392fcebcca3f19ebf11452c62f56d302fd4f5fbf48ac319e3"
                }
            ]
        },
        "14rc1-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12080,
                "digest": "sha256:8d6a6ad6a3dd07707e7cec61fc769a2738498cffc88c3d269536e6c932425aaf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2814446,
                    "digest": "sha256:a0d0a0d46f8b52473982a3c466318f479767577551a53ffc9074c9fa7035982e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:5034a66b99e67db609bf6b4f82bea915e39a42e6f03d11889f7406b4de9e99da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:82e9eb77798bd506a06a9adab733c822c718be829c54d514b5789b07c0f1c164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74495422,
                    "digest": "sha256:e6c79b0bf8c1639cb6c4065897d78b8e1e831d2169b4772653042529e26e4d96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9208,
                    "digest": "sha256:2010d088b52d37cec7d2fd31266ce947691811c917e3dc50e6ba2a44cd9e1a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:c7d0064b53f1788c84f703b6c0f8ab11109a0c5b0d66c8c2da6f9bdf00b5cd78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:5cf4097bdf301bd1d19e433a48e70c190a10bc499ac4906890e75928e50bf63e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4406,
                    "digest": "sha256:84cbd7f80baf38ba6fb27a15dafe704ac43d3a9721923435ff272d11259ca773"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42208161,
                    "digest": "sha256:eea17c8a90b8e581a56744c4a29514ac30ba6e673ba7064f284f79bcb42ba2f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:49ee603b8e0deb928e412c602390d22c99761de1ce9592ce9b72f69fe7288f40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:ba31550d16e97acd4a97044f463751cc8fcf3aeccf9296fc51fe739fda1aee39"
                }
            ]
        },
        "14rc1-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 15782,
                "digest": "sha256:739a86652fcac862d76e9321e48664692db681b6aa7c66a61e0cf65d77bd4d21"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31368702,
                    "digest": "sha256:f8416d8bac72cefc0ce17bd2dc0c03aa43e123d309db92ee23be9382192cf2ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414347,
                    "digest": "sha256:858331474a6973db99f1d2343adebce057c67fa5a394c38cb84d7e38310198fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1803,
                    "digest": "sha256:4ee930e806cf68d514327ca629b1450ae5da5a5d4f75127380e21033b2a8e2ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1450472,
                    "digest": "sha256:6748b551eaabf3a6f6a033cbd73645d6fee7756867336986c621ce6cb8beca3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045261,
                    "digest": "sha256:3885f0ed3c9aa6d6399bcb4953cbfe6380960ed6bc601d4ad1bcbebf4c9ba84a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441491,
                    "digest": "sha256:f9aac1b6637a0995cfc53a2d2fe9487da28d86fe2aad5967f93e99506384e4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:c67f57ae254c0d300e13c307ca8229df6cbbef6c1e677eb3b008215374a78eaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3054,
                    "digest": "sha256:1cba9dccd3375aacc8b39f5bbb0a0366011d6b1cb52b44a419ebd75ea669e748"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91201619,
                    "digest": "sha256:2b1a8abff68d3e26f4d86f15c8adb29b53a455fa704b12a4a65d870e0c631eb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9529,
                    "digest": "sha256:b96dd618d864452c70da6aef448ac91c3fc1e0d26526d9458670828d24130483"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:1756b016da03fbc084c53828831eedef93aa8358fb6dbce27e624286f856d715"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:0bea4efc8332623d58ad94a5c547332b2dececc4f0626f79e836b2bdf130bcc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4399,
                    "digest": "sha256:1fc348588bccda00c157145a56c5afde4438b7f82cc62de4c6e24dc3f238af9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9662317,
                    "digest": "sha256:e647169430e75c97dd80f2be9159e7fc80342eee354d3cbc5dfea4a5fa2f2339"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121244924,
                    "digest": "sha256:64e15f32ab29de4e7fa90f61f559971b724af8005c8877831bf835a8bab5f80a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4864,
                    "digest": "sha256:c7c97d5fe0cac0104760886674e858d97620189c687f4de6a65a45c777c7f3fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15286664,
                    "digest": "sha256:89586c159459e007ae6b4c8f476a45e16e4b34e5a40447e5af1440da6f586421"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 487,
                    "digest": "sha256:72937672ab788f9545c8e034c9275809d41ddd854f3ff21489885190dd175e53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:e6f9c6283969ad0ed08088b03642bee9fd9e46810899d07644ef317284611202"
                }
            ]
        },
        "15-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11901,
                "digest": "sha256:994be10eb70355ab66eb2845be40d2faa7a8fee2b3381b7ee15ff479e32e9d9a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92376069,
                    "digest": "sha256:0b4681647db97f84d4941c3c2a852146c268f670adbbaf38738de795b18fd35d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9785,
                    "digest": "sha256:a26a02baf446652876e34f6dd758a224ba4d2a0449e3fbc8e53f9c23ace7abf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:f23143843495c630c4e49cb01280535acf97278e1ab0f3db604bb4d608fa3119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:25d55513df53e3b228640bb9812550b6acd847e51104e758ee90808f798c16ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4786,
                    "digest": "sha256:f8aea60fd9610cf9551ee1b00b87f070d7650dec7a861226b15dd7898dbf49df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67446261,
                    "digest": "sha256:547fae9beacab725710c5584fae3885d47d024670466a4844d7702d44e903ad4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 552,
                    "digest": "sha256:3f6395273557454602fac0f1a620cb49b425afdf27dabc27ac1774bbac9f3ef4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:3c21d830a42f23b100d79fc9512bfafaf1a898844153b3adcd830cb746065ae1"
                }
            ]
        },
        "15-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12754,
                "digest": "sha256:5c31842a05f0a2e2536615a216dec3dd1ae9215c8cf129fc0845a3642308044f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89959606,
                    "digest": "sha256:b1c0fd40744eae21a7cadf2baa82fbe5d52d88caa77141569aca7ec24a74ab50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9448,
                    "digest": "sha256:c03dbaaa41b8ee6f5a32a619fbebf060f7240bf0bc16015f79464a25fe109561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:bef2a254675917b518b22e0d6f52b714cf40efb63e1604b507cd0f0fc13e28e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:d80603666f21230144fd56ef3ed0682c5565c0dfc01287ea7dd2db2665c15021"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:b76686cd29264b29eda240c43b97eb12ff0116d5b79bf31d10479e1d2b0d8a4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60091676,
                    "digest": "sha256:44a150a2d20ae8cff18bdfa4efcfd247d4ca13a2858a04be53bf87192361a3c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:f086ef810c8dd682e823f859ef23792b06282d3c8b53f1d6faa48b5dae5836a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:9773fa06a656acc456fd389a7dad19386c7dcfb2438dd64676abf83a576e3c37"
                }
            ]
        },
        "15-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12373,
                "digest": "sha256:c9a6d5f6b6a53cf0fdc6d06fb65da9371ba102c6a890598db245e8f3f32e2810"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:5ca8b1d8067965682c153a99403513917c43667bcb24e6e5e9a1f2722eefe33d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308154,
                    "digest": "sha256:e67a7517e7fcc298feade97f6054523760e82b67d9267f5772ad23e9558ca68a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473529,
                    "digest": "sha256:d8480d9eff0136abfa5bc2cafb5af61011e348b41eecbdeb54e717b47290a707"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045816,
                    "digest": "sha256:31da1aff448f128533fc614e669b68f77975b7f9faa815ea45d31327b5387f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038345,
                    "digest": "sha256:d02f41f1af5e9e95f8556ed1abb4b96ebc3286137c166a8c0d79c68b75129ea3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:088e651df7e915a8b4690df1cef2a928d64b1aece2fe223577474be8b659de38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3140,
                    "digest": "sha256:ed155773e5e07a0805ea87875e9ed49889ee2500394ea788fd8fe282510253c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96577551,
                    "digest": "sha256:fda3a923e44541958cf1092f54d4a7231e589a1393d209f00d369063b38f9fc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9775,
                    "digest": "sha256:68783187ac704ef8c43d47bc047c0bf140c48aa93868e11f6c55f7014615a912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:cef5b6dd3ad16c6ffa305771e484750f3a6ef62b89ff37ca0b7e6a9988803c0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:5c93eb547a66bdc1d8ddc5a2c556f3a87382b6d802d46d259c6b70b92f9eea2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5415,
                    "digest": "sha256:47f846230e4db3e9b0ada9e96e1b76b2a474713bbb96926ce3265066aa460ce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:822c1a513e6a74054526054ad8e2339e6948788b56face7206d07da1cf55ed5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67433573,
                    "digest": "sha256:f45d9c461b5058eb57ca83ac466498665507106e06439e6a6c9bb6d699fd7da2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:a5bb9b19b31bdfc8dc00fed7a55c291fc13e0de6daf8d2794617068d372d4eb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:bb746affc361d4b6df3d3ea12b2675ecadf7325f60eff3b3f7c8c7a189f0df31"
                }
            ]
        },
        "15-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13003,
                "digest": "sha256:8d2756ac12df70a9f0f8c05f2f8852b010af6018f92895a21c6154adde2a9c1a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402542,
                    "digest": "sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:75686bba78ea7c692fc8c0ac9c9704916c6aa9779ed32f400b50540f40b76722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a73a394343e27f59c1371368bebd16cf6c8c6c986527d41c25914f8183a6eb48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92060661,
                    "digest": "sha256:f3e00279ac7933ca1c5654a3bd83a53c1aa8a1e6d5b396d084dd5f1203aa23c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9449,
                    "digest": "sha256:c266e599af1aee0f84be53398d337c15d890e9ac9b0284fb53f0961a8f77991c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:274da6810f39d4dec075d56ca40ddc7ff68e1f4c880c2d17c49a48ac99331ff3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:0c60520291326a37e18ed9844b25de5a3da16f3f9ad7af5eb0fe7b9d0fe57b2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5420,
                    "digest": "sha256:fe7368a384be3c23de3bea90b7aafb21254c32a6aad6baea1a6c3ca0d5bb0269"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 185,
                    "digest": "sha256:41e1db5f4d9ac996fe7387dba125e6df1f0bcc3e0fff3c173a7a84a5f68c8820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62885384,
                    "digest": "sha256:76687d206315cfe8d7060df600532ee077a1a67fd03f2f7d798e5d30cbffde55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:2af637816842ef35db97eaee5f87c965385657517a2b53f2f9262a5b79758809"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:a15c9b8b431269ea2fb42be30ce2942209bab8a8d232eda857558862aaaf9728"
                }
            ]
        },
        "15-3.4.0beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13804,
                "digest": "sha256:6747b4f6d7b67af242c71b39ebf866123cb61db31958f754c3a9c953546261dc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89929909,
                    "digest": "sha256:a120e2610875f46aec6c91f34f46574d4cb6a07f9ab469247fe1affccc08a50d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9449,
                    "digest": "sha256:64f9e9ad23bdf2ce610762af4d1041d79f7f48a7c3fa5a7d822cdae9295bb9b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:dd2a4281faaa4ada354cc4f1a91ed4f96436ae3412597727da0abeecdb0007f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:daef310ca2c66fb0048375e8b9bc35d91b315dd9903474749e5246b84bf313b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:c47c060e762a35307ec4c09878a5b445789b7006f999ac186d122f99b8f9174e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62706011,
                    "digest": "sha256:7434ed875cc9243cb5d0f67c497913fa0fb78116a9a7a848d015cfb0b849383a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558,
                    "digest": "sha256:13b2d06125748c7538cbb07ed1d7f44573827b757ea9fcc92dfb8b349e7c26d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:555e4f03cceb50479faa906c85d0ceda5465e4f15d8ab6e46f9482989e2a0c2a"
                }
            ]
        },
        "15-3.4.0rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12704,
                "digest": "sha256:07d68bf81bdf16108dbb8cf1ad1aff6d5f6193f40c20deccb1aceafb96b5e18d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89929909,
                    "digest": "sha256:a120e2610875f46aec6c91f34f46574d4cb6a07f9ab469247fe1affccc08a50d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9449,
                    "digest": "sha256:64f9e9ad23bdf2ce610762af4d1041d79f7f48a7c3fa5a7d822cdae9295bb9b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:dd2a4281faaa4ada354cc4f1a91ed4f96436ae3412597727da0abeecdb0007f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:daef310ca2c66fb0048375e8b9bc35d91b315dd9903474749e5246b84bf313b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:c47c060e762a35307ec4c09878a5b445789b7006f999ac186d122f99b8f9174e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62709250,
                    "digest": "sha256:66e36985c5572af5f66d9441e787e55ac50d63261a319c7779f947edb9374adb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:72fe830ca1205455a74889b3635ed779127e4cc51007149417b22ae6c4573f50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:210a8448f7c0896018773ea912c8ceb305d4eb47166f473ff20eef8ca8063bc1"
                }
            ]
        },
        "15-3.4.0rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12766,
                "digest": "sha256:d682cc922fb04c0b826d23c1d0ce200f4d483486fd1d501b8e6cbafc0da12e3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89959606,
                    "digest": "sha256:b1c0fd40744eae21a7cadf2baa82fbe5d52d88caa77141569aca7ec24a74ab50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9448,
                    "digest": "sha256:c03dbaaa41b8ee6f5a32a619fbebf060f7240bf0bc16015f79464a25fe109561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:bef2a254675917b518b22e0d6f52b714cf40efb63e1604b507cd0f0fc13e28e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:d80603666f21230144fd56ef3ed0682c5565c0dfc01287ea7dd2db2665c15021"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:b76686cd29264b29eda240c43b97eb12ff0116d5b79bf31d10479e1d2b0d8a4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60259628,
                    "digest": "sha256:6e9114f71f0dd8dea693a19b452877b3eacceef4e60583c7b9e172effc3dc479"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:a9dce05d6dc98376f4b43f4ad7141ba0937a7e2af7cc4124e68428dc7b4d9693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:1d8b1269106febdc2b5d0a910576a98747aeedb0ac1bcaa82dc6492e5398fb41"
                }
            ]
        },
        "15-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19877,
                "digest": "sha256:cd6787490164e43677b34d617dbf28daa41d75a13c0ace701a504f0085e43bcf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:5ca8b1d8067965682c153a99403513917c43667bcb24e6e5e9a1f2722eefe33d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308154,
                    "digest": "sha256:e67a7517e7fcc298feade97f6054523760e82b67d9267f5772ad23e9558ca68a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473529,
                    "digest": "sha256:d8480d9eff0136abfa5bc2cafb5af61011e348b41eecbdeb54e717b47290a707"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045816,
                    "digest": "sha256:31da1aff448f128533fc614e669b68f77975b7f9faa815ea45d31327b5387f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038345,
                    "digest": "sha256:d02f41f1af5e9e95f8556ed1abb4b96ebc3286137c166a8c0d79c68b75129ea3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:088e651df7e915a8b4690df1cef2a928d64b1aece2fe223577474be8b659de38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3140,
                    "digest": "sha256:ed155773e5e07a0805ea87875e9ed49889ee2500394ea788fd8fe282510253c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96577551,
                    "digest": "sha256:fda3a923e44541958cf1092f54d4a7231e589a1393d209f00d369063b38f9fc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9775,
                    "digest": "sha256:68783187ac704ef8c43d47bc047c0bf140c48aa93868e11f6c55f7014615a912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:cef5b6dd3ad16c6ffa305771e484750f3a6ef62b89ff37ca0b7e6a9988803c0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:5c93eb547a66bdc1d8ddc5a2c556f3a87382b6d802d46d259c6b70b92f9eea2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5415,
                    "digest": "sha256:47f846230e4db3e9b0ada9e96e1b76b2a474713bbb96926ce3265066aa460ce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 182,
                    "digest": "sha256:822c1a513e6a74054526054ad8e2339e6948788b56face7206d07da1cf55ed5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12853861,
                    "digest": "sha256:3a763fad7b2942b304e41b03fdb1188d633d1bdb0c2613fa2697d34892ed10b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:46c8e6d9750d7062afaea222293a5697c427e89599133174ddc2f208b22e20be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24049655,
                    "digest": "sha256:49cd2f6d511a637f043a4de21956a7213039eecff71a9b0ca73f0b12a903b961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5343,
                    "digest": "sha256:a867aa5ad0756b2cacc6a386ca60ba2c78686c46e2335f7dab6ba24fe3777e65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14375908,
                    "digest": "sha256:d2fd6ba831fcfaeaf5479ae12300173b7efefd092046c598377d2a31653da4d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:9ade3e94601c75346b5e4ac7ecdac5f74975053f08c5dbf664d965fee209d322"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:cbaaa03854be2c9c2980efd40a8cfeec1e9519058dfa9c460151fea54208771a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5375,
                    "digest": "sha256:abd87b124d1d18beeaddde8697b678ccf6909b61a07d9f9f8f7b3be551f1e2c2"
                }
            ]
        },
        "15beta1-3.3.0alpha1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12749,
                "digest": "sha256:f699ed1729b5cfc0dd7f1c3c5cf673f1191b2477649202708dda69b37479108d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2798889,
                    "digest": "sha256:2408cc74d12b6cd092bb8b516ba7d5e290f485d3eb9672efc00f0583730179e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:cde4337df78db353166be0e52015f790ef243152b9e250db922937c6c4435943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:55ba5f4947805e5929e7a1bc92a0d59a6aac5ef362202d33f26391fa79e09df9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82698779,
                    "digest": "sha256:b35c39a31c65c4fe34fb141692c0a81d573352d94b85dcb0d6271bcfceaaad14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9456,
                    "digest": "sha256:af6462b38c6f1e88079528386d2d1b04acfa3b18afd37680334d6743565f2ffb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:f25976a4676c12ad78cd2a6328b4a02f7734b21f13ce9f275aa646a417ed2d7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:d46276522ea76aff90b1882f0606e1962b0acc14f3f11aafadaaef30695f3cb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4705,
                    "digest": "sha256:530406b78f1bf0c9c3d150091d704ea9795bc3630842588a583d41ce2de2e9fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54893199,
                    "digest": "sha256:e43b41f1c230f141f2d13967f020b83725d8f36934ca6e049058caad42939493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:7466674b9e6e6c3c82d15b96101c9cea9acd600a436e66b8412d20d5639e94ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:7488713041dbf527fe074147cfee57040bbddfd70d8383a44621054f7840910b"
                }
            ]
        },
        "15beta1-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16722,
                "digest": "sha256:a8ba11d15fb9ed3b97787b3c951e904ec54df9b2eaa5a64ccdd0c08e293151af"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31379408,
                    "digest": "sha256:b85a868b505ffd0342a37e6a3b1c49f7c71878afe569a807e6238ef08252fcb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414594,
                    "digest": "sha256:b53bada42f30af6cb05b321cd1476f8e7618dfcf89614107050a261436b1097c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:303bde9620f54624dd5ac06c8d299c420b8f422d086bc30b5ad3728419ecf171"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418435,
                    "digest": "sha256:5c32c0c0a1b9965aeb753d022e0574c5c29890183dbd91a4409659c6b651802e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045420,
                    "digest": "sha256:302630a57c0605eca44604de509d0c938ec26c3d5ed27f87c11b643b113873f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261185,
                    "digest": "sha256:ddfead4dfb390e7fdf514870fbbd258dc62ad3457eda7281a7f0e8d567c7d067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:03d9917b93099eb77b625877b1f755d24af442568a78fc0805c0b09e3d23cda1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:4bb0d8ea11e0d46901df9f6d54845c7aa10fb73ac29b8c22648afa2a308808ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93237870,
                    "digest": "sha256:3b84b37f5d7e5792428251ac88225f6ff1f73b9e7806f200b37203a7c87f826f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9791,
                    "digest": "sha256:490b602f45b46db0b77d80f64b7331408e6e60b6fe5b6b4f88954baec0cf9658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:dd8492049917b28c913b2807d84ce0504735972a89bdc5ed57ff4520e6605dc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:cd635a844dfb9c93a6394d5fc8ca02b67944c8a83690a86743a66674c3b224c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4697,
                    "digest": "sha256:cc86f49136a20a989603ad6e21cea43b9dc0eab2626a9c60220e4afb81b968f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9664550,
                    "digest": "sha256:27cbf990469a2f003df944d066ce3973f36934f61a06754abd34d9b20c9f2f97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104266154,
                    "digest": "sha256:65236c6e3d50717467f8b62e8c17c91b18bcb00382f7d9f3ba96af35d60cb469"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4839,
                    "digest": "sha256:a86a5fec4235c66c118834c4c6790c695763f56a1103e81ddbc631ee8a24e3e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17818261,
                    "digest": "sha256:dc67961cb483baef77ca990f6d26fcff7eb07ca84517d6bfb0dd0129c0b1d1b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558,
                    "digest": "sha256:6bc64766e7931ce4aae701f5c433e9c2af2ae64b9a6178100ba576a5bf729be7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:34bda99b42d8003997da64bf5fa3ffa4621c0d98ba3bba0f142628c4b9a1ca5f"
                }
            ]
        },
        "15beta2-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12273,
                "digest": "sha256:e7b70e0d7dcfbbdbdfc044547d23b86fcd614dba8fba628345ba7266a28f6fed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31366757,
                    "digest": "sha256:1efc276f4ff952c055dea726cfc96ec6a4fdb8b62d9eed816bd2b788f2860ad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414772,
                    "digest": "sha256:66c520df917d3715e4642387ce8786797c184e9f415a1aeab04e5dd070022702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:5b124e6748c9fe30c3e6483ac420fe044a00ad7d38b51783104a8276360ba8ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418434,
                    "digest": "sha256:1a06bb042d01cf46ad9ea6c04b8a55c2a6b880c64cbfb887e2d4ae1f42765bfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045320,
                    "digest": "sha256:e3849c675ec5f366fccdecb7e849db6ab96b31f0d19104b8aaac2e51fe5ca1a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261141,
                    "digest": "sha256:d3b2eaf1435b467f692b57d4474b688b9597a8789a1593b6f3a82c386b21d5c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:074399829dc9a56b8d422dc00806dbff19fef84dfaaebd8a0ee891057e34111f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:6feb085525d8c7a128d17fe5f690efaae1aa9f6b3cfe722e409f7e2d775a1d9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93264833,
                    "digest": "sha256:1f389e81751d357ba35aed31a8e48afa1336110d97cf1d3a4f6461eefe474e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9788,
                    "digest": "sha256:90245e1a6621bd3b37d065e9bd827b2b1763b4edcecfa933f08b0676aa43c1fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:2a8dda300dec287d77ccd49aa557baea3f7c91679ea3130be969a1a6cb3e43b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:207528e99b8ea9f7bb305745d6907c506e0d3795d245168b794905af4c95837c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:714dc127d8cedd5a9d02374cecf2abd0c2312bedb62714e7cb1ec9f170055cbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66496293,
                    "digest": "sha256:c114e4ee565fb345ed748827201912239377d1af40bbbb6cf06ff5a098e77e15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:c457e104d404b2800c01c8df3a7722a0143ff727fc529c903638f42a2a69622f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:3af3f4219c4fecdda4f425217debc17fe01f11884b5a77f9fb1e9349f1fb21b0"
                }
            ]
        },
        "15beta2-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12758,
                "digest": "sha256:9ec6b1a92a94d8b61a6d6990bc06633bcfbcd6026ab3a5d55f66e21be0ba9987"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82727913,
                    "digest": "sha256:c649b7b4be77caf44d452d2edccef8347b0d6af38baa6cdcb19f08448113c908"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9456,
                    "digest": "sha256:2d77b52a381d7b2c10d6276d971e19babc2ccafb76b0cb905462af89ff344349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:88330a53e6dab66ce6a97131fceecda28cb2a661a78a3ee506108dbe80b76ec8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:e8a2e10f1449a017c006f64f389bdf3489489156df1965932c6bccaa41eafc4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:62947fc8f541bc21d9e06a97f6a2e7f46afeb92861495b3072f34ca567ba73bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54843659,
                    "digest": "sha256:bf39c89a12ea6d00ad5bf9fa4ac9b199fc7e4935d7617172eb8233614ee527e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:615955e229d5be3b98291610df809b942a6c55e4075f2ffed8c8f39c45b3f9e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:bed7a3cf2c4785e8c68c24661c3d724a4679144face82341aee5257fc5bca137"
                }
            ]
        },
        "15beta2-3.3.0alpha1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12777,
                "digest": "sha256:b9dec847b81ac42d61111eadd5687ae4969bb044449eb828ddf6c253754e23e0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2798889,
                    "digest": "sha256:2408cc74d12b6cd092bb8b516ba7d5e290f485d3eb9672efc00f0583730179e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:cde4337df78db353166be0e52015f790ef243152b9e250db922937c6c4435943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:55ba5f4947805e5929e7a1bc92a0d59a6aac5ef362202d33f26391fa79e09df9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84192316,
                    "digest": "sha256:0d06db6796ebe804ca2c5f853fe84213ceb7e62b415f4657c8ea175f8f0bc57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9457,
                    "digest": "sha256:8041f989eb960401911de9c81d54088bcd17708d229ee1fd31abff6bdfd4255d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:12b544ea100e51981e306adcfafb836aa33a9463dc3b9e818a6a7d3b3bb348a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:50792322fd8cddb73a8aa75f2d16c445129c867b2d3740b91e3eaeab82025237"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:d19d7e8d251c2dfc2b9593d672debce90180029682e0be6d67b44f5cb78c4045"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54893676,
                    "digest": "sha256:f3c3781f3ef108e49100f534fa73b5364068f5d926f9c1587bba5c93a1ee0498"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:df731cd39b2af97c713eb570e195c5c6606e061d634553855cdf11b2419f1a76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:12cde56b5a6ed66227ac59af84b33cd0d878e5aa7585402549e674fd40c1e9aa"
                }
            ]
        },
        "15beta2-3.3.0beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12770,
                "digest": "sha256:104f18813c0a8142d92c32431359a496b54faa0f924033337d351b3dc7f993a5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2798889,
                    "digest": "sha256:2408cc74d12b6cd092bb8b516ba7d5e290f485d3eb9672efc00f0583730179e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:cde4337df78db353166be0e52015f790ef243152b9e250db922937c6c4435943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:55ba5f4947805e5929e7a1bc92a0d59a6aac5ef362202d33f26391fa79e09df9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84192316,
                    "digest": "sha256:0d06db6796ebe804ca2c5f853fe84213ceb7e62b415f4657c8ea175f8f0bc57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9457,
                    "digest": "sha256:8041f989eb960401911de9c81d54088bcd17708d229ee1fd31abff6bdfd4255d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:12b544ea100e51981e306adcfafb836aa33a9463dc3b9e818a6a7d3b3bb348a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:50792322fd8cddb73a8aa75f2d16c445129c867b2d3740b91e3eaeab82025237"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:d19d7e8d251c2dfc2b9593d672debce90180029682e0be6d67b44f5cb78c4045"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56386374,
                    "digest": "sha256:8dee659314f705fb34da20092cf568132819edc43d4b775afdd41cdf60d51d4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:0eef07a248d5af13bece794d7da274791faa11b10ad5a991afad7fa795098f84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:d3f4c1e8d06a996552a2522fe0ef8757ee61871d2510f7e1e74b915390265ed5"
                }
            ]
        },
        "15beta2-3.3.0beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12772,
                "digest": "sha256:d81b42d0a443bab26ef5120d3eb23f1acb3fdee6ba512f9a566dcf2b6eeffbba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82727913,
                    "digest": "sha256:c649b7b4be77caf44d452d2edccef8347b0d6af38baa6cdcb19f08448113c908"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9456,
                    "digest": "sha256:2d77b52a381d7b2c10d6276d971e19babc2ccafb76b0cb905462af89ff344349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:88330a53e6dab66ce6a97131fceecda28cb2a661a78a3ee506108dbe80b76ec8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:e8a2e10f1449a017c006f64f389bdf3489489156df1965932c6bccaa41eafc4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:62947fc8f541bc21d9e06a97f6a2e7f46afeb92861495b3072f34ca567ba73bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56038951,
                    "digest": "sha256:9be4709ae7ea776e57114ed520f3e97d770458726212825860566f554858dac3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:d614e597701df06c68a234269b85727be5f7124623493a6a0c9054e914c7970b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:d88c4544e9b220fe2a1b771a36d3e6515e07e7ce80dffb9d124f0e9e02b2a139"
                }
            ]
        },
        "15beta2-3.3.0rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12767,
                "digest": "sha256:2dbfd0c7e93df1eb13e5a8618fec28fe12014ba9829c273fc723323bfd195eab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82727913,
                    "digest": "sha256:c649b7b4be77caf44d452d2edccef8347b0d6af38baa6cdcb19f08448113c908"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9456,
                    "digest": "sha256:2d77b52a381d7b2c10d6276d971e19babc2ccafb76b0cb905462af89ff344349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:88330a53e6dab66ce6a97131fceecda28cb2a661a78a3ee506108dbe80b76ec8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:e8a2e10f1449a017c006f64f389bdf3489489156df1965932c6bccaa41eafc4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:62947fc8f541bc21d9e06a97f6a2e7f46afeb92861495b3072f34ca567ba73bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56049042,
                    "digest": "sha256:ce82c20dd0252b5661050e337449fbf25861fb20945b1ca5f18d9924c4dc12a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:4efd1ab1ecf3e8f3fa06e094b1db72a066e5e890d55b075d2135370c7065f436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:b08df0c39f489ca3a3420a76e456ef2c9a2538806742aa82f997e209d5b58e3a"
                }
            ]
        },
        "15beta2-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16719,
                "digest": "sha256:7e412bfec7fe1c5d2117c9defb2704fbf3a82186df826114266d6ff7d5f7a913"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31366757,
                    "digest": "sha256:1efc276f4ff952c055dea726cfc96ec6a4fdb8b62d9eed816bd2b788f2860ad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414772,
                    "digest": "sha256:66c520df917d3715e4642387ce8786797c184e9f415a1aeab04e5dd070022702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:5b124e6748c9fe30c3e6483ac420fe044a00ad7d38b51783104a8276360ba8ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418434,
                    "digest": "sha256:1a06bb042d01cf46ad9ea6c04b8a55c2a6b880c64cbfb887e2d4ae1f42765bfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045320,
                    "digest": "sha256:e3849c675ec5f366fccdecb7e849db6ab96b31f0d19104b8aaac2e51fe5ca1a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261141,
                    "digest": "sha256:d3b2eaf1435b467f692b57d4474b688b9597a8789a1593b6f3a82c386b21d5c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:074399829dc9a56b8d422dc00806dbff19fef84dfaaebd8a0ee891057e34111f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:6feb085525d8c7a128d17fe5f690efaae1aa9f6b3cfe722e409f7e2d775a1d9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93264833,
                    "digest": "sha256:1f389e81751d357ba35aed31a8e48afa1336110d97cf1d3a4f6461eefe474e23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9788,
                    "digest": "sha256:90245e1a6621bd3b37d065e9bd827b2b1763b4edcecfa933f08b0676aa43c1fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:2a8dda300dec287d77ccd49aa557baea3f7c91679ea3130be969a1a6cb3e43b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:207528e99b8ea9f7bb305745d6907c506e0d3795d245168b794905af4c95837c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:714dc127d8cedd5a9d02374cecf2abd0c2312bedb62714e7cb1ec9f170055cbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667822,
                    "digest": "sha256:3c4072cbac713952105e015605213a9b3419c7f52ea5c05caac60c8c04c408c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104996642,
                    "digest": "sha256:8e96ef6fc1c8a62be359ba4788e0fecd56e83b9f552b17fe7728ba691fe25c6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4851,
                    "digest": "sha256:c0b92f12ea382d7917fc7074aea5b6c64f7f6337f9b8d2daadef8aa9b15ddca8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17102568,
                    "digest": "sha256:229a86b77e99119b3459767b1c142379b4b9d16cb75a9e8b0c443ed1b9029cdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:d35b660d265f802893f8820811698875a92b84a2e4470835f6d100a5436f185f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:98d0cd76392b3287a3d7208e48e77ca72bffbc8b6f8163a6f51b0d047426da28"
                }
            ]
        },
        "15beta3-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12320,
                "digest": "sha256:aaeb672eb626f26f8714b0d835995466a5981530896c783d26013f38a7b0efed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93393323,
                    "digest": "sha256:604f7563a9bf8b0dd6318f60882a79263e6d32d0b9d469b92eb4c46266f22287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9800,
                    "digest": "sha256:e67244709f9bc3f14eaaddb3f1f63edf26696b8b0bf83a9f2b49cdcec7dad0df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:920d4232f85b74d458c82d3c7f20021fcb3a1602c8eaaeea9c1f9c050374d9ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:5035127c29a92dc62138133c9ff54169ef7bf891dbed0f7525dae1f64deca6f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:e0620d069eaa42f05ea680289b6c47abd1d2232ee61059d02941505ef428d2ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66815912,
                    "digest": "sha256:aa0ddd7ed808c536c1266140a8c9a111aee2dce14d97f4417c8551e84bf8fe05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:571b41127c8fd7a1c957d4d35648f742d0640ae598226b476c2aedc95d77fe18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 589,
                    "digest": "sha256:efa1561662fefd53e147cf290f1f7159b9faa32cad6d61dc475dc23a840eb76d"
                }
            ]
        },
        "15beta3-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12791,
                "digest": "sha256:68eddf9e3665cc5f3223ec59fb90dc165e97d61b010caadab0172f09e41e3759"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82720959,
                    "digest": "sha256:334a2c4c22bef1417b5082ae639868f152d943c63ec503cbbec2d4e8d7add74f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9465,
                    "digest": "sha256:8dd531788ea938370b6a44cc18194e68575525efd729965074314287bf0c3a21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:93ee0a3ec73cdbdf15549f0b87c18fb4bccaeed508c8ac485e3456d30bf5d21f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:eafb37abaebe29b363fdb16c066fd4462d100b8dd6ca18913edd268b9eb8259b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:dd4715dc84454e154ab30f2848bd471fc10f12de5533b2ea2a460c1eb5b7c5e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54866263,
                    "digest": "sha256:8ce0145f2968c72d185a48cd5199edb6324fc117577397f6b6486dd59fecc00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:b0148da460167232516e48733f1bb8b2ebdc82e52dab3b59c5f0902f64f223a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:8b04b37d50e554b9fde4f9386f64033685adfe54cc5e523177d3451a0d5e0600"
                }
            ]
        },
        "15beta3-3.3.0rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12800,
                "digest": "sha256:9e6a84656652d786dc07ba93c5db09f2ea0ed87959a3224bd3bac9c4ac3331db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82720959,
                    "digest": "sha256:334a2c4c22bef1417b5082ae639868f152d943c63ec503cbbec2d4e8d7add74f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9465,
                    "digest": "sha256:8dd531788ea938370b6a44cc18194e68575525efd729965074314287bf0c3a21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:93ee0a3ec73cdbdf15549f0b87c18fb4bccaeed508c8ac485e3456d30bf5d21f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:eafb37abaebe29b363fdb16c066fd4462d100b8dd6ca18913edd268b9eb8259b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4702,
                    "digest": "sha256:dd4715dc84454e154ab30f2848bd471fc10f12de5533b2ea2a460c1eb5b7c5e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56056571,
                    "digest": "sha256:221163ddc8059e3ee04b2f951b3f362079cbe1a9128c2a5626816356d32db947"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:1bce537abfa93723a8bb68d7bf62fb046981a7aa3d891a7d3bfbe07f0282b0ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:b01f90b8d7b5a92d02ec25604b914a914a0e2618ee24d6c739f23e58fc853924"
                }
            ]
        },
        "15beta3-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16969,
                "digest": "sha256:8f6307559ac143770975cf59338431150162f9e3b06fbf2a038136bf6cf5aeff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31381485,
                    "digest": "sha256:7a6db449b51b92eac5c81cdbd82917785343f1664b2be57b22337b0a40c5b29d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414828,
                    "digest": "sha256:b4f184bc070460801a91ee94a8121f597d61d2fcda0728eba67c35d4bfa789bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1801,
                    "digest": "sha256:606a73c0d34a44356777ffdcdc858c71427825329879a59f1c65356756559a07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418437,
                    "digest": "sha256:c39f1600d2b6e26d0ec2a14525c06f9a8f3cbb48e97dfcf372e7efe40f6ada59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045444,
                    "digest": "sha256:31f42f92b0fea8d74cf3065faabc70e486ce3683c69f133085de28535dab9025"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261166,
                    "digest": "sha256:c8b67d2b035449a14ec0ab9b722c7774957ffcfffa1aeb43046b1591cc09f784"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:31107b8480ee255d828effb0d51e19812eb2860b2b88cf51f67e78197105d685"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:b26434cf8bfafac28ea2de3c0875a7f09bfa8c814ed419b2faad55a327f56201"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93393323,
                    "digest": "sha256:604f7563a9bf8b0dd6318f60882a79263e6d32d0b9d469b92eb4c46266f22287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9800,
                    "digest": "sha256:e67244709f9bc3f14eaaddb3f1f63edf26696b8b0bf83a9f2b49cdcec7dad0df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131,
                    "digest": "sha256:920d4232f85b74d458c82d3c7f20021fcb3a1602c8eaaeea9c1f9c050374d9ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:5035127c29a92dc62138133c9ff54169ef7bf891dbed0f7525dae1f64deca6f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:e0620d069eaa42f05ea680289b6c47abd1d2232ee61059d02941505ef428d2ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667935,
                    "digest": "sha256:39aba623a2f6ab7ede40c00ab9fc753e28f6027ec5b97a33a41392e7ab23d661"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21105623,
                    "digest": "sha256:c0067acbb8e9beeb22fb88e40c80ed20f34cff934a13dd697e1c2e05716c3f95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4836,
                    "digest": "sha256:93f719a6119a82b75902526007685ea55665891ffd80c1dcae47c635db214aa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16777668,
                    "digest": "sha256:54357bb2f048901fc7da35e4edc1535b9a383e33e9ae7618585cd7a74088ec43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:8b5ce3a51b125b924a12aac9a0af50e4512fce1d29764dc08b891addfd17503a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:80451525f6d9dac98d26a67a00d98ee34400587dea1335b35ea0b1252cb57836"
                }
            ]
        },
        "15beta4-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12318,
                "digest": "sha256:90344ab819439ca18b038feaa1485fb4576cb9497824d541fd03b1091ef4433e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31404121,
                    "digest": "sha256:31b3f1ad4ce1f369084d0f959813c51df0ca17d9877d5ee88c2db6ff88341430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414809,
                    "digest": "sha256:dc97844d0cd5332f8a27d4e812cb78fe28eb3a24d6447b298e11f4c1381ee04b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:9ad9b1166fde5ac579a870942e64b1252b809a74ce2716537b2ec7d29211aa0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418427,
                    "digest": "sha256:286c4682b24df07908e721b97e0e931e7094b0822d4dd0623c48684960c892c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045146,
                    "digest": "sha256:1d3679a4a1a1adeb649c1019cdb9ba6be5f79b5035e1ec221fcf583033a34926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261090,
                    "digest": "sha256:5f2e6cdc8503192834c8294003826329e7af061a1f47f07993501623d7ccedea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:0f7dc70f54e874e4d3bfa632e989030d30740819b8c4612427817302aa8add51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190,
                    "digest": "sha256:a090c7442692840048d70c9acd1c55039a7f996487443a737aaa51ce10fea1d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93283953,
                    "digest": "sha256:7f7ec665aa98ab1db4d94e40d452a85ee6bd3da9a463a5d40afa1789fcfcd526"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9793,
                    "digest": "sha256:414b489f73a2d554a24f7d668809676cee043cccfd5860808522e955acb7330e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:ced7c9a7b5e4ed1f7d3dc772c1253178bff7d00f9399059e925df9d1f4dc9dcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:15aa4c901bb2979fbd5881784fff246a21b65a3ca2f4ea96f17dafa6fdb697cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4696,
                    "digest": "sha256:30db2c620d2aaa1092c37a5cde8a761f395a444d79979baee14ea22a673c6e81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67545710,
                    "digest": "sha256:578c9d9a4deaae3f6afd4f6d9743663c3f9ff072fd2f95793ebaffd75e9efb6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:1abd3b81ff033aed30f76e75652b5ddd30933250807c0e960a7f021f9b043a79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:73a42600879d3ac9fd62e7f6d1450a8e5d98cf95af1ef4c87873b44ee6f8b21d"
                }
            ]
        },
        "15beta4-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12792,
                "digest": "sha256:ca381226b416180c0edd3c4a1dc65204690a143be2f35001bf19a096db1e9e25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82524538,
                    "digest": "sha256:1950f9c3a969767b204eb4bd4e6b5f1e43ec724df884562373c62119b6709a60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9465,
                    "digest": "sha256:999e28db1dcd20dae056985ad65da3aa9599f356003697459db8e7431dabfb4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:ec5d470746e094fd03d6a44c65e17009cc1a32f280560e96452b1eacdf37a691"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:4639ff61ae283ddd8dc4c7bdb7b5b0a7e0ce44015d3529cc9d227eae68bb9301"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4703,
                    "digest": "sha256:838e9dccfaa3d5e11ca204ad905069f45c622b662713dfbe1950a4f7117b9734"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55443037,
                    "digest": "sha256:6715dbd7d89bbce97665ee0ebecb0265187ebd456e98484934726c8f14e5742d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:735ee96a524ff43ebab148358a8dd5d93bd4cf296788f26cad34ce5ce75f82d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:58a5a69ea72d5bcabf212be1d4d9bb4977d5047e658f4b9fbbf495559581a1ed"
                }
            ]
        },
        "15beta4-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16972,
                "digest": "sha256:8c544584dad6c41ef2fd9ed4f06982b2f1568bc0560f7bbae90d2097a90e30b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31404121,
                    "digest": "sha256:31b3f1ad4ce1f369084d0f959813c51df0ca17d9877d5ee88c2db6ff88341430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414809,
                    "digest": "sha256:dc97844d0cd5332f8a27d4e812cb78fe28eb3a24d6447b298e11f4c1381ee04b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:9ad9b1166fde5ac579a870942e64b1252b809a74ce2716537b2ec7d29211aa0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418427,
                    "digest": "sha256:286c4682b24df07908e721b97e0e931e7094b0822d4dd0623c48684960c892c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045146,
                    "digest": "sha256:1d3679a4a1a1adeb649c1019cdb9ba6be5f79b5035e1ec221fcf583033a34926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261090,
                    "digest": "sha256:5f2e6cdc8503192834c8294003826329e7af061a1f47f07993501623d7ccedea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:0f7dc70f54e874e4d3bfa632e989030d30740819b8c4612427817302aa8add51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190,
                    "digest": "sha256:a090c7442692840048d70c9acd1c55039a7f996487443a737aaa51ce10fea1d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93283953,
                    "digest": "sha256:7f7ec665aa98ab1db4d94e40d452a85ee6bd3da9a463a5d40afa1789fcfcd526"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9793,
                    "digest": "sha256:414b489f73a2d554a24f7d668809676cee043cccfd5860808522e955acb7330e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:ced7c9a7b5e4ed1f7d3dc772c1253178bff7d00f9399059e925df9d1f4dc9dcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:15aa4c901bb2979fbd5881784fff246a21b65a3ca2f4ea96f17dafa6fdb697cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4696,
                    "digest": "sha256:30db2c620d2aaa1092c37a5cde8a761f395a444d79979baee14ea22a673c6e81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667902,
                    "digest": "sha256:ecaaf33431a4cb0305daf1c1315614908502bed26368dcdc26e7cbf817e273ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21117710,
                    "digest": "sha256:98356090cdb9e1f64560e9ed26928870760335ac9acc3ac6098ac0ac7d2f6f66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4833,
                    "digest": "sha256:ddc94e30152cb8b2406a2511e31dc10565888b55845dc6b0483dc345157fb62b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16685777,
                    "digest": "sha256:6ab80078930ffb0415c972a824e09c279800dcbd94da3eef197c7f7d23e0e0ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558,
                    "digest": "sha256:55cf37b275887181d2a4940c26d9918d08075d885c88e520946bc3e72b777e12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:7c74b7db4aea67ce770c008ad241cbcda9a7992ebb02be3c5f86caa44fa25f6d"
                }
            ]
        },
        "15rc1-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12313,
                "digest": "sha256:edf9af123e6da4ce21cf4fdba7778d1c245c9c12482db50899efcebf3dcceaf6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31404121,
                    "digest": "sha256:31b3f1ad4ce1f369084d0f959813c51df0ca17d9877d5ee88c2db6ff88341430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414809,
                    "digest": "sha256:dc97844d0cd5332f8a27d4e812cb78fe28eb3a24d6447b298e11f4c1381ee04b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:9ad9b1166fde5ac579a870942e64b1252b809a74ce2716537b2ec7d29211aa0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418427,
                    "digest": "sha256:286c4682b24df07908e721b97e0e931e7094b0822d4dd0623c48684960c892c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045146,
                    "digest": "sha256:1d3679a4a1a1adeb649c1019cdb9ba6be5f79b5035e1ec221fcf583033a34926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261090,
                    "digest": "sha256:5f2e6cdc8503192834c8294003826329e7af061a1f47f07993501623d7ccedea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:0f7dc70f54e874e4d3bfa632e989030d30740819b8c4612427817302aa8add51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190,
                    "digest": "sha256:a090c7442692840048d70c9acd1c55039a7f996487443a737aaa51ce10fea1d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91804564,
                    "digest": "sha256:acb5a65d2e996c4c0cf538313099a723216a511768e1a000c80241196744df67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9793,
                    "digest": "sha256:3b10bd4f68b783be2b1dc596a748446a3bcd76f08e909ba22711047e2e9116f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:5884433a3f0d1845a05c28e4fec384414878723a222905a292d2d765ed5ba0b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:25b50767d1e98fcbd1185fa551501ee8f6f2089641546c76060fe26d6a55b966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:96e9eec4c7812cb6a9f716858923fecbddfded5cab8a0e3e5f05d454cf01db71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67546400,
                    "digest": "sha256:b480112523f766682d861e47b42fc8b86999e961eb0ee0a616d54657633c53ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:a236ba34ca4a9a967204b727dd9ba114ece342feee9e6f6b51f4bda08e742a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:0a6c19feca2466a04af29b9bd740fe23cf3413e00656c31f3ea03af15badc1d4"
                }
            ]
        },
        "15rc1-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12784,
                "digest": "sha256:d6959893b2fcc99f252190e4c2067ae5cead9b72463a9f1909cb54693d97d07c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:85c3ef7cf9a6beeec8ff5b757e39ad71347ec77e891ad4d7784b14019583b223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:ac29cc04759ac7a5bf2b2df30b2272ec2eddee0feb4eedd6b50afe7056c3194b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82527807,
                    "digest": "sha256:7f1c6cb15ad805fc80014014b462269c357866469f2ef00da3004f7b12777f67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9463,
                    "digest": "sha256:9cc9b5a6dfdf640136c921390f2b320c90f3e86eb5723419c2cd3ddd3cd02a5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:f482ea8606e08d5adeeaedbc25109ebd144706f7192865cdb91c362acb4f5ce7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:f16fc43cc78e77f5c1470799375a5f141a50e0ceea4d1837a131db92da77ec8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4704,
                    "digest": "sha256:ab3a386ab20f5a13caaa13b27ae1ce7ef3ad71184dc1327cb60109f2b9be26da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55443589,
                    "digest": "sha256:709c256ba10a9c184e949563dd86ff118f8903af5a4693ba0a4120993980656d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fc47004a4745c71afc3a60aea4bce47be060584f17564a2810b35e7249c8d7ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:cf671a8a01371381727dde54e4e4933027ab689aabdb79ab3fc5d2709baf35af"
                }
            ]
        },
        "15rc1-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16964,
                "digest": "sha256:838ded2e9b342163d006896ed8cd4c728a5083c4baa2bc89255224d58f995910"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31404121,
                    "digest": "sha256:31b3f1ad4ce1f369084d0f959813c51df0ca17d9877d5ee88c2db6ff88341430"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414809,
                    "digest": "sha256:dc97844d0cd5332f8a27d4e812cb78fe28eb3a24d6447b298e11f4c1381ee04b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:9ad9b1166fde5ac579a870942e64b1252b809a74ce2716537b2ec7d29211aa0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418427,
                    "digest": "sha256:286c4682b24df07908e721b97e0e931e7094b0822d4dd0623c48684960c892c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045146,
                    "digest": "sha256:1d3679a4a1a1adeb649c1019cdb9ba6be5f79b5035e1ec221fcf583033a34926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261090,
                    "digest": "sha256:5f2e6cdc8503192834c8294003826329e7af061a1f47f07993501623d7ccedea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:0f7dc70f54e874e4d3bfa632e989030d30740819b8c4612427817302aa8add51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3190,
                    "digest": "sha256:a090c7442692840048d70c9acd1c55039a7f996487443a737aaa51ce10fea1d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91804564,
                    "digest": "sha256:acb5a65d2e996c4c0cf538313099a723216a511768e1a000c80241196744df67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9793,
                    "digest": "sha256:3b10bd4f68b783be2b1dc596a748446a3bcd76f08e909ba22711047e2e9116f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:5884433a3f0d1845a05c28e4fec384414878723a222905a292d2d765ed5ba0b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:25b50767d1e98fcbd1185fa551501ee8f6f2089641546c76060fe26d6a55b966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:96e9eec4c7812cb6a9f716858923fecbddfded5cab8a0e3e5f05d454cf01db71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667913,
                    "digest": "sha256:8b30556cd4a88b7ae36548f1251e966c49e8e200aa5bfda3678adfd92911e9da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21139043,
                    "digest": "sha256:b084dfebfe4903e96124794d9fb80abada414e5898613968190172154315c780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4821,
                    "digest": "sha256:3c0af078a0ce91468befa6d27e9d7e89331ad0f7b0616587f5e8588087e74cc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16685510,
                    "digest": "sha256:a9811f9f642ff89453e018b323ee7268715f1e89644a6c3476eb9a55af3787e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 559,
                    "digest": "sha256:add033fb57a92b817d783347770c62bddd234d57ce8c67b64083c8e623cda617"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:97c7613323022928da032e2f38b14d1d44abd79a09594040958db74bdab47c41"
                }
            ]
        },
        "15rc2-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12313,
                "digest": "sha256:b331a554ef32bdb5fe405c2a68368cd6a69ade91e52b201dca44a7e0d2bf3821"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31420102,
                    "digest": "sha256:bd159e379b3b1bc0134341e4ffdeab5f966ec422ae04818bb69ecef08a823b05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414816,
                    "digest": "sha256:b955aac8d5e0d207685a6cd7a217df9d87471da8ac4397775b5f6d568ea2c786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1799,
                    "digest": "sha256:922fe4565b9a396df0877e3c888aa96dd85cc09f7d79c538d365e1db38b566bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418461,
                    "digest": "sha256:c39aa91943e97eb06ef46b96595e238868e65b3611895b9ca0a661662b2301fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045332,
                    "digest": "sha256:59e6d12f4c90b92e80334d61252257d4904f40ada76c8597d1cf4bb03b7b92a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261120,
                    "digest": "sha256:d058e68b87506639738b8886182e3c8bd62cc67c964f42ea96ff720bf44e537a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:03549096a05886d11da6836383ab150c405345c3414d13242acd897da434d3e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:c941aeed5670bce23a8676c0a25e6d8f5e9df2c9861ed631e188b9bc55e486f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91795614,
                    "digest": "sha256:4dd44c9a67fb677cd3124db6feb66948441f9b9000df40b6d572fbf2898f6829"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9774,
                    "digest": "sha256:5c5e4830062f22af0b6c91830d67237185effdaeb2117c367eb8a8ecc28f0c5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:da2aae6a422a7deb9fd4df4fb27b9fb2d5cd1d546c8dd6395675dc9a33b9e23c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:6dabceb8635e88e347c5f862aece801c11b7c82832c944912694c9a64cc71f05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:09efb464078dd99507a77e4a42b1b0dd1bebc60de12e9c33d7c72a4ff253e286"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67546482,
                    "digest": "sha256:48a499f61ec2e8c2791d2caf4d580594437384457f4c99e97d0001215ad2c399"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:af6ed639b1c2ca9e983f8dc855955678090e1c94f1ff44483b7397ac553a3fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:40119d8d82a3ea5c9690dd0ab5218954aa356b674638ac73c9e52ce0fc32c039"
                }
            ]
        },
        "15rc2-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12785,
                "digest": "sha256:fe84e6bc132e18f0f6e0e7b4373b9b96e394c1fd610844898077122e21d43c86"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2806054,
                    "digest": "sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:40ab741cca09cae3efd0bccbe57183973b177cda2b7f65d67078454dc1d97ba7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:c3636f308d36c203f3f75f1c294814f647b4641fc980b708edb341400491e6fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82532060,
                    "digest": "sha256:869aae2b6e9db9ca3986d13ca4435a4ceb382c3eddddf65c59c5b8bb47ba5f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9453,
                    "digest": "sha256:fd31985ccf75ab7b4f901541c2cf8127a2cd141bf3b3200d8be957ddc60e32a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:12718e61353e7b95d520249121230a1b7c415a9b191950f4171eb8f894216db9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:5feb37ea0b051a47839a3df1bcc1194ea357eabaaee06e0ef554861405d1db54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4706,
                    "digest": "sha256:d50b4fb0db53085f0267cb4bc28a084260499d3aaa109f7431c101e3bd7c253e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55450762,
                    "digest": "sha256:d96764e78fa589f2a5c0574f74e96a1b465bc86ee80160b52a4d4559de85294f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558,
                    "digest": "sha256:6aa32e3496cddd78a4996791270901fce04ff7beaebb512b99765d24feba1ba9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:33c4670ed0e20b2935650265c0a79246b31eedc9cde352a05d2a6c3eb9e50212"
                }
            ]
        },
        "15rc2-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 16966,
                "digest": "sha256:98476ab3b365f1321053e777bc45b1eb6ed08ee1213eae896e9fc6a38c7c3cce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31420102,
                    "digest": "sha256:bd159e379b3b1bc0134341e4ffdeab5f966ec422ae04818bb69ecef08a823b05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414816,
                    "digest": "sha256:b955aac8d5e0d207685a6cd7a217df9d87471da8ac4397775b5f6d568ea2c786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1799,
                    "digest": "sha256:922fe4565b9a396df0877e3c888aa96dd85cc09f7d79c538d365e1db38b566bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418461,
                    "digest": "sha256:c39aa91943e97eb06ef46b96595e238868e65b3611895b9ca0a661662b2301fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045332,
                    "digest": "sha256:59e6d12f4c90b92e80334d61252257d4904f40ada76c8597d1cf4bb03b7b92a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261120,
                    "digest": "sha256:d058e68b87506639738b8886182e3c8bd62cc67c964f42ea96ff720bf44e537a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:03549096a05886d11da6836383ab150c405345c3414d13242acd897da434d3e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3201,
                    "digest": "sha256:c941aeed5670bce23a8676c0a25e6d8f5e9df2c9861ed631e188b9bc55e486f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91795614,
                    "digest": "sha256:4dd44c9a67fb677cd3124db6feb66948441f9b9000df40b6d572fbf2898f6829"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9774,
                    "digest": "sha256:5c5e4830062f22af0b6c91830d67237185effdaeb2117c367eb8a8ecc28f0c5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:da2aae6a422a7deb9fd4df4fb27b9fb2d5cd1d546c8dd6395675dc9a33b9e23c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:6dabceb8635e88e347c5f862aece801c11b7c82832c944912694c9a64cc71f05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4700,
                    "digest": "sha256:09efb464078dd99507a77e4a42b1b0dd1bebc60de12e9c33d7c72a4ff253e286"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9667939,
                    "digest": "sha256:d4d7c1c05da3f4159478564bef35a3eec88eff4dcfae4e21b0291d22946e227e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21150851,
                    "digest": "sha256:6ab14f7095c87f461fa97718579531dc8b69bceb813a909fd8d955761aee0dab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4816,
                    "digest": "sha256:599d4619ecde970bf43d4fd9f6a9b9cbf15dfee397c981b10aa402cb448bc9f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16685638,
                    "digest": "sha256:bf36b4a4f034b8930860f5456b6928f50a28a6c3f1bf3e9b4fc7a28ede6f723d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:f2e34eebdc76891582a35f342328e7184bf7197c9efe6402af7dd5dbed79aa40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:1cfc83bc789762e5bdeddfceadd40f42b57bb24328d599ee288449842012c678"
                }
            ]
        },
        "16-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12373,
                "digest": "sha256:b3bf65f8447f21207011949117eb9fe6edba321be20ae8ae057a7dee56a6b33d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:f67b2e2e50afb77df09883746a31b063e7328442b9379b037bc6f90d1914b032"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308203,
                    "digest": "sha256:78f426f2e6cb2c6f48e40abf222ff43cafdac3fdf096fb01df6abc7139330732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473540,
                    "digest": "sha256:25bbb0f53337eeda879ece0588ac0bdfff40bcde3102b20fe1519ca408a00894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045817,
                    "digest": "sha256:f14888bf52c7454d188d3dbc541489a2c1e652e026ac94ac896f962c0d40a369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038356,
                    "digest": "sha256:094b2144cdda8fd752031d264572e5323cb7e047219d2dc0927b2c361ec883a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a54272a2a5cbb355b723f8767d1c904fd67388353fddfeca02103f8dceb95e17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:d394d154fe0cd712f55a6d047126e4320da30d4b2276b39a99355f7b51c39f15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98697179,
                    "digest": "sha256:5ba4ed5eee9904b02bebab72c54551be4086387d731a68abc5416929d253902d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9910,
                    "digest": "sha256:61b7f2f46f76ac8291c37b2d32e637c0a583fd7e9ffacd8e0d91efb7d285fe31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:804dbdbbe2423fc76d2742e36e7955d7fcdecc76efc16810466fa6ca2d2838b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f161dc7c149b41857135826b4be10765040024fcfb1c8d442015d266cff68b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5417,
                    "digest": "sha256:f1fb31daa1c069425cbfcce81cf51f2d9a4a370b15462c83c2849986e2b2a57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:efb99a6e3550a95ba682b927c69904c01737ba04efbb568115c301ef6e072f7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67555694,
                    "digest": "sha256:e8282e9e85acc49e068d718e4c3ea923614dac112a8f15f573bba00e00fb0a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:eb6faf88f0de3bea7f1c881cea8e3693739a11b4dda2a1ce05eec7d02f511982"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 586,
                    "digest": "sha256:8bcdbfa25ecb51fc96a6c2c916e624d9df5c925eedb0875157b97e7ff18ce7c7"
                }
            ]
        },
        "16-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12985,
                "digest": "sha256:f608e47867b24539fc736d06f073a174ccc915641b4005b297ef9fbe94883b0a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3402542,
                    "digest": "sha256:619be1103602d98e1963557998c954c892b3872986c27365e9f651f5bc27cab8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1266,
                    "digest": "sha256:146012bc821fd3af9b0c2e2b3f933362d8eb556e36b527cbe6933d87a40c926a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:89e5e530fb80dec92397c8eba8a4571f39b61afb5a72eea1fa7f3e28b3bfa990"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92927432,
                    "digest": "sha256:8661c13c9621ca40af50f7c06875faf301d6be17d098c1f8cd06c834094a8a22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9561,
                    "digest": "sha256:5a6d06d5b1de43e307f863f5c0b0bc2ad899066f756af5f679e0a24b1b706c75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:86982049feafe2745a0de237ab6acb18fe3028b481ae7079648e7037efc63a45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:e7a67f7fc28defcc1669044794916160c45ddb5863778e7de542a39c05c35b7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5420,
                    "digest": "sha256:68866bed91bf6bb952ed165f069156447c2733e03aa5ff0e70a105064895c325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:26f0a21a917940a4a071e6ad4dd2c1a316f098e58409fd11f16ef1c6648f9e5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 63145875,
                    "digest": "sha256:09db170de37bfff51530bae3037a6549b239b0033356d83cf18a237fa068cf55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:22813fe47b2d5fe8ecd66a80c7e7c8f25fe19ff532468237ec5245798d23a130"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 593,
                    "digest": "sha256:5a639a5fabfde27a1d2d20bbf1293d1f1a4ae038620a6bc02252382375a14c63"
                }
            ]
        },
        "16-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19882,
                "digest": "sha256:747de21254b5a723b13822ab8e51bb4b7b9ecccc143429edba2a9ab7c6a14867"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:f67b2e2e50afb77df09883746a31b063e7328442b9379b037bc6f90d1914b032"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308203,
                    "digest": "sha256:78f426f2e6cb2c6f48e40abf222ff43cafdac3fdf096fb01df6abc7139330732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473540,
                    "digest": "sha256:25bbb0f53337eeda879ece0588ac0bdfff40bcde3102b20fe1519ca408a00894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045817,
                    "digest": "sha256:f14888bf52c7454d188d3dbc541489a2c1e652e026ac94ac896f962c0d40a369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038356,
                    "digest": "sha256:094b2144cdda8fd752031d264572e5323cb7e047219d2dc0927b2c361ec883a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a54272a2a5cbb355b723f8767d1c904fd67388353fddfeca02103f8dceb95e17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:d394d154fe0cd712f55a6d047126e4320da30d4b2276b39a99355f7b51c39f15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98697179,
                    "digest": "sha256:5ba4ed5eee9904b02bebab72c54551be4086387d731a68abc5416929d253902d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9910,
                    "digest": "sha256:61b7f2f46f76ac8291c37b2d32e637c0a583fd7e9ffacd8e0d91efb7d285fe31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:804dbdbbe2423fc76d2742e36e7955d7fcdecc76efc16810466fa6ca2d2838b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f161dc7c149b41857135826b4be10765040024fcfb1c8d442015d266cff68b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5417,
                    "digest": "sha256:f1fb31daa1c069425cbfcce81cf51f2d9a4a370b15462c83c2849986e2b2a57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:efb99a6e3550a95ba682b927c69904c01737ba04efbb568115c301ef6e072f7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12853864,
                    "digest": "sha256:dca020010d6cea63dd2b0b43f29919b297cd8e76ba7a14975217a2118536387a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:6647659c1dcf9d79b1f467858830ec610605d44a69e4596213042854f2c4c642"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24049745,
                    "digest": "sha256:d4ff2b1b0a6621584965c8764cd591da4614ab24c8bd0f1bdc860e7151b333a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5350,
                    "digest": "sha256:1d01a2a84c5e2070afa1b4bd52c1cbbb51afd3f90095a5bc522fdd5e02b791e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14914438,
                    "digest": "sha256:0c3b02551e7c0bf8dca8372f4e6ad73c4b35e6db73a0d43f7401e20ed403e3ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:122f9d3d1905b1f476adbd162814eef3ffc1e1a19c31d632f815521236ed302e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 591,
                    "digest": "sha256:1421b776aaca3f8063e67feffc9e0acaa960dcc756d927d0397697c9606ecd37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5387,
                    "digest": "sha256:9ac7f09c3a8aa610cbb2f11ef23d54d6b07570043a8f02f5081303deecbfa93f"
                }
            ]
        },
        "16beta1-3.3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13779,
                "digest": "sha256:1534d8b9b53bcc2475c99bab7023ebec7d70aa9de16fbf6f91b15feb5f927e56"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90814571,
                    "digest": "sha256:c32f20c22c763a7e7eaa70aea5009c95dec78a6b29ac08577fa94251b7f00e4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9571,
                    "digest": "sha256:fe31c232d9f0f7de4f2815e272338e94f19aea4ef512aa2a1bd3d538fb2c6ccc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:4c37159d6992646468d6998ea8096de61ff2aa487f8f4a497d1bcc35fae18cab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:22494d20836b055e751a90e001eb5d2bbb218bec7643b7377cc44ca00dbf499f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:d92cd174773365ed66c9ce825387c83a7d810be5151df320c4310bea6090c2bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60366846,
                    "digest": "sha256:480bacffc9c54c1d00d784445fb60c8335b8fab2add88d748a4d3163b2b83e11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:40e5a7a44f43b3cda785fa59859c471221340e4ca10c96738eaa5665146d76c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:7fc88f2cdea617e4da700a4ab8dfe690994cb5fce583e2eb6e7d8219da41fa62"
                }
            ]
        },
        "16beta1-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 20272,
                "digest": "sha256:d830a10da4f8d0b51ed448e6937166cde732f82f77e880af0fd648b5f1e5d5a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417410,
                    "digest": "sha256:759700526b7894aa9c150feb2ebfcd00cf06d2890df739e71555edcfd13669e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1798,
                    "digest": "sha256:a8dcdddf442a45bf7f3fa4fb30fca109bc7901f0be6fb0f44a423fd5524422f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414953,
                    "digest": "sha256:0eecd8690f789ce329439a34ce22d7fd4037ac271a2ffba091a88136ba6a7f7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471505,
                    "digest": "sha256:d1e1b1625958c59f8d442710f098edc9cf7e6c8bff25883ab0d729b5cfcfbbb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045578,
                    "digest": "sha256:48f27b3383d004360d24384835345bdcc940872aef3bf92b5c8b901bc267e588"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261250,
                    "digest": "sha256:51fc468e331656cb37acb6a783ccc90d6e36a4353ec619e7a167a93f89971d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:ae88a8982c602397937d254d0c421005feacea5fe6665b40bb9142e5c504a66f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3193,
                    "digest": "sha256:05acb7b252bbc5aabb076ea11d72b213b1fcaaca6fd0cb5bcf28b320124e191c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94292645,
                    "digest": "sha256:5b0a5929b43d609fa5b0acf4403587f704ccd9da10962761edabc25dd5316e2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9925,
                    "digest": "sha256:499a95c8eaf263c31959c73a2b69ce7df7bfbcf536738779b759fc4916cc9e3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:24178edddf695e44b10b09d961c787b318b4014db851809e90fd8c6b2f6491a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198,
                    "digest": "sha256:990294269298138ad27a989b5c999ccfba824e8117becbb5f4f988479ce21a37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:d3343c501bb64663a5e4b6a0f39623872fb639573d9b25ee1ac34dc6cb4244dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12852322,
                    "digest": "sha256:acf5593ed9f8e54c47d60e6f35d4185d67043dbc87c51432b18d1e6de9f97f2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 972,
                    "digest": "sha256:060f7661bc27d796b04aa764c71d7ed7764b3f64fc2f2c883a216a6413e1ea0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22789037,
                    "digest": "sha256:eb611ce377e09719780fcf8049de1e04c22e6f50fc574add5839683c731cd816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5338,
                    "digest": "sha256:3daff96ee6db273c7945911bf69e65681fbf717d4451af7a30c56c734342f961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14924841,
                    "digest": "sha256:d25854f0eca176679eb3dc16b58cef610bee722afa1bef1aa24a0a59ce84636e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:8b6175f6da0ace8cf84921bed14bed24b131e494ee91f790c4dde79f55bb7a2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:0d73d1e76f1badac0dd398b1cc8ccb644daf0f492fe3282c85968d27375a1b37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5368,
                    "digest": "sha256:93feb3eb846038183b086c5a6b079af3d573b55de73a78f5e1ee6942d7ee9c21"
                }
            ]
        },
        "16beta2-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11932,
                "digest": "sha256:de26bf3b1aa256ee891023e308c5630c3cda8a8cbf97e3be6a7f835e79082ab8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94300236,
                    "digest": "sha256:369bdeb759d407ec41572e86e4f12b52058831284b8f0336232ff9f062122714"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9930,
                    "digest": "sha256:dc3f854997e3696b32870b02079b72b57b926970fa26a0350874b56592a8d5ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:7130b0c9db69e4f83cff8811c2671a22cb0de1ce1a9b39fef27c1217e7780af2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:8d0d409e2e5e624285841ea51ce68dfba409864978f76a4353b5e97c5ffca1aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:f3fddf9b476cbb4e4f48852dc7e9577085a338cf6c78ba49063a8636bf02022e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67522368,
                    "digest": "sha256:2a771acaf6de7fa045d1457f303c31e8a95ccdd8cc3e43c700c384ce28eb4e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:f025b911c323ddd8f815910e9d3e9d6be73bc6055981b4f043801c08235f452e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:af94f1d4cb905d00df997a696f6615f12474e25ea760cd40089675a947347886"
                }
            ]
        },
        "16beta2-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12695,
                "digest": "sha256:fc93458715673c1b66e24ad783df0ffb6796140ca3d27fcfc2a84ddba989ebfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90819042,
                    "digest": "sha256:94945c3bd343db82506da799b7935fe946fecf51c45eb5b18de73084218b804b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9565,
                    "digest": "sha256:733e7b63772393fda0828044343b461bbc3c310f8a3b80279f0fdc28ddbe2bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:651f9aee7f5973b0a6837ad302981d3855d29c1884902838e899548214de5efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:e3249f6a8ba916642b7cec53969dc4a9779cd954ef6842e6f45134cbf0028689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:9963fa78ec7e7064b3cfa891c9276b5ec0c9277b3f50ef3baf9bf2451f576fa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62810656,
                    "digest": "sha256:a52454e05fd6b47dc0590927fb532f40f197a822a3ce192e15f7f885cb5a4c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 559,
                    "digest": "sha256:e11734edd81fd2c776307e6f6f2488f86805c6816baea71a9b45a7a1c1b44379"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:a8efbdaa103e8c22cfd48bc24815ba110d33b00f3061bbeeb20a9d6eb369caf1"
                }
            ]
        },
        "16beta2-3.3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13778,
                "digest": "sha256:95404c93b5f2665f3c5747120d2fe3d77ef8dd9fd3588140612ee052974aee41"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90819042,
                    "digest": "sha256:94945c3bd343db82506da799b7935fe946fecf51c45eb5b18de73084218b804b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9565,
                    "digest": "sha256:733e7b63772393fda0828044343b461bbc3c310f8a3b80279f0fdc28ddbe2bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:651f9aee7f5973b0a6837ad302981d3855d29c1884902838e899548214de5efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:e3249f6a8ba916642b7cec53969dc4a9779cd954ef6842e6f45134cbf0028689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:9963fa78ec7e7064b3cfa891c9276b5ec0c9277b3f50ef3baf9bf2451f576fa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62423692,
                    "digest": "sha256:18d0343968cdf1136ff0c26c382d2259bdd8f3ff4a5cb72d286923f6dbec7c68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:90afea51bfd4d5b06a1b1c3b92cc3a774d3ab884497e0ee23c514e61c3080f5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:ee3836e01eb6ea8f01e4b27d45cbc126f71942917f245483e1d91b1569428392"
                }
            ]
        },
        "16beta2-3.4.0beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13806,
                "digest": "sha256:03a95ba524a30d7b214e1b901c7531a95b78ad94a75f1b8efa3dd7c9eee2feb8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90819042,
                    "digest": "sha256:94945c3bd343db82506da799b7935fe946fecf51c45eb5b18de73084218b804b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9565,
                    "digest": "sha256:733e7b63772393fda0828044343b461bbc3c310f8a3b80279f0fdc28ddbe2bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:651f9aee7f5973b0a6837ad302981d3855d29c1884902838e899548214de5efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:e3249f6a8ba916642b7cec53969dc4a9779cd954ef6842e6f45134cbf0028689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:9963fa78ec7e7064b3cfa891c9276b5ec0c9277b3f50ef3baf9bf2451f576fa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62973749,
                    "digest": "sha256:9a33032e9a408eea79284f5a47d80ea437e950df9d1922da6bf8d88066babaed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 558,
                    "digest": "sha256:65ed0e71d0ea59e022e22eaabad1f85b7b38dbd569230822ff240dbfb0e1a8e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:19a26571eacbe75b94c04c0742fce6ef87e3540e28067b663bcae23a9abce0c9"
                }
            ]
        },
        "16beta2-3.4.0rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12707,
                "digest": "sha256:02c9547331d45c3eb8204bd231eaa780a6581bd1b60f6bec2b91c7adca3cf6bc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3397879,
                    "digest": "sha256:31e352740f534f9ad170f75378a84fe453d6156e40700b882d737a8f4a6988a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:d7c8ef16402f7d0f3d3c7c581b33d4ab851efed851826633154d90c08d5e1f89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:36cb57831f5201e337de1dd5b1fb077701af0afe39fd7fa8143f9e552eb6ae20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90819042,
                    "digest": "sha256:94945c3bd343db82506da799b7935fe946fecf51c45eb5b18de73084218b804b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9565,
                    "digest": "sha256:733e7b63772393fda0828044343b461bbc3c310f8a3b80279f0fdc28ddbe2bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:651f9aee7f5973b0a6837ad302981d3855d29c1884902838e899548214de5efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:e3249f6a8ba916642b7cec53969dc4a9779cd954ef6842e6f45134cbf0028689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:9963fa78ec7e7064b3cfa891c9276b5ec0c9277b3f50ef3baf9bf2451f576fa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62980130,
                    "digest": "sha256:eeab7de636793e3b73754e2bc04607e6868d880b10dcce8bd98dcecb9004399e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:98dcfebfadc99540a8c2776906584855bb9c5a909573484fc02e8fa4efdd0a20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:04cc0f13518d84a271785a6c09134a4e6642307249b62b1d3e1fbd20858d9e8a"
                }
            ]
        },
        "16beta2-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 19252,
                "digest": "sha256:3f83cf22551385fd2c38eeebc5f170b48d58d60c5aabd1ce052b55b4111fae00"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94300236,
                    "digest": "sha256:369bdeb759d407ec41572e86e4f12b52058831284b8f0336232ff9f062122714"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9930,
                    "digest": "sha256:dc3f854997e3696b32870b02079b72b57b926970fa26a0350874b56592a8d5ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:7130b0c9db69e4f83cff8811c2671a22cb0de1ce1a9b39fef27c1217e7780af2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202,
                    "digest": "sha256:8d0d409e2e5e624285841ea51ce68dfba409864978f76a4353b5e97c5ffca1aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4787,
                    "digest": "sha256:f3fddf9b476cbb4e4f48852dc7e9577085a338cf6c78ba49063a8636bf02022e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12852331,
                    "digest": "sha256:bdbd43d89a308a45f0f93374492f8693f6fc350b78ee1c91b8abd12aab84ce66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1456,
                    "digest": "sha256:0d2b893a4e6d6f26a2ae04b386f4cb9735c05f4cf5d59bc985766f39d2fa2c52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22953547,
                    "digest": "sha256:ab967aaa7b9eaf48e9bc61281dc60a237ebe9e0e4ca144f367fe84d700c12115"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5349,
                    "digest": "sha256:1da93a01b51cb25fa6994b7c405bdf0f0561fa1ff809f279635c847e0158bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14706107,
                    "digest": "sha256:fea170d6dcf1ebb0460dc973ae72a1455d7455637701e9a7373f0d959e5e6e56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:b1e8986e68393c0477e140c20af9e2b4f1fae8b58cc8d7774a144f04252bdc1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:137f981029ea3e6ef1f908e7c8f60a0ae63bea255653009a370fe39c081bf7e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5385,
                    "digest": "sha256:d12e1b244f31c9db55ea43d61364b44ac8c3e358d78bf7f3c39e0bcd20a80976"
                }
            ]
        },
        "16beta3-3.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11929,
                "digest": "sha256:ecb234b50c4530fdf61cffc068f84cc04f50b0f517c04f42585d4fd443c7e17e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417602,
                    "digest": "sha256:1d5252f66ea9b661aceca1027b3d7ca259a50608261a25b51148119ecf086932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:024ad9bec3dc28e27d7c084850e708939002c4fc0b85703c16f44739408e576f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414998,
                    "digest": "sha256:5fd873abf5f61297809a1ea8c64287108e18e55c73f6ab734e1233b4c5192c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471525,
                    "digest": "sha256:ffe9a34510c576feca96de1feb60b25552d7489736422f696ece8181a672b0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045586,
                    "digest": "sha256:66791212fee3c69b26f5fc9e655d6b4744388a7f247c666d0ec7b6809a477f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261280,
                    "digest": "sha256:d6c53d590081eb4a8ee5df512be301285b697ef90e84276451b8c80a2da74501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:dc1d320348feab94969692596a3b418ec19e453dd5e534a3d1a5a90202d28948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:2878635654290e81617b5d0bbd8d6b76c939e0077b9282d79de401bae6493d80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94313423,
                    "digest": "sha256:b20a09342b92023077b27eed1d2c64a86d1d1d57760c515a8381ed7ebb02fa5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9923,
                    "digest": "sha256:5e87aea8643cd27cd91846fa9e3ce2ecfb01e3937403deae940f82e6bc02d654"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:b14c87da72abfebd0f4ae674cda843b2997d8f413c290806880b654776526752"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:86fb3e6c3d3614c00f8e39e971858208edf8d63061931bb574096036b62b2708"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4786,
                    "digest": "sha256:8047314577315b52154377e4aeab855fa312b31eefa5630b932738f0c813261b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67522676,
                    "digest": "sha256:21a2ca3fa520496854667f475ce7693eb1bd2c6da9812325f19b21d0833a3b30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553,
                    "digest": "sha256:a1203423ab5af08f67ce508de9e162fa5f8c1233d87e94a67a1208538ed5d42e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 591,
                    "digest": "sha256:77f2178f67e00c87870dddc86b074957a9f9b2d8fda81aae3046c8eef7eae233"
                }
            ]
        },
        "16beta3-3.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12761,
                "digest": "sha256:5fc340fe6ae453cf11509f20cd2673201bd6cd8679d3ea37f063654d25191fd5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90828489,
                    "digest": "sha256:ae048ca15ac7818737191cee04885e129d45bbde1580dec2400a9f448900cb3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9563,
                    "digest": "sha256:cc432f8faf0be637a73d240c435046ae25dae0d27239f9fd7cd559ac858b7d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:0e2281c7fd04da0106c27fb579ee39ff5d2e715640e39229bc50455c7d4d6891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:a029d3db169f887067aae77e6b96698160c7d4b004ef3496bb58222a3e629733"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4791,
                    "digest": "sha256:c1c02d71fa12252db5f63580f3f4be5050281c9cb5fe0baf760bdb9a18d79fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60348375,
                    "digest": "sha256:f40b130fa6c9f92564be1ad05f80cb34723c90c7e7c69fdf155271f0137b0622"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:0f608544107cb94879a5cc4cf99b544ac79e6f883b5e46cf53b1d82f41f2e39f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:e56c48876fb034a245baf3f0c488afe151fba3a3bfd8f953b9fa8f868b83dad8"
                }
            ]
        },
        "16beta3-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11592,
                "digest": "sha256:5c104fd4dfe21958ddceb89369c877b66a98fdf432eab9f3ceebb510abe80ac9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417678,
                    "digest": "sha256:14726c8f78342865030f97a8d3492e2d1a68fbd22778f9a31dc6be4b4f12a9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1804,
                    "digest": "sha256:4d049703b56a05c48cb95a4ba1243a8fa0e844117003f600135c26eb85434c4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415040,
                    "digest": "sha256:8aff07e1ea08d529e3cb9d51a2abe1c2e1253095f6e343d4eb8132b6a69822e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471555,
                    "digest": "sha256:89da0bc4d21092ddd4b46bd3531ca3ec3ec6c853d7af5ced9685326f4262f6e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045620,
                    "digest": "sha256:9a02c2deae73b1937fc85e7d594975a05c2d2107abd89b5c80a23860c3df5357"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261298,
                    "digest": "sha256:0b0390468bd312680ca5a8596b1700fd1104a33f6579e212c78b5816a46d03d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:ef10f7127c838fde4cd95a33bafeb15fc33f872e42ae16ae37b17145f014ddea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:795a7af575026c716ad0503bda17a1adf16a139f67776ed7f5b46e484868758d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94312937,
                    "digest": "sha256:635f2281414b2d4e20f8f1b55b16c63966855a42e1682ab36301f91afa662c7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9926,
                    "digest": "sha256:b54309662f406118f1cd495345a0fc9288c50cbb7429b89ea000311edad8ba40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:68af4b3e8cc576d9983a3a50920e4c8b45db9c76b1005552707bfc620a1c29a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:33441fd1eb529951439a1c6287c6ab2157b3f57112c865fb4685b6ac9a39a178"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4786,
                    "digest": "sha256:10f69253657549b813f3820878d0f8f49d261021f5e961da029da2bd48ff82e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67603817,
                    "digest": "sha256:16ae6824e4dc3d467700155f33c8659a3c4d23bad78c582e387357979e2bf31d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:29e5f427b1ba8268bccc51e9ca2cddabba2f98196134ec9b004ca628cd51d561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:b1084a158313374ce6e44df9833504edfb1fbbe1e990880bdb6df7e0befbd0bf"
                }
            ]
        },
        "16beta3-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12417,
                "digest": "sha256:d79f5c30480af467dc64b84d4af90a480067adab79ad87b2587223cb15583686"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90828489,
                    "digest": "sha256:ae048ca15ac7818737191cee04885e129d45bbde1580dec2400a9f448900cb3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9563,
                    "digest": "sha256:cc432f8faf0be637a73d240c435046ae25dae0d27239f9fd7cd559ac858b7d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:0e2281c7fd04da0106c27fb579ee39ff5d2e715640e39229bc50455c7d4d6891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:a029d3db169f887067aae77e6b96698160c7d4b004ef3496bb58222a3e629733"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4791,
                    "digest": "sha256:c1c02d71fa12252db5f63580f3f4be5050281c9cb5fe0baf760bdb9a18d79fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60518835,
                    "digest": "sha256:1901c6ecfdb7202f8b854c36cc16219595a32b6b841f20857d1957af09e599bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:ec26dc1ebf2acec23a79c9b7f71234baa6fb5e0c4def32d534cc0d3425d9cc99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:deaba4db1d0357d01824ca85922b7c31ddef54280d779977a86a0df954690203"
                }
            ]
        },
        "16beta3-3.4.0rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12765,
                "digest": "sha256:f30bcd55c0e013ac35ed47aadcd540528739dc76480733865509c6f17f248942"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90828489,
                    "digest": "sha256:ae048ca15ac7818737191cee04885e129d45bbde1580dec2400a9f448900cb3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9563,
                    "digest": "sha256:cc432f8faf0be637a73d240c435046ae25dae0d27239f9fd7cd559ac858b7d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:0e2281c7fd04da0106c27fb579ee39ff5d2e715640e39229bc50455c7d4d6891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:a029d3db169f887067aae77e6b96698160c7d4b004ef3496bb58222a3e629733"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4791,
                    "digest": "sha256:c1c02d71fa12252db5f63580f3f4be5050281c9cb5fe0baf760bdb9a18d79fea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60517599,
                    "digest": "sha256:de6a30a1c03d2e9d6823302dce9ad682928374928594217ccd22cf03ad4019a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:e439f1c028494b693636b824143a8e792901762a3a663cdf54ff4f387a572639"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:0c197248cfaf1c00788121f419203d57994cbd292aca14f434b795e7ffdf6658"
                }
            ]
        },
        "16beta3-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18977,
                "digest": "sha256:301606b57c0721b56929abbed961434c8877b63a258b1c9df7b7624a9451370e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417678,
                    "digest": "sha256:14726c8f78342865030f97a8d3492e2d1a68fbd22778f9a31dc6be4b4f12a9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1804,
                    "digest": "sha256:4d049703b56a05c48cb95a4ba1243a8fa0e844117003f600135c26eb85434c4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415040,
                    "digest": "sha256:8aff07e1ea08d529e3cb9d51a2abe1c2e1253095f6e343d4eb8132b6a69822e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471555,
                    "digest": "sha256:89da0bc4d21092ddd4b46bd3531ca3ec3ec6c853d7af5ced9685326f4262f6e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045620,
                    "digest": "sha256:9a02c2deae73b1937fc85e7d594975a05c2d2107abd89b5c80a23860c3df5357"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261298,
                    "digest": "sha256:0b0390468bd312680ca5a8596b1700fd1104a33f6579e212c78b5816a46d03d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:ef10f7127c838fde4cd95a33bafeb15fc33f872e42ae16ae37b17145f014ddea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3195,
                    "digest": "sha256:795a7af575026c716ad0503bda17a1adf16a139f67776ed7f5b46e484868758d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94312937,
                    "digest": "sha256:635f2281414b2d4e20f8f1b55b16c63966855a42e1682ab36301f91afa662c7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9926,
                    "digest": "sha256:b54309662f406118f1cd495345a0fc9288c50cbb7429b89ea000311edad8ba40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:68af4b3e8cc576d9983a3a50920e4c8b45db9c76b1005552707bfc620a1c29a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 200,
                    "digest": "sha256:33441fd1eb529951439a1c6287c6ab2157b3f57112c865fb4685b6ac9a39a178"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4786,
                    "digest": "sha256:10f69253657549b813f3820878d0f8f49d261021f5e961da029da2bd48ff82e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12852338,
                    "digest": "sha256:4d732b18b7333352476a607304daed3604de6b353dc0c10af859b480f4f45f6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1490,
                    "digest": "sha256:18242065ba0bc017445ae3c956347b3f376253d7fb57f4a26896c3545c92d5fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22972893,
                    "digest": "sha256:c48afd97ac68e73af447c63030a5b488992d24d1f86edd12dbe58ee75f0bb634"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5353,
                    "digest": "sha256:dd68cba5f33e4e6fedffa157bf8ac03de24a2f9bb178ce7c18c0a37dad7d1d7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14719947,
                    "digest": "sha256:90ae5b8e0ec2f1296877302d916d14608c4d42e12fcc3ffc3e0df7b909616a87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:d0e39e6839220d775fc880d786d68f72b6626d6d11792c8f5d2432aa4c655d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:629ed2c413aabe1dd831b13741ac037cdc839a993f40651eb164ccfccb791513"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5385,
                    "digest": "sha256:44c24835c2e302cfb2a99c3c60ae4946e9b671d1f01c80294ddfcebcc7830b65"
                }
            ]
        },
        "16rc1-3.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11582,
                "digest": "sha256:af20947bf72f45412d01928d8b135c437ab2dcd7379da385818072fa8364d508"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417503,
                    "digest": "sha256:7d97e254a0461b0a30b3f443f1daa0d620a3cc6ff4e2714cc1cfd96ace5b7a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1796,
                    "digest": "sha256:109a7ddf1bac19161a48105feb68c7b04ddf1845a241f50884645b2e21fffa0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415040,
                    "digest": "sha256:d2f3f56119bdd28d10c57cdab715b0f94e0679bc4fe22a74c31b38707f685cec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471571,
                    "digest": "sha256:bf2df7937fd911a95420a63e8fff99cc2ea86028bcd3e2a770628868f4a1b517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045587,
                    "digest": "sha256:cc0ab32f40785aa27f46fd81933a5c09736584fa532980a1f581a01d9e867215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261270,
                    "digest": "sha256:98bd85ddf81ea215a5ad1cfbdbb73d706b3cd3b70c9935f4d6212be72240e8ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:28b11156967cfb55be4fd723803ac71fb44e027cba96098d37a8a98012e3424e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3194,
                    "digest": "sha256:90521879f20bc16a06f6001899496eb14391034afacb7aa402eca101fcec90d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94511151,
                    "digest": "sha256:748f34a855bc2a903182c47a2817c85cff36ed1b386bac0465719a5b06c0f1e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9926,
                    "digest": "sha256:d1488ad46bb35edac19ae2d78f7ffbdb497485b34b27492c1f09e6c1cc145b1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:cf0c2f9b9d654d86a21067b30e0adfa42b8287e31ae5fcee253db579531423a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:5b33da3c21f89e1111e8de332140662ff69850465433f5c1292611ca5e2071ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:e1f2a3aa7b69e06cd7d8fdc3b477445901ab415b13962607eee5529f204c569d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67559855,
                    "digest": "sha256:5513135642a7d0f9a08575992bfdccb7b773c55ee244f3854260a7a9746d9744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 553,
                    "digest": "sha256:aeeb453547d90321e1d12c9acc8a4ca31f14a04e9caf94ab384079d2cb827947"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 587,
                    "digest": "sha256:51474f7c78ec85ff4a31b56d2c1d6ec3d0f70723e0ab31421e3371f43eb97033"
                }
            ]
        },
        "16rc1-3.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12408,
                "digest": "sha256:5ef42a1b3058db8e7ccbc098016eb9830ada5cd9222b9f925b089afbca6787a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3401613,
                    "digest": "sha256:7264a8db6415046d36d16ba98b79778e18accee6ffa71850405994cffa9be7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:6ff36a0c8b9b9d276476d169ec8b67363b3ce61e2bb9dd531afa7a5e7bc2384c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:41485c1d4f30a3b23132045299ad7d532a237a5e1d5475cb73e434a1fa2d8f4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90827132,
                    "digest": "sha256:3dc93e76c039fba3aba19ee158515ab742fcf8f875b74e1d18ea09aad65bcfa1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9566,
                    "digest": "sha256:86921b3fe2af8b6972f4ad100bd228d0319ca08e868069c41dea1787139bdb62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:73e2f5e17748d64d246c605efdd970acc8212270ca767878113c6450260de959"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:de9279c902352c78490f9bec673ebc120a64b3f3fd14001bc1ce2a57f022f92d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4789,
                    "digest": "sha256:d9f34cbba356be433db637a09731d16deacf280b3cecd482b15a3d0097bb34c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60518942,
                    "digest": "sha256:4988330db9af2c5ff46d722743011bb1fe3cedf33d9d66904382bb33331753c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:ba4c90132a10912f3f2c4c2426d21d30656aa28ea847ed1f90b1dc97c681bfd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 594,
                    "digest": "sha256:9c59032568f7bd7a8c719205b0247bbc017c4f666cc168491f06ebcce6a51905"
                }
            ]
        },
        "16rc1-master": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 18971,
                "digest": "sha256:ec0adeae78b7c9d6885b3e47b7cc5c6ea5e5926a88f9f170c9f45fb9c9837d75"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31417503,
                    "digest": "sha256:7d97e254a0461b0a30b3f443f1daa0d620a3cc6ff4e2714cc1cfd96ace5b7a7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1796,
                    "digest": "sha256:109a7ddf1bac19161a48105feb68c7b04ddf1845a241f50884645b2e21fffa0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4415040,
                    "digest": "sha256:d2f3f56119bdd28d10c57cdab715b0f94e0679bc4fe22a74c31b38707f685cec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1471571,
                    "digest": "sha256:bf2df7937fd911a95420a63e8fff99cc2ea86028bcd3e2a770628868f4a1b517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045587,
                    "digest": "sha256:cc0ab32f40785aa27f46fd81933a5c09736584fa532980a1f581a01d9e867215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1261270,
                    "digest": "sha256:98bd85ddf81ea215a5ad1cfbdbb73d706b3cd3b70c9935f4d6212be72240e8ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:28b11156967cfb55be4fd723803ac71fb44e027cba96098d37a8a98012e3424e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3194,
                    "digest": "sha256:90521879f20bc16a06f6001899496eb14391034afacb7aa402eca101fcec90d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94511151,
                    "digest": "sha256:748f34a855bc2a903182c47a2817c85cff36ed1b386bac0465719a5b06c0f1e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9926,
                    "digest": "sha256:d1488ad46bb35edac19ae2d78f7ffbdb497485b34b27492c1f09e6c1cc145b1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:cf0c2f9b9d654d86a21067b30e0adfa42b8287e31ae5fcee253db579531423a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 199,
                    "digest": "sha256:5b33da3c21f89e1111e8de332140662ff69850465433f5c1292611ca5e2071ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4788,
                    "digest": "sha256:e1f2a3aa7b69e06cd7d8fdc3b477445901ab415b13962607eee5529f204c569d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12852322,
                    "digest": "sha256:dc1524404e4f72c0ec9e38f438d35c63ab62261c33e43b1bdb55fb508a2428b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 895,
                    "digest": "sha256:0f0a9a78c94606fcb71f0cd5b802a74db1088d933cc08e4dff878fff039a17cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23025311,
                    "digest": "sha256:1cf7ea9d014a43eba3f31cc2df2ffd626357761baf122946a08b69914280c239"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5359,
                    "digest": "sha256:f13be52d105b4caf02e9a7c31d7f706051caeeaa5aea1b9580c4c4dd32283f10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14696774,
                    "digest": "sha256:d05ebff458fdb66c33569dff069049050959da54bba0a73b3b4ebe9d1ad05b1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 557,
                    "digest": "sha256:540027c837c79e5130b2f3cf5ced8056f745382cff9e9a9d9264fb7adecb0feb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 596,
                    "digest": "sha256:28c91c2817cd70276626a639f8e8b3305874736c075aca1b2e25aaa36a4e112e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5395,
                    "digest": "sha256:7c6143e22e0fd765a0ea7c6b0fc6b8709cc0cde92b196441b4336dbfd9c6bd55"
                }
            ]
        },
        "9.5-2.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12458,
                "digest": "sha256:779b12fddf7ef3b71374a96f7a39cf77742a8808e09799eaca20a523cb7584e5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22528266,
                    "digest": "sha256:fa1690ae92289fb310aa27b793a164bf8bbedc7ddd00ca079a31bb8bb315b616"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4503314,
                    "digest": "sha256:a73f6e07b15899df667ce346502d8d5b17d1193f7175e6b766618fb43730f5e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:973a0c44ddbacd1f6c6c6ce492c02046961b2c4b8b627864e1661bd95c120554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412291,
                    "digest": "sha256:07e5342b01d432d09b2c4d0ee7587a0f02b98f89d4c6dccaa80f66015c9ac9ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6185597,
                    "digest": "sha256:578aad0862c9fa757ed2742c6bd2470cdb405ecebebc4c1adbaed7a4ed4fe82f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 385046,
                    "digest": "sha256:a0b157088f7a4589488c98feb1e85f181a38b2df8dd98d12fd1437863e249d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:6c9046f06fc5e0837aca2236f4d14b55c037c80b63c7f20ea6f43b82fbaf9247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5350,
                    "digest": "sha256:ae19407bdc48f0978fb8b45798887b785418cad03f4a7d7341f899855df662c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37731877,
                    "digest": "sha256:e53b7c20aa96738654b4155bd733a82acfcf8f1056b3d2c764e4beacafab49c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7588,
                    "digest": "sha256:a135edcc0831edd37699d4d03d56b1434e4764b652a29adad58dcc58fc2c54f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:fed07b1b1b94f7020c890f4e0fbfc5b0d8e931b8789422bf48623f0d5133af99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:18d9026fcfbdb7cabca398f36c4f810007146a161b11a65a2fc7acb4387142bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4411,
                    "digest": "sha256:4d2d5fae97d9cd86313171a94e5fb4a62d52c4236d20fe92c040d249acec4963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:d419466e642ddb33db0adc383ee44a72a450dc0fca432c6b87f0c6dab01075d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42308246,
                    "digest": "sha256:91d2f0780cccf1079e9aa92beae86a6fef03cef53e21aa744fd679724300cb60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:5d422376261262f6b3bcc257802cfc6cc2072b9ca713cabd0b84404074284da1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601,
                    "digest": "sha256:9069a824d5f04f697186a6ecdb4a709f543154ba04c1b5afa0b5c4108e1b21a9"
                }
            ]
        },
        "9.5-2.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10772,
                "digest": "sha256:7c68515b8586dbd252a9123b5792bb53d637718dac91153993f7a5c710c9b0c8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2811969,
                    "digest": "sha256:540db60ca9383eac9e418f78490994d0af424aab7bf6d0e47ac8ed4e2e9bcbba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1277,
                    "digest": "sha256:a3cb73039552ea36b22e7ea1fabf738b87f83b2c9347901ce77b79c790389bb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:39855706e49a3eeebf4c28a2ff3d706c5cdbe7bb1726d272188f08e91a46bfb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11386572,
                    "digest": "sha256:6f4fe1a4006b0fc6a905aa4b46fc99ec62bfabb850476bf61c8e87d3599fadd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6891,
                    "digest": "sha256:b21b3b4c0bdb967a18a584a522914b94808918d0256594888e16d5217b0aa05c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:70c92b0b2be9a6bab9e2715501c9f0c03644f60795615f26d82b5e2c6968008c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:5b52784fa069e424cc8eca9270735dad0854fc11ef92945af7c202db55be95c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4405,
                    "digest": "sha256:834277e470724f5220a0c0ba57bc362dcdece03bffd30aa8318d067d87ec445f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118,
                    "digest": "sha256:b41402993a06e8c1e27423eea2f9b75bf0a1806995aafe3103e07b0abe25eea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56770119,
                    "digest": "sha256:528fcb2f6a67a0b5088663e219015032ab23882f523b6465cc91ff1dafc0fc55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:4e56c5c9709f4554105d698c51a847ac4b9bdcda2af374500fa8fc4bf907d287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:4e762e051067972373f0e099dddb5f85e9cb19dae0e02f2ad66ac8798b11cc7a"
                }
            ]
        },
        "9.5-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12451,
                "digest": "sha256:ce0d26e47759bf4638a7777582b66ef3a218a5efeb0acce2781c56f08bb66ef9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22528266,
                    "digest": "sha256:fa1690ae92289fb310aa27b793a164bf8bbedc7ddd00ca079a31bb8bb315b616"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4503314,
                    "digest": "sha256:a73f6e07b15899df667ce346502d8d5b17d1193f7175e6b766618fb43730f5e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:973a0c44ddbacd1f6c6c6ce492c02046961b2c4b8b627864e1661bd95c120554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412291,
                    "digest": "sha256:07e5342b01d432d09b2c4d0ee7587a0f02b98f89d4c6dccaa80f66015c9ac9ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6185597,
                    "digest": "sha256:578aad0862c9fa757ed2742c6bd2470cdb405ecebebc4c1adbaed7a4ed4fe82f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 385046,
                    "digest": "sha256:a0b157088f7a4589488c98feb1e85f181a38b2df8dd98d12fd1437863e249d01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:6c9046f06fc5e0837aca2236f4d14b55c037c80b63c7f20ea6f43b82fbaf9247"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5350,
                    "digest": "sha256:ae19407bdc48f0978fb8b45798887b785418cad03f4a7d7341f899855df662c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37731877,
                    "digest": "sha256:e53b7c20aa96738654b4155bd733a82acfcf8f1056b3d2c764e4beacafab49c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7588,
                    "digest": "sha256:a135edcc0831edd37699d4d03d56b1434e4764b652a29adad58dcc58fc2c54f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:fed07b1b1b94f7020c890f4e0fbfc5b0d8e931b8789422bf48623f0d5133af99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:18d9026fcfbdb7cabca398f36c4f810007146a161b11a65a2fc7acb4387142bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4411,
                    "digest": "sha256:4d2d5fae97d9cd86313171a94e5fb4a62d52c4236d20fe92c040d249acec4963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:d419466e642ddb33db0adc383ee44a72a450dc0fca432c6b87f0c6dab01075d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42771846,
                    "digest": "sha256:30e6d41b8abaa1e0fe62ab77ec0f67800c7c9eb3ecfd3a6b5fc5c0c167ae5e7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:510a53f796a8610354488d1b875c090fa414c4028322db4a95c982b1288b10e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 602,
                    "digest": "sha256:e253ee11597b73ddef1e0c83488e80c11f094d8d5d045ecd3eabd0dd606ccf36"
                }
            ]
        },
        "9.5-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10768,
                "digest": "sha256:a0ea760c2bded794b59ea5ce0a185ab27d67ac97f1b1fc43250d030f2aac5342"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2811969,
                    "digest": "sha256:540db60ca9383eac9e418f78490994d0af424aab7bf6d0e47ac8ed4e2e9bcbba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1277,
                    "digest": "sha256:a3cb73039552ea36b22e7ea1fabf738b87f83b2c9347901ce77b79c790389bb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:39855706e49a3eeebf4c28a2ff3d706c5cdbe7bb1726d272188f08e91a46bfb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11386572,
                    "digest": "sha256:6f4fe1a4006b0fc6a905aa4b46fc99ec62bfabb850476bf61c8e87d3599fadd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6891,
                    "digest": "sha256:b21b3b4c0bdb967a18a584a522914b94808918d0256594888e16d5217b0aa05c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160,
                    "digest": "sha256:70c92b0b2be9a6bab9e2715501c9f0c03644f60795615f26d82b5e2c6968008c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195,
                    "digest": "sha256:5b52784fa069e424cc8eca9270735dad0854fc11ef92945af7c202db55be95c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4405,
                    "digest": "sha256:834277e470724f5220a0c0ba57bc362dcdece03bffd30aa8318d067d87ec445f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118,
                    "digest": "sha256:b41402993a06e8c1e27423eea2f9b75bf0a1806995aafe3103e07b0abe25eea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57722888,
                    "digest": "sha256:f8f5cccf2a57b53209d446568a6ec5ab60c63843a4e5a71cc83c663392feadfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:7b60ebaa49eef466c868e5618baf8a30d08d7bc17292dc2a130f599550a47ad7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 598,
                    "digest": "sha256:10460f4f46277d3fc84789ae45f4006e23fb2de2c9b6ff86796ac99d3f0dcb72"
                }
            ]
        },
        "9.6-2.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12308,
                "digest": "sha256:47915e3a7bcbe5c0454e3dbab8e7eb87ab744b58b02b4cc13bea3c79f4fb2a5f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22529131,
                    "digest": "sha256:1cb79db8a9e79b4f5415eaa91602251fb1eafe68d236efb80fe931bacfe5b3d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4503856,
                    "digest": "sha256:f6bae7873dd71bd3cea341cc690441e65addb698e9fa441e5916688f7b351702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1805,
                    "digest": "sha256:8f7722dc50a79f5c491ef429c4e1cedf06cd92d57fd81d4128606dd4d19e3193"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1379391,
                    "digest": "sha256:e8622b8cb6f3d0dbfe4c1ab447f2d1f8be3551910639df6dee3e3947851a109c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6185587,
                    "digest": "sha256:d6d74bba3a57b1c5b053a685119ac3f792efd9b170a2ccdb896f7f9ff30593a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 385015,
                    "digest": "sha256:874d4d2a09fd5b796094b58b54495e8ccf587b2206cfecd9c1ba981700c156ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:2d87c3a4038c4fe58c5c23882d960a2cad96560f9d3038c97f644174c3a0172e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5588,
                    "digest": "sha256:f955a6cf127bd643a6401f99e2a4a9928f96b956fba4e6c810ddea164d30efbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38554536,
                    "digest": "sha256:f62dc55c568dafab97a5c5a2368b62b54bc014850cb47c09fb69f66620bfff47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7873,
                    "digest": "sha256:4e2c4902efbdb93926370b000c0d8256e658c0ea925326d750f66473184817fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:01c676df543a9511fc4e35a5524e438b890e91d5a2a3d8a6eac419d886c70333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:1e3d335ef0b7979e51995478a88396dbcc54bb9e40f5e681b298b47e6a3d3fad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4728,
                    "digest": "sha256:11087f2b0d872fc04ae69101b096ba29828a06455e0d0981d43cf8c535e2405a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:4b9a74ac6ea0040d957cea98eda51988185b85e9fdc58727ef6fa74ff1022f5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42312125,
                    "digest": "sha256:16ae9b715b50ab39736f74ae5277197138bfa5b560e0f580c418466ca84dfeff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:f70118025d69560fe5316da873976b77a62bd85b7641f32bfe60bd7ec4ae7245"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 602,
                    "digest": "sha256:ffd6c99ecd66845e9238fdf77ffea917462dd99b251df85eb08e08a25c89835f"
                }
            ]
        },
        "9.6-2.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12814,
                "digest": "sha256:42c2e17904824d33272fa739fae6d22811285b2ee3d4d95206ea8767fb800a7b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2818413,
                    "digest": "sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:c50e01d57241cf7ef93a91060f5eb0b895a4b443f20dc1ce5e77d441184a6dc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:a0646b0f1eadaf0cd3fdb4c4490a69c4c7aed9b7ae10b24eb9005c59aa0b6e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17753003,
                    "digest": "sha256:912227b294eef53a0b3b659a249ff5d362559c5dd7fd8bd7fa4f77e9dc23baae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7528,
                    "digest": "sha256:696b75eaa88eb8c35e16fe0800e0ea481a51be17ab42ab689ce486f632a51c3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:0d83746bb80be252099e8bdc0da91fb48140d0433e3d15eaaefebedf6b69461d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:3a431a2253cd02965829d563f6181cf8d6e756f31dfe04ceb340edc589d82920"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4722,
                    "digest": "sha256:24ff05c047601c3cedb7dd5d6a494b9648602a7bb7180fcb04b74e79ae67104b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:587cf5e11ca1cd63b17de52d0ca5c065355f2301954bf46e275a2ba93216735e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51534497,
                    "digest": "sha256:e261e6756b36031ba4af4f0e98b5e02b9ec2ea28aaa5d93290cdff1f24fef403"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 555,
                    "digest": "sha256:cdeb3df267d40be465b77402b2db028f6a68263910dea65c4de2ad38ef8b9569"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:1d2ad034d43d7d4abced21fc9eacac6a6f9211b9a18fdd505e9a3f0b265815b1"
                }
            ]
        },
        "9.6-3.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12449,
                "digest": "sha256:f859cdbf808da765b67bcd0245d6b1a19d1988744772e00bba002e4fd8c2d272"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22527860,
                    "digest": "sha256:e50c3c9ef5a201a24959788dcbc7ebf88d95c63e132a4d7396ce541127afd88e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4502081,
                    "digest": "sha256:fad6bf221c0213499cecb70cead9ad7c1f35409b559ef2a70d496bcf45bc80ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1778,
                    "digest": "sha256:0dcec84eca9f0a5aa4b27b1ba88fe8a6cc971f383b6a431bc3ff04fa750f9dca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412088,
                    "digest": "sha256:a24f79fe54f505dd21dc3e687787834c53791bc9087639dd7c41213f5ee60031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6183102,
                    "digest": "sha256:71577bc8bcc3f22a71e8ea09e2096e64ca1ddb4472374b7b8b0d8a94d15b3554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 384923,
                    "digest": "sha256:88bf41ecdbbc463670707ad57424ee63acef869288abcb7891df2c4acf0da653"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:ada30a92552b95d357827688622b283e0a00bbd052380baa0427773736feb575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5345,
                    "digest": "sha256:834f3991a1d69d82a0cb722b80c8e53a18956ab1f9ca134dd5e3b0a240d774c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38488145,
                    "digest": "sha256:db4c6eee2bf2b4b2c957eebbb8696a2077af5fb34eb0f883eeb6b4b70b0ec236"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7860,
                    "digest": "sha256:49cb531e8dd0d4708985d5f0e64b36ea26ac8032022ef087abe9ddd41f52c5b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:4caa46455e68920aa066105a9a209d84bc3b0c7173916379b4ad6ba932535d71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:9e24f8b835681105005ae11eff0bb28472ae36f00f069362d499bf0563408c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4269,
                    "digest": "sha256:93f5146b40bc201b04f486ff871824bd552dda56d087ac30f79ade0335ce25e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 117,
                    "digest": "sha256:bf40044ac1b518c4ab00eac7d451d96ff6193cf0a9a133af260887957625d800"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42768136,
                    "digest": "sha256:f5bf1b283b2d43693096e67e04582cb8b738fb3164a940c70cbd79216314fa07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 485,
                    "digest": "sha256:b747a1bbcff45f6fb2109cf6b14c3479a7fd49cd7c9b8c1c5d0024e9b68a3ee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:8781d632463edc0527d47ab1aa6bfbbc5aaea8d1318f17867bd6c9b51be2d7c3"
                }
            ]
        },
        "9.6-3.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10690,
                "digest": "sha256:dfa855b5620d53f25f75e93175f08ed660e82fd0702e8e14e5e752bbb1055ec1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2796945,
                    "digest": "sha256:05e7bc50f07f000e9993ec0d264b9ffcbb9a01a4d69c68f556d25e9811a8f7f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1247,
                    "digest": "sha256:b05eb41eecb97b89919d2eacdc86aa1332e168aa4ff3750c35c41525c333054c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115,
                    "digest": "sha256:8a37c8fecb6acc85d913b4779946759124998986425d194ff748d6c12dabb1e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11674929,
                    "digest": "sha256:c1f03a3e5f7312ce18b1240764fea76d2a6626158cf25fcb3eb73ca3ffe57190"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7158,
                    "digest": "sha256:a7306c96c0537f118da1fda4e248cb400df74fa7d454da1be427fc576184c9dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 130,
                    "digest": "sha256:9f6224b8e402ec7a243f6bdcf14531d652d3cfdc292a989f8b6fa76bba37f689"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:a4d474bc4c571d9b009e77a0262cef290acfe8eed6ac5508a74558a1e64033f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4262,
                    "digest": "sha256:5f2dafabb725e52df9642e11408d62f2c00fa4e91d8a11d4754ce68f6a6aed16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:264829aa5f887b24a4e86aa7e7d8d5c8dc71760e74527ff391bf05f1bef73504"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55652333,
                    "digest": "sha256:21f9e4dcfa92aeff8286c703f797c747e7e8a715b4097a84f80b67d22e6d2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 486,
                    "digest": "sha256:5595b04d87d87d5b132e48844cc142bd837965489e23d0f35b967018502e3cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 595,
                    "digest": "sha256:a27f08d3c0477f2daa5660a89a3814e883166be484563c05c64af3175038954f"
                }
            ]
        },
        "9.6-3.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12250,
                "digest": "sha256:1a7541c0bc09b1fce8317be5f7675d0f2e41275b44d39e32fb361ea3bcf97fe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31370221,
                    "digest": "sha256:e5ae68f740265288a4888db98d2999a638fdcb6d725f427678814538d253aa4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414448,
                    "digest": "sha256:7b8fcc7e1ad054463615f8e9ada48d0c011c51bc03317a709c4cfc23a3af52c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1800,
                    "digest": "sha256:7527d03e2f7758fcbc420254a6a9ae51b970e70fec727269376356568f42e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418325,
                    "digest": "sha256:80e55689f4d0cdd390957c8e1135b143ca3afb1486a1ca5a9fc01429d483b48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045242,
                    "digest": "sha256:8a79eb6d69c9c99a8e75aa15011c9e57d0af9f3822905c12ec38e68d9d5c5cb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441546,
                    "digest": "sha256:397705f2d09375da10b9c3cbfe61556a95d9673f6e016382f20bfed7284e85db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:de36ec4eb0a50925495a0bbc72e83cab5bd5d8ecf490c913f13412b2786fc25e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3052,
                    "digest": "sha256:08d878a022c1a8a3333ae9a3de8170431bde517831abbca34f768501e5cfda51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39144917,
                    "digest": "sha256:9a6a9e1d89f1754400d42ed74ffb89f969911bf896ab80ae8f8f01e1e22d1cf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7871,
                    "digest": "sha256:933e53a4ee5b46951fddee9c70e46f78619364b8bd77e6db003a8dc310aec98f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:78b14e20c7645cb3c2a349f8dde17cc319d56d21cda4f122d71970711c086ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201,
                    "digest": "sha256:386a2f353f78d0b0d60347435b9cc97056ddd153a380d7e3917e6ad6ada79086"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4716,
                    "digest": "sha256:499ee3181124391cd8c614532a038848c618965f1679bcada303dcce37bb0bc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:c20b3a586230fd77722353186338629b7bf78dedad964fbb4d3c1605c6f61b72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62143607,
                    "digest": "sha256:c8f9086cbcf691eee7eeac5f8dd7944dd749d38152b3f40ff085e33e6ffdcef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:387c1b6260263191550e854f58c49e329b1073ba5ef7b7686397e4795ff573f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 590,
                    "digest": "sha256:d45a77c5e84faf80709899fe462f9d45d3ee74e85f43aadeef8240b45e8a7e00"
                }
            ]
        },
        "9.6-3.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12408,
                "digest": "sha256:ec5bab6c2f3c36200ee5f83fa9af46506a454c1351f5628e29ee0b45cfe02b08"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2822981,
                    "digest": "sha256:97518928ae5f3d52d4164b314a7e73654eb686ecd8aafa0b79acd980773a740d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:9f97b97dbe44d3d5922703b0d43a419416f14f7acfda692d113a7aa9b9721fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1b95022c44c584684bb06e7baad164584f8952fb082bab4a0daf8dc9c4b803dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17921657,
                    "digest": "sha256:584d24c470dc748ee307dcd8c5322772540f694e56c949e85c331086dafb3820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7525,
                    "digest": "sha256:4c57ebd54f163b79cdabd27c7afeb463c98893456e1e10b5377aa9a1b6490b56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:383c3993eb5d65dad26b1828b8ff972bc7b19c993bb1103b0337aed20a04ee06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:85e92ef805cf39fc53705e54cfd783994b9f9b32d1db688facb6b2fced2ca5d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4718,
                    "digest": "sha256:ab0b174bfc6a330a86ae570e3cdca2d6699e39fb9cdb76fa9298775382b00921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:8be129f6f19f0635802b88caa10ff7410c5e3e7d0714880d58c2d3f8b0cfba73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51261202,
                    "digest": "sha256:5340e69dfd50448baafda2d23714838ff9a8bd7f0df076221f5785c23d11a5b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 484,
                    "digest": "sha256:c00e05ffc63ae45e4db7dd05bbbf8012f2251c3528e0e92b9a8bcba94c058f61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597,
                    "digest": "sha256:444086ba3c988d3c2892dfd86ea2f1b6d667e9f850746902476fa73be37d6b37"
                }
            ]
        },
        "9.6-3.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12309,
                "digest": "sha256:b65cdd03eb1f76a04efda8b9b3c0539d176e646c1335085f25c91cc9a3ba880b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31366257,
                    "digest": "sha256:5eb5b503b37671af16371272f9c5313a3e82f1d0756e14506704489ad9900803"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4414474,
                    "digest": "sha256:daa0467a6c4883c02b241fe5f4f1703245f43ccbe5bcd56a3dceddef285bf31e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1797,
                    "digest": "sha256:7cf625de49eff935274ddf0944444341ef8721bb01b69c991c67924dfd76b1e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418314,
                    "digest": "sha256:bb8afcc973b2a3de0135018fd8bd12fc2f56ef30a64e6e503d1a20cf35e340f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045282,
                    "digest": "sha256:c74bf40d29ee27431deec24f6d21d1a09f178335b7c25aa6fd26850bec90252a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441571,
                    "digest": "sha256:2ceaf201bb22921a17d7d85257c21ea29ff1da9b269e204d7a40fe2175b58913"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:1255f255c0eb861462fc3bb1e26bebe7300bc593e6cba7389e9b449076993e2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3179,
                    "digest": "sha256:12a9879c7aa16d847cd71e2509306cc7f4817fa4dd6c77d9b782447fea2baa6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39148734,
                    "digest": "sha256:4b0f59733e1588480b68259514313363ce45a749108ee6fdd1b148ee0fb4bbfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7871,
                    "digest": "sha256:61cc88474560d4ec2e7c3674988da42e98c460e266b14f8b80c2186ad32c8c83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129,
                    "digest": "sha256:1325a6311f670e30e42e10f7d41b76163de0e436a32643ef51f361c87fda184a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 203,
                    "digest": "sha256:bbdb6935123d36dc805a064b9034ea822e519620b708f2544a1a1b59a33722ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4720,
                    "digest": "sha256:0eda598b6369a72ed9a500a34e030790e7ec166b4ef7c4d8c4f1413e0f914493"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:d5499267c6aa51a35d8149acc99294064d5e446e6193eff884633821a5fccd77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62325840,
                    "digest": "sha256:87928a4010b7a312e3afc3b62af9e77bedc4c5cf3d59ab6d1f5df70afbc42b0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:5781d467f880e6d447d8c51832c1f608f0d0b7c5110b3e1d35aadbb335d61153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 592,
                    "digest": "sha256:d6a795eb429760e733068a1aa8b304f56b4e740cb289832051420dbfc5b22c38"
                }
            ]
        },
        "9.6-3.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12818,
                "digest": "sha256:6a15d4af4a33a9e65196a2dbc025f95eeec4be3f727f401d245b8d6593e030b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2818413,
                    "digest": "sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:c50e01d57241cf7ef93a91060f5eb0b895a4b443f20dc1ce5e77d441184a6dc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:a0646b0f1eadaf0cd3fdb4c4490a69c4c7aed9b7ae10b24eb9005c59aa0b6e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17753003,
                    "digest": "sha256:912227b294eef53a0b3b659a249ff5d362559c5dd7fd8bd7fa4f77e9dc23baae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7528,
                    "digest": "sha256:696b75eaa88eb8c35e16fe0800e0ea481a51be17ab42ab689ce486f632a51c3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:0d83746bb80be252099e8bdc0da91fb48140d0433e3d15eaaefebedf6b69461d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194,
                    "digest": "sha256:3a431a2253cd02965829d563f6181cf8d6e756f31dfe04ceb340edc589d82920"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4722,
                    "digest": "sha256:24ff05c047601c3cedb7dd5d6a494b9648602a7bb7180fcb04b74e79ae67104b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121,
                    "digest": "sha256:587cf5e11ca1cd63b17de52d0ca5c065355f2301954bf46e275a2ba93216735e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62952209,
                    "digest": "sha256:d56f5b1d964d95aa097c2b2adda8d24b0a96be28bfa4a3c4e4124bd782d333aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:c08c411ac40b6e84b408d61264d4a7d0c981802228615d833b4135c12e1eeff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 599,
                    "digest": "sha256:e66a00ecbe05536f6c9be40c2ef1d373ed5d23071eb0c007352f1918b9320a66"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 12373,
                "digest": "sha256:b3bf65f8447f21207011949117eb9fe6edba321be20ae8ae057a7dee56a6b33d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31433931,
                    "digest": "sha256:728328ac3bde9b85225b1f0d60f5c149f5635a191f5d8eaeeb00e095d36ef9fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1682,
                    "digest": "sha256:f67b2e2e50afb77df09883746a31b063e7328442b9379b037bc6f90d1914b032"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4308203,
                    "digest": "sha256:78f426f2e6cb2c6f48e40abf222ff43cafdac3fdf096fb01df6abc7139330732"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473540,
                    "digest": "sha256:25bbb0f53337eeda879ece0588ac0bdfff40bcde3102b20fe1519ca408a00894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8045817,
                    "digest": "sha256:f14888bf52c7454d188d3dbc541489a2c1e652e026ac94ac896f962c0d40a369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038356,
                    "digest": "sha256:094b2144cdda8fd752031d264572e5323cb7e047219d2dc0927b2c361ec883a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116,
                    "digest": "sha256:a54272a2a5cbb355b723f8767d1c904fd67388353fddfeca02103f8dceb95e17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3139,
                    "digest": "sha256:d394d154fe0cd712f55a6d047126e4320da30d4b2276b39a99355f7b51c39f15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98697179,
                    "digest": "sha256:5ba4ed5eee9904b02bebab72c54551be4086387d731a68abc5416929d253902d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9910,
                    "digest": "sha256:61b7f2f46f76ac8291c37b2d32e637c0a583fd7e9ffacd8e0d91efb7d285fe31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:804dbdbbe2423fc76d2742e36e7955d7fcdecc76efc16810466fa6ca2d2838b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f161dc7c149b41857135826b4be10765040024fcfb1c8d442015d266cff68b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5417,
                    "digest": "sha256:f1fb31daa1c069425cbfcce81cf51f2d9a4a370b15462c83c2849986e2b2a57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:efb99a6e3550a95ba682b927c69904c01737ba04efbb568115c301ef6e072f7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67555694,
                    "digest": "sha256:e8282e9e85acc49e068d718e4c3ea923614dac112a8f15f573bba00e00fb0a11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:eb6faf88f0de3bea7f1c881cea8e3693739a11b4dda2a1ce05eec7d02f511982"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 586,
                    "digest": "sha256:8bcdbfa25ecb51fc96a6c2c916e624d9df5c925eedb0875157b97e7ff18ce7c7"
                }
            ]
        }
    },
    "tags": [
        "10-2.5",
        "10-2.5-alpine",
        "10-3.0",
        "10-3.0-alpine",
        "10-3.1",
        "10-3.1-alpine",
        "10-3.2",
        "10-3.2-alpine",
        "11-2.5",
        "11-2.5-alpine",
        "11-3.0",
        "11-3.0-alpine",
        "11-3.1",
        "11-3.1-alpine",
        "11-3.2",
        "11-3.2-alpine",
        "11-3.3",
        "11-3.3-alpine",
        "12-2.5",
        "12-2.5-alpine",
        "12-3.0",
        "12-3.0-alpine",
        "12-3.1",
        "12-3.1-alpine",
        "12-3.2",
        "12-3.2-alpine",
        "12-3.3",
        "12-3.3-alpine",
        "12-3.4",
        "12-3.4-alpine",
        "12-master",
        "13-3.0",
        "13-3.0-alpine",
        "13-3.1",
        "13-3.1-alpine",
        "13-3.2",
        "13-3.2-alpine",
        "13-3.3",
        "13-3.3-alpine",
        "13-3.4",
        "13-3.4-alpine",
        "13-master",
        "14-3.1",
        "14-3.1-alpine",
        "14-3.2",
        "14-3.2-alpine",
        "14-3.3",
        "14-3.3-alpine",
        "14-3.3.0alpha1-alpine",
        "14-3.3.0beta1-alpine",
        "14-3.3.0beta2-alpine",
        "14-3.3.0rc1-alpine",
        "14-3.3.0rc2-alpine",
        "14-3.4",
        "14-3.4-alpine",
        "14-master",
        "14beta2-3.1",
        "14beta2-3.1-alpine",
        "14beta3-3.1",
        "14beta3-3.1-alpine",
        "14rc1-3.1",
        "14rc1-3.1-alpine",
        "14rc1-master",
        "15-3.3",
        "15-3.3-alpine",
        "15-3.4",
        "15-3.4-alpine",
        "15-3.4.0beta2-alpine",
        "15-3.4.0rc1-alpine",
        "15-3.4.0rc2-alpine",
        "15-master",
        "15beta1-3.3.0alpha1-alpine",
        "15beta1-master",
        "15beta2-3.2",
        "15beta2-3.2-alpine",
        "15beta2-3.3.0alpha1-alpine",
        "15beta2-3.3.0beta1-alpine",
        "15beta2-3.3.0beta2-alpine",
        "15beta2-3.3.0rc1-alpine",
        "15beta2-master",
        "15beta3-3.2",
        "15beta3-3.2-alpine",
        "15beta3-3.3.0rc2-alpine",
        "15beta3-master",
        "15beta4-3.3",
        "15beta4-3.3-alpine",
        "15beta4-master",
        "15rc1-3.3",
        "15rc1-3.3-alpine",
        "15rc1-master",
        "15rc2-3.3",
        "15rc2-3.3-alpine",
        "15rc2-master",
        "16-3.4",
        "16-3.4-alpine",
        "16-master",
        "16beta1-3.3.3-alpine",
        "16beta1-master",
        "16beta2-3.3",
        "16beta2-3.3-alpine",
        "16beta2-3.3.3-alpine",
        "16beta2-3.4.0beta2-alpine",
        "16beta2-3.4.0rc1-alpine",
        "16beta2-master",
        "16beta3-3.3",
        "16beta3-3.3-alpine",
        "16beta3-3.4",
        "16beta3-3.4-alpine",
        "16beta3-3.4.0rc2-alpine",
        "16beta3-master",
        "16rc1-3.4",
        "16rc1-3.4-alpine",
        "16rc1-master",
        "9.5-2.5",
        "9.5-2.5-alpine",
        "9.5-3.0",
        "9.5-3.0-alpine",
        "9.6-2.5",
        "9.6-2.5-alpine",
        "9.6-3.0",
        "9.6-3.0-alpine",
        "9.6-3.1",
        "9.6-3.1-alpine",
        "9.6-3.2",
        "9.6-3.2-alpine",
        "latest"
    ],
    "configs": {
        "10-2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.21-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6c65fc1df38fd86f776aec348ff786a6b04eb0f1a38b264013a395a6ce711619",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.21-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6c65fc1df38fd86f776aec348ff786a6b04eb0f1a38b264013a395a6ce711619",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:11:55.001053297Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-06-23T00:22:20.694615198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cfad5912b6dd7590713979e5a5e231b1b6873200fde725cb7baf75110d7fa138 in / "
                },
                {
                    "created": "2022-06-23T00:22:20.980163745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:10.261378286Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T14:29:10.873123983Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-06-23T14:29:10.974344537Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:22.136955828Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-06-23T14:29:27.393435245Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-06-23T14:29:27.541874932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:31.266691597Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T14:29:31.819796449Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-06-23T14:29:34.961262582Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-06-23T14:30:24.050754604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:24.1535895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:24.251080392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.21-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:37.383127583Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-23T14:30:38.288644988Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-23T14:30:38.877900879Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-23T14:30:38.979067448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:39.572304138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-23T14:30:39.669880602Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:39.7838343Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-23T14:30:40.359529045Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-06-23T14:30:40.461272255Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:40.561814229Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:40.662111953Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:30:40.766726218Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:31.853966396Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:32.452953346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=2.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.432973009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:52.122106181Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:11:53.239620851Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:54.000649349Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:11:55.001053297Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:992f38e1a81cbdf2903fab2603f6076f3bef54262b4b2aa5b196515bac953688",
                    "sha256:70dcf9a095abff19a80c4eff9420b4a344ccbb4bde422baa9e36e2d2a841fff5",
                    "sha256:3c8356d23bf4a3ba5a54716321a934080df21c238a8915e30100d35e3029d5ad",
                    "sha256:733f067f85a791fe956f6fab6816a814c27fcd70f7b16fed2691bf66c2cfa98f",
                    "sha256:0a384dd1ad4a7805627049b2b936bec01f91f34d8b7ca71c6f0c26497b77f2ee",
                    "sha256:aed0e4d571b4c5fbc2f9247735cb3f9ecb3fa3f9c9ac67acd9541d996b1db112",
                    "sha256:9649d591bc9eef00eeb23a763ae0a58d1ebb3b60a6d9aafbe44d5cac08cdca8b",
                    "sha256:8bd9c466cd1ff1284d2f6600e82fdd4e9db287c0242b3911a279983089506cf0",
                    "sha256:f35dc65502ca9c9df6f19b15b65d3da2c9362f72af8eaa2d3a791b81917f327d",
                    "sha256:5323d1bd9d94dd661917418613ea03250315e6b01a45cf852d278a16018ff668",
                    "sha256:3467af4253ffd186c82570f1f964031d4f9191f08e22f9cb26ffd0490ad6a2f4",
                    "sha256:20261cfdd14eb762a33afe3bbefae372d348244c4e3f60793ebd9caaaef2d378",
                    "sha256:9e3d08ff74586f1d4cb8869ca60542640258b13400476315d851a0d492fcbf79",
                    "sha256:53467e259f4ecd549523757cfb3846f32e15fddf8d0470f6fca82a391e378e1d",
                    "sha256:2e76b7b68f1d51a41f82c866f3848ab72d6e339d9d32903bef1207e97394d88d",
                    "sha256:c464cf3c0edae5790e373cdc925fd4e3c8e235e318b7d1f5752fac49298500c5",
                    "sha256:c34c686185d3d185fe1e7b20c5e2a56d508196818050acd3610c469d70f80f36"
                ]
            }
        },
        "10-2.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.22",
                    "PG_SHA256=955977555c69df1a64f44b81d4a1987eb74abbd1870579f5ad9d946133dd8e4d",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:2acdf2a396a7c0e8252a1ac37a0b50feeb02454fcc966883ed32c76950795b4b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.22",
                    "PG_SHA256=955977555c69df1a64f44b81d4a1987eb74abbd1870579f5ad9d946133dd8e4d",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:2acdf2a396a7c0e8252a1ac37a0b50feeb02454fcc966883ed32c76950795b4b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:58.00055311Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:27:27.017543256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:59:36.449429126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.22",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:59:36.553935311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=955977555c69df1a64f44b81d4a1987eb74abbd1870579f5ad9d946133dd8e4d",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:53.275804972Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T01:01:54.140919006Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T01:01:54.778538315Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T01:01:54.88217959Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:55.4471906Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T01:01:55.557361678Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:55.681338901Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T01:01:56.274130159Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-08-12T01:01:56.384447931Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:56.501094864Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:56.619325037Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T01:01:56.731047204Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:25.716804179Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:26.251782557Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:27.259822862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:56.399628203Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:57.000790583Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:58.00055311Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:47fe4335f46cefd6017aae3d4f9040dd37a46d24214049c2b1cf4bd50d796c45",
                    "sha256:4a21350767887d74d45a35945efac579d41a5a09262536c531036615ac700689",
                    "sha256:a8347b98f3ec6e4a3e03a683d72fc3e0f549299b0b982d45955c2b5d13394203",
                    "sha256:0038a972f03531e87e8d33cb42ffd2ff67d283902d1e1f985331aac3d0cb9123",
                    "sha256:eed0c6979f5a7b116c5642325e285d29520af1a041ec1777a02a09c64809b0fe",
                    "sha256:04e111d539fde07d70d1b48e966b7568506139107ed4173916d1f26589c0acd8",
                    "sha256:9477561db12b570635b37cd926c2117343ad7664ed5a2b1ac840e940b28675de",
                    "sha256:4ff076f7cde9b788f64633f571a333152454ccb7daecbd1027cb8ce701878c77",
                    "sha256:ba493311822066dbac7797804199c2c30e421c4f078eada7b816b1fe1e281b5f"
                ]
            }
        },
        "10-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.15-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6de0fe1ff5f0e246c9e72b84ca0a6e32a35b9d4eaf3f65ca3f8481fc36e2d0a8",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.15-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6de0fe1ff5f0e246c9e72b84ca0a6e32a35b9d4eaf3f65ca3f8481fc36e2d0a8",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:30:16.000104508Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:08:58.665097692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f03e68a10b84e2342cfffbb8cdec1117c7f5e5d0dd004072e84efb62cfdf157c in / "
                },
                {
                    "created": "2020-12-11T02:08:58.90376076Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:11.636441237Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-12-11T12:41:14.235869886Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:41:14.675204645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:32.822588877Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2020-12-11T12:41:44.850741438Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2020-12-11T12:41:45.267480819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:52.04588059Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T12:41:53.843860432Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:41:58.15598735Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2020-12-11T12:51:26.059676923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:26.25636671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.15-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:42.351398407Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2020-12-11T12:51:43.496346555Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:51:44.50719573Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:51:44.699268455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:44.91126441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:45.923625586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:51:46.119395561Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:46.342006855Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:319b7406843f62370047c33da3dd702120d7eec161b31772aa6de0f02a6b3a94 in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:51:47.30918812Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:51:47.521479058Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:47.727200547Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:47.927280494Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:48.114765301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:54.799201134Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:55.343654669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:56.343516803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:11.053684776Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-14T05:30:13.864686811Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:15.000239827Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:30:16.000104508Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e4b1e8d0745b9e73ccd05f1654c2dcd7806a841d65e083c32cc09259aad57da3",
                    "sha256:6c569577db3b7329fd82e1526bab1854332f4df87c31c9212c925089aa59a522",
                    "sha256:553f2cbe02586e8046945fcb13da0686e27965ac45ce916ddabb18e853f19849",
                    "sha256:4dd02ba6a63a4a6ffdbb795281a9794537e8474dc70b39ccb6417f1c301534f4",
                    "sha256:4e591cd03a46c5de80680a61c394d90907dcea48cb78ed7322e1fe94da561ff8",
                    "sha256:e6a92d9eb0d54fad9a95658f08a6c8b9cdd048e606c7dbe24dbfd1cccb09c5fe",
                    "sha256:ca29f245a26cb7fa0e4bc1622864678c30e9e883c84b9f0b608fa73e52da9f3a",
                    "sha256:d36fc57f486d2a7b523cacd9267bbf36e6d5b60e05dde656283b1042b4591050",
                    "sha256:dff793ee5a2f287ce31d0c2284642f8b15fed5f181a50b72998c1353be82a47a",
                    "sha256:fb6c69dcb130411f0aa79ed71d914a9c7d2245996309412c3c3e6b5faad28519",
                    "sha256:127d3b349ef3be7249c9db1f73b6bd2a95dd52bda6449ff0462f86c5ff074408",
                    "sha256:525b5c303c09c335d944913d6f83a970bd1e580ab910264ab9f156b6db7da22a",
                    "sha256:5a46dc0a8972d9ee4a43fc774785f360f1c790800b123212e2045ffe2ce241dc",
                    "sha256:0e46a802a59e6b8c72fd92305d9f2ec88b023727589f26bc2454291ba3aa049a",
                    "sha256:59bef746a8d22b39d111d0b47730d669a06fe435e45f06e44f3c94129157f2c7",
                    "sha256:9493e1c523b51634e0159c625c0668afaaba325f21b40343ee75e20e690abedf",
                    "sha256:3775f7d070953bf214d30a86fa4dbe05f043dda1333c610cdb07387311652915"
                ]
            }
        },
        "10-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.15",
                    "PG_SHA256=5956bce0becffa77883c41594c95a23110b94f10cd66a1157e373c3575921f7e",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:5c85bf6f35cfdc34c0a9eb2f8e8ab3e014ce49b421410889d4b9e4dd68868191",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.15",
                    "PG_SHA256=5956bce0becffa77883c41594c95a23110b94f10cd66a1157e373c3575921f7e",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:5c85bf6f35cfdc34c0a9eb2f8e8ab3e014ce49b421410889d4b9e4dd68868191",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:32:34.000211007Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:04:06.980443025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:62a1e09319acb6d1bad91ef1c35aabdc7e5e19883a77f30f1951ccfffc812124 in / "
                },
                {
                    "created": "2020-12-11T02:04:07.192210007Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:09.894568878Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:24:10.104964068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.111577426Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:51:55.438659068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:55.627454425Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:55.822724412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=5956bce0becffa77883c41594c95a23110b94f10cd66a1157e373c3575921f7e",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:56:55.576276338Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2020-12-11T12:56:57.361313583Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:56:58.980114967Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:56:59.167710874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:00.7253174Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:57:01.100490973Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:01.661397902Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f542efd076b9b67ef64928f3c0185ed50bfcbbc3572436a7222e879810d747f in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:57:03.266227281Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:57:03.479263322Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:03.692240339Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:03.881576929Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:04.120832291Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:50.96118016Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:51.165568389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:52.152479198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:32:30.311512574Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2020-12-14T05:32:33.000254598Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:32:34.000211007Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4666769fca7a1db532e3de298ca87f7e3124f74d17e1937d1127cb17058fead",
                    "sha256:1e310653cfc3f26b3c374e50fe863ee1cc0a17bfe193249f5d36900416ad37d8",
                    "sha256:b5549f846d72ff2790fda1cd91932940e8c76d176cd5d29cc0ee5416f2868d83",
                    "sha256:b1b8380fe0207ad5d39420b3007798e58310625fbb50743ff0f2533233dd49f0",
                    "sha256:a3ad11dc87ce4e4ee13fb7e00c2c5f8ac25d37dbc6cdcb985301cbc693c8528d",
                    "sha256:ebd61549da4fdf5584a5b9bde134ffc28ac971dc9ec4c0b53a8b9f5cccfd2826",
                    "sha256:1bae4e89574f0328a81cf5bb3e5537589e71672b11714e291d0d87974525cba0",
                    "sha256:590e9a782d098d568b108d1e9c48b414f0bbbd08c1c1b68653acbc1d657ae17d",
                    "sha256:36be387264adbd1e5d89c6c98afd1db62a4685a22fdd33c51f32f227a584331f",
                    "sha256:7e9d39f3968e9c1af72db70fa2aa082a1790dc0316fec11b429b8686ee386aaa",
                    "sha256:b51826deaea05354c6552d1030f3c4628c70082da69ec1d36b832c29d4766be1",
                    "sha256:ef84141684c1c2e230be1021a25cf8efc55daacb5b3800d63f973f0cbac94c56"
                ]
            }
        },
        "10-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.19-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:f4a0adef0bf21aec5a5a3ab72d44d234950fe40d4bd8aa6e4039ce2e432c5419",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.19-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:f4a0adef0bf21aec5a5a3ab72d44d234950fe40d4bd8aa6e4039ce2e432c5419",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:09.000901807Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:29:46.115048237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:29:46.332416962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:29:46.564879355Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.19-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:01.876388462Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:30:03.071959754Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:30:03.985240161Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:30:04.227956975Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:05.124284565Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:30:05.368683062Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:05.628828335Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6e4de9271291e4bdd4a40b73fffe4d6d1aeff033460f5b14d74e948686daa095 in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:30:06.513926825Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-12-02T23:30:06.764358818Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:06.967929416Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:07.168442002Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:07.37631318Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:49.707584771Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:50.369631841Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:51.374543721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:06.371003511Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:07.188485666Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:08.000247612Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:09.000901807Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:e38aee4d560151561b63edd1ed2edce6a86d2d6043c8a1c587c8a3e10c0d0755",
                    "sha256:ade9838aadfcbd8104c5bf7603a2dc02f08ef99958a6520c3167f4fc190bfe33",
                    "sha256:93dd38f7743a133d6f894863d2142146e37fd43ec9fce1a28be5198566f19d43",
                    "sha256:1324af96034258c1da21cdae052a878d37073944d8c37a58c1a886dacf7e86cd",
                    "sha256:7c722c6f58e401baae31d84eb29d67eb651f9ead27f8dc4e509b648ee766e96f",
                    "sha256:1d7d25a82b90014e276bae791e4a4771448835e86b218152886a209e68022424",
                    "sha256:491412a3591b98d58465e80af7645b29d518652832f9d8ca98f848ed4ff6b8c7",
                    "sha256:048ee1dca9158f01df17063639eed8351f79dd46c849b9f7dea4bff32477889e",
                    "sha256:4ee1a65454b95513827f4db67874c6592e7bf0baf80166381422fc64718dff66"
                ]
            }
        },
        "10-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.19",
                    "PG_SHA256=6eb830b428b60e84ae87e20436bce679c4d9d0202be7aec0e41b0c67d9134239",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:093d365683637b81ae53d7f56a048d2162688b50c0247285d8d15c5d21033adc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.19",
                    "PG_SHA256=6eb830b428b60e84ae87e20436bce679c4d9d0202be7aec0e41b0c67d9134239",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:093d365683637b81ae53d7f56a048d2162688b50c0247285d8d15c5d21033adc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:30:28.001090662Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:33:18.215650644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:33:18.415790402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.19",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:33:18.605775516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=6eb830b428b60e84ae87e20436bce679c4d9d0202be7aec0e41b0c67d9134239",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:19.673390232Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:46:20.746499557Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:46:21.604106439Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:46:21.787177817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:22.768385184Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:46:22.974866602Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:23.208860867Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb2d643a5007a2573ce85b55b80b2ddaa7af3a038cba459ffbf2e367376ca53 in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:46:24.023197961Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-11-16T01:46:24.234908963Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:24.430766629Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:24.639397875Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:46:24.830915418Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:49.43257596Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:50.213326968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:51.198012544Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:52.21944447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:30:25.881910037Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:30:27.00039809Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:30:28.001090662Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:0650410308faa2c7deff0e4e0b2b0506192f473fc7130a172a9fe7f594c6520f",
                    "sha256:e89134ff4a5b195625ea8c7a7df3ed026f97c257a9063738ceb123c660ed8d91",
                    "sha256:a305164819832eb15141e4951628561d7113aa62941c3fa80330798158ce1ae8",
                    "sha256:c82caaa477b73d9bc3412f4b4eaa76e25cbaf6620abe019038e4374448f2b81e",
                    "sha256:8f165e3341372cce0ee4fd578b4681e615eb8ef3e61233fc02e4b9899d834f3b",
                    "sha256:61159be02373c1e1282af3a2bd0166cf1beda118a505db474c7304721ea2105c",
                    "sha256:de87f2ad09b998aacb2c07ee45b93e1bc7d0c2604df4583887bd00a7584c1317",
                    "sha256:a696f0dcfddb6e801197365ab44fb97d4f87b7484a34314ecbf30c77285c0502",
                    "sha256:a30a8f91d4f0ab4acd909c6ef4e0afcea3b30a4a92fded434fc878bdc5c8153b"
                ]
            }
        },
        "10-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.23-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:c3be799e72851646cf316ba818cac07a93f170e689ea298fe38b820bdf1dc7fb",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.23-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:c3be799e72851646cf316ba818cac07a93f170e689ea298fe38b820bdf1dc7fb",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-12-05T05:24:42.00095889Z",
            "docker_version": "20.10.21+azure-1",
            "history": [
                {
                    "created": "2022-10-25T01:43:53.171278246Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8644a8156a07a656a35c41e2b2a458befb660309f8592e3efd5b43d46156cec2 in / "
                },
                {
                    "created": "2022-10-25T01:43:53.514250664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T13:23:27.74201601Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-25T13:23:28.398427778Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-10-25T13:23:28.500641929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T13:23:37.528020847Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-10-25T13:23:45.117763356Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-10-25T13:23:45.30112618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T13:23:49.337772024Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T13:23:49.981235287Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-10-25T13:23:51.10530117Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-10-25T13:26:27.530896815Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T13:26:27.631055663Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/10/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:17.809776725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.23-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:31.77094785Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-11-10T23:11:32.850120961Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-11-10T23:11:33.40231587Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-11-10T23:11:33.507982452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:34.089085965Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-11-10T23:11:34.201132702Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:34.31997206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-11-10T23:11:34.911362154Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-11-10T23:11:35.0204772Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:35.125652159Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:35.231246564Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-10T23:11:35.338534426Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:18.713179601Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:19.428848691Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:20.430744716Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:38.988803624Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-05T05:24:39.940681058Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:41.000989352Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-12-05T05:24:42.00095889Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a12586ed027fafddcddcc63b31671f406c25e43342479fc92a330e7e30d65f2e",
                    "sha256:e1a930a711c4174b1aab55dabffac5ec6aa1a56af884ba4b63a3f91d3a9cc759",
                    "sha256:c7355294a3c32504739c688f1ed18aa099033508927c5594211b6427698e71f9",
                    "sha256:e0d2bd2355aca78c3e8025d10b4558bb8ae8c0366244ad9be6ed0dbcf288e2ab",
                    "sha256:c0f17a6a224dbb6f0af304676f30c29aeb7815546494c04d57c79faff1996990",
                    "sha256:20eaa932cf88cac8355504a41cdb677b65fe2ca1fda86d51a99b45905713f6ca",
                    "sha256:466e4e8c2b3ea554fe5dbfff4b66eb2703d581a2e09b50cd294a6f4b6e3b03f9",
                    "sha256:4f9460380916cd7d5b96ae0e1eaac650f56c8abc2978f8f5ded88d22999a40f8",
                    "sha256:51f99fee02ac426d31988d5547b64e365a63024f415407c41aafe21f99c12f1f",
                    "sha256:e1d52dce8a6c7c15e4cc28abee6d16eb58aa68fc39689edf16738b1ce6aef515",
                    "sha256:8e811ae9a63547dee75c3e231f16dd0ff13e03dbce528c3f0ace5c8e9e24b10b",
                    "sha256:07b75328e466843f222891fc1e864cebd947b0c2eab26491318aa6106ffdcfd5",
                    "sha256:88c13d533baa795a61d114e3dabcb2d5b9a71aa5356f9ecc1f092d5c1c72f4cc",
                    "sha256:a511805d71787ee6c851d6af2682a87dade077f141272ca986713b371ec7e440",
                    "sha256:afe963292ac7ed9c1d86e46a4e14b373ee45fe0ca4dd5795a79ce15f43e2c913",
                    "sha256:31840a45f4c0191f046bd3313a30d994f14b801e0cad3395f5deeef1f9c41dd7",
                    "sha256:015875a49ba0f3f6d3576b294a95c45b98009b92ec281d9dcf27e6ddba4779b4"
                ]
            }
        },
        "10-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.23",
                    "PG_SHA256=94a4b2528372458e5662c18d406629266667c437198160a18cdfd2c4a4d6eee9",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:82009b0a6f4b7c62abf2e30591a546d6ab00b05c7c268ca8174b715dce2cc132",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=10",
                    "PG_VERSION=10.23",
                    "PG_SHA256=94a4b2528372458e5662c18d406629266667c437198160a18cdfd2c4a4d6eee9",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:82009b0a6f4b7c62abf2e30591a546d6ab00b05c7c268ca8174b715dce2cc132",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-12-05T05:27:03.000944007Z",
            "docker_version": "20.10.21+azure-1",
            "history": [
                {
                    "created": "2022-11-12T04:19:23.05154209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ceeb6e8632fafc657116cbf3afbd522185a16963230b57881073dad22eb0e1a3 in / "
                },
                {
                    "created": "2022-11-12T04:19:23.199716539Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:38:15.196315658Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-11-12T09:38:15.299409546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:38:15.887628357Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-11-12T09:54:51.850670112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=10",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:54:51.948087878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=10.23",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:54:52.051221656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=94a4b2528372458e5662c18d406629266667c437198160a18cdfd2c4a4d6eee9",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:04.205327584Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-11-12T09:57:04.976639192Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-11-12T09:57:05.516691861Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-11-12T09:57:05.614249257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:06.186784335Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-11-12T09:57:06.284556532Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:06.398534998Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-11-12T09:57:06.974157866Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-11-12T09:57:07.072874603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:07.175546443Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:07.278091847Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-12T09:57:07.382959191Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:12.839393253Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:13.170638085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:24:14.172459784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T05:27:01.039134814Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-12-05T05:27:02.000291509Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-12-05T05:27:03.000944007Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e5e13b0c77cbb769548077189c3da2f0a764ceca06af49d8d558e759f5c232bd",
                    "sha256:518c5585ea05222202ee17fb549e7720f2267e338d0ac231868e2f2c8bf9befc",
                    "sha256:9f1634b92cb976694923149680039cb067fd5ceb8245085d90fe7362591927d7",
                    "sha256:857938c618d303139d00a55b94ff14796413f1c60e7b64b239dc91ee6cc0f785",
                    "sha256:908adc1ade68e23ac817058b2106f92746b6e828bbe07ece89e756e1e1383590",
                    "sha256:00db5df0c2e942c6154eda43d3c1aed5df8274f543c0597da8dfb70097202622",
                    "sha256:960dec6fc90782f7ad84a71ad756ba89e8971aac6a563904830235ccf7caaf8b",
                    "sha256:fc4887d630299e25b78b43ba52791721a662772e3d08fa820b23040c940c27cc",
                    "sha256:ed4a9f052356b546efa3288cc66525da28e5af201fcc09acdc1b93615a6baf0c",
                    "sha256:8a21643cc389903eb8d0a0f0642821f1baaac9133b7ef035566dcc85f4dba8c3",
                    "sha256:e4d226fb90caabd879b36829e2096c0f4ad74dee4a1dc9c89431b7855067b560",
                    "sha256:b0678d17a9b5d11831998bd72ade2cd8679376609d4dad5b4a126db827cc66d8"
                ]
            }
        },
        "11-2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.16-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:dac1b30760650e9e65849af19bbbcc025216c5077c30603b250d271ec3576de7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.16-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:dac1b30760650e9e65849af19bbbcc025216c5077c30603b250d271ec3576de7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:11:50.000303885Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-06-23T00:22:20.694615198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cfad5912b6dd7590713979e5a5e231b1b6873200fde725cb7baf75110d7fa138 in / "
                },
                {
                    "created": "2022-06-23T00:22:20.980163745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:10.261378286Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T14:29:10.873123983Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-06-23T14:29:10.974344537Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:22.136955828Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-06-23T14:29:27.393435245Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-06-23T14:29:27.541874932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:31.266691597Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T14:29:31.819796449Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-06-23T14:29:34.961262582Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-06-23T14:29:35.05930137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:35.157413796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:35.262359441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.16-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:56.302901439Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends clang-6.0; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-23T14:29:57.374330035Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-23T14:29:57.991162429Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-23T14:29:58.090787292Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:58.660729733Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-23T14:29:58.759289441Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:58.873579161Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-23T14:29:58.96745627Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:59.068227494Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:59.175412044Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:29:59.278822134Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:28.642064721Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:29.393849302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=2.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:30.396361946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:46.871586964Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:11:47.798073451Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:49.000968955Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:11:50.000303885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:992f38e1a81cbdf2903fab2603f6076f3bef54262b4b2aa5b196515bac953688",
                    "sha256:70dcf9a095abff19a80c4eff9420b4a344ccbb4bde422baa9e36e2d2a841fff5",
                    "sha256:3c8356d23bf4a3ba5a54716321a934080df21c238a8915e30100d35e3029d5ad",
                    "sha256:733f067f85a791fe956f6fab6816a814c27fcd70f7b16fed2691bf66c2cfa98f",
                    "sha256:0a384dd1ad4a7805627049b2b936bec01f91f34d8b7ca71c6f0c26497b77f2ee",
                    "sha256:aed0e4d571b4c5fbc2f9247735cb3f9ecb3fa3f9c9ac67acd9541d996b1db112",
                    "sha256:9649d591bc9eef00eeb23a763ae0a58d1ebb3b60a6d9aafbe44d5cac08cdca8b",
                    "sha256:8bd9c466cd1ff1284d2f6600e82fdd4e9db287c0242b3911a279983089506cf0",
                    "sha256:f89029385a6b7bfb132da713e422583916038f041119580e2309f4d7657b09b5",
                    "sha256:f8a76936c05155cd4b92e35956e013db4602ea4d090b7176b1f39927f59f4bc9",
                    "sha256:0e3dd93f30d920dada431892ba8a645c88286581979f252bcf4828b61bb1f5ae",
                    "sha256:8127b99412129c24bc9c53bcd56f3169fce9cd627c510412692e6c4706cfe20e",
                    "sha256:ac22679658630fef2253531104adcdec3aaf4128cae9452face2d6db91a47ce3",
                    "sha256:3b7f9466e7ceb5c799418ca5d6d8791d224d5ac546858f67394265690f7b135c",
                    "sha256:60dba2af3ac8290cdb0c3ead1b1f046bc8a76901235588396f18ba4bb03d0b02",
                    "sha256:10c134958e1ec55209e71833953932662922266749b3316b0790a997b18b8e98"
                ]
            }
        },
        "11-2.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17",
                    "PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:721296c9f44b10d1b3087a9733896fb38e0688a795db970af8c27e14a11b05b0",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17",
                    "PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:721296c9f44b10d1b3087a9733896fb38e0688a795db970af8c27e14a11b05b0",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:50.000190175Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:24:17.076383067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:49.803980582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.17",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:49.904591306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:54.058080731Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:58:55.198852536Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:58:55.800238355Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:58:55.904290308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.508555611Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:58:56.620240325Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.752120749Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:58:56.854611169Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.974868792Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:57.084104412Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:57.190609601Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:32.844579385Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.253536958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:34.246430992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:47.89407755Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:49.000567895Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:50.000190175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:f21e1b46500f1a69833db51cbc6a6f00ff7bb32a3af23905122bb85c000aa322",
                    "sha256:806526fa79e37547a2c9bff52f6e6c4ce05881b97fb100a95c2a91024dee6e81",
                    "sha256:b3cca896edb0b88116760257581014551c426d00faf45c67d459acc51fbc1151",
                    "sha256:2251027214a6be29b12a3fde4442da0fba9ca8bdaac034e79e4b9bf728cc3fb8",
                    "sha256:1fdec30a498937791a8429edb0d3b5c6405fe8d8a953305e80796e5e73ca6bd4",
                    "sha256:b21ec381456e9934ba07cb1de707c41f753d5398784811b1d817caf66aef4b1d",
                    "sha256:f6ade765252ff199de911071e71f0baedab2a95d2c84d4af696babe7b97583eb",
                    "sha256:65d9c4229cc13077e7a1abcb04f0ae51686a6fe848b64f09917f9148ebe410e3"
                ]
            }
        },
        "11-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.10-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:1eeb63e9437f6a4b70bcac90084ebc46f7b59471051537319fc89520faa3a6dc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.10-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:1eeb63e9437f6a4b70bcac90084ebc46f7b59471051537319fc89520faa3a6dc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:30:18.0002853Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:08:58.665097692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f03e68a10b84e2342cfffbb8cdec1117c7f5e5d0dd004072e84efb62cfdf157c in / "
                },
                {
                    "created": "2020-12-11T02:08:58.90376076Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:11.636441237Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-12-11T12:41:14.235869886Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:41:14.675204645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:32.822588877Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2020-12-11T12:41:44.850741438Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2020-12-11T12:41:45.267480819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:52.04588059Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T12:41:53.843860432Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:41:58.15598735Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2020-12-11T12:41:58.456981792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:58.843685708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.10-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:31.117599604Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2020-12-11T12:42:32.449505914Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:42:33.656179802Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:42:33.884495367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:34.096444275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:35.075145285Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:42:35.2516364Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:35.504294461Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:319b7406843f62370047c33da3dd702120d7eec161b31772aa6de0f02a6b3a94 in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:42:36.564344827Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:42:36.759918266Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:36.975590649Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:37.171619907Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:37.364724415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:57.130133133Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:57.509009029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:58.374802475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:13.209919385Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-14T05:30:16.176485288Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:17.000227685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:30:18.0002853Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e4b1e8d0745b9e73ccd05f1654c2dcd7806a841d65e083c32cc09259aad57da3",
                    "sha256:6c569577db3b7329fd82e1526bab1854332f4df87c31c9212c925089aa59a522",
                    "sha256:553f2cbe02586e8046945fcb13da0686e27965ac45ce916ddabb18e853f19849",
                    "sha256:4dd02ba6a63a4a6ffdbb795281a9794537e8474dc70b39ccb6417f1c301534f4",
                    "sha256:4e591cd03a46c5de80680a61c394d90907dcea48cb78ed7322e1fe94da561ff8",
                    "sha256:e6a92d9eb0d54fad9a95658f08a6c8b9cdd048e606c7dbe24dbfd1cccb09c5fe",
                    "sha256:ca29f245a26cb7fa0e4bc1622864678c30e9e883c84b9f0b608fa73e52da9f3a",
                    "sha256:d36fc57f486d2a7b523cacd9267bbf36e6d5b60e05dde656283b1042b4591050",
                    "sha256:3108b049d35f336deeabd4da912cb5aeee8b312d5793db7229e8f9a59ce4a3c8",
                    "sha256:e941626ea225f47d34610de69e29ced7d45f3b134d5531dce3970868e1980bad",
                    "sha256:07a0bf0ea42502621173806e3f7b0e162675cda4542124ef33592c22094e68d9",
                    "sha256:3884baded9c8754b16cf2b0e9f0ded839de662740def534e45b917ab8e82c071",
                    "sha256:ad5e1ca8545c8632a4ac536afc1537917fe9ef4b216d9ef270c7b97721170a5e",
                    "sha256:af53a0e3cb2e7bcb01a458af5ca5ffcea6bf8fd34592e83f8b444f1fe3395e90",
                    "sha256:1a73c2a050c0e1fdd26fc3228eb3f214ed5bef15e37560c5c71bfc1e4b5cb3ab",
                    "sha256:c606cb40cb91213e0eecac35fca3db717b951a0eba0482a17b94df30605f906c",
                    "sha256:df026a65019e6719771fab9b6039b5b6417cf05c649c525cefbe78fc224ad7a0"
                ]
            }
        },
        "11-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.10",
                    "PG_SHA256=13e6d2f80662fe463bc7718cdf0de6a9ec67fc78afcc7a3ae66b9ea19bb97899",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:c5fb69437e37d9b4c17235ae4c3555eaed71ae8911ec4994f961f0a72ba7d57b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.10",
                    "PG_SHA256=13e6d2f80662fe463bc7718cdf0de6a9ec67fc78afcc7a3ae66b9ea19bb97899",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:c5fb69437e37d9b4c17235ae4c3555eaed71ae8911ec4994f961f0a72ba7d57b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:32:51.000363246Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:04:06.980443025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:62a1e09319acb6d1bad91ef1c35aabdc7e5e19883a77f30f1951ccfffc812124 in / "
                },
                {
                    "created": "2020-12-11T02:04:07.192210007Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:09.894568878Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:24:10.104964068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.111577426Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:42:47.987591117Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:48.311447938Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:42:48.672977702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=13e6d2f80662fe463bc7718cdf0de6a9ec67fc78afcc7a3ae66b9ea19bb97899",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:07.4383277Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm10-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2020-12-11T12:51:08.555600132Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:51:09.531145773Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:51:09.738259155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:10.776255678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:51:10.961427744Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:11.20371914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f542efd076b9b67ef64928f3c0185ed50bfcbbc3572436a7222e879810d747f in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:51:12.239530228Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:51:12.447568308Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:12.639483838Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:12.815997652Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:51:13.016700797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:53.347145211Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:54.199219918Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:55.193245767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:32:47.806808378Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2020-12-14T05:32:50.000103488Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:32:51.000363246Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4666769fca7a1db532e3de298ca87f7e3124f74d17e1937d1127cb17058fead",
                    "sha256:1e310653cfc3f26b3c374e50fe863ee1cc0a17bfe193249f5d36900416ad37d8",
                    "sha256:b5549f846d72ff2790fda1cd91932940e8c76d176cd5d29cc0ee5416f2868d83",
                    "sha256:7209a803e99af3044d200c7be2fd003aaaa0f014aebc9ae865173bb21548a8fe",
                    "sha256:c73899576aba68d8fc6487fa10c3439f484f763978c10cb8ac7f7ee79faf02ec",
                    "sha256:5cbdab36e9bd3f3c2a2456671f384986a36111019ec299a9ff38f28ca79a3251",
                    "sha256:12332a6f7af583d2928ee8aef65003e90d5c2514a77811fa92e6072f63455a04",
                    "sha256:4a26f3d6683e396997e9e70589ddc3e6fe0736213dbe91eee7c35c910c9fcf3c",
                    "sha256:aa56a47a7fcda7add40599400fbaca9d4eb2ece40c5d1749bee86cdedf69d768",
                    "sha256:ce2408f7c70eb72cfe89345905638bffe4114a10f0889b70268d03ba13ab3a8e",
                    "sha256:e5955c6d2c6af91fcc67e5d7926a779bf20ce3e3b30248954d2c8e6397cd9c8b",
                    "sha256:6fb7522322f130729747d72f1b1c7f54a6a09cffa235d43151826059eba664ad"
                ]
            }
        },
        "11-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.14-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:b82c5fb3977cf81381f1581f33dccffc4d429d05a0fedbc918fae6e67bfcf478",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.14-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:b82c5fb3977cf81381f1581f33dccffc4d429d05a0fedbc918fae6e67bfcf478",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:15.000214902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:26:52.080844354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:52.287764452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:52.490500444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.14-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:31.382814587Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:27:34.302619254Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:27:36.633394111Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:27:37.021674676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:38.918925028Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:27:39.328583705Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:39.945618533Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6e4de9271291e4bdd4a40b73fffe4d6d1aeff033460f5b14d74e948686daa095 in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:27:40.361012011Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:40.751284621Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:41.15624946Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:27:41.466316272Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:55.516511485Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:56.412047127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:57.4015136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:12.463828461Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:13.306351251Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:14.000761044Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:15.000214902Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:8d13fe3472b36869219392141c34112c81e7c8d31a1481f2274443bc2d81d764",
                    "sha256:7a77621be972900ade2f6734315b1b2a997d4a9c631c9b50e44b7e608246cfda",
                    "sha256:3dd80bd3959c7dc9f016d9e4367983ad6316dfbc55ebcbe97033d31664768b4d",
                    "sha256:81662227f1aa0d65ec845fbfd65f02f31c44d579bdc6d93f638c44afb1481966",
                    "sha256:5f2dc984a6917574a917002ad59eaf5c3c63469ddb857857ae8d3454ba4eb980",
                    "sha256:53a4f0b08bb60eb703664cfd7b42cbc2b9f7fbe5df45528f47b2779da99f1772",
                    "sha256:2f2b9ec167e671cbcb1377dc0c6b467ddb9eb8e21ea65671cabb0590063d4189",
                    "sha256:df1205767b99b392946e9e081b23e1e7f59a3dd6187780053c116c7943eefbe3"
                ]
            }
        },
        "11-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.14",
                    "PG_SHA256=965c7f4be96fb64f9581852c58c4f05c3812d4ad823c0f3e2bdfe777c162f999",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:dbaae8a951dcf5252d458154a935405750e0435d43334c9ecc7fa3576cfa1b2e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.14",
                    "PG_SHA256=965c7f4be96fb64f9581852c58c4f05c3812d4ad823c0f3e2bdfe777c162f999",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:dbaae8a951dcf5252d458154a935405750e0435d43334c9ecc7fa3576cfa1b2e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:31:01.001042978Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:26:06.599568894Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:26:06.928734785Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:26:07.267738998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=965c7f4be96fb64f9581852c58c4f05c3812d4ad823c0f3e2bdfe777c162f999",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:23.387077567Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:42:24.676833589Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:42:25.511273114Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:42:25.714101909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:26.609575422Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:42:26.855409784Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:27.124984582Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb2d643a5007a2573ce85b55b80b2ddaa7af3a038cba459ffbf2e367376ca53 in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:42:27.355222547Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:27.579496491Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:27.795842192Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:42:28.013686281Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:52.980510329Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:53.278830205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:54.251839979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:55.272881249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:30:59.210231582Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:31:00.000676428Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:31:01.001042978Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:b07dc6ad37d3d627ec236ac029d62eed1eef859c232ad3feacf91101ec6d1e15",
                    "sha256:1a1dec2f5d691f5d79eb399412b6a8890818515f514659c304cbb69dd485559e",
                    "sha256:8b2955bb87f0864ef74070f346c34308a7c3e6e37c896006fe94a711dd7855e8",
                    "sha256:28395c21e99bc9f792967cd099b8fa3908e8e19bd8953eeb45fcedccd480b3e0",
                    "sha256:13c508208fd36b61424502a327189b55c1d1b26cac2ae440324e0863e70b9d47",
                    "sha256:1e03cefbc275b42d325f47f5fde06712a64286f3b216e1f3c71e3bf2720f2205",
                    "sha256:9e849ed63fbfe6f8135ca7217086cc40bca1b676e7385e6b7ca557c754ed131c",
                    "sha256:3e0974997fa3f73d2e0c20ed5691c786dbf107ef5b9949ee7f8c08987592583c"
                ]
            }
        },
        "11-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:018c7a5dcb773c10a22a16428a4c8feeb3bbe4f4a1898be9c3d06bc5d3c4986e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:018c7a5dcb773c10a22a16428a4c8feeb3bbe4f4a1898be9c3d06bc5d3c4986e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:11:57.000817929Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:55:55.183128368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:55.281779498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:55.379503804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.17-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:13.209124357Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:56:14.381005085Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:56:14.929907239Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:56:15.027873169Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:15.798124479Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:56:15.902520873Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:16.023073299Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:56:16.123382855Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:16.224253019Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:16.337036235Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:56:16.439974443Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.136523553Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.571920546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:34.458767706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:53.565657668Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:11:54.555322227Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:56.000908329Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:11:57.000817929Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:c09f7f416b75d91fa5098ef8883dc219c7d3378c993bfcd49416c8a543a180c0",
                    "sha256:0683c1cf73896cc588e8cee37d4ca6f59bb62bd118de390803f7a8f042c00e57",
                    "sha256:e1a69c7b0c9fc972f666955826627d5e0ac08024e50d6eb9ba581ec9bb5ebee0",
                    "sha256:b9a67e05649688c9aba44acc9f81eacb1127f15acc98d23743e5507659c44904",
                    "sha256:3a17af0c5840988aef7213ebda34b2004b50ea27b672c606a97d712ae345c690",
                    "sha256:f8f675c91c1cdf4234691ae469653ce251ac75a43d434bbb13e3b32f0d5a5b74",
                    "sha256:a47781dec1708f1896abbdc5c421f4b1b3be393d6c597b0ee3b4209d46f4c67b",
                    "sha256:39ece243dcdef3d356c0b6032191c2ed7540dfd6ea8e45126a5aad6ecd17c294"
                ]
            }
        },
        "11-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17",
                    "PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:7e239b42fa017389cf00d3c4aa4eef788e7511b9dc46d04f230d84c1d327c577",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.17",
                    "PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:7e239b42fa017389cf00d3c4aa4eef788e7511b9dc46d04f230d84c1d327c577",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:26.000206731Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:24:17.076383067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=11",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:49.803980582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=11.17",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:49.904591306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=6e984963ae0765e61577995103a7e6594db0f0bd01528ac123e0de4a6a4cb4c4",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:54.058080731Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:58:55.198852536Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:58:55.800238355Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:58:55.904290308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.508555611Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:58:56.620240325Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.752120749Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:58:56.854611169Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:56.974868792Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:57.084104412Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:58:57.190609601Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:43.492761536Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:44.272939594Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:45.285612249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:24.191389671Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:25.000788676Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:26.000206731Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:f21e1b46500f1a69833db51cbc6a6f00ff7bb32a3af23905122bb85c000aa322",
                    "sha256:806526fa79e37547a2c9bff52f6e6c4ce05881b97fb100a95c2a91024dee6e81",
                    "sha256:b3cca896edb0b88116760257581014551c426d00faf45c67d459acc51fbc1151",
                    "sha256:2251027214a6be29b12a3fde4442da0fba9ca8bdaac034e79e4b9bf728cc3fb8",
                    "sha256:1fdec30a498937791a8429edb0d3b5c6405fe8d8a953305e80796e5e73ca6bd4",
                    "sha256:da3b2be36c7f45da2524a98860bd1f90ad2fe56598feb82c0b74e5674263b792",
                    "sha256:ada537fe896ce5836f8e35c6518ba78bf9d4d1b9513ba8ae6eb51ff0411d0bcf",
                    "sha256:264f0074caa40827439dc43e4ebec0582a803bb976ca2ca55e013d16a736dbca"
                ]
            }
        },
        "11-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.22-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 11 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-13T13:45:55.70991447Z",
            "history": [
                {
                    "created": "2023-11-21T05:21:58.159394046Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9f63d1defc55282fec6525ac2886c735dc2189e34105d7fe64c2420d6673922 in / "
                },
                {
                    "created": "2023-11-21T05:21:58.50570382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV GOSU_VERSION=1.16",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV PG_MAJOR=11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/11/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV PG_VERSION=11.22-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "COPY docker-entrypoint.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-07T22:39:53Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:45:55.423260978Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 11 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:45:55.423260978Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:45:55.423260978Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:45:55.423260978Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-13T13:45:55.687506198Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-13T13:45:55.699390163Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-13T13:45:55.70991447Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b6fd3ad4ce602924fffb84437331a255e2a9463531a1bd92a15e9e3c4d11523",
                    "sha256:6727bb64e5fcae4bafd3fae482d32986349666cbf04245b5047d97567c914384",
                    "sha256:a1a436fb846ddf3bfbb34ea98948f196fe7b814cde8470152e8992ef1442b23a",
                    "sha256:019ddf50a36778e9cee25eaad7d95990130fb1b230863625e03ea2cf35c9c385",
                    "sha256:9d548ecb91ce2ebc38117a88cb1f0d10b4fc11cd9de5f1c96f251d32683694c9",
                    "sha256:bdadfcb61fd79069773c91d7ac7a1d7f832f3e38b2e467f108085a3ef24aa1da",
                    "sha256:9fd8de66fa5e5c1005cfdd196bddf8406819f7ba596e29f4e25756a5a3db26eb",
                    "sha256:83dd49c64792649a46b7e8478a4df0b2fa658917dca740856ab0de3d7c1111ec",
                    "sha256:a17b4523d816382ed17e0bee4df13d8259cdc16cfc22da57380f0b7dcc20b884",
                    "sha256:09fc87c0608e0594a0a2233c43f95452fd692f78c2767d175be80586533a9b8d",
                    "sha256:c94c7692cc78b03843db63b2a5520ae4ee09a65793025c5c574415f9669ceda5",
                    "sha256:4154d696d2c9313def0c0a290450545657ea7a5f08b93a6ffdb19f0dd5124bc8",
                    "sha256:397652bec1811f79776056b2992a4d804af500912593af314da6827d3025816b",
                    "sha256:f50096ecf4061261b3a4d76546508ae4a154147a4f022bfc2d256661d6811489",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81d536946797833d02343f7aa88eed4e7be162ac9c500c6f6cbec567aaf9a7ef",
                    "sha256:14575a8b5057313a75ca379ead20fe0f0625001f1e4bd6222c596a8ec9111657"
                ]
            }
        },
        "11-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=11",
                    "PG_VERSION=11.22",
                    "PG_SHA256=2cb7c97d7a0d7278851bbc9c61f467b69c094c72b81740b751108e7892ebe1f0",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 11 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-02-13T13:47:55.473905575Z",
            "history": [
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc714080c3bcbbce7ac746a10d7b4355ffa36293a8d435d62cd5359ea8eb8364 in / "
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV PG_MAJOR=11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV PG_VERSION=11.22",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV PG_SHA256=2cb7c97d7a0d7278851bbc9c61f467b69c094c72b81740b751108e7892ebe1f0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \techo '{\"spdxVersion\":\"SPDX-2.3\",\"SPDXID\":\"SPDXRef-DOCUMENT\",\"name\":\"postgres-sbom\",\"packages\":[{\"name\":\"postgres\",\"versionInfo\":\"11.22\",\"SPDXID\":\"SPDXRef-Package--postgres\",\"externalRefs\":[{\"referenceCategory\":\"PACKAGE-MANAGER\",\"referenceType\":\"purl\",\"referenceLocator\":\"pkg:generic/postgres@11.22?os_name=alpine&os_version=3.18\"}],\"licenseDeclared\":\"PostgreSQL\"}]}' > /usr/local/postgres.spdx.json \t; \tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "COPY docker-entrypoint.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-30T00:11:07Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:47:55.447551824Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 11 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:47:55.447551824Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:47:55.447551824Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T13:47:55.447551824Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-13T13:47:55.462554266Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-13T13:47:55.473905575Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe9a137fd002363ac64f5af66146702432b638a83ee0c5b620c40a9e433e813",
                    "sha256:87df715435bc106d89bf1d3223210b35477b12a2916b167eecf94918a61fcd17",
                    "sha256:aebaeffac27562135e26d2d2088ae5b0a14e8b4973647f2547a5d59aa96852ef",
                    "sha256:c4bd74eb8d7fad6323c41c7a6f4d6b11f1f09c1961d6287900c6751f5f400e75",
                    "sha256:10538095193163eeade025a8502b8a2eff714de9d8a3590c6384ed6f94c91524",
                    "sha256:2873fc47058ae974d408c0a462e537d15aae68cd99aee5a9ee1c91732c296442",
                    "sha256:3acc405abaabcb8c0aa63a54951b823c12e9ea6217d3b641e4e94d0e043ee3ac",
                    "sha256:7dfc02cda749708316844602d53d22ce0e35a5f3a7fbc97ff7dd49976d97d4ee",
                    "sha256:35be2c2f3ed02fd5182b3624851f70a535dbf597762da0b5dfec9408b00638f7",
                    "sha256:3bbb88542dd933c5e92a4be400cf6fab953976a87779b7ac36611265d8869d37",
                    "sha256:1fea66b0eea0c16299d9b1d278da91755738796b5e4eb643211759e49dc3bc03"
                ]
            }
        },
        "12-2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg100+2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:f2904abfb0e2cf7da6cf443c5b8539c2dbdc0b4bf6b962abc86ee096fabd3e5f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg100+2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:f2904abfb0e2cf7da6cf443c5b8539c2dbdc0b4bf6b962abc86ee096fabd3e5f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-20T05:23:40.000210981Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:46.511313656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4ff85d9f6aa246746912db62dea02eb71750474bb29611e770516a1fcd217add in / "
                },
                {
                    "created": "2021-09-03T01:21:46.935145833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:32.504358443Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-09-03T12:54:33.621883458Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-09-03T12:54:33.912313263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:45.512002607Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-09-03T12:54:54.572897745Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-09-03T12:54:54.869850191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:00.108452536Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-03T12:55:01.285118337Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-09-03T12:55:06.712152447Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-09-03T12:56:41.371623057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:56:41.70801743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:56:42.019209442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.8-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:14.913542737Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-03T12:57:16.219620786Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-03T12:57:17.102990785Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-03T12:57:17.302410056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:18.265498772Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-03T12:57:18.514631179Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:18.788165165Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-03T12:57:19.027541324Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.251766215Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.463436044Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.690661062Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:19.991207517Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:20.373756694Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=2.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:21.366165786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5+dfsg-1.pgdg100+2",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:37.018065007Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-20T05:23:37.895043769Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:39.001035072Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-20T05:23:40.000210981Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d000633a56813933cb0ac5ee3246cf7a4c0205db6290018a169d7cb096581046",
                    "sha256:733594622444d04426ad9182ce825008a7b00c280607f058fc128866886ba1b2",
                    "sha256:c887bd51f64c95ace786af0eb0b2778146960ef5efde69eeb2286c1fc558ddf6",
                    "sha256:2d33298646f65eb55cca6653e13a1f283df63c6542816aade3fa72551397f88b",
                    "sha256:5a0f46a202ce686f1a902981bd2744871caee98916667873a48f255e94aecc71",
                    "sha256:281e98faed22a25055ba11d132c5f095edafada81671395cad2f8f1f8b525fe5",
                    "sha256:6a04aa512009783fd235719ee20cf3787bf71a9477143b6e0daebc91edbcfb06",
                    "sha256:6606c7ee11a941145a9d32a26faffe7026485c5c7f94c28fc02f0a16ac0ef3d6",
                    "sha256:b40cf33f9686df4a22fa70e563098fe3515dc3e903be2cee94a2367b024cb626",
                    "sha256:de50421e2cc0c9cfa0de7503372937568d4a7442402f7158fa87fb45e7d31374",
                    "sha256:2a4d15e7435f047a85edb38827c4e818b330f1cb213a1c4b852ce740e6122c94",
                    "sha256:1ecaa1bf49c048d7e57ea30f756e6ec7593d506540ff9927ade2987e13935add",
                    "sha256:74df9fbcad661c9800b6b3d0ab688e52b90355bd30386d109f2a0127b35f1f32",
                    "sha256:cd2d574e6876133c123bc525537f7182fda693904cf495dff84ec285eff980cc",
                    "sha256:74c67ae5589cd0b62c71504dc7a0d618257ca0f68118affea4f4543be8571773",
                    "sha256:d6822fb6e11e965d33446464ce40da4ee17617d7892c13e66f954d95701cff47"
                ]
            }
        },
        "12-2.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8",
                    "PG_SHA256=e26401e090c34ccb15ffb33a111f340833833535a7b7c5cd11cd88ab57d9c62a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:55083aecd4d2ab1fc768d98d1b5cb715d60702efcca780af87ddee90812a6c7d",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8",
                    "PG_SHA256=e26401e090c34ccb15ffb33a111f340833833535a7b7c5cd11cd88ab57d9c62a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:55083aecd4d2ab1fc768d98d1b5cb715d60702efcca780af87ddee90812a6c7d",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-20T05:35:22.000145348Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:02.103800238Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-08-27T22:48:02.294820462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:03.449366625Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-08-27T23:02:48.058827559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:02:48.250841115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:02:48.442500726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=e26401e090c34ccb15ffb33a111f340833833535a7b7c5cd11cd88ab57d9c62a",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:35.204045182Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-08-27T23:09:36.291076819Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-08-27T23:09:37.179556223Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-08-27T23:09:37.367016914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:38.234832385Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-08-27T23:09:38.415797975Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:38.627444393Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ad28506adc606e446eefc263bc99d4cb809e608d4f550956143bf13c82c91f85 in /usr/local/bin/ "
                },
                {
                    "created": "2021-08-27T23:09:38.831095052Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:39.041949111Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:39.230803634Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T23:09:39.429667912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:25.515997197Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:26.312323196Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:27.271934768Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:28.249855592Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:35:20.553799584Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-09-20T05:35:21.000927519Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-20T05:35:22.000145348Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:4b1cafa84ccb94a58e4d1f418f00d458493e1e2edae5bbd49373af62d85e9251",
                    "sha256:bd931a2c2e2040c320b73c8df4a85198e874761593e31628abadedbb4e6c0cbc",
                    "sha256:5271d4d830de496340e70f8e65140406833d93a470dc8e0eeb0c580b0cec4034",
                    "sha256:b12c849f1ca647fb16d56c1e61397cb9bfb4f90af3d61f07e1a8c979ebdba605",
                    "sha256:2d51135f11be50989771951277eacc3c294a20fc2e7b301c96dd6d2d043bcef3",
                    "sha256:c6752702f82af5c43ac0e043c98c94c184504ee513739e3d8f38358eae85d2a1",
                    "sha256:afd94d705e310d2c1a9cdc3224151243231da1bc921154784c4029150bd6060b",
                    "sha256:6a7a010cca39b89edb0719d157af7a0a513ff2dc9aa2d53cf9c4f822b1d91aa1",
                    "sha256:b7ae4fa769867dc429202cfbef150d3854253f98ad2ddaa92b53da3f78413519",
                    "sha256:78b59ea29bd33eec7a3e3f1068e630686f63bb5084797eb90db14fd3f60d1a3c"
                ]
            }
        },
        "12-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.5-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:bb6153e4eb14d90ae048d8c4d4c2e39a4b2d1bfbdb6c5df8afc1dde81533c6c6",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.5-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:bb6153e4eb14d90ae048d8c4d4c2e39a4b2d1bfbdb6c5df8afc1dde81533c6c6",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:30:42.000196883Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:06:10.265777742Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a7bff4e139bcacc5831fd70a035c130a91b5da001dd91c08b2acd635c7064e8 in / "
                },
                {
                    "created": "2020-12-11T02:06:10.555529649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:22:59.860092553Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-12-11T12:23:00.928028349Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:23:01.122818358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:10.832432243Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2020-12-11T12:23:19.79924691Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2020-12-11T12:23:19.995395114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:24.707547786Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T12:23:25.735010478Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:23:26.977348206Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2020-12-11T12:33:19.050952789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:19.250337708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.5-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:39.96052907Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian buster-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2020-12-11T12:33:41.175609295Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:33:42.192127747Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:33:42.382213095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:42.567701709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:43.571349747Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:33:43.803038788Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:44.08850443Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:319b7406843f62370047c33da3dd702120d7eec161b31772aa6de0f02a6b3a94 in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:33:45.100459492Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:33:45.314735024Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:45.507153478Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:45.684047936Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:45.873463244Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:10.401234148Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:11.422350454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:12.416957205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:36.120574497Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-14T05:30:39.632956038Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:41.000205601Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:30:42.000196883Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:87c8a1d8f54f3aa4e05569e8919397b65056aa71cdf48b7f061432c98475eee9",
                    "sha256:ebac1d64c28640d3f7dca66f2b324f06740fab2a30c8ff4c799ae2e30ab0dded",
                    "sha256:4854e38738c86c681ddcb5e96dd42bdeb8582eabe867fd29d01d3fa7dfc32724",
                    "sha256:fd43df5659e7d6329557e3f2308bf8df55ce6a853fdb9b3cb850eedfdfc7db5d",
                    "sha256:062de646b7c8b3ee95dd6426926cfe89718255e575d2dbfd25c59bd364a5ba0e",
                    "sha256:a8fc6058c6d8cf9f1b3248a61859734b77e057012c7a74723a2850784f82e5b2",
                    "sha256:20db730be8b4180abd7d17a218218e9125034cee5b4ec56c23281f2f76820c9c",
                    "sha256:57b15b12c86d3d3293852f9bd604c4cf6fbd31f95a799ce17cbfe6f5c91b332f",
                    "sha256:412ea21d1146f9f4c7a9695604d1b11aa877696c61371a42e0bd41fdd19a99af",
                    "sha256:09d3a95ac7756a37cad34826b4302f46b4fc0e4e1579ff7dd8dd5c883cd28471",
                    "sha256:631ac01245cf2a684fec7d92c5e4f79b46ae5795c54176a5f193b54c169f30fa",
                    "sha256:b6712ffe6f2f4f3be1fd8f99bfc7bea3756bdeeb041fcc9f62b47e757b9f6c53",
                    "sha256:79744100ffa932d8700b8553abc48aacfb5aac8b602173107a76ad6a31f37760",
                    "sha256:5e4c08a743fd9cbf39c3e24c0036a3ea274d191568c9b7d7945a1aad8897cbf7",
                    "sha256:884d7d84887cab448bf4c1237ad258b5472e2b3cf20a392ef4874e6e8008d141",
                    "sha256:9d5221b7a6b0e8ba821f2f8ef0930f13fe89180f2cc3c4dafbb7fe633e8de03d",
                    "sha256:eef9aa5653fc89133b47bbaaf9f2c93fc295506666c0cfffadc947453905657e"
                ]
            }
        },
        "12-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.5",
                    "PG_SHA256=bd0d25341d9578b5473c9506300022de26370879581f5fddd243a886ce79ff95",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:fb6ef849a8e94d4d8ef91ea956ef9fa8a835b157d0762840688776e879fc615e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.5",
                    "PG_SHA256=bd0d25341d9578b5473c9506300022de26370879581f5fddd243a886ce79ff95",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:fb6ef849a8e94d4d8ef91ea956ef9fa8a835b157d0762840688776e879fc615e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:33:24.000254177Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:04:06.980443025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:62a1e09319acb6d1bad91ef1c35aabdc7e5e19883a77f30f1951ccfffc812124 in / "
                },
                {
                    "created": "2020-12-11T02:04:07.192210007Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:09.894568878Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:24:10.104964068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.111577426Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:33:53.023868421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:53.203184297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:53.410957717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=bd0d25341d9578b5473c9506300022de26370879581f5fddd243a886ce79ff95",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:41.802724455Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm10-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2020-12-11T12:40:42.907576268Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:40:43.921990511Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:40:44.119701397Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:45.119649474Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:40:45.315681685Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:45.571832104Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f542efd076b9b67ef64928f3c0185ed50bfcbbc3572436a7222e879810d747f in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:40:45.76528855Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:45.95998018Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:46.163424998Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:40:46.360423121Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:00.704479985Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:01.190859456Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:02.205228482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:20.358926707Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2020-12-14T05:33:23.000210187Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:33:24.000254177Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4666769fca7a1db532e3de298ca87f7e3124f74d17e1937d1127cb17058fead",
                    "sha256:1e310653cfc3f26b3c374e50fe863ee1cc0a17bfe193249f5d36900416ad37d8",
                    "sha256:b5549f846d72ff2790fda1cd91932940e8c76d176cd5d29cc0ee5416f2868d83",
                    "sha256:fb2dcbc4a41982241486131f0ff29a364a45681b1dad053f95c085d20b929bb6",
                    "sha256:38231385943e46250027323e5037981eaa0840f816b8ec5029b82d68fa1ad979",
                    "sha256:6f020a1c1025a9ee85ff1098dcf32928f5416af75ef0a38f476371293ec97f0b",
                    "sha256:9a73814c58d793a6db6d9fcb4563bd3fe816124f1a95770b4f7ac6db89847af2",
                    "sha256:d299505e8a9fc21ce7b4cefbbe74094e4fd0f52d73745c5eeed084a4fd595e0d",
                    "sha256:fab19751e989f17697c95a852ff8d33031bceeeefdfa4d3cffb54af18d3664fe",
                    "sha256:074240287f1a9949389cd0f221954e7b0d1cebb869c3f2407cc646fc933fb887",
                    "sha256:0997f6d9a1bbf8fa13c38f49912dc7fca9e7530912e66cc6ca7fa156bae6a5aa"
                ]
            }
        },
        "12-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.9-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:b905e8172ef1db5eefa7e8440b14e99cfb11d08bf7bbe2bc6baa17d5aa1b6b4f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.9-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:b905e8172ef1db5eefa7e8440b14e99cfb11d08bf7bbe2bc6baa17d5aa1b6b4f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:13.000424402Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:26:16.237395254Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:16.481704976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:16.728404589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.9-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:38.28582472Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:26:39.759379613Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:26:40.629193893Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:26:40.848884975Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:41.833720477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:26:42.052326074Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:42.276235626Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6e4de9271291e4bdd4a40b73fffe4d6d1aeff033460f5b14d74e948686daa095 in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:26:42.471909723Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:42.675206502Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:42.879939827Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:43.086812914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:53.085086059Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:53.493963644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:54.419780276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:10.042612314Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:10.906740711Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:12.000666365Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:13.000424402Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:645cb9d5366eb0a74461acbf24eec3b5bc916f9c3d62bfaea7778dfe49b5d6a2",
                    "sha256:f699a35bbffebc84beba6a6a6524fd6fa8083234e72090765db47ae2791b4191",
                    "sha256:dec9cdd4416285394768fbc8503c598fbdee75e01fd0130d25784d6f5b019d7f",
                    "sha256:e155e491146c8577a8071db2a0a2965496adeaf0edcbe04e96c027b88b9ec9e6",
                    "sha256:c7d44edb5794c5214cdc82d33300638942c4159f0cdda1a1b159fb727bfd7fb1",
                    "sha256:2e3dbb33e49421a36be785ea8ce206b538a8b3d8e5b9996807fb5100f2a7ef73",
                    "sha256:b3f2a935c90c2a1281801412c5286b141c954a119dc89b921d1d2dc1bbc67102",
                    "sha256:519300312c4bd6077564821ea985af25c35e40886df61011849403cf7c866dce"
                ]
            }
        },
        "12-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.9",
                    "PG_SHA256=89fda2de33ed04a98548e43f3ee5f15b882be17505d631fe0dd1a540a2b56dce",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:14d1eebe107a7f1c350fd2bed3ffb349a28d8ec26f54517f6c9fcb0abed52c12",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.9",
                    "PG_SHA256=89fda2de33ed04a98548e43f3ee5f15b882be17505d631fe0dd1a540a2b56dce",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:14d1eebe107a7f1c350fd2bed3ffb349a28d8ec26f54517f6c9fcb0abed52c12",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:30:15.000693619Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:18:51.326421152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:18:51.518674091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.9",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:18:51.702301921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=89fda2de33ed04a98548e43f3ee5f15b882be17505d631fe0dd1a540a2b56dce",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:55.987267194Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:36:57.118023019Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:36:57.830693836Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:36:58.019425585Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:58.787296501Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:36:58.963956611Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:59.167349962Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb2d643a5007a2573ce85b55b80b2ddaa7af3a038cba459ffbf2e367376ca53 in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:36:59.342535721Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:59.538723646Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:59.719061144Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:36:59.923209766Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:47.914925464Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:48.225639664Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:49.220328137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:50.217260166Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:30:13.773039863Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:30:14.101023806Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:30:15.000693619Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:0d3f297134355692d088623137285614899ae1e992e8ff492d4cc9627b609a5d",
                    "sha256:28fdb8dd713a9be3d76c699d23d25d6bbeeda9c5e047a4f904e368de58e45365",
                    "sha256:0f82e7dedd9d69e9671ac15e06c98372c7052f32ba876b779d2f7fe1132844ed",
                    "sha256:b0379fa2e48506a2e281e84b1458f55c05102b2e1952082ba6ff2b2a15d04879",
                    "sha256:f3e4db314ed7118c5cad81946238df3d48339ca825437e497cc5d1fc00d23d42",
                    "sha256:132ef541139cff4d1079b90f61cca537f0cdc4ffb0ff9251f03097bd752b9a3a",
                    "sha256:fc413ae3d71fb43d9c31ef3e4ff7d1743e070314272e7bc036ecfffd04ef2201",
                    "sha256:a93876107c8f25ac02415d228c89221eb008290dfa69b9cb81de7be2d925723d"
                ]
            }
        },
        "12-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.12-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6d8ce8d5c3ce3c9bf9eca033f9dbe80808ef7063288ebc899e6c4578a2563618",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.12-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6d8ce8d5c3ce3c9bf9eca033f9dbe80808ef7063288ebc899e6c4578a2563618",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:12:02.000280784Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:55:24.87854911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:24.976142821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:25.073614364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.12-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:43.811935019Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:55:44.969513385Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:55:45.554520679Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:55:45.65327378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:46.287711479Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:55:46.38823603Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:46.513430725Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:55:46.61269087Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:46.715687776Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:46.826740612Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:46.931802636Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:35.701352771Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:36.5188142Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:37.591055856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:58.87578725Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:11:59.966202209Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:12:01.001122102Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:12:02.000280784Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:a26a031b05897756bd9d43017ab2883e3203780a52a681deb05e446931118f85",
                    "sha256:4804615e96a85470e68c651ef6382a0c54185143edb5eb0e3d438c0f69c7556e",
                    "sha256:9ae60dc41cbf317b40fd8cb3d7b9f725e4506ba80347e81466d6a7b93f71cf09",
                    "sha256:c2b6998619c064f94b65993574056d6e2e41f49dbe6fe474c833742ac082bcce",
                    "sha256:ed6dfa81207c9e1e86536d37ec29ccb92ccc1f11cd68c31d65af42fc80d46fe0",
                    "sha256:9768e3d5bb5330362fc25240f2f5ed1c75a76b598536a0fb67a2e0aacd2f599e",
                    "sha256:3ed3681d7d9b6f6069d8a0ff45e8b5da0225a394d36b305723217ffb8830152c",
                    "sha256:1f98a876caa6fcfda8242dc21a9bfafd06680bceeebec6651ff33ab0e45ef9bf"
                ]
            }
        },
        "12-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.12",
                    "PG_SHA256=34b3f1c69408e22068c0c71b1827691f1c89153b0ad576c1a44f8920a858039c",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:fd5baf80d8cb66edcec0f3e4fe45d8f8f9e2cd77267741b1af6ad899c4cc73d7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.12",
                    "PG_SHA256=34b3f1c69408e22068c0c71b1827691f1c89153b0ad576c1a44f8920a858039c",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:fd5baf80d8cb66edcec0f3e4fe45d8f8f9e2cd77267741b1af6ad899c4cc73d7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:14:29.001019116Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:21:07.104125061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:52:13.599343145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:52:13.700387108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=34b3f1c69408e22068c0c71b1827691f1c89153b0ad576c1a44f8920a858039c",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:15.130185895Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:55:16.197069198Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:55:16.740268428Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:55:16.852085314Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:17.410294536Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:55:17.513627733Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:17.626121199Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:55:17.723199621Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:17.824546352Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:17.930731415Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:55:18.035064325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:26.371210673Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:27.208767167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:28.192850155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:14:26.95993818Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:14:28.000135434Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:14:29.001019116Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:249cf7fac9159da5200012f7eefbcd00a6e6f30a9495037a81cd82775128ecf6",
                    "sha256:e5e3ad0c907faede193fdf8087bcbaf2149c1be2af234888e642af0282b7fcfd",
                    "sha256:75ec65a39a8bde9fb31901bdd589a5e8defc4a89a951a26a54e77b152b7cae99",
                    "sha256:f1592249283d7e29e16fbcce031b3ba4ad3e2150b52e6eef12527de636db5d90",
                    "sha256:c1d72bedd8733d537e54eca9f1efb795a36a8193f33ceeef74f0086ee9a3e4fd",
                    "sha256:aef1775a36d4a37c00491cc530da75c9c5d68726ee9d004112b65b4b914e1890",
                    "sha256:81bdf9f3c4424b10824dcd9bb8f275d20f36ff65c08d8b080e5cfed7df7aad50",
                    "sha256:23850ea45dd16924be347b1a13acbb16d662480442576367fdbe6db2cbe3836e"
                ]
            }
        },
        "12-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.16-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 12 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:22:54.913663475Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:50:47.39598171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:50:47.486047719Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:32.052433399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.16-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:50.306414917Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T19:05:51.438878516Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T19:05:51.915798419Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T19:05:51.997445983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:52.443515687Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T19:05:52.527090781Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:52.614377337Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T19:05:52.69323671Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:52.777336422Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:52.859237573Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:52.94058942Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.423819763Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 12 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.423819763Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.423819763Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.423819763Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:54.861279134Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:54.889356604Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:54.913663475Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjEyLWJ1bGxzZXllIiwicGluIjoic2hhMjU2OjFiYTQxYjBkNjU4YjJhMGRlNGE5ZGU3Y2Y4OWZmYWZmZmEyN2E2Yzc1ZGU3NjFiOWQwOTgwNDhlYzUxZWQwM2IifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:6f8dbd3d98b2b9b12a203bfa7bfe21a5f9ff9ebdd463ad7d8883919d7b5b0499",
                    "sha256:840e0575437e98dd5b44a040209707036521589d791b5e0c177414ca030c0670",
                    "sha256:ee11cdcf89f1ae1cabe39ca524d8b28f5f92666263b76d042b72dc66c9559072",
                    "sha256:e25343ab98e1e30a31868e70f015f344bc3188aabb235744fa2a2d6b377c91f1",
                    "sha256:6e70c27f895ec4717c59a81b23287e1e0b715fdd19c213352eed14cf3182f511",
                    "sha256:98ade38d4d14459871c51af3b7895a8d4346de39b40b0793e2b710058d6d8ad9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fc74ec31bd2f07d8f0710122cfd95efa858b5b6e0d254cce9a4b4d0f6faedab",
                    "sha256:20fe0210bb5669eb80bfe0d2cde8c274a31d3b0377cf388a1e265e6adb532521"
                ]
            }
        },
        "12-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.16",
                    "PG_SHA256=c5f1fff7a0f93e1ec3746417b0594290ece617b4995ed95b8d527af0ba0e38f3",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 12 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:25:53.592926171Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:49:57.159618937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:56.291245683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:56.372597995Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=c5f1fff7a0f93e1ec3746417b0594290ece617b4995ed95b8d527af0ba0e38f3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:05:56.467506046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:22.09500623Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T19:08:23.033279955Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T19:08:23.544868755Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T19:08:23.63425762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:24.136954493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T19:08:24.222341799Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:24.318466518Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T19:08:24.398453179Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:24.484336782Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:24.57243863Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:08:24.664211725Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:53.516171662Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 12 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:53.516171662Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:53.516171662Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:53.516171662Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:25:53.546626364Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:25:53.592926171Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjEyLWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6MDQwMjU5NTA3NjcxODQ4MThkMmIxMGQyNmQzYmNjM2Q0ODZmNTM1YTVlNmYwYjExOWJkN2I0MmJhYTUxYzA5YyJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:06cab1787d5540e575c05f2b3d49105d1ef6ed9c451ce34d8699bf67588f9d36",
                    "sha256:12367ade8ae7a6cd6a4e7abbf27dbfb72f6841d12d4d4a361cd2414a058a8e48",
                    "sha256:8cdd8e8ab9d934c03d6fd2bc69ce8863cc3c8a82d27a667b30832beadb30b5d1",
                    "sha256:5a71950afdba282d33b0ae37fb0ad98021a4050024d75de7570f1587f69cfd7b",
                    "sha256:03a9f648b98fa3736309ef3aa2547c82a79a62a892017f24919b385b15025009",
                    "sha256:97ce38fef6423fdb11bd15bfb27dd4e62746313bf4807c46ee5fdf08d2d50497",
                    "sha256:82a919c125d14d0a57dcec56f272240bfcbf052bb34ad945cfd5e8d9c74d18b0",
                    "sha256:4467f6ad2fd383c33240ccf649c532257519a8f9960133d7b7eee187c8b43024"
                ]
            }
        },
        "12-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.19-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 12 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:45.047768188Z",
            "history": [
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PG_MAJOR=12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PG_VERSION=12.19-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:44.827310251Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 12 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:44.827310251Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:44.827310251Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:44.827310251Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:45.011804272Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:45.030732482Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:45.047768188Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:a17a762a49739de76a03a6d362c83689343c94836fdaf6f4d0b6c81f9d3cc8a8",
                    "sha256:78436559365117831dba5571964fd4d6cbec13e4a1c1b02327d1b188d414f92c",
                    "sha256:140949489b9c29f322e6b8214d25550b0bed1df1db55f7ae546a7cf34b4e3526",
                    "sha256:2e5bd37be97d2f1515a7fd710bf88152635d3be916799a53e6641adddd5efeae",
                    "sha256:7ad4218179e7e007fce9cbee5cffabf205b777c101e8ff58a1b4d0b1a4fc61e2",
                    "sha256:f73a5e34fe7d7eab41af2b4a44ff3d2eda1bf33327b85219f4c7ed959b51b084",
                    "sha256:643cf908c6612b4aff754896af33c8b35464de206320bac9f375542e0ca2f471",
                    "sha256:3c804fe7e2733646c387524218ba1ef3bc96aa228c4f10a5e6fdc1a7bf923d5e",
                    "sha256:9407d61d256425e2d667e4602ae2d4c8dbe521c816091e56f86e9b4785cb7251",
                    "sha256:6ba8d3d242be13d3f9891eff13bf4d35e3b367c8558ce1c4ef96403a696d1cfe",
                    "sha256:5fdc543c1be6de4a5cbaef27a5e7155039752643dd95ad27cfe5a0f886c73e1f",
                    "sha256:0c092047242c344fd7da534c245cc9b74da8bec8848ab745c61af5ce5820978c",
                    "sha256:fb59c85c0b355c92b84f453f18da6163ea33079455d3c18a04fcfc4d85e95d2f",
                    "sha256:2a19e5be892b80532f8b79a0a3905da542c7e402af2fbb5ef250685345659aa7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fa45fdc8a6b08253339439f6c9265f76c63617839889ade594505bb790b5bea",
                    "sha256:d1ba54a68a72d14c023eee8be4fa416cb82fd8d7d714bd013105e3a1264efa16"
                ]
            }
        },
        "12-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.19",
                    "PG_SHA256=617e3de52c22e822f4f57d01d5b2240503e198a9eccaf598a851109bd18e6fbb",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.2",
                    "POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2 spatial database extension with PostgreSQL 12 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:28:06.390322287Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PG_MAJOR=12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PG_VERSION=12.19",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PG_SHA256=617e3de52c22e822f4f57d01d5b2240503e198a9eccaf598a851109bd18e6fbb",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:02:23Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:06.350936732Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2 spatial database extension with PostgreSQL 12 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:06.350936732Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:06.350936732Z",
                    "created_by": "ENV POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:06.350936732Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:06.374670622Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:06.390322287Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:bcd8031ba4744fac889f7e6b418a04f2da5fb5c011753ae29a2138509cb852ba",
                    "sha256:f775f7f2c0647b55dda523a0e6c6b7ea73ba74c6deead418d0191eb65908f5eb",
                    "sha256:a98b731b2dc17d46c297a1f273fe1769aec57f957ac0840ab52bfa7af666d863",
                    "sha256:fb6cb5930185464508fff3b8fd7697333c0699b8bed35ba02d885bdbc8dadc40",
                    "sha256:83c7feedc9f6c996d3fd41b61e42e0d9ff119438f3582ae513e4e4aaae59e345",
                    "sha256:36363c6c849d7c2b0f728677373bcc5281535c6e714ac36b616db18bf801170b",
                    "sha256:4e576a8fa617a6dd8b74ed56ab36643e7301f0bc3526023bfcf8add19a2b7872",
                    "sha256:6d1ffdb592f722f7f61797375a08a969393bf2a61c1863969003a0c77988972c",
                    "sha256:30de0629a5b0495fe48009cd92444f7fdcaaed4c7fb52015527fbe793cda6616",
                    "sha256:d0cd7423d1bc2c7922ed56387a817c98b4201f1c54bc9111514a83729c1c36aa",
                    "sha256:872d552cbba9d175e9b376b3fbbe5f9fb040a32e7bf33a0eb3d9626fc7d6587b"
                ]
            }
        },
        "12-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "SFCGAL_GIT_HASH=495719bb7969973f322fea7de1c0982c4ebbdec8",
                    "PROJ_GIT_HASH=7ea1338d8cd5a8b738c0fba69dbe8a9188ae3a95",
                    "GEOS_GIT_HASH=5bb0eba2b33b924440b356334540e64b60c86201",
                    "GDAL_GIT_HASH=a54ad87bda6fcde20b158b85a40d61c5e2fd0a29",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=6f9f76b7395f5c27c69c2136c53608e44ba0d38f"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:8660af2ce371f3d1917f1b90d85a190229d0d1a228b79b10fc1b6674b49c0b8a",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=12",
                    "PG_VERSION=12.8-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "SFCGAL_GIT_HASH=495719bb7969973f322fea7de1c0982c4ebbdec8",
                    "PROJ_GIT_HASH=7ea1338d8cd5a8b738c0fba69dbe8a9188ae3a95",
                    "GEOS_GIT_HASH=5bb0eba2b33b924440b356334540e64b60c86201",
                    "GDAL_GIT_HASH=a54ad87bda6fcde20b158b85a40d61c5e2fd0a29",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=6f9f76b7395f5c27c69c2136c53608e44ba0d38f"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:8660af2ce371f3d1917f1b90d85a190229d0d1a228b79b10fc1b6674b49c0b8a",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-20T05:56:11.000808462Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:46.511313656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4ff85d9f6aa246746912db62dea02eb71750474bb29611e770516a1fcd217add in / "
                },
                {
                    "created": "2021-09-03T01:21:46.935145833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:32.504358443Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-09-03T12:54:33.621883458Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-09-03T12:54:33.912313263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:45.512002607Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-09-03T12:54:54.572897745Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-09-03T12:54:54.869850191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:00.108452536Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-03T12:55:01.285118337Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-09-03T12:55:06.712152447Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-09-03T12:56:41.371623057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:56:41.70801743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:56:42.019209442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=12.8-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:14.913542737Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-03T12:57:16.219620786Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-03T12:57:17.102990785Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-03T12:57:17.302410056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:18.265498772Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-03T12:57:18.514631179Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:18.788165165Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-03T12:57:19.027541324Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.251766215Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.463436044Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:57:19.690661062Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:51:55.901911231Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.67.0       libboost-chrono1.67.0       libboost-date-time1.67.0       libboost-filesystem1.67.0       libboost-program-options1.67.0       libboost-serialization1.67.0       libboost-system1.67.0       libboost-test1.67.0       libboost-thread1.67.0       libboost-timer1.67.0       libcgal13       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c3       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-20T05:52:03.404969733Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:68fa5b8694e08a5bb7ec326cb9678c39d18a2d91009d5a97015c13632ac95d58 in /usr/local "
                },
                {
                    "created": "2021-09-20T05:52:03.893716005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV SFCGAL_GIT_HASH=495719bb7969973f322fea7de1c0982c4ebbdec8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:52:04.433666604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=7ea1338d8cd5a8b738c0fba69dbe8a9188ae3a95",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:52:05.407415304Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=5bb0eba2b33b924440b356334540e64b60c86201",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:52:06.421108578Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=a54ad87bda6fcde20b158b85a40d61c5e2fd0a29",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:52:07.912326745Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2021-09-20T05:52:08.425919168Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:52:09.432616265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=6f9f76b7395f5c27c69c2136c53608e44ba0d38f",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:56:07.763288676Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://git.osgeo.org/gitea/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-20T05:56:08.64867385Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:56:10.000166255Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-20T05:56:11.000808462Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d000633a56813933cb0ac5ee3246cf7a4c0205db6290018a169d7cb096581046",
                    "sha256:733594622444d04426ad9182ce825008a7b00c280607f058fc128866886ba1b2",
                    "sha256:c887bd51f64c95ace786af0eb0b2778146960ef5efde69eeb2286c1fc558ddf6",
                    "sha256:2d33298646f65eb55cca6653e13a1f283df63c6542816aade3fa72551397f88b",
                    "sha256:5a0f46a202ce686f1a902981bd2744871caee98916667873a48f255e94aecc71",
                    "sha256:281e98faed22a25055ba11d132c5f095edafada81671395cad2f8f1f8b525fe5",
                    "sha256:6a04aa512009783fd235719ee20cf3787bf71a9477143b6e0daebc91edbcfb06",
                    "sha256:6606c7ee11a941145a9d32a26faffe7026485c5c7f94c28fc02f0a16ac0ef3d6",
                    "sha256:b40cf33f9686df4a22fa70e563098fe3515dc3e903be2cee94a2367b024cb626",
                    "sha256:de50421e2cc0c9cfa0de7503372937568d4a7442402f7158fa87fb45e7d31374",
                    "sha256:2a4d15e7435f047a85edb38827c4e818b330f1cb213a1c4b852ce740e6122c94",
                    "sha256:1ecaa1bf49c048d7e57ea30f756e6ec7593d506540ff9927ade2987e13935add",
                    "sha256:74df9fbcad661c9800b6b3d0ab688e52b90355bd30386d109f2a0127b35f1f32",
                    "sha256:99ca6fa1c7d6165f323d7f35e1b44fa8ee887e0ee45300dedb2b8dd50598c166",
                    "sha256:051d53d7346d080321b395a4bb28886232132e3ae0f5c411e9a5a72ca45f034e",
                    "sha256:fe631433fa7fdc1c5f42a0c3bbda93818f248a6a88a842ee66af7ea76e4ef0c5",
                    "sha256:fc54dcd4047e85cb7c1990da539ec153b9808134b5803283600bacd661777283",
                    "sha256:c4e039aa7a079d8cf75b5da2fa37eb5aa81cc21306c7421bf5ca8486c75577af",
                    "sha256:b0b417d81d49151f3854affd16e25cb93de8694febc7ced7395834b6fb5ffcdd"
                ]
            }
        },
        "13-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.1-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6c6fac26bfaa6a32891c5a0db485ab079324a8a72b54bd79910fc58bc58389d7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.1-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6c6fac26bfaa6a32891c5a0db485ab079324a8a72b54bd79910fc58bc58389d7",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:30:29.000132989Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:06:10.265777742Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a7bff4e139bcacc5831fd70a035c130a91b5da001dd91c08b2acd635c7064e8 in / "
                },
                {
                    "created": "2020-12-11T02:06:10.555529649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:22:59.860092553Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-12-11T12:23:00.928028349Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:23:01.122818358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:10.832432243Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2020-12-11T12:23:19.79924691Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2020-12-11T12:23:19.995395114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:24.707547786Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T12:23:25.735010478Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:23:26.977348206Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2020-12-11T12:23:27.190984417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:27.391276912Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.1-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:48.718465808Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian buster-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2020-12-11T12:23:49.996521346Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:23:50.992573425Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:23:51.223278244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:51.419541157Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:52.434129681Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:23:52.638437046Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:52.8833389Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:319b7406843f62370047c33da3dd702120d7eec161b31772aa6de0f02a6b3a94 in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:23:53.868206954Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:23:54.056124078Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:54.23461838Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:54.426558105Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:23:54.634350064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:01.074610275Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:01.462266041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:02.384715745Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:23.942651702Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-14T05:30:27.343724043Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:30:28.00023443Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:30:29.000132989Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:87c8a1d8f54f3aa4e05569e8919397b65056aa71cdf48b7f061432c98475eee9",
                    "sha256:ebac1d64c28640d3f7dca66f2b324f06740fab2a30c8ff4c799ae2e30ab0dded",
                    "sha256:4854e38738c86c681ddcb5e96dd42bdeb8582eabe867fd29d01d3fa7dfc32724",
                    "sha256:fd43df5659e7d6329557e3f2308bf8df55ce6a853fdb9b3cb850eedfdfc7db5d",
                    "sha256:062de646b7c8b3ee95dd6426926cfe89718255e575d2dbfd25c59bd364a5ba0e",
                    "sha256:a8fc6058c6d8cf9f1b3248a61859734b77e057012c7a74723a2850784f82e5b2",
                    "sha256:20db730be8b4180abd7d17a218218e9125034cee5b4ec56c23281f2f76820c9c",
                    "sha256:57b15b12c86d3d3293852f9bd604c4cf6fbd31f95a799ce17cbfe6f5c91b332f",
                    "sha256:e6d39f005225537fcee4efead29a2132bdcf82a64e91d8f1be34ce9dcd5cacd1",
                    "sha256:efe23cbeb2c2c4ab0b82dc8303a2d12712d5e06a78685439e7419f5ec38a4b66",
                    "sha256:53b19c82edbf17efc5e3b331237d9a5d8ac08f6f6767405850e888fff551993f",
                    "sha256:5be11eea2fcbc79c3d95c459d19b25a0d7d1e9f272ffce01d3a9de0e221bfbfd",
                    "sha256:15378556b393a37450ec3405d38e93dee7616d4259f88ec3c7e03d64917205a9",
                    "sha256:119c31fbdbd62f0eb1ebac8da7dc22aaab7dfeb76ab100b4d2c32a1ca1d813d5",
                    "sha256:8e4a0fc739d224d123a5e45b2595276a71b513f0d53cae9937fafcb8cce21509",
                    "sha256:626de24ea5a4c91b17a0e000c19fbceebc0f6ec967949bf4e8bda839d8ff552e",
                    "sha256:a9be390a30757316c5da736c25dff668859581db40c04ce95742fde20aedac95"
                ]
            }
        },
        "13-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.1",
                    "PG_SHA256=12345c83b89aa29808568977f5200d6da00f88a035517f925293355432ffe61f",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:372ea5bf3306dbc0f16796124f5de83c65d500acf464679e29ded1d30fff2f58",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.1",
                    "PG_SHA256=12345c83b89aa29808568977f5200d6da00f88a035517f925293355432ffe61f",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:372ea5bf3306dbc0f16796124f5de83c65d500acf464679e29ded1d30fff2f58",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:33:30.000210319Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:04:06.980443025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:62a1e09319acb6d1bad91ef1c35aabdc7e5e19883a77f30f1951ccfffc812124 in / "
                },
                {
                    "created": "2020-12-11T02:04:07.192210007Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:09.894568878Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:24:10.104964068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.111577426Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:24:11.323187528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.520732121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.703324727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=12345c83b89aa29808568977f5200d6da00f88a035517f925293355432ffe61f",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:32:56.077589836Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm10-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2020-12-11T12:32:57.200102637Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:32:58.195864461Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:32:58.378226758Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:32:59.372611045Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:32:59.558907728Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:32:59.803385964Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8f542efd076b9b67ef64928f3c0185ed50bfcbbc3572436a7222e879810d747f in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:32:59.983803116Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:00.164099409Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:00.368728027Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:33:00.572871528Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:52.492645436Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:53.23436049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:29:54.217947007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:26.786789821Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2020-12-14T05:33:29.000136314Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:33:30.000210319Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4666769fca7a1db532e3de298ca87f7e3124f74d17e1937d1127cb17058fead",
                    "sha256:1e310653cfc3f26b3c374e50fe863ee1cc0a17bfe193249f5d36900416ad37d8",
                    "sha256:b5549f846d72ff2790fda1cd91932940e8c76d176cd5d29cc0ee5416f2868d83",
                    "sha256:cb00700c7b5f8ceabe9dfbfa8d0b352236f59b5a516764c658af4f1149952b80",
                    "sha256:a6939ff4cdd08b66684ae6d399f728cf1a95a384997e8574af99d00a93d9e74e",
                    "sha256:b200431f856c613a6ae59497139fd83521b5fbb5356cea47c6c8304f47eee9ac",
                    "sha256:13948fdd0fff7a31fc7b21e42c1b649c53de1f941a75206ab1be4ffcc0d9e6d5",
                    "sha256:5039b1aca058c1dde8fcb84f253aadce9c0e4a1028cf0c9a768070b4ee5dbe63",
                    "sha256:fcce62b8a4496101ac4b96fff6679b41b3443756ce0271a8a94b83e676512d9e",
                    "sha256:516bd30738de6ef28f7adb969082d987f78dfa9df02b714a720a870504c9aeca",
                    "sha256:3ca62a4621acf2947e72465c327fe0826069b16dc6276d7d845ded71ce792770"
                ]
            }
        },
        "13-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.5-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:e1441693755943aaf92822f301360d2107f63257777f43bce39fbe285c5234e3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.5-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:e1441693755943aaf92822f301360d2107f63257777f43bce39fbe285c5234e3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:20.001071046Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:25:40.962725936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:41.194131805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:41.454573939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.5-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:04.305273984Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:26:05.896129375Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:26:06.681348571Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:26:06.877742822Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:07.694295953Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:26:07.924409543Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:08.168682685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6e4de9271291e4bdd4a40b73fffe4d6d1aeff033460f5b14d74e948686daa095 in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:26:08.365216515Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:08.59279312Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:08.823419255Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:26:09.034024065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:55.829254899Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:56.474563268Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:57.484920359Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:16.927349432Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:17.954094169Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:19.000165985Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:20.001071046Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:c8087cf663e09aeeb7f9836b4191e438da2a2c78c474a1b65396ca160789eda3",
                    "sha256:d8676447337dbc0495614d99c2c778fc69fcf8fe8788728ad3699ca46baa312c",
                    "sha256:0c1cc1e5ffdb0ad59630ca30bd6d26acdff320c16e81f45f9e78a42e64470da1",
                    "sha256:8f788a1ebf9dcb046647f58dfb60a75381d44f6915a47c037bbb96268b384c73",
                    "sha256:0ec4b80272b4a86ecc9d28494905821877a964e320442069af05832c171fb97b",
                    "sha256:17acedcd6c9b1426fad2b8390f5d59a36561c319f0de59f63eb91a54c9461c55",
                    "sha256:ca206d09fa68d4d28b1c2e82b3589d226746a594a55a59c1b91357b0ad6ddc9f",
                    "sha256:9c6b958a4944debeca41e223cbb8390ee292e2f8cc992d0d9db6284ba2f9a75a"
                ]
            }
        },
        "13-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.5",
                    "PG_SHA256=9b81067a55edbaabc418aacef457dd8477642827499560b00615a6ea6c13f6b3",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:4dda83f989bb092887472f6363250af7259bf8d2b8f3f4baf22a15baf2f69aea",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.5",
                    "PG_SHA256=9b81067a55edbaabc418aacef457dd8477642827499560b00615a6ea6c13f6b3",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:4dda83f989bb092887472f6363250af7259bf8d2b8f3f4baf22a15baf2f69aea",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:31:06.000160863Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:11:55.555978092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:11:55.757188786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:11:55.940247113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=9b81067a55edbaabc418aacef457dd8477642827499560b00615a6ea6c13f6b3",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:31:58.722417881Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:31:59.887429492Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:32:00.659954935Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:32:00.866970783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:32:01.64379824Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:32:01.83480003Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:32:02.070582367Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb2d643a5007a2573ce85b55b80b2ddaa7af3a038cba459ffbf2e367376ca53 in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:32:02.254523782Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:32:02.439044036Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:32:02.648190917Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:32:02.842470117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:51.75741995Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:52.253822647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:53.258245535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:54.26880432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:31:04.412417516Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:31:05.001075286Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:31:06.000160863Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:184bb053325a63f1fb8279900b260fd799909d47aad784b3c0cb3d98b79ff005",
                    "sha256:c89e3b12587e3015a319d2dd787fdf62a83fb064e8766a2d46afbe33277e41d7",
                    "sha256:58b49db659ae071c117180c63a3a2d5586ab12c1e1c6be387b4e04826e77e83a",
                    "sha256:6957b406f7145ae9f3913f9937b2f2a3eaab0b552a1f76aaf93c284978251796",
                    "sha256:44ec9e932c21c80fba8059363d4d75099e7421be19ecf5cb170f22f76a42ac3f",
                    "sha256:f1a30850eacd8d480a345f4ef0ece3d96a7809c87f20b479efcfd09b8dffdc45",
                    "sha256:7b4d2dff1f4f708a12560cdcea7ac5ef081de577d161af481ac52b8a1a16a4f8",
                    "sha256:5926417a9b52f4bc8d0187d0dbc0cd64eb2675c11da76f7b865b1ca9a2a62f66"
                ]
            }
        },
        "13-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:cf2473f443f48dae2789acbb2bec5e8449feb31f3cd6839ef767600a57c97fde",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:cf2473f443f48dae2789acbb2bec5e8449feb31f3cd6839ef767600a57c97fde",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:12:05.000363857Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:54:54.646910587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:54.764614193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:54.874019231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.8-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:14.730945446Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:55:15.942870118Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:55:16.521938597Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:55:16.617117744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:17.189621308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:55:17.295703446Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:17.419402575Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:55:17.516052891Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:17.630549438Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:17.737042421Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:55:17.84370881Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:39.746005186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:40.52850427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:41.532619564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:12:01.829703324Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:12:02.925679061Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:12:04.000955072Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:12:05.000363857Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:85fde0cea26d2ad471f5cb9b041fe4725941f409485f857807b2e7cdc13b5d5f",
                    "sha256:62ce4d1e67e46f5f3900da7b68971edc95e641227454e64f7c02c583ba2b7420",
                    "sha256:947c11137d4192b256b979dee8ae5278b05ebaa9fb99b8855f1a0f0c7b45d499",
                    "sha256:7e9507884e14d9e56e62abe7ff150371beab959d0b64145727170c7935ada812",
                    "sha256:b530ffd9eecde0d316fefe9a9756926ea3e0f98500c4da4d901a0871e763305a",
                    "sha256:15702b59541c4d3d7eec33948dab01b9d685d71e9bc1a6e6fe1ef2380afd714b",
                    "sha256:0b43dcee0d9ea809e5b54e10c6b49668c079f67d8d64eb2fe1cb76e883cf7e98",
                    "sha256:9c6b7939c383eada6f7bf8c462fc32d45c516d95c0c84aa4385d82a4466b2e65"
                ]
            }
        },
        "13-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8",
                    "PG_SHA256=73876fdd3a517087340458dca4ce15b8d2a4dbceb334c0441424551ae6c4cded",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:ab005a1a872dfc5cce8995673461ee1f7024354f414a703b233cb7cf3e19cc6e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8",
                    "PG_SHA256=73876fdd3a517087340458dca4ce15b8d2a4dbceb334c0441424551ae6c4cded",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:ab005a1a872dfc5cce8995673461ee1f7024354f414a703b233cb7cf3e19cc6e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:32.000197836Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:17:42.205229667Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:48:10.437609816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:48:10.533373972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=73876fdd3a517087340458dca4ce15b8d2a4dbceb334c0441424551ae6c4cded",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:17.165841369Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:51:18.15625631Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:51:18.710677555Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:51:18.818780264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:19.395661626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:51:19.502361872Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:19.621411677Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:51:19.718631949Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:19.824186034Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:19.931821219Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:51:20.033921395Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:30.900502397Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:31.274956697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:32.266328042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:30.433782665Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:31.000774843Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:32.000197836Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:4d85a180939a4717fae489291d7863e5b82879d970fe1742b648f66fbdf55963",
                    "sha256:499c1adf919045b7c3ddd66d935c52c0b359205b758ab4067bd248beb0a72286",
                    "sha256:28d237d2b399271c31d97d8793fae140325c8ed438898facf733926d7e0b9e76",
                    "sha256:48816eff8a8df0e7dec76e17d1c07e7fb00aa27ff66c7448a1b682efa46ff73c",
                    "sha256:42a84f48ecb68d6175eccdb73916777e6f42a5190e4d53981ad194ef7c6910e4",
                    "sha256:e1f9978bc3d25962260c3b0c7965a7d1bdc5eb624fff3ddd825444f46aaeeebc",
                    "sha256:b1a0c3cbb67d8e64fbfc62015838fde5fb8ad3a408e3883caa67ad083bb046de",
                    "sha256:f491311801d8a32b7b29fd27dbbf9bbd3ea78b18f5a437f13bd7d0e58e2d7039"
                ]
            }
        },
        "13-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.12-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 13 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:22:47.640532197Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:49:54.298201435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:49:54.380010971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:25.869306187Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.12-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:44.406041962Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:59:45.534573269Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:59:46.064570816Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:59:46.145964267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:46.737524272Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:59:46.821628035Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:46.911509842Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:59:46.989728792Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:47.073075427Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:47.154868245Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:47.241491603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:47.288174625Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 13 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:47.288174625Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:47.288174625Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:47.288174625Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:47.586922016Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:47.611898033Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:47.640532197Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjEzLWJ1bGxzZXllIiwicGluIjoic2hhMjU2OjcyN2IxYzY2MjRjZjNlOGFiOWI5YWUwMTZjNTJiZWQ3YjY4ZmE1NzIxMjgyZWMxYTIxNGM4Y2NkOTU1OGM2YmEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:164ba6a1705f1a2faaee2f651e6604600d12dba2079ecae387e1cfe1a52fc8af",
                    "sha256:c92304bacdeee82ffb39d4ecf13b300ce0374c6e228aea537d0b480908a983f2",
                    "sha256:fb4363b8c02ab99b55fb2c4cf99e4d70b8d7bfdce9f11ca3819a45f20e93f91e",
                    "sha256:cb4e08882f8003c8fdd95de44299fa11e6af25122899e40b02c2d1133ba2a71c",
                    "sha256:1a09347dec3d5d08ba58bf7fe71dafe94b6a41eadda3533ee8b70c2848e0cbf6",
                    "sha256:8b152244b88065b6e6a70a9267215ac5e957a2e8f1756c3379539387244f8726",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00b7d5f90f9495eac2a7a929a93e8a1334e98b469835d67cabfe9e967fc2117f",
                    "sha256:9c37087f6c1339870e9c66dc64ac4372ba75e173b608422271da275188e7f071"
                ]
            }
        },
        "13-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.12",
                    "PG_SHA256=0da1edcee3514b7bc7ba6dbaf0c00499e8ac1590668e8789c50253a6249f218b",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 13 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:25:57.825650705Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:44:34.61795782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:50.076724983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.12",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:50.157884261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=0da1edcee3514b7bc7ba6dbaf0c00499e8ac1590668e8789c50253a6249f218b",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:59:50.233798652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:19.391182097Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T19:02:20.249272055Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T19:02:20.743077491Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T19:02:20.829123796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:21.303682848Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T19:02:21.388767446Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:21.481229586Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T19:02:21.56325118Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:21.652960618Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:21.737949319Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T19:02:21.831514512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:57.763764504Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 13 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:57.763764504Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:57.763764504Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:25:57.763764504Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:25:57.79419949Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:25:57.825650705Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjEzLWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6YWFiZDY5NWE2M2M1YmQ3OGUwNWE4YzljMGY4OTdjNDhlMTE1ZGVhMWQ1OTBlMTAwNDlkYmYyNWI4MTM0OTY5NyJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:1efb63ba30bfcdc0550d56303ddf29cc7abbe8342a83c70d1285528071be1042",
                    "sha256:0483dbb71fc6d4cda294d409fb416bb69dc435456fa3200f421f2296cf6840d7",
                    "sha256:3a6045cbc7606d018dacf5c851e28750cac58aaf05c2157bd5a5539cc328b7ee",
                    "sha256:5a8fed157dded2bc59aad07dc1ecf1b5d1b582856edc6ba74fc2abce5dce6a4e",
                    "sha256:f887e6cf0f9937c02f7b383dde59b9883f942ebece4698d2ef7c127a6cb3ac24",
                    "sha256:405c9b7511708c3fa6afe8f3aa9878efcfb864ed6d67bdcf81bc432a9d01724b",
                    "sha256:62c4ebb6814e941642a6b29d882c21ebd36d911e7a032d82232dbc6502238a4a",
                    "sha256:38d37b8fa6e8199c789430514dce644df8b8f5f5cf6418ea5aff2406e516b742"
                ]
            }
        },
        "13-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.15-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 13 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:49.560320703Z",
            "history": [
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PG_MAJOR=13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PG_VERSION=13.15-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.220111338Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 13 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.220111338Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.220111338Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.220111338Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:49.528325439Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:49.544548435Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:49.560320703Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:a17a762a49739de76a03a6d362c83689343c94836fdaf6f4d0b6c81f9d3cc8a8",
                    "sha256:3c0899982642e72b16da9c2d78da25b9df1c66acca3d35f37fef6eaf109e9850",
                    "sha256:f5d715fd9e59fdb1432a278061491a108d2c0127a47f2d31eeae7ac266df51c1",
                    "sha256:6bb604664fb4c93873db8b9b2f34f5febcac1254f0b1b33cfa8417491d135777",
                    "sha256:cf8a6d19dcb5b1509574e7f32996eefcb3c757eb3f0109c7b97bac8033e3311f",
                    "sha256:e8e8c0a76d5faf73083ef4ad916d2df9291630c19048aa40dcbf80e5c9e9eaa1",
                    "sha256:0edf68c78a058848fc3b5645cd6958c717574aab329f3157756028bae26347f5",
                    "sha256:c5641697a8c664ab15677fa1dd17b1f8a78e06d6bf1a55bba51414579f457ec6",
                    "sha256:4344884453ad35724d7742ece6249b6f8f0e7222305ec9ae677e811cf7b84e6b",
                    "sha256:311d0bd9762861847ee96b8653e854e633919c0e80de8e750fa69c4effa38bcf",
                    "sha256:6c76ca71066fdf55346c95acae1addc47e63a5bbdaa8431ea43024635aca92ea",
                    "sha256:e20bfe2b8b64e605e3df5c1fb141bab39744c53ada770efc7d15166cdc11d3cc",
                    "sha256:160596d1c000bf7f5c54538309075c991009000b135c6dd4a3e0c13fa84f039f",
                    "sha256:c4c479e62d9c4bf69f1a42bb8bba0bd1477957bb782f6fbb8bf14f8ed7d740db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a3a00a9af3200d69225a3bf0d1b8b5274cfab07fbe89b75e91667e55f69be2da",
                    "sha256:bf22932f906ab4d5e173bd91ae3063053a049260d6edcc1799c21e789a32dc92"
                ]
            }
        },
        "13-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.15",
                    "PG_SHA256=42edd415446d33b8c242be76d1ad057531b2264b2e86939339b7075c6e4ec925",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.2",
                    "POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2 spatial database extension with PostgreSQL 13 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:28:08.140659785Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PG_MAJOR=13",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PG_VERSION=13.15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PG_SHA256=42edd415446d33b8c242be76d1ad057531b2264b2e86939339b7075c6e4ec925",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:16:46Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:08.103583768Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2 spatial database extension with PostgreSQL 13 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:08.103583768Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:08.103583768Z",
                    "created_by": "ENV POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:08.103583768Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:08.125189321Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:08.140659785Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:aeb72166d6081c6bfd75f8fa4718fc8d3d24d32282a9eb0515d06f53ef886929",
                    "sha256:8a6d727a0904c0a269ead6beb9263e70dc6aab561b9903822f997c1d875c1225",
                    "sha256:f405c15bf05d15fdc1bee1664c87e59868a57ae193c3846db24912a58a3872b0",
                    "sha256:e06562840535d91fc268378d42a8ef1a81653e772217ae7f8c3fd6b171b8108f",
                    "sha256:24ea2529e9961d24c71cc3e0236bafa23c3932ffdbb5aece6ede6922ec994a41",
                    "sha256:a80eb258dfa72a41b552f373cba5209bc3808afd71918cd157873eaa682fa9ce",
                    "sha256:7d2221c577c0ff19133e2c579cca2405c3e2f74300b0c761f918b5ede76d3247",
                    "sha256:c192d38e8935d2ba78ea3bf53488911754894339b882889c7ca768f2f1e095a9",
                    "sha256:86066e929c1f2af1410f512c1517a8f324df0b60da57206bff154bf18427d857",
                    "sha256:570706e4b3a27d9608c0f536fd8a5cd500ca53470bfb4719338fb216ed65db8b",
                    "sha256:9c92b06bbd0c41cb2ef68e88d02567a710e10c9701ef5f8ced01cac9e003b4fe"
                ]
            }
        },
        "13-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:4b36523a64dfe34bc74b246e6e8b5ecde2e8ac0e00709365ff26d9e38c3b0304",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "39f063864f341cf7d3dbc98e346b2d9b1f000fef6df58a90e616c9e692b30b5f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=13",
                    "PG_VERSION=13.8-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:4b36523a64dfe34bc74b246e6e8b5ecde2e8ac0e00709365ff26d9e38c3b0304",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-10T06:42:00.837502223Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-10-04T23:26:39.460307991Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b777208be08edd8f297035cdfbacddb45170ad778fd643c792ee045187e39 in / "
                },
                {
                    "created": "2022-10-04T23:26:39.844454325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:04:51.858087829Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-05T09:04:52.519507623Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-10-05T09:04:52.626710608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:00.950935561Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-10-05T09:05:07.613460951Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-10-05T09:05:07.837061513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:11.842746029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-05T09:05:12.453926873Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-10-05T09:05:13.651507543Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-10-05T09:06:16.505096472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=13",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:16.60486692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/13/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:16.705136849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=13.8-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:33.863226823Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tDEBIAN_FRONTEND=noninteractive \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-10-05T09:06:35.553126954Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-10-05T09:06:36.274608043Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-10-05T09:06:36.384953273Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:36.950680426Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-10-05T09:06:37.05621705Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:37.177020777Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-10-05T09:06:37.274779351Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:37.38636628Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:37.493877192Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:06:37.608301925Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:30.003552947Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-10T06:38:31.831739787Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:0665f21975e130ff2c5c02a9fe1b11eb8127c7c88d272133efad80b211082736 in /usr/local "
                },
                {
                    "created": "2022-10-10T06:38:32.298688921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:32.719929222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:33.444946121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:34.861839559Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-10-10T06:38:35.797063014Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:36.439201659Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:38:37.429767649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:41:56.998082034Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-10T06:41:57.877538173Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:41:59.000280148Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-10T06:42:00.000464535Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-10-10T06:42:00.837502223Z",
                    "created_by": "/bin/sh -c set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fe7b1e9bf7922fbc22281bcc6b4f5ac8f1a7b4278929880940978c42fc9d0229",
                    "sha256:cf1c1d4e7b970cff84425af42b2cb4ba5e635ffcb97000925e8022264df934d4",
                    "sha256:a560084a04efa3e75519796d24a4b9c2db8b594dbd043f537e9e350907d9d05c",
                    "sha256:596139a369da06580f5bb60799cd821af643580440dc3c864aa6e88dad9069da",
                    "sha256:8b56e06d2fd794bd063ba61618e29679aa303b62a5259212fc7690ac059402b6",
                    "sha256:afa3537bdcd4a91804325ecbac0c15502041d394bd11a94c6bedb77deef24863",
                    "sha256:421ac1c18bca65072f73db57a5f2fc249a364c594f75f4e1e4a521f2a9d4dced",
                    "sha256:89be899c57c887d655d5c768926a091f335d47dbf3276819974c10ce375b081b",
                    "sha256:59aa54bf22f68ff34ea8774f958e7a63c8c6f95c405e52d4de2903f3fe3d2399",
                    "sha256:999a9a9bab73f85310244d3b6be507bfd86dd00148497e0e8ee428d5669aa5ac",
                    "sha256:9e947092c6fd61a6c8cbe6747e8edd7862da14c3715ecdd636891f0e7a34a7d1",
                    "sha256:198d13a9d505ad2726bcf878b01ae878e97d759ff4697d93fe9e6bc4636389cf",
                    "sha256:2c09102ff014a0ac2be70f9b2d7e8d83afb6dc86e41c4df4305a49bcef84c699",
                    "sha256:43fba154f14bd273e6fcf16d0e17b319b4a012c4858c3e81e4211d37a8080548",
                    "sha256:2143e8ab0d06271f0052b77b2e15710d48a030628f87dc8e6ed4dc4c60e0905b",
                    "sha256:29bb615601f1e8bfdee0f275f9c7960c427ff6f5a8f7f97b042deaf7dec9dd9f",
                    "sha256:4ca0a6c4c910e34e583ca3f2642b47ccd7ad05c581b85c859215d70ab019e973",
                    "sha256:0d3e225ba286e5ca29714b41f294b957a16f11ea26f9e37a12edd87486414bba",
                    "sha256:7e00a51fd1cbc2bca468f8f089f49b6e38d843744f89c918aae95f2cc3eb90ee"
                ]
            }
        },
        "14-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:56f36a0dbe89f2e0f6d0b74008e27123f1e3efda9a7b621f079afc0394df0769",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:56f36a0dbe89f2e0f6d0b74008e27123f1e3efda9a7b621f079afc0394df0769",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:18.000409818Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:24:44.181671162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:44.518449312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:44.921384827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:24.878757724Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:25:26.477254405Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:25:27.321031528Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:25:27.522201899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:28.345088327Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:25:28.563912887Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:28.814907605Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6e4de9271291e4bdd4a40b73fffe4d6d1aeff033460f5b14d74e948686daa095 in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:25:29.025798358Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:29.24790853Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:29.484566485Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:25:29.696778945Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:55.18006492Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:55.744906955Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:56.545370827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:15.448353471Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:16.512070297Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:17.137002811Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:18.000409818Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:dd44883ded8b0888ffaa3eda54c99c6786af309824f12a534e66d49b57fa221d",
                    "sha256:1b8d5d101e2ae4b1e6801e28063907276294fa57ad0f2795e462c9161636eb14",
                    "sha256:806c98b52cc8f679706ad28d0243306dc3cd37e971ecf58a483b8c7266622538",
                    "sha256:1fb1b8252a252ea62e77d0c2d452d279a36be95da69b3e2fd2fb074aaf21330f",
                    "sha256:20371ceade59b9fa9daab837bc1b90ad6a60c59f1b943c8a20557ad673e41d18",
                    "sha256:ea2754aa5bacac7fe166221e1f9ed2c459bca053939e8c5d1b348a594cdb7c32",
                    "sha256:a966adf4427b8d8b182cde36ab3d920d38409771bdab8fd5c9ca9c37ed1f2e09",
                    "sha256:b9b5c251f7ed9b01558c7c67525959a8237b8e115476f225eaee9788274fb841"
                ]
            }
        },
        "14-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.1",
                    "PG_SHA256=4d3c101ea7ae38982f06bdc73758b53727fb6402ecd9382006fa5ecc7c2ca41f",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6dd67741c95d1cb4ee3cf0542577b3d4ff508c40eb7836bfecd0cf6df5aed419",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.1",
                    "PG_SHA256=4d3c101ea7ae38982f06bdc73758b53727fb6402ecd9382006fa5ecc7c2ca41f",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6dd67741c95d1cb4ee3cf0542577b3d4ff508c40eb7836bfecd0cf6df5aed419",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:30:44.000220953Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:06:02.467169163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.645452695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.859051945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=4d3c101ea7ae38982f06bdc73758b53727fb6402ecd9382006fa5ecc7c2ca41f",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:26:57.806616538Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:26:59.026793526Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:26:59.767137635Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:26:59.951707269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:27:00.691276964Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:27:00.874969773Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:27:01.091227337Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7bb2d643a5007a2573ce85b55b80b2ddaa7af3a038cba459ffbf2e367376ca53 in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:27:01.291236326Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:27:01.494912545Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:27:01.679465966Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:27:01.89215748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:52.198251479Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:52.462982019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:53.263742488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:54.276008907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:30:42.004807944Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:30:43.00088314Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:30:44.000220953Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:efe393100b1ec0d04f76f53fb2aa9a4e0823ec81deff84313dadbb4715afe086",
                    "sha256:6dcd3c1d5e8d05673a070894e690615f580efa0ce13295598e2e2fa6a31e3967",
                    "sha256:66f7b2fd1325e623dd05cb9522048d9a5df2c979a2c4b91c90d2be0d1714c9b0",
                    "sha256:2663f90a5fb75bf8d5d16adcee1e0ad58c0c501820da2373dc64aacf87ee083c",
                    "sha256:5e907c7c19d2eb32d24296b8487f346f236d64beeb30a19387d238f8a2bb38af",
                    "sha256:37e014a45df45a3e7c532553f597fab1cd10a19bcc32c3751d1dac09d46ca8e3",
                    "sha256:649f34bb6f3874a84cca1f0c97a964a7991d522feeb64a710637cb2d4923a85d",
                    "sha256:b6350bb423b85fa40ca111ca89b83873a97d0de3f4ec2794812aa5af011d4acc"
                ]
            }
        },
        "14-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:338a1f779aa1115abf4e51f88c63d22b924575b4e3226754a3580258e1efd6d3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:338a1f779aa1115abf4e51f88c63d22b924575b4e3226754a3580258e1efd6d3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:11:55.000122823Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:54:24.148090482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:24.25549391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:24.352458382Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.5-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:44.029885025Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:54:45.166140918Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:54:45.766040642Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:54:45.86583902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:46.466647327Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:54:46.567407886Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:46.690073195Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:54:46.788156346Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:46.890264274Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:46.992196744Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:47.096611837Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:32.803810466Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.384625233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:34.385574829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:51.739802331Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:11:52.608769478Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:54.000082728Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:11:55.000122823Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:50ba15aab33ff10642f496092562c2cd01003e724d252704a58c78ff1a9ce03c",
                    "sha256:aebf352b45517e749f352e0d32627bba838d766c50ecd3caeecbfd58b703f88c",
                    "sha256:151a5e04160407c68a8304407a75a8ed30057405bc873a43e24292aa1057a033",
                    "sha256:189738c96f0f992faadbbaceba4055a57e85ff5d8057aa29521a098507ac74b3",
                    "sha256:85800965dddc551ca24c43791ddee6c7ffab00bbc4008f1cdfd67d82767b68a0",
                    "sha256:3e0b735a0cba6b0e2f7dce078c6f018ef9a3ad6f536edb170b1415aa9903c918",
                    "sha256:c464cf3c0edae5790e373cdc925fd4e3c8e235e318b7d1f5752fac49298500c5",
                    "sha256:95df25bbe6c1269647c131d5a9c40015a38470de34ae59224b21533ccaa349dc"
                ]
            }
        },
        "14-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:4a723e84e847eecb36dc05bc93de506b8b1c3fb956483645ede8b810f9bfc7e9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:4a723e84e847eecb36dc05bc93de506b8b1c3fb956483645ede8b810f9bfc7e9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:25.000850137Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:14:17.004431915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.205735372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.303549593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:33.429507385Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:47:34.474987504Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:47:35.018381769Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:47:35.11671559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.668070989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:47:35.774100797Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.891612491Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:47:35.986966181Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.088885207Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.187067809Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.288836802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:31.185621246Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:31.449674528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:32.258491556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:23.36332553Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:24.000495425Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:25.000850137Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:93219bfddf6b1a58aec69ed543cac85b53642ed351f9717a669da53a42df2610",
                    "sha256:23be7db949102a9e5a35f4d4778e35b63ca6c4ecffcba022e62670faf80c8c4e",
                    "sha256:40c843f13d81ef75586e62df56fd99932804e740239aab937d45156ecfccfda9",
                    "sha256:ba8f415989b173d759e0a93b2efc19412a36a16b07d84aaad05d496ab648a5a7",
                    "sha256:c7677b5e83e30c34bc6ce8a05a0f52b0b94c757baa23ddf278ef4b528394c32f",
                    "sha256:6b611e4e80c78928ad2457c68f2e0f6bddf4a85155cb72281c17f9a293f5f562",
                    "sha256:eb861e34554bb30639d2faf063c911c0def056c7bcd5b288c2b63db7d5bffd72",
                    "sha256:0a9f29db032bb779888f2cb47d551d33b85eb816f2f2e1c17155d4b990c38d7f"
                ]
            }
        },
        "14-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.9-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 14 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:22:53.551368257Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:49:01.354884799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:49:01.437438845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:52:44.999074151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.9-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:06.235751001Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:53:07.385810529Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:53:07.846757914Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:53:07.930247155Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:08.512829778Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:53:08.595289466Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:08.684980099Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:53:08.772871026Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:08.85692936Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:08.939833912Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:09.030497538Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:53.111217812Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 14 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:53.111217812Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:53.111217812Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:53.111217812Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.467202849Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.50151931Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.551368257Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE0LWJ1bGxzZXllIiwicGluIjoic2hhMjU2OjMxZTRjZWFkMjEyNzNmMjY1YzUzYTc5NDI4NjMzMzk4NDBhZjJjMGJiOWU5Y2MyMTJmZjEyYzE4YWU4ZmMyNDUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:63bcb302319dc8dc67ea41371e0f27952422c635ae7d57aa7b618d47327d4d0c",
                    "sha256:af812652a58242f41b186ccf939f0909485a91e8f71fa130f6b51ba4e3604bfe",
                    "sha256:bc1eb85f5c3230ab112f88b6118509ba04d40a709dfc29dbab806d06d92874ef",
                    "sha256:df62e2a2e27d921151e6888076c871ccc3f39d1fb52dc2bdb3ad2fc25b0130da",
                    "sha256:11d3b44e9e1a0eae5c657f9d2463da75e21a46003d05878d3ddf272029720fe8",
                    "sha256:da807609a3a6f7d3c159f3942654a66d8a16d79edc7d35d2dcea7f8408114f68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa229e4d737d2cf093f053ffa5a937543c5919cff7c1f73c07ce3db8ee3767c1",
                    "sha256:5b58d72cdd84f60db8a9f31de37009fd78827cb7431173b94a90346a6fcc0022"
                ]
            }
        },
        "14-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.9",
                    "PG_SHA256=b1fe3ba9b1a7f3a9637dd1656dfdad2889016073fd4d35f13b50143cbbb6a8ef",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 14 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:27:24.02593317Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:38:42.304410647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:13.859955411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:13.943923604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=b1fe3ba9b1a7f3a9637dd1656dfdad2889016073fd4d35f13b50143cbbb6a8ef",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:53:14.02721487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:50.073368624Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:55:51.021462976Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:55:51.494649717Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:55:51.572799304Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:52.032045544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:55:52.114197832Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:52.203739309Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:55:52.283844139Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:52.36713958Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:52.454604978Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:55:52.539582591Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:23.908929242Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 14 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:23.908929242Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:23.908929242Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:23.908929242Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:27:23.978814041Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:27:24.02593317Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE0LWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6OGRhN2U4ZTk0ZDRiY2MyOGRhOGYyMjJhNGUyNTliNmY3ZGYyZGM2MjY0MGQxMDRmODE3NjI2NzhkYzFlMjIwMCJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:e7e532fc4eeacd883d809f70245962564de5f428d2db866f87592df8977f8f46",
                    "sha256:bed3725d003d9d6b77482634a059230fabfd5a8478b9dcfc2649c5b8c5f8dd44",
                    "sha256:c75759abcadda525dbcb1eb0f4db50d01b413002b9e197d17875f45c1df39da1",
                    "sha256:740941f706fb81cba71db991feec4c78b9da0c6222814dbbb788252359681025",
                    "sha256:ad4d923fb9ec158546130b7d9b13fbce1a6b46c2ef142bd404727fc35e55bd08",
                    "sha256:fabc9e430cce2d7079f82d7b5fd59b4dca7fd335e53fb61f8a6b9a23934300fc",
                    "sha256:2e2a39bf8aa3ae7142806a2b5fd935b2ea045cefcca35829c19c0ae4009bea21",
                    "sha256:ae026cb4de095d9833656661800420cfe2afc047a41a25042b8431a9cb9c220e"
                ]
            }
        },
        "14-3.3.0alpha1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.4",
                    "PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:54fa6d80ddaf9be3b233e269a3d24d8b03a48e0c49d75d100c6604273af530af",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.4",
                    "PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:54fa6d80ddaf9be3b233e269a3d24d8b03a48e0c49d75d100c6604273af530af",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-07-01T23:19:22.001151957Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-05-23T19:19:30.413290187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8e81116368669ed3dd361bc898d61bff249f524139a239fdaf3ec46869a39921 in / "
                },
                {
                    "created": "2022-05-23T19:19:31.970967174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:22.837635258Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-05-25T20:33:22.933753658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.460844805Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-05-25T20:37:47.507259433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:38.222856648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:38.318450569Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:50.361225427Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-22T01:42:51.421702718Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-22T01:42:51.950189662Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-22T01:42:52.04956407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.586248181Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-22T01:42:52.681515447Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.793914375Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-22T01:42:52.887636613Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.986764625Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:53.083701393Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:53.179541111Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:33.570061298Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:34.27649874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0alpha1",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:35.2737475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:19:19.8729492Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-07-01T23:19:21.001098419Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-07-01T23:19:22.001151957Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24302eb7d9085da80f016e7e4ae55417e412fb7e0a8021e95e3b60c67cde557d",
                    "sha256:2acf3ef23fe40c473402ba194d56f1767dec088839e9a4ebdf47cecd6d285e24",
                    "sha256:14f83c4d2ba1b1c46d8135ee7c72a5ba7f27ee17065f36ed2e36873b016ffc54",
                    "sha256:6868de5646f277fee6de9d0baff05835136b2f3660ef725e13bfc5466114620f",
                    "sha256:8c5313cdd51883976756617fa8db78979b5a05cba0f2cbf363e8225ba49f550a",
                    "sha256:a45f874f12b33e08ef8c80f85822f07572cad3dc1d9fe240fe9bfe6cc10aa0d3",
                    "sha256:4d94b01dffa5f0e8d593c3cc005fbb4390a72a610f73490ea22c2dcd098e00e6",
                    "sha256:2cf5b9c0e8bb1eb45b464d910b7193e3bd9743ba6a6210a614c763b57db14bc2",
                    "sha256:c3760b976d566faa566b72ea00c9879a3335de5c2ead0c654bf4b38de28dcb34",
                    "sha256:e989da618b02f1296636daa43997624d3935ff1c923853081d83a6b2c2e124d1",
                    "sha256:3ffd3a7ee6a436fa72b129c71bf74dbd26daf3f6eb8e108eb2697dc19f7e195c"
                ]
            }
        },
        "14-3.3.0beta1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.4",
                    "PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta1",
                    "POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:b93090f4035192c945f870b2eee9fdf478af55a0448ab523d3aec45c291afdea",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.4",
                    "PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta1",
                    "POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:b93090f4035192c945f870b2eee9fdf478af55a0448ab523d3aec45c291afdea",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-07-11T05:37:06.000469292Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-05-23T19:19:30.413290187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8e81116368669ed3dd361bc898d61bff249f524139a239fdaf3ec46869a39921 in / "
                },
                {
                    "created": "2022-05-23T19:19:31.970967174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:22.837635258Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-05-25T20:33:22.933753658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.460844805Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-05-25T20:37:47.507259433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:38.222856648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:38.318450569Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=c23b6237c5231c791511bdc79098617d6852e9e3bdf360efd8b5d15a1a3d8f6a",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:50.361225427Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-22T01:42:51.421702718Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-22T01:42:51.950189662Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-22T01:42:52.04956407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.586248181Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-22T01:42:52.681515447Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.793914375Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-22T01:42:52.887636613Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:52.986764625Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:53.083701393Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:42:53.179541111Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:06.306477566Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:07.255732256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0beta1",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:08.261987122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:37:04.551095883Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-07-11T05:37:05.000728993Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-07-11T05:37:06.000469292Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24302eb7d9085da80f016e7e4ae55417e412fb7e0a8021e95e3b60c67cde557d",
                    "sha256:2acf3ef23fe40c473402ba194d56f1767dec088839e9a4ebdf47cecd6d285e24",
                    "sha256:14f83c4d2ba1b1c46d8135ee7c72a5ba7f27ee17065f36ed2e36873b016ffc54",
                    "sha256:6868de5646f277fee6de9d0baff05835136b2f3660ef725e13bfc5466114620f",
                    "sha256:8c5313cdd51883976756617fa8db78979b5a05cba0f2cbf363e8225ba49f550a",
                    "sha256:a45f874f12b33e08ef8c80f85822f07572cad3dc1d9fe240fe9bfe6cc10aa0d3",
                    "sha256:4d94b01dffa5f0e8d593c3cc005fbb4390a72a610f73490ea22c2dcd098e00e6",
                    "sha256:2cf5b9c0e8bb1eb45b464d910b7193e3bd9743ba6a6210a614c763b57db14bc2",
                    "sha256:06cc9263dbbc5fb7cdd7e173c7d89ef0ead2a1439746843e8c1ba31bad668627",
                    "sha256:e29e0baf4538aac814f2397d0f30b03fce49810839ffc37e69af55c7e8aef4a0",
                    "sha256:dae97a37b91a79ac007512171a07af3f72d1436bd1f2fd1c6f11044a8be23b9a"
                ]
            }
        },
        "14-3.3.0beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta2",
                    "POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:3d399fc1b7aefa49e6ae23ffcc7b9a94c3510fb868e0d57d1795a7d22901f841",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta2",
                    "POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:3d399fc1b7aefa49e6ae23ffcc7b9a94c3510fb868e0d57d1795a7d22901f841",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:55:14.000626206Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:14:17.004431915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.205735372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.303549593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:33.429507385Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:47:34.474987504Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:47:35.018381769Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:47:35.11671559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.668070989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:47:35.774100797Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.891612491Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:47:35.986966181Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.088885207Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.187067809Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.288836802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:47.801590597Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:48.32205737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:49.292534629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:55:12.048732511Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-08-22T05:55:13.000263382Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:55:14.000626206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:93219bfddf6b1a58aec69ed543cac85b53642ed351f9717a669da53a42df2610",
                    "sha256:23be7db949102a9e5a35f4d4778e35b63ca6c4ecffcba022e62670faf80c8c4e",
                    "sha256:40c843f13d81ef75586e62df56fd99932804e740239aab937d45156ecfccfda9",
                    "sha256:ba8f415989b173d759e0a93b2efc19412a36a16b07d84aaad05d496ab648a5a7",
                    "sha256:c7677b5e83e30c34bc6ce8a05a0f52b0b94c757baa23ddf278ef4b528394c32f",
                    "sha256:1ea058f6d516f9d9c08698ba3a7583a01433795a9719973de002026105727dc0",
                    "sha256:d3f917d3dd5a2233a1b6280a2d6c8f1c3f514803cb62ea165f073d19e57b36fb",
                    "sha256:d4b5f4e9902b2e1e71aaf191ec2a6d71ae5115f607191189d1b67e38818eb2e2"
                ]
            }
        },
        "14-3.3.0rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc1",
                    "POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:59861afe0a91e31e661da7b6298924bb04cc6eb1dc53a0631a995d128675d070",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc1",
                    "POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:59861afe0a91e31e661da7b6298924bb04cc6eb1dc53a0631a995d128675d070",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:52:29.000346731Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:14:17.004431915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.205735372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.303549593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:33.429507385Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:47:34.474987504Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:47:35.018381769Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:47:35.11671559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.668070989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:47:35.774100797Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.891612491Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:47:35.986966181Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.088885207Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.187067809Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.288836802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:08.451198681Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:09.300438343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:10.216805741Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:52:27.554567353Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-08-22T05:52:28.000748951Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:52:29.000346731Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:93219bfddf6b1a58aec69ed543cac85b53642ed351f9717a669da53a42df2610",
                    "sha256:23be7db949102a9e5a35f4d4778e35b63ca6c4ecffcba022e62670faf80c8c4e",
                    "sha256:40c843f13d81ef75586e62df56fd99932804e740239aab937d45156ecfccfda9",
                    "sha256:ba8f415989b173d759e0a93b2efc19412a36a16b07d84aaad05d496ab648a5a7",
                    "sha256:c7677b5e83e30c34bc6ce8a05a0f52b0b94c757baa23ddf278ef4b528394c32f",
                    "sha256:cf0635c3323af81e43e61e5096690d6a0a47d67eb50fcd434a83a5ecb560115a",
                    "sha256:3eeab8feca5d1890a462e2eceefe4277890cb3b293809ce04e262b52d9611964",
                    "sha256:8cd412ef6d24c74211d4453c3b29af65310e5b4b887aee392878b600b87053f6"
                ]
            }
        },
        "14-3.3.0rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc2",
                    "POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:4615579e20306cff28336a19db66cde46b13f30bcc91bcdf9283a2522250b1c3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.5",
                    "PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc2",
                    "POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:4615579e20306cff28336a19db66cde46b13f30bcc91bcdf9283a2522250b1c3",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:33.000985089Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:14:17.004431915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.205735372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:44:19.303549593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=d4f72cb5fb857c9a9f75ec8cf091a1771272802f2178f0b2e65b7b6ff64f4a30",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:33.429507385Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:47:34.474987504Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:47:35.018381769Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:47:35.11671559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.668070989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:47:35.774100797Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:35.891612491Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:47:35.986966181Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.088885207Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.187067809Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:47:36.288836802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:28.414695282Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:29.267298731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0rc2",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:30.260804591Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:30.937801253Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:32.000974336Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:33.000985089Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:93219bfddf6b1a58aec69ed543cac85b53642ed351f9717a669da53a42df2610",
                    "sha256:23be7db949102a9e5a35f4d4778e35b63ca6c4ecffcba022e62670faf80c8c4e",
                    "sha256:40c843f13d81ef75586e62df56fd99932804e740239aab937d45156ecfccfda9",
                    "sha256:ba8f415989b173d759e0a93b2efc19412a36a16b07d84aaad05d496ab648a5a7",
                    "sha256:c7677b5e83e30c34bc6ce8a05a0f52b0b94c757baa23ddf278ef4b528394c32f",
                    "sha256:009950f07b4008eec9110d31b42169a2730288020b9afbe1069e6f7f4a5c7220",
                    "sha256:b1171ef483a893b0e003833453d4de47c0b71fc053c39ae3f2dbebf1744b61b9",
                    "sha256:11fa498da8c115334a5afdfc7cabebb7e5d21e4ec379178358a6f1d640e8dd91"
                ]
            }
        },
        "14-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.12-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 14 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:57.575137324Z",
            "history": [
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PG_MAJOR=14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PG_VERSION=14.12-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:57.310152208Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 14 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:57.310152208Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:57.310152208Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:57.310152208Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:57.533828112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:57.559621675Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:57.575137324Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:fe9f3104f291aecf49ee821cb924555bbc08f580a9af5207d6b6c437c6a025a2",
                    "sha256:c9cd9fdd1e7a77f6316999d4916c790115f42b3879a6bf6c85692c3ba1785f48",
                    "sha256:1530340069159adc0abaf6d4c84da923cb8035eb5c149c7624dc37cf4898389a",
                    "sha256:393daf211b08c42d3f8ece80c0397620e17f05d7c81414f1f93145fc3b74b676",
                    "sha256:e86f5fc3e083d89e828ff4ea349da4a20012b107906b181b57d482e4f0109cec",
                    "sha256:a6b02d8d065d5804eab88370c45e7b6e63c17fdde69e9d77a3add8edbb94cbc5",
                    "sha256:eb729ffb640ae538ddccf9557f5f774d4147f963b3d4c535201ce00680fbf8f4",
                    "sha256:3f0f240cdf4ca0883fd6cb736c8bf099c8439b7a1c7216e9c5de9124f42bb8f1",
                    "sha256:a1eccf2329b002102dee5bb8bc26ff9488f62f689d7a233739580a7f4cc55ec6",
                    "sha256:dc26673033f48d18999c7881842ba2cc19b63a5d46841f1ec8901eb176912856",
                    "sha256:14ba3ffbc6337b74c709ad5ccca5c998807ec9d550c0b4face60c2da963352be",
                    "sha256:d48c6182b164b68213525766586339c92e682eb7ec88e951605747a5911deee0",
                    "sha256:19209b659da8fd3507a9008c2e78164315b9a04c0e498b3ba054e58c62cb9344",
                    "sha256:11cadc6cce6e6e685c9a1c8cf3ac2723ea9ac83ff06374df3db50d766ca74d4c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:120437a35174679d08ca1c054a1944bb70e4b2e819daa0dd4dd888e2875b1b74",
                    "sha256:425f480cb2184a75d2a4576477e335a502f42f619a5aca4b68db9e035ef8a02f"
                ]
            }
        },
        "14-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.12",
                    "PG_SHA256=6118d08f9ddcc1bd83cf2b7cc74d3b583bdcec2f37e6245a8ac003b8faa80923",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.2",
                    "POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2 spatial database extension with PostgreSQL 14 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:28:01.500471082Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PG_MAJOR=14",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PG_VERSION=14.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PG_SHA256=6118d08f9ddcc1bd83cf2b7cc74d3b583bdcec2f37e6245a8ac003b8faa80923",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:31:12Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:01.472399593Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2 spatial database extension with PostgreSQL 14 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:01.472399593Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:01.472399593Z",
                    "created_by": "ENV POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:01.472399593Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:01.485418659Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:01.500471082Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:aeb72166d6081c6bfd75f8fa4718fc8d3d24d32282a9eb0515d06f53ef886929",
                    "sha256:8a6d727a0904c0a269ead6beb9263e70dc6aab561b9903822f997c1d875c1225",
                    "sha256:7220baf236fea9bcc5047b6d570578b75ae5c5247f5cfdec2ba00a151d76838c",
                    "sha256:481d09cdc2abcc626769271093896bcd168f8b0d70d91d2a5a51b1da9457c357",
                    "sha256:0a5b246979ab5e44fa13ccd209cac848a98c82882dfa4a6ffcbd6a5b03491581",
                    "sha256:d2d2515df193e006b3a8c34f0153b19bb21458b27aa7fe49df6b2f37f9dd11c4",
                    "sha256:b56242a84b065f480fa2fed5ac02e9122f4ad42bb538dd0760d46ad3d08ed5ed",
                    "sha256:edb1b1c91a6528f8aeefd4c1b87b10d8bad303c595c77e177da46950a609f930",
                    "sha256:9126d98d8d60c8807fa3621d393f707bd0d328450980995927b7d16d3ec0d85f",
                    "sha256:b9193d9ba8d68b36e4fbe30288476ca74750038501f2d21e10f45bd1421fc095",
                    "sha256:7c4079711dc6daa7dd148b3f4580f7ba50995e43a3e1969207a6e127356498a8"
                ]
            }
        },
        "14-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14.9-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=9c9a2690fb4916c249342f3c2dcd08ccd99b7ac8",
                    "SFCGAL_GIT_HASH=fc4dc5640e402c8b00426b5a3562324226725df9",
                    "PROJ_GIT_HASH=4a14240a606e5d2ba091a922f52cd3f38dba258c",
                    "GEOS_GIT_HASH=15185e65b3e7bc671cf693c97cf103125fb4a171",
                    "GDAL_GIT_HASH=7dec7e98b6be558ef76e1c17262994610a532573",
                    "POSTGIS_GIT_HASH=cc7a8ca0871ae2114e920aa7472c639ec80abe7d"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-09-11T05:55:14.666849034Z",
            "history": [
                {
                    "created": "2023-09-07T00:21:13.444807009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb5fcc80c057b356a31492a20c6e3a75b70ed70a663506c8e97ad730ae32a02d in / "
                },
                {
                    "created": "2023-09-07T00:21:13.838729514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:13.765137075Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-09-07T14:23:19.183679464Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:19.311321222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:26.862178498Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-09-07T14:23:33.281642868Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-09-07T14:23:33.440246538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:37.313145995Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:37.867702596Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-09-07T14:23:39.012907332Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-09-07T14:25:38.182196764Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:25:38.268481006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:25:38.348623917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14.9-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:25:57.631473001Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-09-07T14:25:58.841911224Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-09-07T14:25:59.437435769Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-09-07T14:25:59.525045817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:26:00.052613262Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-09-07T14:26:00.147804919Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:26:00.250787095Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-09-07T14:26:00.336916331Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:26:00.433034578Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:26:00.531085134Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:26:00.629770985Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:26.542882043Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:26.542882043Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:26.542882043Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:51:39.913453833Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=9c9a2690fb4916c249342f3c2dcd08ccd99b7ac8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=fc4dc5640e402c8b00426b5a3562324226725df9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV PROJ_GIT_HASH=4a14240a606e5d2ba091a922f52cd3f38dba258c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV GEOS_GIT_HASH=15185e65b3e7bc671cf693c97cf103125fb4a171",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.169487334Z",
                    "created_by": "ENV GDAL_GIT_HASH=7dec7e98b6be558ef76e1c17262994610a532573",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:51:40.498510299Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:51:40.498510299Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=cc7a8ca0871ae2114e920aa7472c639ec80abe7d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:55:13.970551351Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:55:14.272456706Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:55:14.302420603Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:55:14.330995909Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:55:14.666849034Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6e3b92711bf1028e9565d1f7bdae6de5d1323597de24629c27d757060eaa3019",
                    "sha256:a88919c1a9f013143ee1300d545363cc13eaeae888126515c66f4e2f808a4b1c",
                    "sha256:a6cede517eeb1c3cecaf97db0ac5c532e640e553c3eb01f7c82500bc50b1802f",
                    "sha256:ebd1959f07a8ed20fb387e320b18752de5cf2be1d53e638eba2de357acf94c87",
                    "sha256:fa0184627c18873cfae686441e291d14d3e670f36e86788f73632d1a9c2c0108",
                    "sha256:727675f0080cb756b1fdd53cda8d2010cf408e55c8ade99773a4050703494d01",
                    "sha256:fd3531f1797ceabdff2e259088429cb3b434b9e6fb1adbb6e3d1a0e03f82eb90",
                    "sha256:05698033e19d12c65bb9ddb98bc37a0b0bad52d16e7c22fd05d41d5be03daff9",
                    "sha256:1bfb4f57fc77c62f6eef1123fae54a73423a99b428b2cc495ebf2d1d70c06ab0",
                    "sha256:6b18001ec21cf2f8384b09275008cc5e1ff00dd9acb515eb30641313ab1cc515",
                    "sha256:699e4eda395f44c7c692db87294e1661fcd53ab7fbe69475bd4f63738c129ade",
                    "sha256:a8763848e0360750af2a1a797806c8df09ea5aa81a3335f9809e6f8f24757bb8",
                    "sha256:6655494c7e35fd3a4371edf8da3ce0f7fcd81daf8b696093a391cf11d0cb9bcd",
                    "sha256:5c521d4f279959543f32cf0405f2689a73902547ed8231e56e15fe923d5da28b",
                    "sha256:a2aeea56ecf725dc3e99819d9b7118ea4f1a4a67322fb1bff47849a809d90867",
                    "sha256:a7bc00791129bf229e13f5f086ece9e14ca6207ba73a0a4537266c94e87abb47",
                    "sha256:8f6de29f4bf69cc95c496d4259036ddd3d74a01b43de490f492db2f5da9f4d3a",
                    "sha256:efb4aa8b039a4ea586dbd220055a952021211102669e18ea444135916a50b6f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:071e26d23c7705fb3b29f5d16ffd394613c2aaa14d012c65a1f16338277cf01b",
                    "sha256:07e0ebd53349a25c77aa0dffb7ba948730731843860006b9feb2ed5f405956da",
                    "sha256:cbf78c319f8f0ba23fbf3f9b52a51a7992f8f840af6d7a68d3c0352f7d53eb5a"
                ]
            }
        },
        "14beta2-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~beta2-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.2+dfsg-1~exp2.pgdg100+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:18c7f1456ea06249b2eb8eb7145a7bdd94630b67f40a038c9bffab05212722bc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~beta2-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.2+dfsg-1~exp2.pgdg100+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:18c7f1456ea06249b2eb8eb7145a7bdd94630b67f40a038c9bffab05212722bc",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-08-09T05:23:01.000141103Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-07-22T00:45:43.828746523Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:45f5dfa135c848a348382413cb8b66a3b1dac3276814fbbe4684b39101d1b148 in / "
                },
                {
                    "created": "2021-07-22T00:45:44.255062023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:28:00.408472989Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-07-22T14:28:01.255393873Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-07-22T14:28:01.465644621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:28:10.52830527Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-07-22T14:28:17.459606286Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-07-22T14:28:17.73058221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:28:21.73899388Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-22T14:28:22.57343201Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-07-22T14:28:24.921996379Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-07-22T14:28:25.104432413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:28:25.28975623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:28:25.483860982Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14~beta2-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:21.076432179Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-07-22T14:29:22.371289385Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-07-22T14:29:23.150489616Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-07-22T14:29:23.371914527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:24.160020273Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-07-22T14:29:24.36180996Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:24.600167727Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-07-22T14:29:24.797130368Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:25.016980576Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:25.231186784Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T14:29:25.455843203Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:40.784210422Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:41.409451205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:42.400222731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.2+dfsg-1~exp2.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:57.846865021Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-09T05:22:58.754307796Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:23:00.000190493Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-08-09T05:23:01.000141103Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:814bff7343242acfd20a2c841e041dd57c50f0cf844d4abd2329f78b992197f4",
                    "sha256:cf1a7dfa9364c1558a8b0717f07fe652f46c0ee70dba828cc580b913c9a5c81c",
                    "sha256:58e95b0f1a4bbac3397514fb1f8912f1be84b8f86386ca818d74dd813011f320",
                    "sha256:99faaa136cf996c0698f61ab1abc86121113c919dea09e78149271bd12cee1c4",
                    "sha256:1ed3400fd210c4c41bf4d6f1f047638780897390da6bead7a2f20b670db8d67c",
                    "sha256:c9f9c1aaf61c7945e541e0527f20733cc9e9801879cc84826f91d88b66a332b2",
                    "sha256:334505e9c5ffc41c455470962e042b440be692683ca13c924ba1e1f105180cff",
                    "sha256:6763670a97b5c3887647464c608071387ab159095416947cf19f086d1863922d",
                    "sha256:c00b9de6ddef08ffe045b055e5c32a0155aef1d8ef08789c2a2bcab5079db4b7",
                    "sha256:78927ce869ba2c343576819d7a974b6b6922f7944914580c19515ed00938824b",
                    "sha256:2e653eec2536f581e7634ff0ee0e9b444ef454529c62cbfaa9db28e011cab7c4",
                    "sha256:4f6960de7714defd902bb8822c6d827a8cdcf9bafd8921535833d14624ebefcd",
                    "sha256:789cdd091db97a0b5b78c1efe6b727c83fd4497d8c3cd30ff07afbf6e0e36ff4",
                    "sha256:c0af574195cb4f0a461e0c9a9a6d00eefbedfbaf8e5a738650d54a9fd1c38774",
                    "sha256:894fc24e0f3522db9d12811e502d488be788265650ceb5848a50c8605dfbef4c",
                    "sha256:d977b5698f81d7fd4507a4eb08583be2a1b299be565775ccd2ac43ade6c80c17"
                ]
            }
        },
        "14beta2-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14beta2",
                    "PG_SHA256=ffe64a76f50a2363443c1c9dc2195138933e931e351b74fb35a7935eae7c60a5",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:0db43f21e0b74f1d020ceb475e5ca6de3b2b3c8932f8c79ab4c41043eb53bb81",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14beta2",
                    "PG_SHA256=ffe64a76f50a2363443c1c9dc2195138933e931e351b74fb35a7935eae7c60a5",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:0db43f21e0b74f1d020ceb475e5ca6de3b2b3c8932f8c79ab4c41043eb53bb81",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-08-09T05:26:32.000218323Z",
            "docker_version": "20.10.7+azure",
            "history": [
                {
                    "created": "2021-08-06T17:19:45.007652184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34eb5c40aa00028921a224d1764ae1b1f3ef710d191e4dfc7df55e0594aa7217 in / "
                },
                {
                    "created": "2021-08-06T17:19:45.183996158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:09:36.362903635Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-08-06T20:09:36.555482633Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:09:37.383874109Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-08-06T20:09:37.575496346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:09:37.771511543Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14beta2",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:09:37.946350186Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffe64a76f50a2363443c1c9dc2195138933e931e351b74fb35a7935eae7c60a5",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:01.682181547Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-08-06T20:16:03.587679515Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-08-06T20:16:05.207070273Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-08-06T20:16:05.542791005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:07.139210076Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-08-06T20:16:07.485937666Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:07.871856439Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ad28506adc606e446eefc263bc99d4cb809e608d4f550956143bf13c82c91f85 in /usr/local/bin/ "
                },
                {
                    "created": "2021-08-06T20:16:08.219532844Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:08.531257149Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:08.77558723Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T20:16:09.107152415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:39.516783662Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:40.242507969Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:41.23534934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:22:42.23972477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-09T05:26:30.432872617Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-08-09T05:26:31.000272581Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-08-09T05:26:32.000218323Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                    "sha256:5fb863e55ed32351022ef985a180ac8ac3e51e30f002cbd2a187098fb6114188",
                    "sha256:4121b0cd2744bb4bb1458643cd84cc48e69a17cb4acdae10d91b1d12257575e5",
                    "sha256:f2a1c13de4b3fd034705349989d616844724ffb90952593c8199698bf1287681",
                    "sha256:f0c9a922b9163dbe6506548f8e074e7619c364fe9fce85a365a1873534e2e2ac",
                    "sha256:7fb3f24e278457757effda97e71d7f9b8bdaed27ad16a4b8a798caea1de201ce",
                    "sha256:9049dd76aec43c85917a3560c30b6d3d7c6abbdff5ec7aacb928d29ad24b230d",
                    "sha256:d5b20eb721a42223b623d4e06371c55e81c1d6ce2ff22f38e2a888054dfac7d1",
                    "sha256:855a298bdbdb105d9ce9b8e92a2e814f103613f04a7e63856d83a550e573a34e",
                    "sha256:38f538c18a658bd47c7ab3aec4e49f03d59d64d903d498710fb23b7e1711f9c2",
                    "sha256:30368b6166e42b0d62a688e68ca34cfee99e46c2ab18fe47417396699b8773e0"
                ]
            }
        },
        "14beta3-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~beta3-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg100+1+b1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:c65471153930c28d34d8ac9e136d4f4eedf57c0f29f41bee9af543d56f855c43",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~beta3-1.pgdg100+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg100+1+b1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:c65471153930c28d34d8ac9e136d4f4eedf57c0f29f41bee9af543d56f855c43",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-20T05:23:49.000219096Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:46.511313656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4ff85d9f6aa246746912db62dea02eb71750474bb29611e770516a1fcd217add in / "
                },
                {
                    "created": "2021-09-03T01:21:46.935145833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:32.504358443Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-09-03T12:54:33.621883458Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-09-03T12:54:33.912313263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:54:45.512002607Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-09-03T12:54:54.572897745Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-09-03T12:54:54.869850191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:00.108452536Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-03T12:55:01.285118337Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-09-03T12:55:06.712152447Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-09-03T12:55:07.093379991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:07.442790163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:07.786628171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14~beta3-1.pgdg100+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:37.309518394Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-03T12:55:38.777451179Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-03T12:55:40.032356314Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-03T12:55:40.311581467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:41.434346186Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-03T12:55:41.718833296Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:42.023995218Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-03T12:55:42.271397312Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:42.567680205Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:42.852463862Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-03T12:55:43.103397355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:25.909341241Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:26.503326521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:27.500860298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg100+1+b1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:45.608070301Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-20T05:23:46.705027211Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:48.000934184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-20T05:23:49.000219096Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d000633a56813933cb0ac5ee3246cf7a4c0205db6290018a169d7cb096581046",
                    "sha256:733594622444d04426ad9182ce825008a7b00c280607f058fc128866886ba1b2",
                    "sha256:c887bd51f64c95ace786af0eb0b2778146960ef5efde69eeb2286c1fc558ddf6",
                    "sha256:2d33298646f65eb55cca6653e13a1f283df63c6542816aade3fa72551397f88b",
                    "sha256:5a0f46a202ce686f1a902981bd2744871caee98916667873a48f255e94aecc71",
                    "sha256:281e98faed22a25055ba11d132c5f095edafada81671395cad2f8f1f8b525fe5",
                    "sha256:6a04aa512009783fd235719ee20cf3787bf71a9477143b6e0daebc91edbcfb06",
                    "sha256:6606c7ee11a941145a9d32a26faffe7026485c5c7f94c28fc02f0a16ac0ef3d6",
                    "sha256:c09c00493efda3e5badb42ba490d7cf5d557c293be8ffa0eb62a74e0ce748753",
                    "sha256:dd8468674b2b85d14e954dbfb88f4bd8f52e8ebaf7a84475124603f61cd04fcb",
                    "sha256:b1276c4c48eb539333cc6e663c64319829bfada5708239cf9092c1a18114326f",
                    "sha256:7a33caa4ceddf38747d6d683a290968e0422e5905db990434b6bc3b183f984ab",
                    "sha256:d350d620b6a8213ad4d237d2bfc1b9d8c0580f7cf73e8b3fac686994117493da",
                    "sha256:0d7edecc31fa440c7be0276eb3cda2ada258a6939f65262fcd16b4aaeadb7296",
                    "sha256:b079182112e9aa4992b4256313290c18d69c39d9d7a162ba4f7889e45940be6d",
                    "sha256:6a5ceb250383bcef81d911b0e8a8296d6aa7b98b1d071720c9f6ad6036707509"
                ]
            }
        },
        "14beta3-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14beta3",
                    "PG_SHA256=2ea265980193db70106576201a2fee5b2d72bf9890d3911ddd374d4830624bfa",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:709ae60f4b28d2d7d27d33d715ccb70563c96eee0758ce9b2c9bd69d8bb379ee",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14beta3",
                    "PG_SHA256=2ea265980193db70106576201a2fee5b2d72bf9890d3911ddd374d4830624bfa",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:709ae60f4b28d2d7d27d33d715ccb70563c96eee0758ce9b2c9bd69d8bb379ee",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-20T05:27:21.000147126Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:02.103800238Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-08-27T22:48:02.294820462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:03.449366625Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-08-27T22:48:03.803947914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:04.088345302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14beta3",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:04.339905501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2ea265980193db70106576201a2fee5b2d72bf9890d3911ddd374d4830624bfa",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:41.317948196Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-08-27T22:54:42.4072771Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-08-27T22:54:43.218006791Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-08-27T22:54:43.414345949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:44.166372393Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-08-27T22:54:44.358203633Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:44.571002835Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ad28506adc606e446eefc263bc99d4cb809e608d4f550956143bf13c82c91f85 in /usr/local/bin/ "
                },
                {
                    "created": "2021-08-27T22:54:44.747009165Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:44.939364989Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:45.130734192Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:54:45.314813623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:22.624272323Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:23.235259663Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:24.241979408Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:23:25.23770803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-20T05:27:19.721360728Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-09-20T05:27:20.06361989Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-20T05:27:21.000147126Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:4b1cafa84ccb94a58e4d1f418f00d458493e1e2edae5bbd49373af62d85e9251",
                    "sha256:bd931a2c2e2040c320b73c8df4a85198e874761593e31628abadedbb4e6c0cbc",
                    "sha256:d6f29b61d6967f1d66a3882bba82edd481b608cf8b24e447a22a23c40e382089",
                    "sha256:97c8f7a65200747041fc03f15b8853a65d9df6d10905a1515e8e180dfa1fb34a",
                    "sha256:1382b654280b1bc985322a29f65a20d955e3e904021002303326150830e96988",
                    "sha256:79705d40e71d0de4b457feaab888629b195ea9284f37125a0340bf599b659025",
                    "sha256:088e9a83d4d52d1ae0462b8126fb89280290534f9c7cd1ecc513faf9f7dbb6d5",
                    "sha256:ad6f0671ade9dcd1cbd742f2e45f5a83e22131daa966747546488fcf7ef4b102",
                    "sha256:204ac49d0bc2e3ab4404777019854fb9297ac6a44e8a998e57cff07cc745954d",
                    "sha256:e902a019438459f9c8f4dfb86da359ff41a356e8004bb017418aab7b9aa02dda"
                ]
            }
        },
        "14rc1-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg110+1+b1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:8e38d061af352412b925a966638ae6e79c58b8edb89266d886562ba1e69b32bf",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg110+1+b1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:8e38d061af352412b925a966638ae6e79c58b8edb89266d886562ba1e69b32bf",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-27T18:32:23.000945248Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:21.509121647Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:19d7ba0fceddd7fc78b5fb96cf8110e5d10e0e5d2554030dfe640d161379cb79 in / "
                },
                {
                    "created": "2021-09-03T01:21:21.94334346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:33.367877321Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-09-23T23:48:34.309719094Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-09-23T23:48:34.532058391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:44.241253198Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-09-23T23:48:51.431874202Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-09-23T23:48:51.719430883Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:55.988798932Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-23T23:48:56.914585329Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-09-23T23:49:07.516660514Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-09-23T23:49:07.74036849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:07.948493818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:08.14342265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:31.794591194Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-23T23:49:33.161862143Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-23T23:49:33.975633304Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-23T23:49:34.152202099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:34.979713424Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-23T23:49:35.179128833Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:35.421516229Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-23T23:49:35.624114844Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:35.821232971Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:36.032925614Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:36.259627422Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:00.810801844Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:01.453172344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:02.461901736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.3+dfsg-1~exp1.pgdg110+1+b1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:19.740842798Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-27T18:32:20.707467022Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:22.000240843Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-27T18:32:23.000945248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba5a5fe4330168081f2a7e46f72c7552456d4d604ad27feadbe76ec86598587e",
                    "sha256:7bc17cafebe9ab9957f9a184425c348174966804326646ed490f7e53b7a1a1a0",
                    "sha256:d40670476962ffdf8b8657aa3096f1c1abb22e7528649fe1d2b0a8de43feed9c",
                    "sha256:de6ac0534a8efff13b2826ce135b05b3df44a7a2a80da2bac2711a7e63865254",
                    "sha256:c39719820c7ef3ae6dc842bd1d67dfb2115a173391be56801f5eac9f57dd551b",
                    "sha256:0bbf7ea2a1a29377ea2d2113513bdc532bd204765123e876f47319d786c2da44",
                    "sha256:799a2e01058bff968a6f7fa55ff4834c536bd274b981a8df3a5217c81d539d84",
                    "sha256:4938863fde75a15f00d28ce0ed48514c2ac966379f4fbfe803f871570ada31aa",
                    "sha256:797a951b52e0d7d29334aee34b347997b31e67aa1cf87cd436062f2c5c5358f7",
                    "sha256:92536e868da52b3cd4053ed69b17e6ef3917f98c65b98ce461214b5cead7fda1",
                    "sha256:2305d3847584e6759a7d0baf2bec0dde46aaeac563634880038e657323ba8975",
                    "sha256:216c469a04233af45b2e02f4934e82b998858dedd82391adfbee008d6d84f60a",
                    "sha256:000c9110184859ffb8bf55c56f174594a0d1e7ee258470371912b11290e0dcda",
                    "sha256:25799fc51442c79497120054bd82ab24c767900f5e9e4062d4aaab77eb6f45f1",
                    "sha256:4dc3747f45125e9dceab31122455d4d845bca7eb1591dc4e0d5914bd019e68aa",
                    "sha256:05198627932ca81e352b8393d30c729a0050d27a62dd9e3d29a25e85b1abe85d"
                ]
            }
        },
        "14rc1-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14rc1",
                    "PG_SHA256=586a816cb7811985f474eda0d4926fabd2378f0f6d5659d12fba421d38a07616",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:c47b497426c1bd6dd629dd4de71a5958e9c21b0fd4c589ecfebb8c21fd1e5989",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14rc1",
                    "PG_SHA256=586a816cb7811985f474eda0d4926fabd2378f0f6d5659d12fba421d38a07616",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.3",
                    "POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:c47b497426c1bd6dd629dd4de71a5958e9c21b0fd4c589ecfebb8c21fd1e5989",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-27T18:36:07.000831515Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:02.103800238Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-08-27T22:48:02.294820462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T22:48:03.449366625Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-08-27T22:48:03.803947914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:39.459322268Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:39.656567699Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=586a816cb7811985f474eda0d4926fabd2378f0f6d5659d12fba421d38a07616",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:55:59.190074521Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm11-dev clang g++ \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-23T23:56:00.39207431Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-23T23:56:01.188686048Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-23T23:56:01.424123333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:56:02.252602331Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-23T23:56:02.459707682Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:56:02.700358101Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ad28506adc606e446eefc263bc99d4cb809e608d4f550956143bf13c82c91f85 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-23T23:56:02.904265423Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:56:03.157165778Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:56:03.380359953Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:56:03.636459732Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:31:59.335782163Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:00.240352489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:01.245184212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=885e11b26d8385aff49e605d33749a83e711180a3b1996395564ddf6346f3bb4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:32:02.232866311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T18:36:05.091595299Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-09-27T18:36:06.000254821Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-27T18:36:07.000831515Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:4b1cafa84ccb94a58e4d1f418f00d458493e1e2edae5bbd49373af62d85e9251",
                    "sha256:bd931a2c2e2040c320b73c8df4a85198e874761593e31628abadedbb4e6c0cbc",
                    "sha256:05abc5202b10b1af2ef212b88ee7ebfd4ff902cc3dca17e3fb241f03d625b877",
                    "sha256:00232c2a681d257298ed8895265f871c4de82a1089055d1c62f3720678b6cc29",
                    "sha256:a301246e3fd58d98a658d70c5747f72197a3dd2136abe834b2113a8647a22193",
                    "sha256:b85d8674a61dccbb4bb0cafc35c88c51cc9d1cc45ab4d43f6deaf55627199c61",
                    "sha256:e953d8f0b088dd04fb12973f1471be0e870129adedcf17c29d8f0ce44360e7cb",
                    "sha256:8052305328445293143f427d9c41d582a619f226e34632f91af4f31b215fc2ee",
                    "sha256:68d4bfd229d32d9e5d71b196046dc2e10942ae547fb39dd950163af24ea7cae5",
                    "sha256:d71635984cc53f3d740d83c202da324f780ab531c35d5c3f6aac288aa0090d08"
                ]
            }
        },
        "14rc1-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=35fe5da17d67f793336decbc6e9280fe8f26ca8f",
                    "GEOS_GIT_HASH=d107fccbdffb127af3b571a8f238e700a725984b",
                    "GDAL_GIT_HASH=d3f2a360f3f21b85df8ed4c580914248ade7cc38",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=0568b9c6c628ac55c643cd017c8edb5315718d7c"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:99dd5de09567e502bdf60ed6575b6b4219521b5985721e269806b1ae11f4d3cb",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=14",
                    "PG_VERSION=14~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=35fe5da17d67f793336decbc6e9280fe8f26ca8f",
                    "GEOS_GIT_HASH=d107fccbdffb127af3b571a8f238e700a725984b",
                    "GDAL_GIT_HASH=d3f2a360f3f21b85df8ed4c580914248ade7cc38",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=0568b9c6c628ac55c643cd017c8edb5315718d7c"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:99dd5de09567e502bdf60ed6575b6b4219521b5985721e269806b1ae11f4d3cb",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2021-09-27T19:14:05.000780934Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-09-03T01:21:21.509121647Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:19d7ba0fceddd7fc78b5fb96cf8110e5d10e0e5d2554030dfe640d161379cb79 in / "
                },
                {
                    "created": "2021-09-03T01:21:21.94334346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:33.367877321Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-09-23T23:48:34.309719094Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-09-23T23:48:34.532058391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:44.241253198Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-09-23T23:48:51.431874202Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-09-23T23:48:51.719430883Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:48:55.988798932Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-23T23:48:56.914585329Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-09-23T23:49:07.516660514Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-09-23T23:49:07.74036849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=14",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:07.948493818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:08.14342265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=14~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:31.794591194Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-09-23T23:49:33.161862143Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-09-23T23:49:33.975633304Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-09-23T23:49:34.152202099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:34.979713424Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-09-23T23:49:35.179128833Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:35.421516229Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e9c9c5e19c7b014c81f4ef8bcc5c1f247c4d9b165d34d35e9a28ca5adb5e0ab3 in /usr/local/bin/ "
                },
                {
                    "created": "2021-09-23T23:49:35.624114844Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:35.821232971Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:36.032925614Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-23T23:49:36.259627422Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:09:24.121565279Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-27T19:09:32.111313959Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:89792a9c95725331955e9650b63ce2a13c7c53ad1dd9d79b924b8a74d98e8927 in /usr/local "
                },
                {
                    "created": "2021-09-27T19:09:32.673941617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=35fe5da17d67f793336decbc6e9280fe8f26ca8f",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:09:33.536206939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=d107fccbdffb127af3b571a8f238e700a725984b",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:09:34.506964476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=d3f2a360f3f21b85df8ed4c580914248ade7cc38",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:09:36.026562081Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2021-09-27T19:09:36.53711038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:09:37.54140689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=0568b9c6c628ac55c643cd017c8edb5315718d7c",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:14:02.166447666Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://git.osgeo.org/gitea/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-27T19:14:03.157118721Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-27T19:14:04.000671176Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-09-27T19:14:05.000780934Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba5a5fe4330168081f2a7e46f72c7552456d4d604ad27feadbe76ec86598587e",
                    "sha256:7bc17cafebe9ab9957f9a184425c348174966804326646ed490f7e53b7a1a1a0",
                    "sha256:d40670476962ffdf8b8657aa3096f1c1abb22e7528649fe1d2b0a8de43feed9c",
                    "sha256:de6ac0534a8efff13b2826ce135b05b3df44a7a2a80da2bac2711a7e63865254",
                    "sha256:c39719820c7ef3ae6dc842bd1d67dfb2115a173391be56801f5eac9f57dd551b",
                    "sha256:0bbf7ea2a1a29377ea2d2113513bdc532bd204765123e876f47319d786c2da44",
                    "sha256:799a2e01058bff968a6f7fa55ff4834c536bd274b981a8df3a5217c81d539d84",
                    "sha256:4938863fde75a15f00d28ce0ed48514c2ac966379f4fbfe803f871570ada31aa",
                    "sha256:797a951b52e0d7d29334aee34b347997b31e67aa1cf87cd436062f2c5c5358f7",
                    "sha256:92536e868da52b3cd4053ed69b17e6ef3917f98c65b98ce461214b5cead7fda1",
                    "sha256:2305d3847584e6759a7d0baf2bec0dde46aaeac563634880038e657323ba8975",
                    "sha256:216c469a04233af45b2e02f4934e82b998858dedd82391adfbee008d6d84f60a",
                    "sha256:000c9110184859ffb8bf55c56f174594a0d1e7ee258470371912b11290e0dcda",
                    "sha256:501f2495001344ba795b9f79bd50be5ee2473bfc2f9ad919202386e19a30680f",
                    "sha256:b207a4311e696f8d7063f87ee07ad5e48f7f4aaac1364344c916e6728ddd05c7",
                    "sha256:a2a22b4f40e3947af4b35defad8bfd80424b2b8ada9535a8b99b694562bc7777",
                    "sha256:7a32ce8523fb7ad6a3bceb619a407b96c21902e8632d7df1118f2650cf05e2f1",
                    "sha256:0392c36bb1557d97056bfa6d105324fc0367a7ba715aa7c951037596ec6174e2",
                    "sha256:e32d63be5a1db5f49fb9d37e419c32affafb398208b33e53ed3c6bd140c2007a"
                ]
            }
        },
        "15-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.4-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 15 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:22:53.317596621Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:48:03.91372948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:48:03.998742848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:08.967242275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15.4-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:25.386427414Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:46:26.468536766Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:46:26.937455025Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:46:27.01589222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:27.56849984Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:46:27.653234463Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:27.74374454Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:46:27.82135053Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:27.90167054Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:27.985325561Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:28.068782296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:52.873755621Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 15 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:52.873755621Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:52.873755621Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:52.873755621Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.235110263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.270560203Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:53.317596621Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE1LWJ1bGxzZXllIiwicGluIjoic2hhMjU2OmY3MjJhYjQ0MGI0MjQ2ODEwZWQzZjJmZTY5Yzk3NzI5NTVhNTEzMzdlMjg5ZWMxYmVkYjQ0YTYzNWQwNTIzODMifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:68d5d478516682071f08ab28542117e52478b5e0b10065a10e2c5fc19dc4be87",
                    "sha256:630e94122e0be4fa3e4f364867abfb125069aa15f1f971715e4b77c5c38ae14e",
                    "sha256:12222fd0bbbbe519515950ff8c78c193647b7b50d02beb199088f4eacd268313",
                    "sha256:c4b5b21b61fdd979569374cd4acf345d53c05867a15ca20fe706dfa24f6fd968",
                    "sha256:a71b59337feb07426cbbd3936396f9defca94dff056043d912dd3abe8c5fbf9b",
                    "sha256:70dbb63c473d25b54cc62864e81aaf7e970e436ceb219ff162aa0723db4dc76b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa229e4d737d2cf093f053ffa5a937543c5919cff7c1f73c07ce3db8ee3767c1",
                    "sha256:5b58d72cdd84f60db8a9f31de37009fd78827cb7431173b94a90346a6fcc0022"
                ]
            }
        },
        "15-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.4",
                    "PG_SHA256=baec5a4bdc4437336653b6cb5d9ed89be5bd5c0c58b94e0becee0a999e63c8f9",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:26:37.975026755Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:32:50.219418963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.160511258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.245469264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=baec5a4bdc4437336653b6cb5d9ed89be5bd5c0c58b94e0becee0a999e63c8f9",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.332989932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:12.25547169Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:49:13.253082223Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:49:13.742057214Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:49:13.823000534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.275045397Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:49:14.358557514Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.449274225Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:49:14.527280104Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.611666827Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.728172779Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.815147914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:37.871905093Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 15 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:37.871905093Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:37.871905093Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:37.871905093Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:37.908612968Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:37.975026755Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE1LWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6OGJjM2M4OTMzNDJjNzY2NDgxZGY1ZmRlNThmYWI2ZjFhMTExNWI5NGViNTY3NzgxMjYxNjMzMDUyNDNlOTcwOSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:4e63d660f940bae3c0f838a9e859359458f9364d22cf91937378f30e127a3411",
                    "sha256:752ea847165638e6d90b04844089e669fcbf8922d023fe10b6db5422b3aad611",
                    "sha256:5dc8d9fe9551215f69441032e1642aafe3bffe8ced7b2aed16cabf488564f544",
                    "sha256:829ffa20a1ad163260ca3302e5fa8e99e131002823627dac06b8704c7f4c8b80",
                    "sha256:f8c29878cc223e6606f4b3ff98cdb0a0a38d329d2c8b742e08328277f8e53d9c",
                    "sha256:ff18e0b4c8825b9b16dd9f52b338f2d9c4f213d3d6c20c06eea6eabe111aee2b",
                    "sha256:36b782e6ce0a30b2bd71f04ad9adcf02a468d260c26e7538311b6b5aec188c1c",
                    "sha256:c51344dc8eee59c67b92735fe9b960ef335b82ce733e0bd41f4c18f806261be4"
                ]
            }
        },
        "15-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.7-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 15 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:48.344049329Z",
            "history": [
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_MAJOR=15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_VERSION=15.7-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:48.121545604Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 15 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:48.121545604Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:48.121545604Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:48.121545604Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:48.318610422Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:48.332743396Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:48.344049329Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:fe9f3104f291aecf49ee821cb924555bbc08f580a9af5207d6b6c437c6a025a2",
                    "sha256:992f462e54cc035a60409b4416b4be2973c6e1ebe93ab589d60861ae9f20f57b",
                    "sha256:c591541a08dd548cbf0c0d256bd50581838f1ac9fea07502255b5e4e62a79e76",
                    "sha256:d6c450952ecf67daf0e840f5a3ac8caf608bc53c6bddd430f42bf315abd08233",
                    "sha256:cd32253c487fec522c3cad97432e997d92cd6498febc40f01ee809b1c54196c6",
                    "sha256:ad0852652b20792ec91e18d238c592ea10d8403d9209ee0f4fa96acb75b1d354",
                    "sha256:1c2f607c2a1eb2ebee1408395e389d84dc4df1e90d2ec9040998a5cb59026b13",
                    "sha256:1d7cd95e3a362e683d881a6944a6e87248252d4ce7cac7d8fb9914d46c6359aa",
                    "sha256:aae0cbb6c4da2e352e7d140a111c99aabda61f97374f77342b85767cf9a26a87",
                    "sha256:dc26673033f48d18999c7881842ba2cc19b63a5d46841f1ec8901eb176912856",
                    "sha256:5ebfd48acf6cdfa2317e57761d341c6a88c341fe298c4f2ab01f5e3e052f0d62",
                    "sha256:a05f1fea03fc2cad9d849dd61c91e8a352b66179a76bae58b26befdbea8e81e2",
                    "sha256:ea50a959d3b14f43d71eb7835f63db1273f982dbefdedc9638ec2326d027ae35",
                    "sha256:8ff078079c7919e8f0772818863758fd0f84ca9c0a88e076fe7c7a710860644f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0e4ed0bd8b9c496cbfdce7caaad610855a28902f0c8d885d67ce806634976ea",
                    "sha256:23271b01d5496cb4c43294ada7ca278217dc063a2adb81ed052ebde6d0da55bf"
                ]
            }
        },
        "15-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.7",
                    "PG_SHA256=a46fe49485ab6385e39dabbbb654f5d3049206f76cd695e224268729520998f7",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.2",
                    "POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:28:03.142871116Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_MAJOR=15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_VERSION=15.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_SHA256=a46fe49485ab6385e39dabbbb654f5d3049206f76cd695e224268729520998f7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:03.110331886Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2 spatial database extension with PostgreSQL 15 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:03.110331886Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:03.110331886Z",
                    "created_by": "ENV POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:03.110331886Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:03.129763053Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:03.142871116Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:3e052f3975e0a6f5d5aaa37caf69d1f56b0fa5dd9e03daef0de02bb32dc18faa",
                    "sha256:582bfe8e01d8b79097ad3e155752125b2c814b416580c88c60d0db223b2ddf7b",
                    "sha256:572d0ec172329f962ce4d46586ce4cd3e36dfb024d1dbca7b43df839fa65b513",
                    "sha256:e030a3f00bfdd1432d5199befe4a93976b3dbabfbe8c2c17b74d25797acc2224",
                    "sha256:b8251b597994ee88d6218de40e338d8a5d6373da0172a458cee33a2170746fee",
                    "sha256:4eb0fd0980042de00c0c334545c9dab216f12b6614f8d69bb4c1724a6af20611",
                    "sha256:724cde2c26f30b0ea3ff740fb1e8d48238be815d1272b1a40cc5db2178723250",
                    "sha256:29d923d9ee43cf30b64a7bb55ba1c419aa1dbba757d85339417cf6acd197634a",
                    "sha256:dba2afd320a7f72af37a24fecc85b9ce3747a013f40ca83c8ea1eb35c2466290",
                    "sha256:d126ca97f54a291906a2c00a4bd6f6c1017e8e1e58a3b6c83014b6ce261a2735",
                    "sha256:1eea79ef2f7f539b09f271fd8422e47b608f896e929045523acf79301c394c42"
                ]
            }
        },
        "15-3.4.0beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.3",
                    "PG_SHA256=ffc7d4891f00ffbf5c3f4eab7fbbced8460b8c0ee63c5a5167133b9e6599d932",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0beta2",
                    "POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:409398762fe7d0721ef703aaab0feeda833137f1407ae5c5d2e79a601a019386",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.3",
                    "PG_SHA256=ffc7d4891f00ffbf5c3f4eab7fbbced8460b8c0ee63c5a5167133b9e6599d932",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0beta2",
                    "POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:409398762fe7d0721ef703aaab0feeda833137f1407ae5c5d2e79a601a019386",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2023-07-31T05:28:12.000174945Z",
            "docker_version": "20.10.25+azure-2",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:16:39.740696674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.818358989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.895257818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffc7d4891f00ffbf5c3f4eab7fbbced8460b8c0ee63c5a5167133b9e6599d932",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.973762924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:21.135742156Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-06-14T21:19:22.032216792Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-06-14T21:19:22.647448574Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-06-14T21:19:22.723168847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.222508633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-06-14T21:19:23.300187736Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.387628117Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-06-14T21:19:23.464281061Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.543269965Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.623509651Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.701467183Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:33.376195297Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 15 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:34.288744314Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.4.0beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:35.29021735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:28:10.120759144Z",
                    "created_by": "/bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2023-07-31T05:28:11.000205446Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2023-07-31T05:28:12.000174945Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:ca56acf03095e332cc76991b3257c6ad3eaa8fe63d90df916fb1d37da3ee70f5",
                    "sha256:d67c4070ec0dc4846c2ad18dfe9016c03a455733d1f4ecf6d8e853ba251d48ea",
                    "sha256:9edb40afd798b7e7462a6f030f789c060b2acde44be8b43eaf46e280ae8e9858",
                    "sha256:730fe4386c4a0d97f686591cd46959e9a1ada15ba2995f34943770f6fd9fc3b7",
                    "sha256:c7699a1fbefa9499c10c1e1ae60892cc00ee678225881b1085fe34ebf73de2db",
                    "sha256:c747d01d0e58952cc644668d8ad7666f1bfeff38e36ea80abebc39c7624a79f3",
                    "sha256:c01f1e5916b3076c94b23a30b0f4d8cfc4e4944fc892f4f127aae6452acde222",
                    "sha256:89341db64566fda20e830a03cb8851d655f94caddea9718e3669cf7bfa2f1264"
                ]
            }
        },
        "15-3.4.0rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.3",
                    "PG_SHA256=ffc7d4891f00ffbf5c3f4eab7fbbced8460b8c0ee63c5a5167133b9e6599d932",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0rc1",
                    "POSTGIS_SHA256=113cd54983823858f958c46941c2a06219e1d8d67913e6c93e18df2b94a50c58"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0rc1 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-07T05:26:41.049901281Z",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:16:39.740696674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.818358989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.895257818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffc7d4891f00ffbf5c3f4eab7fbbced8460b8c0ee63c5a5167133b9e6599d932",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:16:39.973762924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:21.135742156Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-06-14T21:19:22.032216792Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-06-14T21:19:22.647448574Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-06-14T21:19:22.723168847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.222508633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-06-14T21:19:23.300187736Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.387628117Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-06-14T21:19:23.464281061Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.543269965Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.623509651Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:19:23.701467183Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:40.958572101Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0rc1 spatial database extension with PostgreSQL 15 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:40.958572101Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0rc1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:40.958572101Z",
                    "created_by": "ENV POSTGIS_SHA256=113cd54983823858f958c46941c2a06219e1d8d67913e6c93e18df2b94a50c58",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:40.958572101Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:41.007993652Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:41.049901281Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE1LWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6NDhkODQyMmM2YWU1NzBhNWJkYTUyZjA3NTQ4YjhlNjVkZDA1NWFjMGI2NjFmMjViNDRiMjBlOGNmZjJmNzVmMCJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:ca56acf03095e332cc76991b3257c6ad3eaa8fe63d90df916fb1d37da3ee70f5",
                    "sha256:d67c4070ec0dc4846c2ad18dfe9016c03a455733d1f4ecf6d8e853ba251d48ea",
                    "sha256:9edb40afd798b7e7462a6f030f789c060b2acde44be8b43eaf46e280ae8e9858",
                    "sha256:730fe4386c4a0d97f686591cd46959e9a1ada15ba2995f34943770f6fd9fc3b7",
                    "sha256:c7699a1fbefa9499c10c1e1ae60892cc00ee678225881b1085fe34ebf73de2db",
                    "sha256:1b27c3bc3fb07f27319eca095e1a7cebd477fc6594f315674f5ab797427c0a26",
                    "sha256:9ec2ecab27b9b7eb8291dcf776dffee3fcfaab7523971f6fb5336d9d6c5186fd",
                    "sha256:01322d8f5f0ac3dfb97f663db67682909043f00d8ae5492642740108f3ded3d0"
                ]
            }
        },
        "15-3.4.0rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.4",
                    "PG_SHA256=baec5a4bdc4437336653b6cb5d9ed89be5bd5c0c58b94e0becee0a999e63c8f9",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0rc2",
                    "POSTGIS_SHA256=546239b4ce901f734f6daa1e9f607696792213eeab1e9e8827582bbea24ac219"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0rc2 spatial database extension with PostgreSQL 15 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:26:38.815757437Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:32:50.219418963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.160511258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.245469264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=baec5a4bdc4437336653b6cb5d9ed89be5bd5c0c58b94e0becee0a999e63c8f9",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:46:33.332989932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:12.25547169Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:49:13.253082223Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:49:13.742057214Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:49:13.823000534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.275045397Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:49:14.358557514Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.449274225Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:49:14.527280104Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.611666827Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.728172779Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:49:14.815147914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:38.757877129Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0rc2 spatial database extension with PostgreSQL 15 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:38.757877129Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0rc2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:38.757877129Z",
                    "created_by": "ENV POSTGIS_SHA256=546239b4ce901f734f6daa1e9f607696792213eeab1e9e8827582bbea24ac219",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:38.757877129Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:38.791947864Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:38.815757437Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE1LWFscGluZTMuMTgiLCJwaW4iOiJzaGEyNTY6OGJjM2M4OTMzNDJjNzY2NDgxZGY1ZmRlNThmYWI2ZjFhMTExNWI5NGViNTY3NzgxMjYxNjMzMDUyNDNlOTcwOSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:4e63d660f940bae3c0f838a9e859359458f9364d22cf91937378f30e127a3411",
                    "sha256:752ea847165638e6d90b04844089e669fcbf8922d023fe10b6db5422b3aad611",
                    "sha256:5dc8d9fe9551215f69441032e1642aafe3bffe8ced7b2aed16cabf488564f544",
                    "sha256:829ffa20a1ad163260ca3302e5fa8e99e131002823627dac06b8704c7f4c8b80",
                    "sha256:f8c29878cc223e6606f4b3ff98cdb0a0a38d329d2c8b742e08328277f8e53d9c",
                    "sha256:57639fc5e149f6df2061fde92385287cc701d418f8e6b9c643379078c33787b0",
                    "sha256:cb9b9f469b5b178be62c7189ab6aa2d2ec7dcf94f4b3138d08eec32ede585361",
                    "sha256:97895a5d16db75e293836c30060b8e8dc2ada0b9cc0c8664fcdadc282bd57ceb"
                ]
            }
        },
        "15-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15.7-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=188e51bad36ffc30e49dbabda29620b71a84664c",
                    "SFCGAL_GIT_HASH=61f3b08ade49493b56c6bafa98c7c1f84addbc10",
                    "PROJ_GIT_HASH=356496f7b60ee0235189dd51d99aac700fbd2bdc",
                    "GEOS_GIT_HASH=a8d2ed0aba46f88f9b8987526e68eea6565d16ae",
                    "GDAL_GIT_HASH=d7aed6e0b03f949ba40684f868c63a08d89177b1",
                    "POSTGIS_GIT_HASH=8ed84517a9b86c86724504d1b6a0f0c1ccd86cf6"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:48:06.85776655Z",
            "history": [
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_MAJOR=15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PG_VERSION=15.7-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:44:17Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:39.093966502Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:39.093966502Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:39.093966502Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:26.50577574Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=188e51bad36ffc30e49dbabda29620b71a84664c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=61f3b08ade49493b56c6bafa98c7c1f84addbc10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV PROJ_GIT_HASH=356496f7b60ee0235189dd51d99aac700fbd2bdc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV GEOS_GIT_HASH=a8d2ed0aba46f88f9b8987526e68eea6565d16ae",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.699175146Z",
                    "created_by": "ENV GDAL_GIT_HASH=d7aed6e0b03f949ba40684f868c63a08d89177b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:26.92730886Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:26.92730886Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=8ed84517a9b86c86724504d1b6a0f0c1ccd86cf6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:48:06.389320229Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       docbook-xml       docbook5-xml       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       libxml2-utils       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       docbook-xml       docbook5-xml       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       libxml2-utils       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:06.597029228Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:06.608783891Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:06.624117695Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:06.85776655Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:fe9f3104f291aecf49ee821cb924555bbc08f580a9af5207d6b6c437c6a025a2",
                    "sha256:992f462e54cc035a60409b4416b4be2973c6e1ebe93ab589d60861ae9f20f57b",
                    "sha256:c591541a08dd548cbf0c0d256bd50581838f1ac9fea07502255b5e4e62a79e76",
                    "sha256:d6c450952ecf67daf0e840f5a3ac8caf608bc53c6bddd430f42bf315abd08233",
                    "sha256:cd32253c487fec522c3cad97432e997d92cd6498febc40f01ee809b1c54196c6",
                    "sha256:ad0852652b20792ec91e18d238c592ea10d8403d9209ee0f4fa96acb75b1d354",
                    "sha256:1c2f607c2a1eb2ebee1408395e389d84dc4df1e90d2ec9040998a5cb59026b13",
                    "sha256:1d7cd95e3a362e683d881a6944a6e87248252d4ce7cac7d8fb9914d46c6359aa",
                    "sha256:aae0cbb6c4da2e352e7d140a111c99aabda61f97374f77342b85767cf9a26a87",
                    "sha256:dc26673033f48d18999c7881842ba2cc19b63a5d46841f1ec8901eb176912856",
                    "sha256:5ebfd48acf6cdfa2317e57761d341c6a88c341fe298c4f2ab01f5e3e052f0d62",
                    "sha256:a05f1fea03fc2cad9d849dd61c91e8a352b66179a76bae58b26befdbea8e81e2",
                    "sha256:ea50a959d3b14f43d71eb7835f63db1273f982dbefdedc9638ec2326d027ae35",
                    "sha256:eeacf367cebad6f728b673f368bc913b700fc236e49aaf8fb009ed8b97c163ce",
                    "sha256:1327a0702d08cff50c93b0eaf31a5da0330024b3e077f63b29f8e8672db0c1ec",
                    "sha256:340da1865b12b3c262e1ee24803987af5372669019570643ecaa9f2854782911",
                    "sha256:6372ca5650863e5463f899f1c5f3c9144ca3b51112cd7036591f741ff6f84396",
                    "sha256:fdf3cb3960100d83421f7766c85235c2313cdd07bacc767d40eab6ba5b4866c5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a9bec5385ef82dfd752de629a64aad010bdfea81ded7017e8f65d6a5252bfccf",
                    "sha256:c1b2325949c68cc38f475003c230a2fd068bcf539484843f862e35e2099cf37e",
                    "sha256:fcebe6166226632654ce3c7ad863b9d549f68d14e3d0eb49848f0d864f46c659"
                ]
            }
        },
        "15beta1-3.3.0alpha1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta1",
                    "PG_SHA256=5dd8a466fb0c9eca11f10b1275524fc8f38d1699cac6a689780b49eac878f7af",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:7eed602e11e712c3fb5572f1a91ffd74376af957d997bcfbef5441a8e5f6b0ee",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta1",
                    "PG_SHA256=5dd8a466fb0c9eca11f10b1275524fc8f38d1699cac6a689780b49eac878f7af",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:7eed602e11e712c3fb5572f1a91ffd74376af957d997bcfbef5441a8e5f6b0ee",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-27T05:39:14.000328885Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-05-23T19:19:30.413290187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8e81116368669ed3dd361bc898d61bff249f524139a239fdaf3ec46869a39921 in / "
                },
                {
                    "created": "2022-05-23T19:19:31.970967174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:22.837635258Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-05-25T20:33:22.933753658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.460844805Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-05-25T20:33:23.570042684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.703105208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta1",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.803240556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=5dd8a466fb0c9eca11f10b1275524fc8f38d1699cac6a689780b49eac878f7af",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-06T22:01:12.22724168Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-06T22:01:13.241414744Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-06T22:01:13.756731672Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-06T22:01:13.865076333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-06T22:01:14.420062082Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-06T22:01:14.549511844Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:07.558141658Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-22T01:39:07.662200065Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:07.761568209Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:07.859863187Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-22T01:39:07.958810556Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T05:35:19.127565359Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T05:35:19.36945636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0alpha1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T05:35:20.252331234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T05:39:12.493295123Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-06-27T05:39:13.000130542Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-27T05:39:14.000328885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24302eb7d9085da80f016e7e4ae55417e412fb7e0a8021e95e3b60c67cde557d",
                    "sha256:2acf3ef23fe40c473402ba194d56f1767dec088839e9a4ebdf47cecd6d285e24",
                    "sha256:14f83c4d2ba1b1c46d8135ee7c72a5ba7f27ee17065f36ed2e36873b016ffc54",
                    "sha256:f977d027cfac3d00ab59a08a60891dd48ab83dbf25e106b5b3f1e48c4eb53fd1",
                    "sha256:fd6c0b8e25f552d757644303a47a1f630b0ff8de7797c567cfc9386f640e79c4",
                    "sha256:c01c30e17627a00f12c121276e2d03914f001acdf9e70d76abbcab6dfe3d6b12",
                    "sha256:cf37b23a1f7bc712f3626ad241e3f48965a526a39e802935841ee6ec37fc0b7c",
                    "sha256:0f5e1f210c5b2615f79f3124f5068053fbd8975efb18fec705522bffb8cd8e60",
                    "sha256:e87d779d0e5d36448ab19e761eb60d24b31bcb75d527729add1ab026c16a014a",
                    "sha256:2a043f84bc9d1ac4d801be9486cb04742c88c86f437c3058cf45fd7055b0e5c9",
                    "sha256:06536d4abcfcea2b98693c20d67a6e3c0d642f315131280153b131caecaed40d"
                ]
            }
        },
        "15beta1-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=2aa8bc64abc5d10a47fad206fbdcc96c5e75d1d1",
                    "GEOS_GIT_HASH=ed025b64ecbba7b97e843ad8bb3e2ee06e9e90e3",
                    "GDAL_GIT_HASH=e690ffaab9f0e349f722decd3ed15a1a5b59316b",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=7c69026c8c40d7c1144824098059c9f1f0216167"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:4ffec89f5b97ba266428ff5e1450dd1449f914eb15dad5b373370ab3c04fac39",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "f7ab7d6bef85d6846fb21e0ab2dffdf3cbea28068b88b5941cbdea8903b02776",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=2aa8bc64abc5d10a47fad206fbdcc96c5e75d1d1",
                    "GEOS_GIT_HASH=ed025b64ecbba7b97e843ad8bb3e2ee06e9e90e3",
                    "GDAL_GIT_HASH=e690ffaab9f0e349f722decd3ed15a1a5b59316b",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=7c69026c8c40d7c1144824098059c9f1f0216167"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:4ffec89f5b97ba266428ff5e1450dd1449f914eb15dad5b373370ab3c04fac39",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-27T06:12:09.869797539Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:27.020952309Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8adbbab04d6f84cd83b5f4205b89b0acb7ecbf27a1bb2dc181d0a629479039fe in / "
                },
                {
                    "created": "2022-06-23T00:20:27.337378745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:14.136203965Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T14:26:14.75434964Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-06-23T14:26:14.853573736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:22.619063567Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-06-23T14:26:28.824108047Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-06-23T14:26:28.976581784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:32.600614705Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T14:26:33.149937558Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-06-23T14:26:34.374904119Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-06-23T14:26:34.474755365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:34.573890523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:34.670990081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:26:57.928801595Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-06-23T14:26:59.020402293Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-06-23T14:26:59.584271107Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-06-23T14:26:59.684318556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:27:00.21928925Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-06-23T14:27:00.316236399Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:27:00.424352898Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-06-23T14:27:00.517531305Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:27:00.613810728Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:27:00.705705369Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T14:27:00.798839626Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:16.243330081Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-27T06:08:23.103054345Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:47346fdd5a9ab44dac1474ee40087faa438510ec26a90353229448e0fece60a7 in /usr/local "
                },
                {
                    "created": "2022-06-27T06:08:23.682437561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=2aa8bc64abc5d10a47fad206fbdcc96c5e75d1d1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:24.497084127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=ed025b64ecbba7b97e843ad8bb3e2ee06e9e90e3",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:25.50211769Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=e690ffaab9f0e349f722decd3ed15a1a5b59316b",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:26.952767996Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-06-27T06:08:27.903728569Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:28.507717414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:08:29.501972322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=7c69026c8c40d7c1144824098059c9f1f0216167",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:12:06.467706025Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-27T06:12:07.39049408Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-27T06:12:08.000649997Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-27T06:12:09.000417978Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-06-27T06:12:09.869797539Z",
                    "created_by": "/bin/sh -c cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:08249ce7456a1c0613eafe868aed936a284ed9f1d6144f7d2d08c514974a2af9",
                    "sha256:e03c5e63b32cf6b8056c35a365e04bec979a548934f22af6fecb8ab1474b5139",
                    "sha256:bf3966d7360a247171eb6fa292b09a89b4281286e29b2b19539ae14692a06cd0",
                    "sha256:0caf141b33d68fdc5efee54a1c4f102f0ec579216efb763309bb9b1a75f39038",
                    "sha256:ab8a47677e7a75b417e46d4de72a6985a88798527247a7488f00a3ffa442ab81",
                    "sha256:d510a539e303d0e4fd5505dbeb6c62e290ecedd7593b1cad2297c874a6d0d31c",
                    "sha256:705b037e818bf94b8ebf936e7e0135aecbd6c679c556898d08a291e21866be47",
                    "sha256:8db84c1fd990fc2a19f363ad2bd7ef030434ea3a15a131e14583fa358afe58a4",
                    "sha256:48482e13d05858a9b5c9260789c5303f4d3fc6b4fcf4cb670730648b62cd6306",
                    "sha256:a00f7d1a35750003d78a87501c2ad9a7cfa5e34a8f1ccd86b98b0136d9f10928",
                    "sha256:b3aa1e5922aeaae4ab9ee4d6c0afae883cc5e86932566fd2ec4ad2d33ea0ffdd",
                    "sha256:013abff8fc25954f891918936af8070a1b455d095c224c548ee9744a91114b9f",
                    "sha256:88ce3425c90447deb26d51034b5ca55f6b4d8bc3e641a55c4a1136df485c2050",
                    "sha256:bb15bdf78702be4e4c4b67d4b9eb7dc0203c658aebbb3dd79634c30c49037fd4",
                    "sha256:fb3eb39e9455785fbeb8e3db77a83fa18455e225da9e67bd364da8fab8e644c1",
                    "sha256:d78efcdc1980d134385c969467efacaf98959f44d54be3fa7c9da9dda13308eb",
                    "sha256:f351e5789cd0a9bbdb7ebbf3b128a0fd445e6d81e39872fb2cb65fba22c09cfb",
                    "sha256:890d8c80e115cfcca4fc1ed70b0f1ec928888db5ddf0374232bd9ef7c8ad2564",
                    "sha256:61a5822c3d18f542db539cd5ae1e869ece495f0f3dd878005e6596c63d42b467"
                ]
            }
        },
        "15beta2-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.2+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:2344db44d30b6d6560e214114481d4b35e42c4ab67893fc61e522b89e5509c87",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.2+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:2344db44d30b6d6560e214114481d4b35e42c4ab67893fc61e522b89e5509c87",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:51:09.0007555Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-02T01:20:04.9776465Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eae0dca665c7044bf242cb1fc92cb8ea744f5af2dd376a558c90bc47349aefe in / "
                },
                {
                    "created": "2022-08-02T01:20:05.41127808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:16:56.411698513Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-02T09:16:57.072287412Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-02T09:16:57.174153221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:05.680528531Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-02T09:17:12.159103082Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-02T09:17:12.313160448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:15.956107716Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T09:17:16.54237787Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-02T09:17:17.710069433Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-02T09:17:17.803865504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:17.896092548Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:17.987358181Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:39.72217653Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-02T09:17:40.976275147Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-02T09:17:41.557846642Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-02T09:17:41.655263465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.199101851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-02T09:17:42.301982826Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.419888744Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-02T09:17:42.523474084Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.625804212Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.728171709Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.84249125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:48.908365379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:49.415472462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:50.421741601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.2+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:51:05.920451395Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-22T05:51:06.835413603Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:51:08.000250347Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:51:09.0007555Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92a4e8a3140f7a04a0e5a15793adef2d0e8889ed306a8f95a6cfb67cecb5f212",
                    "sha256:4b69d34c007e796f4c4d7ef9511ff81965ddccd3604315c8552b64f060473c5d",
                    "sha256:0d8625e0bfa9984d283c47d59e627b7747af81c84fc790028880cf14d508d1e5",
                    "sha256:96d86b030e1052f5a8cc5813a9c4fadadd7299242e254c313ee9889124d07c10",
                    "sha256:bb9bd6e7ce031aea0f16beec40a6befca1c258bbdc2eea2ea9f26cbaf90b51f8",
                    "sha256:ed290c3dc3024e0e4d24cc65a333de62d2fba9280cb0d81026f6deb34b55d9f7",
                    "sha256:71951ef35ee5e4fd9c293253c5461eb3037236ac0c0a0916006b3f7af6de88bc",
                    "sha256:2dfa7b9e30a93de0e6c915cd284ad0864417488acc69b7436c9d36e962a14086",
                    "sha256:37c3dc29124796be59712c87aff860ae55b06d047af6a3e536954d7f7f7bef8c",
                    "sha256:0f4cdf72c066eed307d4b2ca5f89b451e125679f79cd7a861c2b2b9c4f2fc1df",
                    "sha256:2862c03bb327e674c0a9688fbad61e70b2bdf004506e63c95199071a730de718",
                    "sha256:5b8a802aff17b2e4f076f963bf01a99ce72f997227a7e4281e625b4abbe03616",
                    "sha256:b528285226d3f5107867f39c97eca6b1be90318f23b2f19fa4f189da93aa4243",
                    "sha256:ede968a881c54873a31f2898208761d93e7c68e2c939008de5655beae3064a58",
                    "sha256:89ea6e7533fee770bd39120f7cfd0a08634b892bfaede6e76001b6184da0a994",
                    "sha256:c98022cc5149bf0df7dfec6f89891b227d8098498ad873cf4437b086ff19d3fd"
                ]
            }
        },
        "15beta2-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.2",
                    "POSTGIS_SHA256=160685951b87ca07adf887fa25836f995ca41f269e75f14c2139334a52a16a9b"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:438682a8905b7ec4c0251b03cc336ad57dd6de66f055434a63c2fbc662410fe4",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.2",
                    "POSTGIS_SHA256=160685951b87ca07adf887fa25836f995ca41f269e75f14c2139334a52a16a9b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:438682a8905b7ec4c0251b03cc336ad57dd6de66f055434a63c2fbc662410fe4",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:54:04.000134257Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.832411875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.926367526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:01.514841607Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-09T23:14:02.62101889Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-09T23:14:03.190448457Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-09T23:14:03.28839125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:03.851261131Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-09T23:14:03.953390734Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.071459458Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-09T23:14:04.172776634Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.28648636Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.465684098Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.570528002Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:50.427904847Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:51.217802454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:52.214668134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=160685951b87ca07adf887fa25836f995ca41f269e75f14c2139334a52a16a9b",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:54:02.850646225Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-08-22T05:54:03.174115316Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:54:04.000134257Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:127e25ebe57d1c3486ad774e68c40f2624797fe7c70b2047a6d50d3f97311113",
                    "sha256:0c066e993d6baa21a2efc8d0e06a717afb5a8417e4b6408167db6cd6992cbe16",
                    "sha256:7ace20192983a491428f61bc2b9f85c6552ea6782c72c2a0752ceedeaffec19a",
                    "sha256:655ba7f844e23f52ae489be03510a4987c11084fa5425850de9f06443b0cc2b8",
                    "sha256:4e0159147d27cacefa979bb282629c7a20e64073d982b650b38414aed9b196fb",
                    "sha256:03b3ca9792d65887b42b65f5ef9074a28dcc042ae8bc38cc724e3041499515bb",
                    "sha256:45469f8283d4ccf19cd3649f4db284c36029b7995612e9178e217afeeed2931f",
                    "sha256:6fd181eb276675cab2827eb46a2c323622feaab5b4081ae8007af1f59e3c790c"
                ]
            }
        },
        "15beta2-3.3.0alpha1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:47d5c9efc13c454042eda1176c83ff74b3ca57d649b444e2e4d6c8b94e9067df",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0alpha1",
                    "POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:47d5c9efc13c454042eda1176c83ff74b3ca57d649b444e2e4d6c8b94e9067df",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-07-01T23:18:41.001067222Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-05-23T19:19:30.413290187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8e81116368669ed3dd361bc898d61bff249f524139a239fdaf3ec46869a39921 in / "
                },
                {
                    "created": "2022-05-23T19:19:31.970967174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:22.837635258Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-05-25T20:33:22.933753658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.460844805Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-05-25T20:33:23.570042684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T01:58:40.373752102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T01:58:40.468057947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:01.427235604Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-07-01T02:02:02.412674972Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-07-01T02:02:02.975009192Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-07-01T02:02:03.083970832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:03.6388748Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-07-01T02:02:03.736503965Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:03.853097807Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-07-01T02:02:03.947517825Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.045340294Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.141293001Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.24369561Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:25.656317398Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:26.205196873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0alpha1",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:15:27.201390358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=ee4fd391ed869b5d486485435677dd9ef2502d81a1992adb63260134c8bf0d9a",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T23:18:39.780056642Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-07-01T23:18:40.118897528Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-07-01T23:18:41.001067222Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24302eb7d9085da80f016e7e4ae55417e412fb7e0a8021e95e3b60c67cde557d",
                    "sha256:2acf3ef23fe40c473402ba194d56f1767dec088839e9a4ebdf47cecd6d285e24",
                    "sha256:14f83c4d2ba1b1c46d8135ee7c72a5ba7f27ee17065f36ed2e36873b016ffc54",
                    "sha256:9ce9f7547a819b1916ec8a8837616cdb24e646379640c3c6dd3742a1ec55d399",
                    "sha256:f859a3f9d0c19c2b17e26504acb6da0ba6cddd7464bd9d0ccdfa99564d579e9f",
                    "sha256:c1d6d8b7b54fba62009323ee2c7a246f137a6d62e33bc3ed78292e4a1f774dff",
                    "sha256:dff07f8ac98f312bdc85c4679468ca7266f721d486257c2572633328f4417c3d",
                    "sha256:c6fea33dde0959eb5c2ac1b876951a1ad01bb99d67392f8fbbc9dc54a0b3fb75",
                    "sha256:32d7821f18bc8b5c0f97140edd1d811e0e5255f75703e54ba2c1a4538fc8d616",
                    "sha256:a84e03b482e4e2616d515efb18f0f0463d99519a97b82ca66994c4a48e7d1f5b",
                    "sha256:1a02cb93988254b34532b1e3e62c85ed304cf2eb1475fe524c796dd17b1dada5"
                ]
            }
        },
        "15beta2-3.3.0beta1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta1",
                    "POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:fb00735dceb2f789d942cd72e99e6b71e7815b0bf112a09cc4b7b84bac6b461b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta1",
                    "POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:fb00735dceb2f789d942cd72e99e6b71e7815b0bf112a09cc4b7b84bac6b461b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-07-11T05:37:03.0004404Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-05-23T19:19:30.413290187Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8e81116368669ed3dd361bc898d61bff249f524139a239fdaf3ec46869a39921 in / "
                },
                {
                    "created": "2022-05-23T19:19:31.970967174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:22.837635258Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-05-25T20:33:22.933753658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T20:33:23.460844805Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-05-25T20:33:23.570042684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T01:58:40.373752102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T01:58:40.468057947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:01.427235604Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-07-01T02:02:02.412674972Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-07-01T02:02:02.975009192Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-07-01T02:02:03.083970832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:03.6388748Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-07-01T02:02:03.736503965Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:03.853097807Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-07-01T02:02:03.947517825Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.045340294Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.141293001Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-01T02:02:04.24369561Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:00.905886046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:01.260397023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0beta1",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:33:02.270169059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=256807c72bae89ea955b5a5d56fa01b96982608c8aaa11903ea239376b0833e8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-11T05:37:01.289944816Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-07-11T05:37:02.001052386Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-07-11T05:37:03.0004404Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24302eb7d9085da80f016e7e4ae55417e412fb7e0a8021e95e3b60c67cde557d",
                    "sha256:2acf3ef23fe40c473402ba194d56f1767dec088839e9a4ebdf47cecd6d285e24",
                    "sha256:14f83c4d2ba1b1c46d8135ee7c72a5ba7f27ee17065f36ed2e36873b016ffc54",
                    "sha256:9ce9f7547a819b1916ec8a8837616cdb24e646379640c3c6dd3742a1ec55d399",
                    "sha256:f859a3f9d0c19c2b17e26504acb6da0ba6cddd7464bd9d0ccdfa99564d579e9f",
                    "sha256:c1d6d8b7b54fba62009323ee2c7a246f137a6d62e33bc3ed78292e4a1f774dff",
                    "sha256:dff07f8ac98f312bdc85c4679468ca7266f721d486257c2572633328f4417c3d",
                    "sha256:c6fea33dde0959eb5c2ac1b876951a1ad01bb99d67392f8fbbc9dc54a0b3fb75",
                    "sha256:79d0e40c35a2864543d30e137f90bee8605ecc9e491c90963115af0ce8cd66bd",
                    "sha256:9f2b5465115c491abb4723f1098ff4a3a85de4d4f32c6e297c522b296407de38",
                    "sha256:960032df4fca6348ff98f411b2127bc90a510b2491689028130020077851c8e4"
                ]
            }
        },
        "15beta2-3.3.0beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta2",
                    "POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:7011b3b9c628388355867ba09b38983a5ddc189952118726ea7acf55e79969aa",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0beta2",
                    "POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:7011b3b9c628388355867ba09b38983a5ddc189952118726ea7acf55e79969aa",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:54:45.000705984Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.832411875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.926367526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:01.514841607Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-09T23:14:02.62101889Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-09T23:14:03.190448457Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-09T23:14:03.28839125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:03.851261131Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-09T23:14:03.953390734Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.071459458Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-09T23:14:04.172776634Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.28648636Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.465684098Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.570528002Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:52.480445132Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:53.24440076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:50:54.254973095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=6134085b57ffaf9c27888534cdc4234bc8eadf3ab1ff71ee8da4c4ff1828e8fb",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:54:42.870053679Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-08-22T05:54:44.000999781Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:54:45.000705984Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:127e25ebe57d1c3486ad774e68c40f2624797fe7c70b2047a6d50d3f97311113",
                    "sha256:0c066e993d6baa21a2efc8d0e06a717afb5a8417e4b6408167db6cd6992cbe16",
                    "sha256:7ace20192983a491428f61bc2b9f85c6552ea6782c72c2a0752ceedeaffec19a",
                    "sha256:655ba7f844e23f52ae489be03510a4987c11084fa5425850de9f06443b0cc2b8",
                    "sha256:4e0159147d27cacefa979bb282629c7a20e64073d982b650b38414aed9b196fb",
                    "sha256:dccb634586e8d0da4d580f9f5a26ede1fcdbe2dd10b76363578c98871ac7f4dc",
                    "sha256:0f7e4161b68132c7ff69d0bf88e7de743fd62e6a2b890fd109d3320fc5a7fb61",
                    "sha256:296dbd68d9bafd45010b604a9db1488007d0fd7a26be0cde707e08649807660f"
                ]
            }
        },
        "15beta2-3.3.0rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc1",
                    "POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:802a3bef7ca4d57fe6bcc74fb63112498a460fda7fa8ef2a1a4f719124e1fdbe",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta2",
                    "PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc1",
                    "POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:802a3bef7ca4d57fe6bcc74fb63112498a460fda7fa8ef2a1a4f719124e1fdbe",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T05:52:33.000688283Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.832411875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.926367526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=2fedbc58b370f30e5f59fb0dcc8128a2ef9a922b50fa931b442e4fa27ca98830",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:01.514841607Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-09T23:14:02.62101889Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-09T23:14:03.190448457Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-09T23:14:03.28839125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:03.851261131Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-09T23:14:03.953390734Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.071459458Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-09T23:14:04.172776634Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.28648636Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.465684098Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:14:04.570528002Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:11.428599545Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:12.222078256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:49:13.225809159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=624e13b5da7c0a8d1def882b724d06e7715a579ea5587ecce76408aaafb8775f",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T05:52:31.309052969Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-08-22T05:52:32.000389361Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T05:52:33.000688283Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:127e25ebe57d1c3486ad774e68c40f2624797fe7c70b2047a6d50d3f97311113",
                    "sha256:0c066e993d6baa21a2efc8d0e06a717afb5a8417e4b6408167db6cd6992cbe16",
                    "sha256:7ace20192983a491428f61bc2b9f85c6552ea6782c72c2a0752ceedeaffec19a",
                    "sha256:655ba7f844e23f52ae489be03510a4987c11084fa5425850de9f06443b0cc2b8",
                    "sha256:4e0159147d27cacefa979bb282629c7a20e64073d982b650b38414aed9b196fb",
                    "sha256:940bdf974c55fc9ba96e613a2cdd3d9486747b3d945612e1d8be807005d9c99e",
                    "sha256:0a7757985b6b01950786120443f06181a07563ef69ab88ed3bbc49b10ba22835",
                    "sha256:cdc00e20f7b40a30da2e095f2eef82e1122fcf1297bee4f51551de12333fb5ee"
                ]
            }
        },
        "15beta2-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=68fa2def43265466d70b336a2f2be70f7e19a0de",
                    "GEOS_GIT_HASH=fee735849e822b3b50564736546e5fe9470bbc5d",
                    "GDAL_GIT_HASH=76dfdcc0574a09fb7cb00e207b92be5177ee7c91",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=f62924fafaa7b32cab0bf425837249bc123b10d0"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:ca787b7f0994a5329c4426abda3e1a08bfd14fef9ded6da4329971fbda0a1a57",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "fbfc5a5f85c69802935ddecc5822fa8a666fc7f8fd3ebc75eb2afa75d19e3317",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=68fa2def43265466d70b336a2f2be70f7e19a0de",
                    "GEOS_GIT_HASH=fee735849e822b3b50564736546e5fe9470bbc5d",
                    "GDAL_GIT_HASH=76dfdcc0574a09fb7cb00e207b92be5177ee7c91",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=f62924fafaa7b32cab0bf425837249bc123b10d0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:ca787b7f0994a5329c4426abda3e1a08bfd14fef9ded6da4329971fbda0a1a57",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-08-22T06:26:23.909058865Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-08-02T01:20:04.9776465Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eae0dca665c7044bf242cb1fc92cb8ea744f5af2dd376a558c90bc47349aefe in / "
                },
                {
                    "created": "2022-08-02T01:20:05.41127808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:16:56.411698513Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-02T09:16:57.072287412Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-02T09:16:57.174153221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:05.680528531Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-02T09:17:12.159103082Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-02T09:17:12.313160448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:15.956107716Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T09:17:16.54237787Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-02T09:17:17.710069433Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-02T09:17:17.803865504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:17.896092548Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:17.987358181Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:39.72217653Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-02T09:17:40.976275147Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-02T09:17:41.557846642Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-02T09:17:41.655263465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.199101851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-02T09:17:42.301982826Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.419888744Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-02T09:17:42.523474084Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.625804212Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.728171709Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T09:17:42.84249125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:38.573200827Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-22T06:22:45.065113009Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:1df1876b3b3b17fb2896b2accaa39754478735f2c30e0d279c9dc9bd6fa8d63a in /usr/local "
                },
                {
                    "created": "2022-08-22T06:22:45.619434306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=68fa2def43265466d70b336a2f2be70f7e19a0de",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:46.479971109Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=fee735849e822b3b50564736546e5fe9470bbc5d",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:47.472851997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=76dfdcc0574a09fb7cb00e207b92be5177ee7c91",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:48.98667767Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-08-22T06:22:49.905715527Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:50.460319719Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:22:51.475834714Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=f62924fafaa7b32cab0bf425837249bc123b10d0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:26:19.773714706Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-22T06:26:20.697117914Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-22T06:26:22.000051753Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-08-22T06:26:23.000346184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-08-22T06:26:23.909058865Z",
                    "created_by": "/bin/sh -c cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92a4e8a3140f7a04a0e5a15793adef2d0e8889ed306a8f95a6cfb67cecb5f212",
                    "sha256:4b69d34c007e796f4c4d7ef9511ff81965ddccd3604315c8552b64f060473c5d",
                    "sha256:0d8625e0bfa9984d283c47d59e627b7747af81c84fc790028880cf14d508d1e5",
                    "sha256:96d86b030e1052f5a8cc5813a9c4fadadd7299242e254c313ee9889124d07c10",
                    "sha256:bb9bd6e7ce031aea0f16beec40a6befca1c258bbdc2eea2ea9f26cbaf90b51f8",
                    "sha256:ed290c3dc3024e0e4d24cc65a333de62d2fba9280cb0d81026f6deb34b55d9f7",
                    "sha256:71951ef35ee5e4fd9c293253c5461eb3037236ac0c0a0916006b3f7af6de88bc",
                    "sha256:2dfa7b9e30a93de0e6c915cd284ad0864417488acc69b7436c9d36e962a14086",
                    "sha256:37c3dc29124796be59712c87aff860ae55b06d047af6a3e536954d7f7f7bef8c",
                    "sha256:0f4cdf72c066eed307d4b2ca5f89b451e125679f79cd7a861c2b2b9c4f2fc1df",
                    "sha256:2862c03bb327e674c0a9688fbad61e70b2bdf004506e63c95199071a730de718",
                    "sha256:5b8a802aff17b2e4f076f963bf01a99ce72f997227a7e4281e625b4abbe03616",
                    "sha256:b528285226d3f5107867f39c97eca6b1be90318f23b2f19fa4f189da93aa4243",
                    "sha256:2365413d4a13f574c75c2062cdfa734b9145e28ce9eae9e6979451a43cee7af8",
                    "sha256:5386ad4248f91f947557b5af5b9a027314a20dd92b254a6ae52e99ea2a57c77b",
                    "sha256:fe677da1f57f81d50db473159203da74c682e162ce3388b3bfa5350ad2d90bdf",
                    "sha256:ecb8c43bc7a551aa70f3a68b1f9b6132467328fa04a8b9c74fd7892f25e8c3a1",
                    "sha256:9faaeaea8592e62a24ec4eaf275577e7b280aee3c65f7c138df7107db210e562",
                    "sha256:2b8ea8f00235ec1fcb179f3ee27671bf2543205582f6be7fa0d3a0eb07474c8c"
                ]
            }
        },
        "15beta3-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:e5e87cb8505f307b452565f29b8498e8bf23a4d2af18bae1dd2bc3876e5eab71",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:e5e87cb8505f307b452565f29b8498e8bf23a4d2af18bae1dd2bc3876e5eab71",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:12:03.000701451Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:53:51.703258483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:51.801690799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:51.896363891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta3-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:13.197936205Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:54:14.64682454Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:54:15.256008994Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:54:15.361618518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:15.950176861Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:54:16.056081311Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.178540323Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:54:16.272899129Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.375281671Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.488796026Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.591057435Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:38.150450306Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:38.639887379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:39.511999885Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:12:00.285616018Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:12:01.339313735Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:12:02.000511339Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:12:03.000701451Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:de8541bd0b6975547f9245329e8f72e6505360647dc117deff5ea4fe8a812e80",
                    "sha256:2b298a6f292f5050616925d2c5dbc03d652bb8cbfeede147eeb8cfffe2c7ede0",
                    "sha256:7af20d5e3da862d7874d913fd295faca6fd895bcf748ab1ab09527df37511ee6",
                    "sha256:ce353d3a64409fe0aba4e18008bffb90eae1d9dcfe27a71d1045d7da4487b450",
                    "sha256:bc7f9c3f3eaa27abc83a36e7f18527a70b14f75c89e47026c37879146a11f36e",
                    "sha256:f2047010780071169078db01528da2fab04bb676e660475340c8e3468fb23b68",
                    "sha256:23444695de87aeb5cf4e8b5fcf186e7b44ec72a40165fbd2251e7df08eaceee8",
                    "sha256:dfe3fb4345206c6717aab280c63ba0fd0aa395bb4107e74a2bd2819b5b36fefd"
                ]
            }
        },
        "15beta3-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta3",
                    "PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:04b7010392af2dc896f15b109e5bd6f43701db5a19578f83cfd846a96e06457c",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta3",
                    "PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.3",
                    "POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:04b7010392af2dc896f15b109e5bd6f43701db5a19578f83cfd846a96e06457c",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:26.000182826Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:40:12.910593773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta3",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:40:13.005156052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:37.455434416Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:43:38.737570294Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:43:39.289144392Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:43:39.393296899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:39.94637656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:43:40.04514948Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.163485821Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:43:40.257304775Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.361343329Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.468986403Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.573771187Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:29.735228919Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:30.273251655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:31.282604293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=085aadf3fe6504a9aed0fed915d4b3c748bbbf3d0ad859b3795d055257790e11",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:24.426922682Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:25.000751783Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:26.000182826Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:6a11ffd08e1d5d0de892ff7a38d3a477808b1216f1bcaaffc85cfc79731ed245",
                    "sha256:99c78e115e056529d0c41b60eecb036126a573ace5a3574d2daadf7b5842a4a4",
                    "sha256:7c86fad3fb9b115f81154e3280b753e69aaaa80d5137423c6921137aeeedf960",
                    "sha256:a445340342ed105e0006872a7445883980781792988e62807613c13e5819e688",
                    "sha256:2cf08d3126052096660a13e8d6e44978d61754396d1cb27fb639bcb3d45206e7",
                    "sha256:f5febe382611547ead32f078eebdf06c19963f2e8e7677792e09f2c6c2b56713",
                    "sha256:4c804ac333b02d2c574bfa4cafc281d55a7af5606ea0751db50647e707256594",
                    "sha256:eca57152e889bc1750acf6cbc62e3ea442b73c964661102445c0fc4b88379b27"
                ]
            }
        },
        "15beta3-3.3.0rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta3",
                    "PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc2",
                    "POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:acb67222ef4b204054f9fd4c72f926efc4243d49270e29d2941eafcc4af5f8f9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta3",
                    "PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.0rc2",
                    "POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:acb67222ef4b204054f9fd4c72f926efc4243d49270e29d2941eafcc4af5f8f9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:15:31.000334555Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:40:12.910593773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta3",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:40:13.005156052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=1a6e2a454b6bcdf76aa4e50573d2fa1ea8db2cdfaa3282a7538830bd285b27bf",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:37.455434416Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-12T00:43:38.737570294Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-12T00:43:39.289144392Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-12T00:43:39.393296899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:39.94637656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-12T00:43:40.04514948Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.163485821Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-12T00:43:40.257304775Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.361343329Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.468986403Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-12T00:43:40.573771187Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:33.881576887Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:34.252464761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.0rc2",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:11:35.254476976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=ce153264f9f9f7b52cccff8b85599455ae93f9997198f9050a2f85365c136dcd",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:15:29.304300432Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-05T06:15:30.000253188Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:15:31.000334555Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:6a11ffd08e1d5d0de892ff7a38d3a477808b1216f1bcaaffc85cfc79731ed245",
                    "sha256:99c78e115e056529d0c41b60eecb036126a573ace5a3574d2daadf7b5842a4a4",
                    "sha256:7c86fad3fb9b115f81154e3280b753e69aaaa80d5137423c6921137aeeedf960",
                    "sha256:a445340342ed105e0006872a7445883980781792988e62807613c13e5819e688",
                    "sha256:2cf08d3126052096660a13e8d6e44978d61754396d1cb27fb639bcb3d45206e7",
                    "sha256:29769aa94743b9a2de738390c0b8083dd8741031966de111200b5e212148dede",
                    "sha256:3f613747be94700eaba687697b61819c3997634c4e2c6c9d4f6ef23ed525448f",
                    "sha256:e2b3399ef26feba365d5595e85590a328a941c61803c8e02872402d8a0fc4307"
                ]
            }
        },
        "15beta3-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=4cc46f72bf6943592ce7c55f147a5a51a0a2992b",
                    "GEOS_GIT_HASH=7135b0014e554fa1ec3a35309920c077355a77d0",
                    "GDAL_GIT_HASH=0592a219d11e8da539f1bc0cc9c4ce8865a08818",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=d31888c038285d36b460e34773e5dddece27d585"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:9d4119352bed94a6d10a9447c25f09f1b7cc8371a24470cbb9209225a927983e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "840b094b02283d688ef82a067d3b8cc8c71189873091e8d058f5d11a726fccbe",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=4cc46f72bf6943592ce7c55f147a5a51a0a2992b",
                    "GEOS_GIT_HASH=7135b0014e554fa1ec3a35309920c077355a77d0",
                    "GDAL_GIT_HASH=0592a219d11e8da539f1bc0cc9c4ce8865a08818",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=d31888c038285d36b460e34773e5dddece27d585"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:9d4119352bed94a6d10a9447c25f09f1b7cc8371a24470cbb9209225a927983e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-05T06:55:53.1128501Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-23T00:20:50.951509057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7726efb0e0eb5003dbcf2967ec29364479eec8b41f2569ff189372153115b54b in / "
                },
                {
                    "created": "2022-08-23T00:20:51.293418801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:29.940050982Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-23T12:53:30.606480622Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-23T12:53:30.708527296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:39.154648762Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-08-23T12:53:45.808356562Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-08-23T12:53:46.006856878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:49.792100648Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-23T12:53:50.390788524Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-23T12:53:51.604930641Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-08-23T12:53:51.703258483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:51.801690799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:53:51.896363891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta3-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:13.197936205Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-08-23T12:54:14.64682454Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-08-23T12:54:15.256008994Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-08-23T12:54:15.361618518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:15.950176861Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-08-23T12:54:16.056081311Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.178540323Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-08-23T12:54:16.272899129Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.375281671Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.488796026Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-23T12:54:16.591057435Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:19.094507205Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:51:21.261938984Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:bf436570e5954562904d8c1e9504a0b291b7796fbc6895fefda894da9df8a793 in /usr/local "
                },
                {
                    "created": "2022-09-05T06:51:21.931496345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=4cc46f72bf6943592ce7c55f147a5a51a0a2992b",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:22.632410374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=7135b0014e554fa1ec3a35309920c077355a77d0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:23.597301748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=0592a219d11e8da539f1bc0cc9c4ce8865a08818",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:25.129930042Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-09-05T06:51:26.220298688Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:26.830403714Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:51:27.649420688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=d31888c038285d36b460e34773e5dddece27d585",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:55:49.414035621Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-05T06:55:50.562566144Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-05T06:55:51.241558304Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-05T06:55:52.001076561Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-09-05T06:55:53.1128501Z",
                    "created_by": "/bin/sh -c set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63",
                    "sha256:1252371665cfa80b9a25eb90ebec275c3c101dfe4e0aa8c676130ec3adab4b6b",
                    "sha256:3d424f3b567a918003695f6b36613d7cd50415f226bde98819399c5e94b77b65",
                    "sha256:095cfad9dcdaaf8bcc1d5676312192768b72810f7f2a2983eadc39765053719f",
                    "sha256:c6eb714d26836b8e1154e45a50394d914b3afb034a0e54c7f45de257021e607b",
                    "sha256:16e2c05490690e85aeb2ec7a26927790fe4be65a9d6b89c0c5e2518aead646fe",
                    "sha256:f23efc9d1c4a7b06efbf650e83abfcae89d5a5432fbfe71f3a45dd2e4a6919ae",
                    "sha256:5c321e3247be1b82a8515fe185f514bf388a9a6cece1ca3fb17f47e2c780c9b5",
                    "sha256:de8541bd0b6975547f9245329e8f72e6505360647dc117deff5ea4fe8a812e80",
                    "sha256:2b298a6f292f5050616925d2c5dbc03d652bb8cbfeede147eeb8cfffe2c7ede0",
                    "sha256:7af20d5e3da862d7874d913fd295faca6fd895bcf748ab1ab09527df37511ee6",
                    "sha256:ce353d3a64409fe0aba4e18008bffb90eae1d9dcfe27a71d1045d7da4487b450",
                    "sha256:bc7f9c3f3eaa27abc83a36e7f18527a70b14f75c89e47026c37879146a11f36e",
                    "sha256:3e4110130c41b0cfd8ff99bdd5a44302dec8eb3a580e8ac6e39b60011029d54c",
                    "sha256:7dd91b5c288cd4002e425681dd47ae97a2e0ab2ef1dd5aff7b4f28ead94075d1",
                    "sha256:f4dd5888bff32093bb2aaa9ae973fa06bc4c009318cb4b53d5b536e36a1ac002",
                    "sha256:3806ad4373494f454d5c84c0bd0d37b06bd39118b05c81cf0619db7a0dc1fdcf",
                    "sha256:326cb7c4f032c3accdeca2540ad02168e6ccf3c87377cfb0d8bf3e67dee884e9",
                    "sha256:ad667d2708878611af62102a2e127dbc1d08905b7f8c0568dcc1dc5d5c46c6d3"
                ]
            }
        },
        "15beta4-3.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta4-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:990a3307c46ed45d3a5105d27b6ba4bd7f2f8a986914f6d9a64102cf940e6cd1",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta4-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:990a3307c46ed45d3a5105d27b6ba4bd7f2f8a986914f6d9a64102cf940e6cd1",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-26T06:19:10.000256122Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-09-13T00:56:29.334425507Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bd53bff884e470b3c12425132975ab9c6f99002c62c43bca1ff5cde9d863b92 in / "
                },
                {
                    "created": "2022-09-13T00:56:29.655351483Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:27.931948759Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-09-13T11:43:28.587449115Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-09-13T11:43:28.69645888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:37.905363193Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-09-13T11:43:44.406035571Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-09-13T11:43:44.571190754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:48.454362409Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-13T11:43:48.958977931Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-09-13T11:43:50.151242698Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-09-13T11:43:50.247179873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.343897054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.439710551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta4-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:10.741641508Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-13T11:44:11.839170114Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-13T11:44:12.361704602Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-13T11:44:12.456829892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.014007419Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-13T11:44:13.110766625Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.226159631Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-13T11:44:13.326698889Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.424116427Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.522415862Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.622088398Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:43.877796546Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:44.560579301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:45.53776657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:19:06.871529248Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-26T06:19:08.07759861Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:19:09.000906907Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-26T06:19:10.000256122Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b45078e74ec97c5e600f6d5de8ce6254094fb3cb4dc5e1cc8335fb31664af66e",
                    "sha256:38c22c30b0ada83ef94a815ca842970eef78663dbbe071b370a9081bf598e65d",
                    "sha256:198bac2d459b1958d8a505bea77d1fa941026722340bd1cd46d79abd3230b497",
                    "sha256:d4d16d23c3fd11b343adbfe0ad467ba5a6ee2ae40df582bd09f6659d0c0a0cf2",
                    "sha256:0c768903c915c6faa0aaf2f33416fead0b1a46b73ffd039aadc983c85eb6cfd6",
                    "sha256:98fc89d04d4fa98ee17726dd33de253b9131defacb1da03284995fa8226f75fe",
                    "sha256:039f1b2f32f02cbeb64f8c0afcfc36b98e1c34374f5ecdc4eaf205cfc8edcb5d",
                    "sha256:f0af0bfea71055f628f8cb1d5ddf517ee90d6ebe113cdd9112f5644f24a535f0",
                    "sha256:794e74abcf187b8a993b919224a0587afbc89b57f9402798a15e1d02762ff0d2",
                    "sha256:d148d1dcb93bb673d1e14b237450d0f81d43b56e85d330ff698300c4e2b2172f",
                    "sha256:9bf3e340c57ebbf7cd3faf0eeb83c58bfc157444c24285322419a59bde2d6d85",
                    "sha256:d3928f8b7afbeefe84ca4f65191358f0137e3a5fd2c86e79e0decd3b91375c91",
                    "sha256:5a9b90de96fcb244ba491787fa72a6bdceb7ded786e92db615fbceef2a13e658",
                    "sha256:f5861e27f0d6c0f98b42b4a1ad852b814b8f072d98879c3e1120495a5738ffa1",
                    "sha256:69130ce60312a00de759d1fedfb469f42e35d9327258870ffab593b2faad6a80",
                    "sha256:210977cdb61815764be710adcc31c27975c912ee3ab0c66350935ca5407d896a"
                ]
            }
        },
        "15beta4-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta4",
                    "PG_SHA256=d84d18ef26a64e76f189b7efb05179920eb0e8ae5d68cdbdbbe966305aee4416",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:12fda5c58c03ce73e9f4d7f988b8cdaa535eb3fa1e771f523c85c792520ff58b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15beta4",
                    "PG_SHA256=d84d18ef26a64e76f189b7efb05179920eb0e8ae5d68cdbdbbe966305aee4416",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:12fda5c58c03ce73e9f4d7f988b8cdaa535eb3fa1e771f523c85c792520ff58b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-26T06:22:40.000915783Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:45:55.31597325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15beta4",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:45:55.422686702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=d84d18ef26a64e76f189b7efb05179920eb0e8ae5d68cdbdbbe966305aee4416",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:14.173885224Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-12T22:49:15.214846009Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-12T22:49:15.748855643Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-12T22:49:15.842229579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:16.360821277Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-12T22:49:16.454895578Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:16.569817581Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-12T22:49:16.660269926Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:16.756695791Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:16.852349053Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-12T22:49:16.945044978Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:42.157306125Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:42.414857053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:18:43.249825962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:22:38.251202672Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-09-26T06:22:39.000166817Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-26T06:22:40.000915783Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:e4831b52a15b030f767ecb8a7fbe091c5f1796c1e270acf4f9d22d365479bc26",
                    "sha256:3caa233f1367aa08c5fb14d502300a7d3f61dfb40f5b7febd0fea4e4d020978c",
                    "sha256:fda5e66bf50541fd505b0fc24cd359f4196e87f5fcd33e026e827f54d56d7cab",
                    "sha256:3bd48de692669d38fc88fbbbebbc6d21c6609e01ba7558830de8ac35dcd23501",
                    "sha256:2f952af61aade1cd7a8beb42bcd28885e5fe7e63e92f1bfdc4f529f4067ae745",
                    "sha256:da17397f481e550de8a7946d6ad090ecf3dffe56cb68f03f03a719cb61f9b189",
                    "sha256:d0b2cbd2c6de807380edcd865de45272443e84ff9bdb7886e0730ae802407ec7",
                    "sha256:ae222368fb17864b9de1120428cba7907dfaddebc9d9d154d745e72e631c6ce3"
                ]
            }
        },
        "15beta4-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta4-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=137caf78a2498abade88951dddc999dd5089e268",
                    "GEOS_GIT_HASH=8aaed5e0905009a9ce1a77edc6b1e5378476f282",
                    "GDAL_GIT_HASH=4de8becdd4ff4d656c3d7f8ab2cf3baa2a5005b9",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=ad456b38fe05c328e39e65e9481d66b0fa432593"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:f0e169e7a6bf39018a513631ac29576c33bff50a8d1a406f1ce4ac5ca64c9594",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "d724cbfd65a58a6ef0479289980d844629fe83c7b984d76c4c476c19c02e0c0d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~beta4-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=137caf78a2498abade88951dddc999dd5089e268",
                    "GEOS_GIT_HASH=8aaed5e0905009a9ce1a77edc6b1e5378476f282",
                    "GDAL_GIT_HASH=4de8becdd4ff4d656c3d7f8ab2cf3baa2a5005b9",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=ad456b38fe05c328e39e65e9481d66b0fa432593"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:f0e169e7a6bf39018a513631ac29576c33bff50a8d1a406f1ce4ac5ca64c9594",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-09-26T06:50:39.866871912Z",
            "docker_version": "20.10.17+azure-3",
            "history": [
                {
                    "created": "2022-09-13T00:56:29.334425507Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bd53bff884e470b3c12425132975ab9c6f99002c62c43bca1ff5cde9d863b92 in / "
                },
                {
                    "created": "2022-09-13T00:56:29.655351483Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:27.931948759Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-09-13T11:43:28.587449115Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-09-13T11:43:28.69645888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:37.905363193Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-09-13T11:43:44.406035571Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-09-13T11:43:44.571190754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:48.454362409Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-13T11:43:48.958977931Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-09-13T11:43:50.151242698Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-09-13T11:43:50.247179873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.343897054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.439710551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~beta4-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:10.741641508Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-13T11:44:11.839170114Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-13T11:44:12.361704602Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-13T11:44:12.456829892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.014007419Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-13T11:44:13.110766625Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.226159631Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-13T11:44:13.326698889Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.424116427Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.522415862Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:44:13.622088398Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:05.156236664Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-26T06:47:07.079571401Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:940858dfd56e8e774e2613a73938a4ad865652bc7457e51682a29b09da8423da in /usr/local "
                },
                {
                    "created": "2022-09-26T06:47:07.572346647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=137caf78a2498abade88951dddc999dd5089e268",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:08.454368321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=8aaed5e0905009a9ce1a77edc6b1e5378476f282",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:09.453294993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=4de8becdd4ff4d656c3d7f8ab2cf3baa2a5005b9",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:10.888515391Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-09-26T06:47:11.835174122Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:12.451883227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:47:13.45510448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=ad456b38fe05c328e39e65e9481d66b0fa432593",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:50:35.638281369Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-26T06:50:36.517067848Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-26T06:50:38.000933441Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-09-26T06:50:39.000869272Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-09-26T06:50:39.866871912Z",
                    "created_by": "/bin/sh -c set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b45078e74ec97c5e600f6d5de8ce6254094fb3cb4dc5e1cc8335fb31664af66e",
                    "sha256:38c22c30b0ada83ef94a815ca842970eef78663dbbe071b370a9081bf598e65d",
                    "sha256:198bac2d459b1958d8a505bea77d1fa941026722340bd1cd46d79abd3230b497",
                    "sha256:d4d16d23c3fd11b343adbfe0ad467ba5a6ee2ae40df582bd09f6659d0c0a0cf2",
                    "sha256:0c768903c915c6faa0aaf2f33416fead0b1a46b73ffd039aadc983c85eb6cfd6",
                    "sha256:98fc89d04d4fa98ee17726dd33de253b9131defacb1da03284995fa8226f75fe",
                    "sha256:039f1b2f32f02cbeb64f8c0afcfc36b98e1c34374f5ecdc4eaf205cfc8edcb5d",
                    "sha256:f0af0bfea71055f628f8cb1d5ddf517ee90d6ebe113cdd9112f5644f24a535f0",
                    "sha256:794e74abcf187b8a993b919224a0587afbc89b57f9402798a15e1d02762ff0d2",
                    "sha256:d148d1dcb93bb673d1e14b237450d0f81d43b56e85d330ff698300c4e2b2172f",
                    "sha256:9bf3e340c57ebbf7cd3faf0eeb83c58bfc157444c24285322419a59bde2d6d85",
                    "sha256:d3928f8b7afbeefe84ca4f65191358f0137e3a5fd2c86e79e0decd3b91375c91",
                    "sha256:5a9b90de96fcb244ba491787fa72a6bdceb7ded786e92db615fbceef2a13e658",
                    "sha256:9419371135f4ee1d8d8c667b3055b63baf5f2864139972cc126b767314e9f6f4",
                    "sha256:3b6a11235657c8b0fb63544d93d77e144939eab874e530a8156529f64aa9be93",
                    "sha256:d8e3f5cd954db05e219e8fc8d4718615f189881c5b672c690987b0e470bd3bef",
                    "sha256:917a8c3343a2579210be4532911e37c4c2b08d0586d25d5d55fb99a7d00ef1dd",
                    "sha256:bc8382e1f60c1294b1346d70e937f24023ea801a986b4f6f929d58e7c59aef0d",
                    "sha256:a70d719f18f785b88daaf382aa4d6680c5ee20dca6f6baaa5631f76d10658f16"
                ]
            }
        },
        "15rc1-3.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:3eb6df77b3f0d7c9ebf5d2c952fee786f44a4bd1479b5b9af74598f41677c314",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:3eb6df77b3f0d7c9ebf5d2c952fee786f44a4bd1479b5b9af74598f41677c314",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-03T05:53:25.000286321Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-09-13T00:56:29.334425507Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bd53bff884e470b3c12425132975ab9c6f99002c62c43bca1ff5cde9d863b92 in / "
                },
                {
                    "created": "2022-09-13T00:56:29.655351483Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:27.931948759Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-09-13T11:43:28.587449115Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-09-13T11:43:28.69645888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:37.905363193Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-09-13T11:43:44.406035571Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-09-13T11:43:44.571190754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:48.454362409Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-13T11:43:48.958977931Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-09-13T11:43:50.151242698Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-09-13T11:43:50.247179873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.343897054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:01.506802331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:23.540919885Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-30T18:20:24.612933572Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-30T18:20:25.151617734Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-30T18:20:25.243925387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:25.800473519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-30T18:20:25.894204456Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.006858801Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-30T18:20:26.096487398Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.190453667Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.287744072Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.38289355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:04.126091079Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:04.537828472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:05.393903746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:22.181404042Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-03T05:53:23.032434142Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:24.000258383Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-03T05:53:25.000286321Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b45078e74ec97c5e600f6d5de8ce6254094fb3cb4dc5e1cc8335fb31664af66e",
                    "sha256:38c22c30b0ada83ef94a815ca842970eef78663dbbe071b370a9081bf598e65d",
                    "sha256:198bac2d459b1958d8a505bea77d1fa941026722340bd1cd46d79abd3230b497",
                    "sha256:d4d16d23c3fd11b343adbfe0ad467ba5a6ee2ae40df582bd09f6659d0c0a0cf2",
                    "sha256:0c768903c915c6faa0aaf2f33416fead0b1a46b73ffd039aadc983c85eb6cfd6",
                    "sha256:98fc89d04d4fa98ee17726dd33de253b9131defacb1da03284995fa8226f75fe",
                    "sha256:039f1b2f32f02cbeb64f8c0afcfc36b98e1c34374f5ecdc4eaf205cfc8edcb5d",
                    "sha256:f0af0bfea71055f628f8cb1d5ddf517ee90d6ebe113cdd9112f5644f24a535f0",
                    "sha256:72cec6cabdfb580d61a0d281ed67e82e16ade3e06aec26d220a22b341842e5e8",
                    "sha256:fd07e87af72cd41bfb1777e1fa5589f465878337ce0e36e590ddb664ec03d76e",
                    "sha256:a24543a166a9812b4f6233093e83deb8d6fdefeedbf636f1582a5839698ea63c",
                    "sha256:a64586f84660580d321a9a86289c167bd86fe36556c423cf2193da6a4d64de22",
                    "sha256:8f9f5b1ed15032fc4860396b5460b69eac576efa7c3c8ccc3d18800d960004cf",
                    "sha256:bacd6594bb8877a8dc02d63f079ec341f66055f4dc69f89e1bd01b3a63fbeac9",
                    "sha256:09b854119d9f2047cf17ac61697b9070ad6ed4496c90b97bf39340c4f0309db1",
                    "sha256:797b5d1df1c496593dbb3359b397712b810c5f358e565bfe5d128fd54a2ca8c5"
                ]
            }
        },
        "15rc1-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15rc1",
                    "PG_SHA256=576476fab0d49f05f27625e1d6ed433e6e1358fabba92ae41780421e65fa7ad4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:6ef9fce99265d31768e23bd7b72719510009e0103c40e3b6bc26e62763907786",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15rc1",
                    "PG_SHA256=576476fab0d49f05f27625e1d6ed433e6e1358fabba92ae41780421e65fa7ad4",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:6ef9fce99265d31768e23bd7b72719510009e0103c40e3b6bc26e62763907786",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-03T05:57:19.001144165Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:36.996582242Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-08-09T23:10:37.095200881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T23:10:37.644282487Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-08-09T23:10:37.741521038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:29.673869031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:29.765471622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=576476fab0d49f05f27625e1d6ed433e6e1358fabba92ae41780421e65fa7ad4",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:45.643854989Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-30T18:23:46.620633978Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-30T18:23:47.151358952Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-30T18:23:47.250396945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:47.775321138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-30T18:23:47.872579248Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:47.988509813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-30T18:23:48.08154408Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:48.180142611Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:48.277757656Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:23:48.374593272Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:02.830040231Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:03.316756433Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:53:04.312459686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T05:57:17.47978041Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-10-03T05:57:18.00116569Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-03T05:57:19.001144165Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:cac3117e427e88f07c4bcbd5b41ebe2df5021f94b4a855f889f2aba006e8df1f",
                    "sha256:45d40c0f1d8fbf52cbe7f818a6e55c86d49df07ca66cd3eb3c60b80fd64857b5",
                    "sha256:8fdf47e8493891702adee74304f63ef29c6a513b68d2c0971f407eba04dc0311",
                    "sha256:d844f6735a7a87be59c0461c59606d557cec3fcae96f763b666d8adbf536d97e",
                    "sha256:b358a1c6f9c6d92618f1fafb6e16c27b1e9da55607fb8811dad0b9fd00a2f07f",
                    "sha256:5e7ca3dfa1d57d917da91eb7ee9da7c64061ec8c79371e4cb0fb29ca7ce045e8",
                    "sha256:afd3e34f38322323428376cc5c709f2c2dac0aea53aaf2b7aa93c5123df496ec",
                    "sha256:bc2d13dcceb4f3c5defeb7ae1f57136077428b35f12222dc14b842ee2763082a",
                    "sha256:f5c98e4d3467bca6b9c7c600cba836bad361babf3e5405990f69934a46c994a9",
                    "sha256:59b6ba302768e2cb763ea1146a51f8da0e183f009f60e8099da73bd3c487e866"
                ]
            }
        },
        "15rc1-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=46762f88160e26f3a93295325177360429053388",
                    "GEOS_GIT_HASH=fc0bf2056f0dcd3babe73d025b43946024a52e7f",
                    "GDAL_GIT_HASH=ca1c5c4d25238192ec04f8a9abcf622534b24082",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=b8d78a0dc8694c06dafcb6d8fed95bc6cb4e6cf8"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:cf3473f927bbded65c335244cf4d5041f516ff26329a56610fe2b6f4e9728d6e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "137d640d3e02417a1da2f94331e446432aff55b5d66d4d9c90429ba689a10d02",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=46762f88160e26f3a93295325177360429053388",
                    "GEOS_GIT_HASH=fc0bf2056f0dcd3babe73d025b43946024a52e7f",
                    "GDAL_GIT_HASH=ca1c5c4d25238192ec04f8a9abcf622534b24082",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=b8d78a0dc8694c06dafcb6d8fed95bc6cb4e6cf8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:cf3473f927bbded65c335244cf4d5041f516ff26329a56610fe2b6f4e9728d6e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-03T06:29:46.98702528Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-09-13T00:56:29.334425507Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bd53bff884e470b3c12425132975ab9c6f99002c62c43bca1ff5cde9d863b92 in / "
                },
                {
                    "created": "2022-09-13T00:56:29.655351483Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:27.931948759Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-09-13T11:43:28.587449115Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-09-13T11:43:28.69645888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:37.905363193Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-09-13T11:43:44.406035571Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-09-13T11:43:44.571190754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:48.454362409Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-09-13T11:43:48.958977931Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-09-13T11:43:50.151242698Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-09-13T11:43:50.247179873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-13T11:43:50.343897054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:01.506802331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:23.540919885Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-09-30T18:20:24.612933572Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-09-30T18:20:25.151617734Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-09-30T18:20:25.243925387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:25.800473519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-09-30T18:20:25.894204456Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.006858801Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-09-30T18:20:26.096487398Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.190453667Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.287744072Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-30T18:20:26.38289355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:33.903372426Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-03T06:25:36.010061405Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:e9b8dd381fb2765a5f124060f14a515f2a6ece14e47ec17cd0da5ba11d5cf6f0 in /usr/local "
                },
                {
                    "created": "2022-10-03T06:25:36.588629742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=46762f88160e26f3a93295325177360429053388",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:37.515914798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=fc0bf2056f0dcd3babe73d025b43946024a52e7f",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:38.542530449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=ca1c5c4d25238192ec04f8a9abcf622534b24082",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:40.025700707Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-10-03T06:25:41.016812303Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:41.552882503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:25:42.538944256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=b8d78a0dc8694c06dafcb6d8fed95bc6cb4e6cf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:29:42.527992893Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-03T06:29:43.570740791Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-03T06:29:45.000780369Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-03T06:29:46.000344945Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-10-03T06:29:46.98702528Z",
                    "created_by": "/bin/sh -c set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b45078e74ec97c5e600f6d5de8ce6254094fb3cb4dc5e1cc8335fb31664af66e",
                    "sha256:38c22c30b0ada83ef94a815ca842970eef78663dbbe071b370a9081bf598e65d",
                    "sha256:198bac2d459b1958d8a505bea77d1fa941026722340bd1cd46d79abd3230b497",
                    "sha256:d4d16d23c3fd11b343adbfe0ad467ba5a6ee2ae40df582bd09f6659d0c0a0cf2",
                    "sha256:0c768903c915c6faa0aaf2f33416fead0b1a46b73ffd039aadc983c85eb6cfd6",
                    "sha256:98fc89d04d4fa98ee17726dd33de253b9131defacb1da03284995fa8226f75fe",
                    "sha256:039f1b2f32f02cbeb64f8c0afcfc36b98e1c34374f5ecdc4eaf205cfc8edcb5d",
                    "sha256:f0af0bfea71055f628f8cb1d5ddf517ee90d6ebe113cdd9112f5644f24a535f0",
                    "sha256:72cec6cabdfb580d61a0d281ed67e82e16ade3e06aec26d220a22b341842e5e8",
                    "sha256:fd07e87af72cd41bfb1777e1fa5589f465878337ce0e36e590ddb664ec03d76e",
                    "sha256:a24543a166a9812b4f6233093e83deb8d6fdefeedbf636f1582a5839698ea63c",
                    "sha256:a64586f84660580d321a9a86289c167bd86fe36556c423cf2193da6a4d64de22",
                    "sha256:8f9f5b1ed15032fc4860396b5460b69eac576efa7c3c8ccc3d18800d960004cf",
                    "sha256:16adeb7e7fad4bb847bebe47e1e5572d837ea3d8e6d0eacdeaced38b0d547d68",
                    "sha256:b9e50af6b16e960b461ac9da28d4f31735fcb4a8e391db5163c51473477d523f",
                    "sha256:067998fabb67b4def7836cb6d8736ee803e9eaddf5d291284239c06e398644d2",
                    "sha256:fb9dc542b6a3995a27e5538f449f9345104b3ee9aed0739e263e80504fdd4787",
                    "sha256:857c4a315d3df26338eb35899912123ec8c87a804061475ea4aa392cce307121",
                    "sha256:b2f9ccb6cbf517db242877ba055258c7c4e4b2561bbc97258b5fd9ca60375806"
                ]
            }
        },
        "15rc2-3.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:534c6a3795855fae2bbe8c70eb675468bb77b2861b89c68dbb7e041e0757fe89",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:534c6a3795855fae2bbe8c70eb675468bb77b2861b89c68dbb7e041e0757fe89",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-10T06:11:36.000115305Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-10-04T23:26:39.460307991Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b777208be08edd8f297035cdfbacddb45170ad778fd643c792ee045187e39 in / "
                },
                {
                    "created": "2022-10-04T23:26:39.844454325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:04:51.858087829Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-05T09:04:52.519507623Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-10-05T09:04:52.626710608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:00.950935561Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-10-05T09:05:07.613460951Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-10-05T09:05:07.837061513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:11.842746029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-05T09:05:12.453926873Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-10-05T09:05:13.651507543Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-10-05T09:05:13.755950642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:13.85867107Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:16.209080366Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~rc2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:37.923128619Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-10-07T23:54:39.208814478Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-10-07T23:54:39.749809623Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-10-07T23:54:39.849124462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.385100045Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-10-07T23:54:40.487121289Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.605742409Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-10-07T23:54:40.705123489Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.808003426Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.911383733Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:41.026771144Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:14.94178526Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:15.386164334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:16.388707019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:32.977335901Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-10T06:11:33.848419871Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:35.000838297Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-10T06:11:36.000115305Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fe7b1e9bf7922fbc22281bcc6b4f5ac8f1a7b4278929880940978c42fc9d0229",
                    "sha256:cf1c1d4e7b970cff84425af42b2cb4ba5e635ffcb97000925e8022264df934d4",
                    "sha256:a560084a04efa3e75519796d24a4b9c2db8b594dbd043f537e9e350907d9d05c",
                    "sha256:596139a369da06580f5bb60799cd821af643580440dc3c864aa6e88dad9069da",
                    "sha256:8b56e06d2fd794bd063ba61618e29679aa303b62a5259212fc7690ac059402b6",
                    "sha256:afa3537bdcd4a91804325ecbac0c15502041d394bd11a94c6bedb77deef24863",
                    "sha256:421ac1c18bca65072f73db57a5f2fc249a364c594f75f4e1e4a521f2a9d4dced",
                    "sha256:89be899c57c887d655d5c768926a091f335d47dbf3276819974c10ce375b081b",
                    "sha256:46bdf109e172e292e990d4fa5306c94c0ccbc407d8c0fb0c81713017102a61cc",
                    "sha256:74311891ca33c2a41f40fadaeaaed2bb26c5847fa6a062a87185a0c57b17fee4",
                    "sha256:95e116cf654ef5a2dfb7933480385567bf0cd0858977c7742ceb45dbb633eb9b",
                    "sha256:fdeca715de66e125fd6b419adacc1e847d773528de21aa9e2bfc17efdc17c172",
                    "sha256:8cfe6ed968f36e0282f5d27363c9cae635c9f8b2e4fd98b038c730c6bca9d973",
                    "sha256:d8a503f3efa3ed9103cfaada94f45e0afd4b05cd6ff3faa40a16b4451893f69f",
                    "sha256:06b2e898b1c22382f5bf9f1906629d2fe6dd92b801de97e6ad10155c10dfbd34",
                    "sha256:655c3d880f60293e1115342a625eb748326a2cf2c38da1ce5e21827ec133e0a8"
                ]
            }
        },
        "15rc2-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15rc2",
                    "PG_SHA256=11739405e96699198733f4a0055362262c9c89f32d2e835e0b815687d700cc23",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:a1683cfe25b1f168ae34f8faf89c5b37cd8e244f42d702a0f50d3bed53268bd9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15rc2",
                    "PG_SHA256=11739405e96699198733f4a0055362262c9c89f32d2e835e0b815687d700cc23",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.1",
                    "POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:a1683cfe25b1f168ae34f8faf89c5b37cd8e244f42d702a0f50d3bed53268bd9",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-10T06:15:04.000276226Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-08-09T17:19:53.274069586Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
                },
                {
                    "created": "2022-08-09T17:19:53.47374331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T01:10:45.192013402Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-10-07T01:10:45.290304934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T01:10:45.871647326Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-10-07T01:10:45.968600328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:44.368258303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15rc2",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:44.463501607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=11739405e96699198733f4a0055362262c9c89f32d2e835e0b815687d700cc23",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:57:59.263518474Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tllvm-dev clang g++ \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2022-10-07T23:58:00.235473169Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-10-07T23:58:00.770486127Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-10-07T23:58:00.869990587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:58:01.414501945Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-10-07T23:58:01.510601527Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:58:01.622264513Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232dce6cf487afb0c0cc43d38932ff29614a74b57cd04557dc7398e6d2b93b8f in /usr/local/bin/ "
                },
                {
                    "created": "2022-10-07T23:58:01.71588138Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:58:01.820118161Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:58:01.921449988Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:58:02.020517734Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:10.865256831Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:11.254230618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:11:12.260858906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=12298af0ef8804d913d2e8ca726785d1dc1e51b9589ae49f83d2c64472821500",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:15:02.052246057Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.5 ;             export PROJ_ALPINE_VER=9.0 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-10-10T06:15:03.00009511Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-10T06:15:04.000276226Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
                    "sha256:c107d84c5ee5434184266dd999ba59186dbe34ef4c6d1464f2ddd742f5eaa7f8",
                    "sha256:1191ff7875541dfd09e2f07b69b294d01cae17d396860e2d255308cb4ee9de5f",
                    "sha256:b4551165cfe40914e00a44e93a388e9ea2d7f690bd33e3c495dcdb19505d681b",
                    "sha256:26de7005d3c34bcf380cbe10d2c2f6176039a4b1a5d8f69d2a7cc2a474902323",
                    "sha256:7c0069f389679caf349c4323acf7e5bb72e579ea97748f7d90ed9fc56fdff8b2",
                    "sha256:59bf05af71d54426649c9cf7dacd812f0f4e5cf4a6348ea2bd19a7ea8bb0c329",
                    "sha256:0d370b2fff431cdb82f97b614a017847e190ddafff1889f2705339a793a3edff",
                    "sha256:27f5a8a75f0d997c5ef0504caea6935e0fddb3704c1f16a96c6f0320953ab54e",
                    "sha256:184ae4651dcde89eac7fdae800594ecf1aa1d0b8e828dd435d795f29ee6b8304",
                    "sha256:9135afe352857ff2ead5658dcb254eec4279d27690808c7d2c5c480eab2d26ef"
                ]
            }
        },
        "15rc2-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:b15bd6c0b21427d55461e9f66d0f49212789cf3cc494a027abff16f35f1aa4bf",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "fd988e22abe4c7431a2eaf46dacb56756a86cad5280b34c42b81c92f5718a549",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=15",
                    "PG_VERSION=15~rc2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "POSTGIS_VERSION=master",
                    "POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt"
                ],
                "Image": "sha256:b15bd6c0b21427d55461e9f66d0f49212789cf3cc494a027abff16f35f1aa4bf",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2022-10-10T06:48:27.986599605Z",
            "docker_version": "20.10.18+azure-1",
            "history": [
                {
                    "created": "2022-10-04T23:26:39.460307991Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b777208be08edd8f297035cdfbacddb45170ad778fd643c792ee045187e39 in / "
                },
                {
                    "created": "2022-10-04T23:26:39.844454325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:04:51.858087829Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-05T09:04:52.519507623Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-10-05T09:04:52.626710608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:00.950935561Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-10-05T09:05:07.613460951Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-10-05T09:05:07.837061513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:11.842746029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-05T09:05:12.453926873Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-10-05T09:05:13.651507543Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-10-05T09:05:13.755950642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=15",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-05T09:05:13.85867107Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:16.209080366Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=15~rc2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:37.923128619Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-10-07T23:54:39.208814478Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-10-07T23:54:39.749809623Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-10-07T23:54:39.849124462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.385100045Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-10-07T23:54:40.487121289Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.605742409Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:925d466681c8349f58385c00a8caa567c76b695158aa04bf4ad2ac92604e11c7 in /usr/local/bin/ "
                },
                {
                    "created": "2022-10-07T23:54:40.705123489Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.808003426Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:40.911383733Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T23:54:41.026771144Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:13.060431301Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-10T06:44:15.096171283Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:0665f21975e130ff2c5c02a9fe1b11eb8127c7c88d272133efad80b211082736 in /usr/local "
                },
                {
                    "created": "2022-10-10T06:44:15.683241737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=a0373e762e443e0bf77b6c5968762f9b6b545a9d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:16.559712619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=b16166c318e83fdb4cc89573f0672c8b40beb5bc",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:17.540165365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=0ee692724c5717a633e9f14314c06b9811ac1618",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:18.991669061Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && gdalinfo --version     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version"
                },
                {
                    "created": "2022-10-10T06:44:19.973322111Z",
                    "created_by": "/bin/sh -c ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0     || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:20.530875801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=master",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:44:21.52353031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=c7c8f05d8f397cc92b9f61c76eb19c13939fc1fa",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:48:24.364058968Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcgal-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-10T06:48:25.399321114Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-10T06:48:26.000895981Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-10-10T06:48:27.001062579Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2022-10-10T06:48:27.986599605Z",
                    "created_by": "/bin/sh -c set -ex     && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && cat /_pgis_full_version.txt",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fe7b1e9bf7922fbc22281bcc6b4f5ac8f1a7b4278929880940978c42fc9d0229",
                    "sha256:cf1c1d4e7b970cff84425af42b2cb4ba5e635ffcb97000925e8022264df934d4",
                    "sha256:a560084a04efa3e75519796d24a4b9c2db8b594dbd043f537e9e350907d9d05c",
                    "sha256:596139a369da06580f5bb60799cd821af643580440dc3c864aa6e88dad9069da",
                    "sha256:8b56e06d2fd794bd063ba61618e29679aa303b62a5259212fc7690ac059402b6",
                    "sha256:afa3537bdcd4a91804325ecbac0c15502041d394bd11a94c6bedb77deef24863",
                    "sha256:421ac1c18bca65072f73db57a5f2fc249a364c594f75f4e1e4a521f2a9d4dced",
                    "sha256:89be899c57c887d655d5c768926a091f335d47dbf3276819974c10ce375b081b",
                    "sha256:46bdf109e172e292e990d4fa5306c94c0ccbc407d8c0fb0c81713017102a61cc",
                    "sha256:74311891ca33c2a41f40fadaeaaed2bb26c5847fa6a062a87185a0c57b17fee4",
                    "sha256:95e116cf654ef5a2dfb7933480385567bf0cd0858977c7742ceb45dbb633eb9b",
                    "sha256:fdeca715de66e125fd6b419adacc1e847d773528de21aa9e2bfc17efdc17c172",
                    "sha256:8cfe6ed968f36e0282f5d27363c9cae635c9f8b2e4fd98b038c730c6bca9d973",
                    "sha256:7346929fb0ac9ae1b533e9e6a7a8fa1758b828fecb78335c55c12e757f4e894d",
                    "sha256:9fe0d5a1e2c00bd6465e23dd582f5f6300bdc1ccb7caab30f6aea8d121f87c61",
                    "sha256:178d772758339ca7df7977fe8a6f0cdb66c67b0b2431c77278eda6f738b9ddd3",
                    "sha256:702d4ec56531cafe16c441fa33a9050797b87e4d9878f754f836dcf4654c8859",
                    "sha256:5183007e6f79e5a0250b8c971e29bee9eba1b96f05cc4de66ae9634e9aa61afe",
                    "sha256:68e2f47831cb8ce30833db678c75f7a40ec8bda700c6065d7d8874ef8c073dfc"
                ]
            }
        },
        "16-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16.3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:50.345566902Z",
            "history": [
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_MAJOR=16",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_VERSION=16.3-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.313255528Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.332632076Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.345566902Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:10d40fad64fd1e98cfeb8b609fb69701c099332a7253b051bb283c7996b58a4b",
                    "sha256:e26829475f7a98b3f3a6d9afe48d263d810231c4e47440bbf9ddb0e751dc5d91",
                    "sha256:6316a8165e862396c61ad0b793f9cf542e48b5ed996d683dec7d6ec8815a8184",
                    "sha256:67c6b02a02be26ce2712b3965743cadaaf56b6b402159d98aa8f38d47715ead4",
                    "sha256:e619de6aed13c1d9869d162f07b6b7fd350d18a28add028aa87dbaaff7d7b542",
                    "sha256:25b48cb06100e056a5b2d49ec457345d2e54265dfc7616c03f434df686cbf278",
                    "sha256:220d726527a38bd54c92bcff1af95fcd9d3242b4bbe7f093cafcbb32981ffda4",
                    "sha256:f8a700e6d5d2f23ea748eac137b467e52610d55a496e30cda30e1af6d21cc126",
                    "sha256:af774239634720c1adf0f46187539968c39af72da64c4bc996fece0515bd905f",
                    "sha256:baa22dd9b807291171b4b084ae2468d72c41a484d11588def4a90684168f6389",
                    "sha256:ffeac10585609cc0254351421d42fc8bbcbab2a4b07bdfffe11b2b7efcd46485",
                    "sha256:2021692b13066dec50c2ffaa82eeeaa4fcc087389bf10591423fcf4dfe8ff6fc",
                    "sha256:160596d1c000bf7f5c54538309075c991009000b135c6dd4a3e0c13fa84f039f",
                    "sha256:72366b543e78f9dacd0ef4de65360c6e792492cc87e4531abcca4f824741f4c6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:299009d38d0fc171fd708639065f2c0929569c9bb500e4418850d0a5c267ad04",
                    "sha256:586dbf01beda7145f79a79695b8355adfa491caf19157760d9a67e511266b051"
                ]
            }
        },
        "16-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16.3",
                    "PG_SHA256=331963d5d3dc4caf4216a049fa40b66d6bcb8c730615859411b9518764e60585",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.2",
                    "POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2 spatial database extension with PostgreSQL 16 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:28:09.313675451Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_MAJOR=16",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_VERSION=16.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_SHA256=331963d5d3dc4caf4216a049fa40b66d6bcb8c730615859411b9518764e60585",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:09.286493231Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2 spatial database extension with PostgreSQL 16 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:09.286493231Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:09.286493231Z",
                    "created_by": "ENV POSTGIS_SHA256=17aa8760a5c4fcb9a1fdc750c1c9aca0198a35dd1e320628064c43f178eefed2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:28:09.286493231Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:09.302410652Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:28:09.313675451Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:37243eb54498624d35526d73c8793fc29eb4c745d3016c8f9a9c1ddc20d6f75a",
                    "sha256:7a910e6ab8dfbd00c2288c23431e689a154f78fd0d00d932f5adf51f264c9041",
                    "sha256:3e786fcc67640b5c82b6ff1f2f499befe717e701f89e554f99bd2a6b13c3f260",
                    "sha256:914b02db92146fea448343e429262d2156379b495c4a7956c3e7b8cb1bf83cf1",
                    "sha256:6ad964f22fb6761849cb4478af3d58d914b430cb15baff7021f4b02d1457a922",
                    "sha256:d8c342a5203332f586513ce286568861dc08f7da6f214573d3c20fa827d3079b",
                    "sha256:557d21dac65987d33713db500b9015f4c49136cbc9fd50163942ddb2747664e4",
                    "sha256:c62afb32d857f570c91a3ee72c0f36e0affa80ead47efc7a30853d553c72e9fe",
                    "sha256:1e229b1112f3815b468a7c395524f41273d92ac9f929776243440f33b4fd537b",
                    "sha256:d42d715d38f5c7245817f9b6d265af06b67a21770ece2ee9cc6c0e7d44ee3f82",
                    "sha256:543243bfa5c66ebe4ffe30336a2982afbd2eaf9805d043de8ccc37d01b7aa3ed"
                ]
            }
        },
        "16-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16.3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=188e51bad36ffc30e49dbabda29620b71a84664c",
                    "SFCGAL_GIT_HASH=61f3b08ade49493b56c6bafa98c7c1f84addbc10",
                    "PROJ_GIT_HASH=356496f7b60ee0235189dd51d99aac700fbd2bdc",
                    "GEOS_GIT_HASH=a8d2ed0aba46f88f9b8987526e68eea6565d16ae",
                    "GDAL_GIT_HASH=d7aed6e0b03f949ba40684f868c63a08d89177b1",
                    "POSTGIS_GIT_HASH=8ed84517a9b86c86724504d1b6a0f0c1ccd86cf6"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:48:26.681183651Z",
            "history": [
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_MAJOR=16",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_VERSION=16.3-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:43.172334589Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:43.172334589Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:43.172334589Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:38.807617953Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=188e51bad36ffc30e49dbabda29620b71a84664c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=61f3b08ade49493b56c6bafa98c7c1f84addbc10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV PROJ_GIT_HASH=356496f7b60ee0235189dd51d99aac700fbd2bdc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV GEOS_GIT_HASH=a8d2ed0aba46f88f9b8987526e68eea6565d16ae",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.016059856Z",
                    "created_by": "ENV GDAL_GIT_HASH=d7aed6e0b03f949ba40684f868c63a08d89177b1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:45:39.274140739Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:45:39.274140739Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=8ed84517a9b86c86724504d1b6a0f0c1ccd86cf6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:48:26.176246303Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       docbook-xml       docbook5-xml       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       libxml2-utils       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       docbook-xml       docbook5-xml       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       libxml2-utils       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:26.371445768Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:26.387932167Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:26.400077044Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:48:26.681183651Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:10d40fad64fd1e98cfeb8b609fb69701c099332a7253b051bb283c7996b58a4b",
                    "sha256:e26829475f7a98b3f3a6d9afe48d263d810231c4e47440bbf9ddb0e751dc5d91",
                    "sha256:6316a8165e862396c61ad0b793f9cf542e48b5ed996d683dec7d6ec8815a8184",
                    "sha256:67c6b02a02be26ce2712b3965743cadaaf56b6b402159d98aa8f38d47715ead4",
                    "sha256:e619de6aed13c1d9869d162f07b6b7fd350d18a28add028aa87dbaaff7d7b542",
                    "sha256:25b48cb06100e056a5b2d49ec457345d2e54265dfc7616c03f434df686cbf278",
                    "sha256:220d726527a38bd54c92bcff1af95fcd9d3242b4bbe7f093cafcbb32981ffda4",
                    "sha256:f8a700e6d5d2f23ea748eac137b467e52610d55a496e30cda30e1af6d21cc126",
                    "sha256:af774239634720c1adf0f46187539968c39af72da64c4bc996fece0515bd905f",
                    "sha256:baa22dd9b807291171b4b084ae2468d72c41a484d11588def4a90684168f6389",
                    "sha256:ffeac10585609cc0254351421d42fc8bbcbab2a4b07bdfffe11b2b7efcd46485",
                    "sha256:2021692b13066dec50c2ffaa82eeeaa4fcc087389bf10591423fcf4dfe8ff6fc",
                    "sha256:160596d1c000bf7f5c54538309075c991009000b135c6dd4a3e0c13fa84f039f",
                    "sha256:2edd016ffbd409eb228783efe794ca45a85dd4030e00399d786a8126c53bbb70",
                    "sha256:b0f10eaf72c559c130bf1cdb27f57cfa2caa593bacffde02fab237276c86afd7",
                    "sha256:fef22396fbaf4f920cb47da6ca81b959c70712b659300442ef8810da3d624b4b",
                    "sha256:d5dd7c2bd6e79d94fcd4c497e661bbf2e9bc6566f6b1b297d4bcecda3b8b61ff",
                    "sha256:ec144cf51be310dc287c7ffa741a42d49bc282c1337c6802c4ab8121da62ecd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e922f76188e2052f9a1acba7d3520bd2d64bcf2ed2180d7c763a2ed5804578f1",
                    "sha256:98f3578c30e326aaa533ab50df0beeef1e768d86118b7289a4a9b9be2840e4af",
                    "sha256:1ee208f36bce0a5f92ffeea9aa27d60c84650ab282118a3e1cd0a66d022dcfdd"
                ]
            }
        },
        "16beta1-3.3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta1",
                    "PG_SHA256=59e248d434aa515fa2d31c0d161c4148f30d511dcde91f6e888684823b6849a8",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.3",
                    "POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:2be5c6e259d378ba32080cc9c38b22c3098d473ff314ef061096461beed70cfd",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta1 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta1",
                    "PG_SHA256=59e248d434aa515fa2d31c0d161c4148f30d511dcde91f6e888684823b6849a8",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.3",
                    "POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:2be5c6e259d378ba32080cc9c38b22c3098d473ff314ef061096461beed70cfd",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta1 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2023-07-03T05:31:02.000135806Z",
            "docker_version": "20.10.25+azure-2",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:10:07.52514909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.604130363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta1",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.685905404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=59e248d434aa515fa2d31c0d161c4148f30d511dcde91f6e888684823b6849a8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.769006997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:55.725291933Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-06-14T21:12:56.628791043Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-06-14T21:12:57.100938874Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-06-14T21:12:57.181163314Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:57.646457442Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-06-14T21:12:57.725078041Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:57.814216714Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-06-14T21:12:57.893309611Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:57.971815025Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:58.053391869Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:12:58.137506915Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:26:23.142876314Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta1 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:26:23.436605085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:26:24.29587695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:31:00.267846475Z",
                    "created_by": "/bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2023-07-03T05:31:01.000445936Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2023-07-03T05:31:02.000135806Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:422738e828b2e67a7f4aa6cf7b392fd88dee6a433789754c2eede0fb3b8a89fd",
                    "sha256:e05bdf7efa1254890116429cbb4cc96f67e630214f52389e3b0f2a3a860b9f15",
                    "sha256:5e2605e27c3e67a2a3a5c095fbab329143b25460aee3c2f714139eea83911233",
                    "sha256:946dc4da007afde98e3fd0b6b07b2a3c043675f406141183b03511b65453c85d",
                    "sha256:51122cfca6aa8d3798b90432fd1beff1a1625720ee593c8e00aac9a6ce1fee3a",
                    "sha256:e80306d22b3ddd7bd3db7b05575b3b6df79b5cca00b9a337af3de92ce7b0de73",
                    "sha256:d4ab86ce78ce75aac5d18feb4c9aa4b9727b108997d185405d5659cae2e13a81",
                    "sha256:31bf2cc451a569a365d67854287342fa30a00f0b9648915279a8a13e9a1ba62b"
                ]
            }
        },
        "16beta1-master": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta1-2.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=ad130ba0e0603c06c2a3de887c2570b131ed206f",
                    "SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "PROJ_GIT_HASH=69dea10cd6a720e5fb50f821b622ecfddf8886ac",
                    "GEOS_GIT_HASH=afcb31885fb206d2e3093ead943aa320a991370a",
                    "GDAL_GIT_HASH=4a73dfbab5bb6f31804f1d977099eaf5aeac53c7",
                    "POSTGIS_GIT_HASH=e6d6be316631881e464778e958b94cda1c270348"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:0e0681f5ec6b777f05a46f4e703f6152e39075faec7ce6c0d55897e78efbf7f8",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "container": "ff220815bc04ef94b00763bf4af39a7963cd46991b7a6c3770936c47acd96bb5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta1-2.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=ad130ba0e0603c06c2a3de887c2570b131ed206f",
                    "SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "PROJ_GIT_HASH=69dea10cd6a720e5fb50f821b622ecfddf8886ac",
                    "GEOS_GIT_HASH=afcb31885fb206d2e3093ead943aa320a991370a",
                    "GDAL_GIT_HASH=4a73dfbab5bb6f31804f1d977099eaf5aeac53c7",
                    "POSTGIS_GIT_HASH=e6d6be316631881e464778e958b94cda1c270348"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt"
                ],
                "Image": "sha256:0e0681f5ec6b777f05a46f4e703f6152e39075faec7ce6c0d55897e78efbf7f8",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "StopSignal": "SIGINT"
            },
            "created": "2023-07-03T05:59:08.945902062Z",
            "docker_version": "20.10.25+azure-2",
            "history": [
                {
                    "created": "2023-06-12T23:21:07.838037938Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5ab44909c2983e19ab6596e7e4ee9ad80e48afeb9dfe0e7224afdae7cafd25ef in / "
                },
                {
                    "created": "2023-06-12T23:21:08.19925012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:48:31.038513505Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-13T12:48:37.288403904Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T12:48:37.402373739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:48:45.59542073Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-06-13T12:48:52.977942245Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-06-13T12:48:53.150689656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:48:57.167844268Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T12:48:57.710535869Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-13T12:48:58.929706208Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-06-13T12:48:59.019242441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:48:59.105345387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:48:59.191266065Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta1-2.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:19.974269861Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-06-13T12:49:21.125519985Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-06-13T12:49:21.644949021Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-06-13T12:49:21.74007778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:22.257941608Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-06-13T12:49:22.350785901Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:22.458391729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-06-13T12:49:22.547993766Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:22.655219778Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:22.765542524Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T12:49:22.870774674Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:00.102720354Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_CMAKE_BUILD_TYPE",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:00.527584564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:07.825402439Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-03T05:55:09.000721896Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:782e2ca7f6e310150739306767e0070b658ea4408dd6f72fa515add2c671d331 in / "
                },
                {
                    "created": "2023-07-03T05:55:10.96791735Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:c735669a5403575b81631247417a83b152b5e38a55e66daa643307234c6eb910 in /usr/local "
                },
                {
                    "created": "2023-07-03T05:55:11.439711291Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CGAL_GIT_BRANCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:12.460263228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:13.465107716Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CGAL5X_GIT_HASH=ad130ba0e0603c06c2a3de887c2570b131ed206f",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:14.4707526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:15.460203907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PROJ_GIT_HASH=69dea10cd6a720e5fb50f821b622ecfddf8886ac",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:16.456283386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GEOS_GIT_HASH=afcb31885fb206d2e3093ead943aa320a991370a",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:17.464558799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GDAL_GIT_HASH=4a73dfbab5bb6f31804f1d977099eaf5aeac53c7",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:55:18.964452732Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1"
                },
                {
                    "created": "2023-07-03T05:55:19.472597333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_GIT_HASH=e6d6be316631881e464778e958b94cda1c270348",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:59:05.121006124Z",
                    "created_by": "/bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-03T05:59:05.999775137Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-03T05:59:07.000903487Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2023-07-03T05:59:08.000216918Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                },
                {
                    "created": "2023-07-03T05:59:08.945902062Z",
                    "created_by": "/bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0cc1f01656262cc1319655e8570146e4aa190c3fb8c7e81c353760c44a96c13b",
                    "sha256:2fd6f610b8fc42d9674b51b7b48ce7ec0b08cf2cba7b6f9ef442060b3accbc76",
                    "sha256:f27b9d2e85eba70cb0f1885df606f8078a52dd6e24ac4d0d7970ed80a172b16f",
                    "sha256:937dbed755be41d297eb0bc78c4b1266d57b9e2db623d27d501553414e96ba01",
                    "sha256:1fed7749a107f7de660e79f8595608e4804eb5fe6a5a85189e4e17cb449e761b",
                    "sha256:962b4ea70ae9f565c5ea81d0addf06aee1e5a5d2555a5abb61ce755741147404",
                    "sha256:a09d9630f354b0ea1c1b4264284f0490b2962b240d4b6288e7e34fdb8f24c81b",
                    "sha256:93d62034481125976ff000eec5c4e883f29656adc7ca7f2e7f4774e1c6ad52db",
                    "sha256:b8bfc3b56af840f1b8f9694965a113000bb639ee7ad58bac5b6654c684d0151a",
                    "sha256:d360414b9f66b8a80d8c67c5280f631b5ada036368f96540357614cbb5b9e4c0",
                    "sha256:8c32f176b6f5f6034cfb1a6ffffb3b86c43f400e049d11a933bba933d5113c85",
                    "sha256:2b98a7b6dbb16d664a627f4185d3480572f9302777176d881ba2d1ef34e0a209",
                    "sha256:3b6fae4e96c6e68587d72d09e79f376b1cc1ba37f00025a56196a8fd33676823",
                    "sha256:16a0c1081ca0cb9df407e8d2353e0918bf00952923781d72f467e9affc697a89",
                    "sha256:33c5b55630a97a9c9e5a2ca88aedfcf3a5f08a69f634c76b6391b96ac6bacd9a",
                    "sha256:a8140410ffac6663f471dc1bf90d941278e7c947a6ad39666eaa0f20fa90d147",
                    "sha256:79a494afdc1ad74c38165aa525247d99b9700488d84e5731cca568b265a7aa0f",
                    "sha256:22db6c8a82581340ceb941476793e6535fa42921f249d7e774031f7da7c5f375",
                    "sha256:7c7a970358dcbb31ff3728f004af3b27f47c3a27ee2ca6b80d9545725c527bba",
                    "sha256:7da75d5c0772e20ac65f8f660488238bc6924bdc9947d35cd874c499ef75322f",
                    "sha256:392e91e68eab5a769d84c9d8bfb55b698c61fdb2db1bd4c4b2a310dac5909bea"
                ]
            }
        },
        "16beta2-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta2 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-07T05:23:21.868094052Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:47:01.983890742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:02.077228092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:02.163520256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:22.320499952Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-28T10:47:23.463496344Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-28T10:47:23.94546575Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-28T10:47:24.030608124Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.497522599Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-28T10:47:24.584511842Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.678636333Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-28T10:47:24.758893762Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.843714813Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.932396921Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:25.020311639Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.454506689Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta2 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.454506689Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.454506689Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.454506689Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:23:21.794525845Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:23:21.807785382Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:23:21.868094052Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTItYnVsbHNleWUiLCJwaW4iOiJzaGEyNTY6NzgxMDU0OGQwYjQyMDM2ODhmYTQ3Zjc3ZGQzZDE2YWEyNTEyYmUwMjJlZTI1OGIyNWQ2ZTZiOWVhMGEyMjVjMSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:5c64148c80f660004ae35c0a0b6a4807b9b31137968d5ac472061b36d87b79fd",
                    "sha256:0cc22646f4e331fcd4b0c730f987b0f3188d2b5c1f3d072aed146185fa501ed3",
                    "sha256:ff66f53313495bc1c6e1a929bd1c86f0a401f61f0a798c6ea86b5278be3fdc3d",
                    "sha256:9a9cd6df715aff9dd79afc52a16efae003fe097b77a578d1557c3e1594d5dc8c",
                    "sha256:2928560881e6f3eb30e393d214f96b232ef752bc500056b329b33378e0a883ca",
                    "sha256:c7a35b97eefe0197f6a1baa6f535b7030b7c148caccde75a0f37557bf0c1ff9f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2580865ad56d2e9a6a9bb056ae3c1cd161590f96e56f319f4145192097c5df01",
                    "sha256:e07467a0e8b2f4811816da09b4ffa025f48025e1cebec8c465781132286d68ee"
                ]
            }
        },
        "16beta2-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-07T05:26:43.323320046Z",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:10:07.52514909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.873598488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.95483084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:10.037033024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:10:58.330234524Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-04T02:10:59.217036351Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-04T02:10:59.732918585Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-04T02:10:59.813196009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.308124805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-04T02:11:00.386198589Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.475173685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-04T02:11:00.549891895Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.63242166Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.713098013Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.792283911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:43.242052513Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 16beta2 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:43.242052513Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:43.242052513Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:43.242052513Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:43.278909181Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:43.323320046Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTItYWxwaW5lMy4xOCIsInBpbiI6InNoYTI1NjpmNTBiNjhlNWFiMTkyOWMyOTRmOGMxMWY5NTVmNDEwMDczMjEwNTBiYmFjNTBhZWVhYjg1NDRhMzk2ZTQ1YTg3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:93a4f1efe0ecba85f32fe129e48ab323c9c3dd9358f2254763848268bb5c25d1",
                    "sha256:1d125f1a7034c1a9012f7c68e10f76111989cee7f7c1d9511627dde4fe57db62",
                    "sha256:5fe886cca1acadc30ea8c0dd6f77edee555c5980403397fb8739bbd6bd7de0bc",
                    "sha256:86f973d616ed57cf7544413e0494a7be63a830daafa113211b448bb77dbf43a8",
                    "sha256:4adfd04e91227ae68da152f27d27cb033cae546d47429de59d3cc72a7d87ceaa",
                    "sha256:54a11fb074b3cbaf455d99539b42548f9c82a6e845032e2a99a13770e6d7cb94",
                    "sha256:605ca84c833f2e8f36aa442af74237caf2823b1b782001066a9ce6cb57e38d51",
                    "sha256:1970701c1f847ad17199a2d8707fa318f6d8e3c36629c48c30f324b20199ad4a"
                ]
            }
        },
        "16beta2-3.3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.3",
                    "POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:1c3dbbe403f126d22c4cf854b1e85fb0929fdf0976f940349696ef84abcaa4ae",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.3",
                    "POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:1c3dbbe403f126d22c4cf854b1e85fb0929fdf0976f940349696ef84abcaa4ae",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2023-07-24T05:28:56.000924384Z",
            "docker_version": "20.10.25+azure-2",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:10:07.52514909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.873598488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.95483084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:10.037033024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:10:58.330234524Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-04T02:10:59.217036351Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-04T02:10:59.732918585Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-04T02:10:59.813196009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.308124805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-04T02:11:00.386198589Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.475173685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-04T02:11:00.549891895Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.63242166Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.713098013Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.792283911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T05:24:18.669555704Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.3 spatial database extension with PostgreSQL 16beta2 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T05:24:19.285518883Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.3.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T05:24:20.296220194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=441bb33bd2be362c7c463161207f290a1c25083027a069322696eeec74fc916b",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-24T05:28:54.791950855Z",
                    "created_by": "/bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2023-07-24T05:28:55.293040545Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2023-07-24T05:28:56.000924384Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:93a4f1efe0ecba85f32fe129e48ab323c9c3dd9358f2254763848268bb5c25d1",
                    "sha256:1d125f1a7034c1a9012f7c68e10f76111989cee7f7c1d9511627dde4fe57db62",
                    "sha256:5fe886cca1acadc30ea8c0dd6f77edee555c5980403397fb8739bbd6bd7de0bc",
                    "sha256:86f973d616ed57cf7544413e0494a7be63a830daafa113211b448bb77dbf43a8",
                    "sha256:4adfd04e91227ae68da152f27d27cb033cae546d47429de59d3cc72a7d87ceaa",
                    "sha256:5ac42ed92a41339eb0d977343e374e2b98b95d218ca91ac25c2e513632bed7b4",
                    "sha256:ef60285c5793d9ff63244e92c69f3f0d732466a5d27245021805582d2d2f2b2f",
                    "sha256:42dd24fb9601139fc5af30c2ef710318cbcc6049778ba43c7c082da8c3f4b40a"
                ]
            }
        },
        "16beta2-3.4.0beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0beta2",
                    "POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:1d13231dedeb1cb19f84b77d637fcb5beb22f8a7be24b8b0703e6948ef0f4292",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0beta2",
                    "POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:1d13231dedeb1cb19f84b77d637fcb5beb22f8a7be24b8b0703e6948ef0f4292",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2023-07-31T05:27:14.000192961Z",
            "docker_version": "20.10.25+azure-2",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:10:07.52514909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.873598488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.95483084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:10.037033024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:10:58.330234524Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-04T02:10:59.217036351Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-04T02:10:59.732918585Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-04T02:10:59.813196009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.308124805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-04T02:11:00.386198589Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.475173685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-04T02:11:00.549891895Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.63242166Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.713098013Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.792283911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:29.991457355Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0beta2 spatial database extension with PostgreSQL 16beta2 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:30.219498109Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.4.0beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:23:31.22836159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9460f546b02e95958ce3c4c763d75aa4dc8d44d559a9d5a108ef0e718671b3aa",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-31T05:27:11.89075874Z",
                    "created_by": "/bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2023-07-31T05:27:13.000297236Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2023-07-31T05:27:14.000192961Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:93a4f1efe0ecba85f32fe129e48ab323c9c3dd9358f2254763848268bb5c25d1",
                    "sha256:1d125f1a7034c1a9012f7c68e10f76111989cee7f7c1d9511627dde4fe57db62",
                    "sha256:5fe886cca1acadc30ea8c0dd6f77edee555c5980403397fb8739bbd6bd7de0bc",
                    "sha256:86f973d616ed57cf7544413e0494a7be63a830daafa113211b448bb77dbf43a8",
                    "sha256:4adfd04e91227ae68da152f27d27cb033cae546d47429de59d3cc72a7d87ceaa",
                    "sha256:ef21ea4921f8c1ce40d3be0da342f8d0a000f6589c16121af88bfecc6be03b0b",
                    "sha256:3bb342ca177e8fe2a43df5f26b48d0a2ee1840217e28f44c05715e577996ed85",
                    "sha256:199f08f590cdd1fa39831d055bb310b4c3440c478b3dde28a61d4d5734ddd4d8"
                ]
            }
        },
        "16beta2-3.4.0rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta2",
                    "PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0rc1",
                    "POSTGIS_SHA256=113cd54983823858f958c46941c2a06219e1d8d67913e6c93e18df2b94a50c58"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0rc1 spatial database extension with PostgreSQL 16beta2 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-07T05:26:41.421201866Z",
            "history": [
                {
                    "created": "2023-06-14T20:41:58.950178204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1da756d12551a0e3e793e02ef87432d69d4968937bd11bed0af215db19dd94cd in / "
                },
                {
                    "created": "2023-06-14T20:41:59.079795125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:06.885132979Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-06-14T21:10:06.965936098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-14T21:10:07.441948706Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-06-14T21:10:07.52514909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.873598488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta2",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:09.95483084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ba653197465180c93775b4949a89dc6fbfebae2a44587ae7168fdfd24f519b50",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:08:10.037033024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:10:58.330234524Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-04T02:10:59.217036351Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-04T02:10:59.732918585Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-04T02:10:59.813196009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.308124805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-04T02:11:00.386198589Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.475173685Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-04T02:11:00.549891895Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.63242166Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.713098013Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-04T02:11:00.792283911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:41.336334762Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0rc1 spatial database extension with PostgreSQL 16beta2 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:41.336334762Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0rc1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:41.336334762Z",
                    "created_by": "ENV POSTGIS_SHA256=113cd54983823858f958c46941c2a06219e1d8d67913e6c93e18df2b94a50c58",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:26:41.336334762Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:41.381372701Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T05:26:41.421201866Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTItYWxwaW5lMy4xOCIsInBpbiI6InNoYTI1NjpmNTBiNjhlNWFiMTkyOWMyOTRmOGMxMWY5NTVmNDEwMDczMjEwNTBiYmFjNTBhZWVhYjg1NDRhMzk2ZTQ1YTg3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78a822fe2a2d2c84f3de4a403188c45f623017d6a4521d23047c9fbb0801794c",
                    "sha256:921828208720f4161341ad36d602d31a770d46727781aa8cb5893dba29051e65",
                    "sha256:fe4fa537f778647a1f3dafa5f67f56e5127ac266e925fea89622420a46ac2dc7",
                    "sha256:93a4f1efe0ecba85f32fe129e48ab323c9c3dd9358f2254763848268bb5c25d1",
                    "sha256:1d125f1a7034c1a9012f7c68e10f76111989cee7f7c1d9511627dde4fe57db62",
                    "sha256:5fe886cca1acadc30ea8c0dd6f77edee555c5980403397fb8739bbd6bd7de0bc",
                    "sha256:86f973d616ed57cf7544413e0494a7be63a830daafa113211b448bb77dbf43a8",
                    "sha256:4adfd04e91227ae68da152f27d27cb033cae546d47429de59d3cc72a7d87ceaa",
                    "sha256:35ec26b7a7fbbd44671575e9d52393063399c6c3234487242839019202c798e4",
                    "sha256:f5763af4d354d65100fc91ecee7d3427b93d69c0a506108228389bcf8b6ad789",
                    "sha256:4c135275b637f9455d785c5c81a0a1a597cc74ba0e67aec4215bee6ccb85161c"
                ]
            }
        },
        "16beta2-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta2-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=edf855967dd10dff04318b0cdde980f397194565",
                    "SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "PROJ_GIT_HASH=fde3d58e4af51f8e6c9cafeeb2b0299ab1218d91",
                    "GEOS_GIT_HASH=193dacad1128de3a9be032eaf13a0f4081fcae76",
                    "GDAL_GIT_HASH=3e4dc710a2d4cff1f02b70ca5c4df280a5378ae0",
                    "POSTGIS_GIT_HASH=111e4a133b3e036cf634826ab05e7217ebc81cbf"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-07T06:07:25.441405956Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:47:01.983890742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:02.077228092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:02.163520256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta2-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:22.320499952Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-07-28T10:47:23.463496344Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-07-28T10:47:23.94546575Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-07-28T10:47:24.030608124Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.497522599Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-07-28T10:47:24.584511842Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.678636333Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-07-28T10:47:24.758893762Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.843714813Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:24.932396921Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:25.020311639Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.009246273Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.009246273Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T05:23:21.009246273Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:02:29.454228222Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=edf855967dd10dff04318b0cdde980f397194565",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV PROJ_GIT_HASH=fde3d58e4af51f8e6c9cafeeb2b0299ab1218d91",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV GEOS_GIT_HASH=193dacad1128de3a9be032eaf13a0f4081fcae76",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:29.799263268Z",
                    "created_by": "ENV GDAL_GIT_HASH=3e4dc710a2d4cff1f02b70ca5c4df280a5378ae0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:02:30.309931667Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:02:30.309931667Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=111e4a133b3e036cf634826ab05e7217ebc81cbf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-07T06:07:24.462935801Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:07:24.906179308Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:07:24.944500741Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:07:25.003857412Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-07T06:07:25.441405956Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTItYnVsbHNleWUiLCJwaW4iOiJzaGEyNTY6NzgxMDU0OGQwYjQyMDM2ODhmYTQ3Zjc3ZGQzZDE2YWEyNTEyYmUwMjJlZTI1OGIyNWQ2ZTZiOWVhMGEyMjVjMSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:5c64148c80f660004ae35c0a0b6a4807b9b31137968d5ac472061b36d87b79fd",
                    "sha256:0cc22646f4e331fcd4b0c730f987b0f3188d2b5c1f3d072aed146185fa501ed3",
                    "sha256:ff66f53313495bc1c6e1a929bd1c86f0a401f61f0a798c6ea86b5278be3fdc3d",
                    "sha256:9a9cd6df715aff9dd79afc52a16efae003fe097b77a578d1557c3e1594d5dc8c",
                    "sha256:2928560881e6f3eb30e393d214f96b232ef752bc500056b329b33378e0a883ca",
                    "sha256:d167b4bb2ae0356448b9890844a3bc89c53aebced47b144e419d6b50931b7ea3",
                    "sha256:d77b9b11a9b181532a34027125faafd2a57f0bf2ecec9da5dbfc174a8d7bea6e",
                    "sha256:dcb6139c0fe877405c2309a93291eeb9131b4bd5356e9fa868006c0385ce3f44",
                    "sha256:6e0481822ef38e371fcb066efdb37b8ff81d6959efbc08c7bb3a843e8a405b5a",
                    "sha256:4af8f1bd35a60de3084d0627a6fdadaf3920d6f1d42162680eba2907aec356b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24df48b7e506973bedb2fc13fb436c9f40c17e87bdbb94e05b4e466572fa5f0b",
                    "sha256:00edbd017d4e3e82daa6e1ab71544b2e709d8e93f5c2ab2b94bf2aeaded3d560",
                    "sha256:264b8540383966fa6654b755153e445855537db6fa9ee8fb3813d386a16e62bc"
                ]
            }
        },
        "16beta3-3.3": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta3-1.pgdg110+2",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta3 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:22:55.121580266Z",
            "history": [
                {
                    "created": "2023-07-27T23:25:07.325345104Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d726bf0abbc08d6dda026cc406cdfb529deb60071641d164de28fcd62d1c1c0 in / "
                },
                {
                    "created": "2023-07-27T23:25:07.6248321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:37.165798305Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-07-28T10:46:43.035850786Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:46:43.147030743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:46:50.409233572Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-07-28T10:46:56.531183765Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-07-28T10:46:56.688423524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:00.318945476Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-07-28T10:47:00.814088822Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-07-28T10:47:01.892803162Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-07-28T10:47:01.983890742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-28T10:47:02.077228092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:23.282294911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta3-1.pgdg110+2",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:45.489252531Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:39:46.569511112Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:39:47.136223953Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:39:47.21731896Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:47.709848336Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:39:47.796789315Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:47.88835105Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:39:47.97068232Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:48.056245997Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:48.138718019Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:48.221893813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.605915824Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta3 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.605915824Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.605915824Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:22:54.605915824Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:55.041487357Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:55.07709115Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:22:55.121580266Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTMtYnVsbHNleWUiLCJwaW4iOiJzaGEyNTY6ZjM3ODk3NDFiMmU2OGQ5ZTk2NWNiZWE3Nzk4YjNkY2Q4N2I2NjVkM2I5YzE2MWZmN2ZkMzVjMzEzNzk4NmQ3ZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ce178ff9f343a37169f68dd0df03099524afb71a879551c5f17e493c7b1d3ec",
                    "sha256:3a58a5c59cc2c493cd303f5567076525a8373ea5a526b3cb056b243127c028f6",
                    "sha256:b06379cbbfcc4764f3633de383121167e18c94807588af1ac93282218eeb81b4",
                    "sha256:6bb039fea1043f8f0b2c8d11fcbd2041a3dcc1587ce0c35d3004ee523dade44d",
                    "sha256:df51e0adc19e71991ff34053ffb93d5e0a299ea523cf36a0a1b3f18ddcfd2030",
                    "sha256:6f6231ff6ebc2c8c6823f98caa8d1858af17fcdfaa05351d58fdc1ee64b9fa9f",
                    "sha256:8e7867ffcd61955c4b7e30efdc6315ebe53cd3f5e1762abed9085495fed2a6b8",
                    "sha256:961cd9e2efa299b029c858e2be9d1153ff829afb63d73dc44c991fdadfa82020",
                    "sha256:017bcf46f65993034c99766ce4c9e6944a361d6f1f368c7404cade5e5e219ad5",
                    "sha256:c70e7758f534d782976c32040ea329e76766f8ec3f4c672aa9c9896ac56550b2",
                    "sha256:6b8782d5706aac5fdf2aeeda33249009fb22a3458b2e3ccd0cacf0a7049265c3",
                    "sha256:47b3aae234d2ad6552a3fe4d9fc7ff62e8d703a89673ffa4bf4f559929569363",
                    "sha256:9e7d22e39e652f78ef4556c5fee86431804030882756349ae93ac5bc4672309c",
                    "sha256:ad6f952170bc773329b96c35243a8669bb6603b22cc8ca99fa816ce91c153b74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:605468e48e09cf0aac684907add4c9bc6a9a1a4a29bcf85c3d6ca52ddf7a6e48",
                    "sha256:eb76f6247e6a1ad009a4bf1ce3f2555c48f119b7736aa56d5f50d913fabeea8f"
                ]
            }
        },
        "16beta3-3.3-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta3",
                    "PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.3.4",
                    "POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.3.4 spatial database extension with PostgreSQL 16beta3 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:27:21.929081545Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:26:59.019783926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.169126688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.253776701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.334093773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:37.153034834Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:42:38.161514279Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:42:38.639856014Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:42:38.717857834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.215436338Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:42:39.302049719Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.390121295Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:42:39.468392581Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.552838991Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.633466639Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.717724141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:21.817701789Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.3.4 spatial database extension with PostgreSQL 16beta3 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:21.817701789Z",
                    "created_by": "ENV POSTGIS_VERSION=3.3.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:21.817701789Z",
                    "created_by": "ENV POSTGIS_SHA256=68507aa4ab7f9f7218fcefdcdd989911415e5f670128eb33acbbb362a24a998e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:27:21.817701789Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:27:21.871579655Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:27:21.929081545Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTMtYWxwaW5lMy4xOCIsInBpbiI6InNoYTI1NjpmNzAxNDIyZGMwYTViOTc1YmVhM2I5Mzg3NTMyZDdmMjVjNTlkN2MyNWYyOGUzMDliYWI0ZWU5MTE3YjllZGE5In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:7e4415eb854460b0738416357549cc9a31c3d583a676aa495ce2a4f75744d952",
                    "sha256:8e8784f616c690d6de80d45f035f314fa79238d15607a5c36d426598077cdc07",
                    "sha256:9e7c203fc1b29b88142f1a039f50ca3499365c45c8b09b6ab279d95f2846da7f",
                    "sha256:1820bfd5af03f7ae4f4276d1cd741ff968ac5de220237324d732fdced48cccaa",
                    "sha256:32f33ca4811a6a736195ba3ad9c58498b13f80543cca04daa5092d16e06cf6d5",
                    "sha256:59c299b538f64647d5a3ddb7bdeb17a926b9bc2dfdc413a41d4180d4dc364025",
                    "sha256:dc69c3c7c41e1a712790ba09367ea0091583fa668428dee75a1dca9306b9d653",
                    "sha256:e4929fc4dbb140f6febbc89a6c0ab7d07862e6c387e725f2b2f8841558460239"
                ]
            }
        },
        "16beta3-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta3-1.pgdg110+2",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.0+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta3 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-28T05:23:36.503139386Z",
            "history": [
                {
                    "created": "2023-08-16T01:00:09.594624377Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d91c2e03d02bfa16fe4f766d851b351d93d33f84751ad96c985e64ea024ec28 in / "
                },
                {
                    "created": "2023-08-16T01:00:09.938796158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:44:54.239327948Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-16T04:44:59.66024031Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T04:44:59.773352779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:07.819235325Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-08-16T04:45:13.86567627Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-08-16T04:45:13.997197935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:17.453994161Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T04:45:17.95658488Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-16T04:45:19.024249359Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-08-16T04:45:19.105030887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:19.181974322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:19.260628924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta3-1.pgdg110+2",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:39.886870844Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-16T04:45:40.890873251Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-16T04:45:41.376021216Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-16T04:45:41.459637651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:41.961659738Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-16T04:45:42.046177243Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.137430533Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-16T04:45:42.219401482Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.303336383Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.390699266Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.477307629Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.130999191Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16beta3 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.130999191Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.130999191Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.130999191Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:23:36.425372973Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:23:36.461871492Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:23:36.503139386Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63290f9c9e5201f0507ee1b5701aa06c7f48bef7cce287fc77db92bec634d737",
                    "sha256:ca73c76a4fd425b6fcb62625ea803031bd47a933ed4d2e77e2d6942febb56133",
                    "sha256:31ee528c372dc147be37614b755ab52dd110d995ab1e22c218c47006a9e8bb74",
                    "sha256:668170157fd128fa96979e5b3bbdb5c945455f83d51dfa464d197726f4d340fa",
                    "sha256:0bd5a50740f59782f8ab4faa42e8e7424e4bd1fc21781de7574df10fd67ddabd",
                    "sha256:0aa1bd5a42c4b2eec9e479b15112e92fd411f79fbf5c8194663a54d8e15829fc",
                    "sha256:ed665ed3adee3c4d4e9ebb14fc3add66193efa09c09e1eeec34da34d90b53d39",
                    "sha256:7c7fbeacb91114ede8aae3a419965d063eeb84ca9a38f35390e4aa042c56cadc",
                    "sha256:3f361a6d4bb13f0b8f3a896b65b805653acf82dc3c4a61b87f6d1be85bea4ef1",
                    "sha256:375f3e5fcdb22fc9b39c641847860c65308746249a04241e3b62c77ede1c03e1",
                    "sha256:4d75fddec1dccf4af82533873730173566c0b01c3381c320117f5f77784d078d",
                    "sha256:4f118976fb6ed1581687667481f2ee642441ee162231019e8a86b608d29ebfc9",
                    "sha256:de225f1c3708f9ecb49c241e6b80ef9b70956a852320c5b2c8a61cb5f61d46d3",
                    "sha256:e74e36ebfa07da2ab87e9df9f811a60b7194e278112bf3df583a6db14abbb70f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:01f3d079d8844c16fbf7f235503ce25eeabc253dafed33eac2271d139ed800a7",
                    "sha256:a769b4991bab086eb5399e989cb2dae6ba902a5d1f5d24983a3c44fdca143cbc"
                ]
            }
        },
        "16beta3-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta3",
                    "PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0",
                    "POSTGIS_SHA256=3acdf303adfd58d73543a70e6ebe99af29301262c56cf32220d42caa3efab024"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0 spatial database extension with PostgreSQL 16beta3 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-28T05:26:49.885872315Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:26:59.019783926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.169126688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.253776701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.334093773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:37.153034834Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:42:38.161514279Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:42:38.639856014Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:42:38.717857834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.215436338Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:42:39.302049719Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.390121295Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:42:39.468392581Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.552838991Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.633466639Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.717724141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:26:49.813800659Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0 spatial database extension with PostgreSQL 16beta3 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:26:49.813800659Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:26:49.813800659Z",
                    "created_by": "ENV POSTGIS_SHA256=3acdf303adfd58d73543a70e6ebe99af29301262c56cf32220d42caa3efab024",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:26:49.813800659Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:26:49.849473486Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:26:49.885872315Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:7e4415eb854460b0738416357549cc9a31c3d583a676aa495ce2a4f75744d952",
                    "sha256:8e8784f616c690d6de80d45f035f314fa79238d15607a5c36d426598077cdc07",
                    "sha256:9e7c203fc1b29b88142f1a039f50ca3499365c45c8b09b6ab279d95f2846da7f",
                    "sha256:1820bfd5af03f7ae4f4276d1cd741ff968ac5de220237324d732fdced48cccaa",
                    "sha256:32f33ca4811a6a736195ba3ad9c58498b13f80543cca04daa5092d16e06cf6d5",
                    "sha256:fb30a666e609b49baf78ba495225ef59bfba9daf3c08b1332eb969725b24a300",
                    "sha256:8906a992c568318c54219edf7c3b44589c6b41a00aaf1134df7cf8b4f42529bd",
                    "sha256:04347654441a32bc987b75078159139cae24d90dbf73fd9f2506526a11efa6a6"
                ]
            }
        },
        "16beta3-3.4.0rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16beta3",
                    "PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0rc2",
                    "POSTGIS_SHA256=546239b4ce901f734f6daa1e9f607696792213eeab1e9e8827582bbea24ac219"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0rc2 spatial database extension with PostgreSQL 16beta3 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-14T05:26:55.502649881Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:26:59.019783926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.169126688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16beta3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.253776701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ffcf44e272662f6ac451a8d6d6ff951715db651c8d4907ec659cbde46abd52d3",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:39:52.334093773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:37.153034834Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-11T18:42:38.161514279Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-11T18:42:38.639856014Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-11T18:42:38.717857834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.215436338Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-11T18:42:39.302049719Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.390121295Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-11T18:42:39.468392581Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.552838991Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.633466639Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-11T18:42:39.717724141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:55.3863813Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0rc2 spatial database extension with PostgreSQL 16beta3 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:55.3863813Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0rc2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:55.3863813Z",
                    "created_by": "ENV POSTGIS_SHA256=546239b4ce901f734f6daa1e9f607696792213eeab1e9e8827582bbea24ac219",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-14T05:26:55.3863813Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:55.424736008Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-14T05:26:55.502649881Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9saWJyYXJ5L3Bvc3RncmVzOjE2YmV0YTMtYWxwaW5lMy4xOCIsInBpbiI6InNoYTI1NjpmNzAxNDIyZGMwYTViOTc1YmVhM2I5Mzg3NTMyZDdmMjVjNTlkN2MyNWYyOGUzMDliYWI0ZWU5MTE3YjllZGE5In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:7e4415eb854460b0738416357549cc9a31c3d583a676aa495ce2a4f75744d952",
                    "sha256:8e8784f616c690d6de80d45f035f314fa79238d15607a5c36d426598077cdc07",
                    "sha256:9e7c203fc1b29b88142f1a039f50ca3499365c45c8b09b6ab279d95f2846da7f",
                    "sha256:1820bfd5af03f7ae4f4276d1cd741ff968ac5de220237324d732fdced48cccaa",
                    "sha256:32f33ca4811a6a736195ba3ad9c58498b13f80543cca04daa5092d16e06cf6d5",
                    "sha256:2038bc7639ed2c822a14f75d56078df93331fc06db0e51c279eca9b162d421ae",
                    "sha256:9cc690958c1a66c336bcbcd15a48c17378fa1217aa9a6b7cbf93d4893d9d4443",
                    "sha256:a3c41c7dba734cad4a98a34c8ce77cd79fb5ba8b8242018c265f413880e68f46"
                ]
            }
        },
        "16beta3-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~beta3-1.pgdg110+2",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=d0b188bf41704a155c9ad72fd7635f7a709764e5",
                    "SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "PROJ_GIT_HASH=c5c7e64b8a9b1416db7fcb129decc038439b96ec",
                    "GEOS_GIT_HASH=40da3a61338068549eabe19f68d1cf082cece853",
                    "GDAL_GIT_HASH=4dcb8efd45813320f8661c71da5e54c5da55edc4",
                    "POSTGIS_GIT_HASH=6f6839a334a188edfc5a437ecc689621ee6c440d"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-08-28T06:03:24.935166319Z",
            "history": [
                {
                    "created": "2023-08-16T01:00:09.594624377Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d91c2e03d02bfa16fe4f766d851b351d93d33f84751ad96c985e64ea024ec28 in / "
                },
                {
                    "created": "2023-08-16T01:00:09.938796158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:44:54.239327948Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-16T04:44:59.66024031Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T04:44:59.773352779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:07.819235325Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-08-16T04:45:13.86567627Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-08-16T04:45:13.997197935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:17.453994161Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T04:45:17.95658488Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-16T04:45:19.024249359Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-08-16T04:45:19.105030887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:19.181974322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:19.260628924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~beta3-1.pgdg110+2",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:39.886870844Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-08-16T04:45:40.890873251Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-08-16T04:45:41.376021216Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-08-16T04:45:41.459637651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:41.961659738Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-08-16T04:45:42.046177243Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.137430533Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-08-16T04:45:42.219401482Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.303336383Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.390699266Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T04:45:42.477307629Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.945777509Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.945777509Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:23:36.945777509Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:57:38.726440192Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=d0b188bf41704a155c9ad72fd7635f7a709764e5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=ae0a12da1e7a32d163930789e62874ca6ff0792c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV PROJ_GIT_HASH=c5c7e64b8a9b1416db7fcb129decc038439b96ec",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV GEOS_GIT_HASH=40da3a61338068549eabe19f68d1cf082cece853",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.078243002Z",
                    "created_by": "ENV GDAL_GIT_HASH=4dcb8efd45813320f8661c71da5e54c5da55edc4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T05:57:39.536505868Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T05:57:39.536505868Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=6f6839a334a188edfc5a437ecc689621ee6c440d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-28T06:03:24.189609745Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T06:03:24.444602596Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T06:03:24.483213649Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T06:03:24.515330008Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-28T06:03:24.935166319Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63290f9c9e5201f0507ee1b5701aa06c7f48bef7cce287fc77db92bec634d737",
                    "sha256:ca73c76a4fd425b6fcb62625ea803031bd47a933ed4d2e77e2d6942febb56133",
                    "sha256:31ee528c372dc147be37614b755ab52dd110d995ab1e22c218c47006a9e8bb74",
                    "sha256:668170157fd128fa96979e5b3bbdb5c945455f83d51dfa464d197726f4d340fa",
                    "sha256:0bd5a50740f59782f8ab4faa42e8e7424e4bd1fc21781de7574df10fd67ddabd",
                    "sha256:0aa1bd5a42c4b2eec9e479b15112e92fd411f79fbf5c8194663a54d8e15829fc",
                    "sha256:ed665ed3adee3c4d4e9ebb14fc3add66193efa09c09e1eeec34da34d90b53d39",
                    "sha256:7c7fbeacb91114ede8aae3a419965d063eeb84ca9a38f35390e4aa042c56cadc",
                    "sha256:3f361a6d4bb13f0b8f3a896b65b805653acf82dc3c4a61b87f6d1be85bea4ef1",
                    "sha256:375f3e5fcdb22fc9b39c641847860c65308746249a04241e3b62c77ede1c03e1",
                    "sha256:4d75fddec1dccf4af82533873730173566c0b01c3381c320117f5f77784d078d",
                    "sha256:4f118976fb6ed1581687667481f2ee642441ee162231019e8a86b608d29ebfc9",
                    "sha256:de225f1c3708f9ecb49c241e6b80ef9b70956a852320c5b2c8a61cb5f61d46d3",
                    "sha256:0ee268c7a8eb788c9d13c33b944f9d6d0e76b56d036bcf17872f3566f3084815",
                    "sha256:cafdb8e70cc5f2709a42dc3ec156cf6a7de71f6431c7d5559eb642893a3f8ceb",
                    "sha256:a7a1f9ab67bab46d0132969084eb714b10ad775a922e7d819d018f1743706b18",
                    "sha256:a5b1e62a2809f821b3c2a77525335a32d7173f7e64ff76668ed09ce7266261fa",
                    "sha256:15f1668369ebbd802d393b33f10686ccd2492a31c94f2b014b5bfca00d8a47f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3edff88979c332e33bd7c2a5829803a55ceb0a7d2ad8808b3907565c90c54b6d",
                    "sha256:ee568aaac3d278ab8f02d53fcbf745914e459f84bb6e2a2aae7fb8a99ff6fac6",
                    "sha256:8a6c9d3ae2047f0329be24a62add6dbb5da52eb20fd8b33d472ed09c668681c2"
                ]
            }
        },
        "16rc1-3.4": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.0+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16rc1 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-09-11T05:23:35.698224388Z",
            "history": [
                {
                    "created": "2023-09-07T00:21:13.444807009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb5fcc80c057b356a31492a20c6e3a75b70ed70a663506c8e97ad730ae32a02d in / "
                },
                {
                    "created": "2023-09-07T00:21:13.838729514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:13.765137075Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-09-07T14:23:19.183679464Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:19.311321222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:26.862178498Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-09-07T14:23:33.281642868Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-09-07T14:23:33.440246538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:37.313145995Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:37.867702596Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-09-07T14:23:39.012907332Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-09-07T14:23:39.11970143Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:39.208408209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:39.296417325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:01.342010519Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-09-07T14:24:02.545277174Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-09-07T14:24:03.0432217Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-09-07T14:24:03.137197266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.6218827Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-09-07T14:24:03.712626622Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.812023563Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-09-07T14:24:03.893074313Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.997780895Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:04.085144241Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:04.170544741Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.245779752Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16rc1 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.245779752Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.245779752Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.245779752Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:23:35.613139835Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:23:35.636370668Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:23:35.698224388Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6e3b92711bf1028e9565d1f7bdae6de5d1323597de24629c27d757060eaa3019",
                    "sha256:a88919c1a9f013143ee1300d545363cc13eaeae888126515c66f4e2f808a4b1c",
                    "sha256:a6cede517eeb1c3cecaf97db0ac5c532e640e553c3eb01f7c82500bc50b1802f",
                    "sha256:ebd1959f07a8ed20fb387e320b18752de5cf2be1d53e638eba2de357acf94c87",
                    "sha256:fa0184627c18873cfae686441e291d14d3e670f36e86788f73632d1a9c2c0108",
                    "sha256:727675f0080cb756b1fdd53cda8d2010cf408e55c8ade99773a4050703494d01",
                    "sha256:fd3531f1797ceabdff2e259088429cb3b434b9e6fb1adbb6e3d1a0e03f82eb90",
                    "sha256:05698033e19d12c65bb9ddb98bc37a0b0bad52d16e7c22fd05d41d5be03daff9",
                    "sha256:24136346964be78a19a1ee0e2369e944380a0f89d04b622eb15d1d14ce6b6ee8",
                    "sha256:e0d7a58d4b60978caf7cc79c655d0ab6f528e6d9a1d862f521859cae80ed3960",
                    "sha256:cf69fcd72c98df9c651628e89d3aba89dc0a2d6350701bd6c43ee023be70a240",
                    "sha256:ad0233b9787b37c1e6a8095290eb58d6000185ccc12fd4e6220dda2598dc228e",
                    "sha256:b5a07d037b0b5c5dcf1ca9ee02730816e0ffa163421c7240eb221181b04d30a7",
                    "sha256:8d13f932d5433a7b7ae81c20e71553602331b120411dc9863fa8b67aa8e7f5d4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4e0fc2f351be96c3284f868d3375e13f42d0e2ab24fbb97eeb4b2dd8b1d6d924",
                    "sha256:b7791ea21c21646b77ebb2e1dc02782ab86f74067633a1617c6cb2364c4a5981"
                ]
            }
        },
        "16rc1-3.4-alpine": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16rc1",
                    "PG_SHA256=ce97b3f4199a702a19ced11f86d0b93bb1fa55e869129e1435210ed8d505fa84",
                    "DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.4.0",
                    "POSTGIS_SHA256=3acdf303adfd58d73543a70e6ebe99af29301262c56cf32220d42caa3efab024"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.0 spatial database extension with PostgreSQL 16rc1 Alpine",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-09-11T05:26:47.065100695Z",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.25782404Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-08-09T02:26:58.342031977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-09T02:26:58.935882177Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-08-09T02:26:59.019783926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:53:42.515569319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16rc1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:53:42.600963673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=ce97b3f4199a702a19ced11f86d0b93bb1fa55e869129e1435210ed8d505fa84",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:53:42.687078017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_PG_LLVM_DEPS=llvm15-dev \t\tclang15",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:43.654770927Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\t$DOCKER_PG_LLVM_DEPS \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tg++ \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-dev \t\tperl-ipc-run \t\tperl-utils \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t\ticu-dev \t\tlz4-dev \t\tzstd-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t\texport LLVM_CONFIG=\"/usr/lib/llvm15/bin/llvm-config\"; \texport CLANG=clang-15; \t\t./configure \t\t--enable-option-checking=fatal \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t--with-icu \t\t--with-llvm \t\t--with-lz4 \t\t--with-zstd \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t\tzstd \t\ticu-data-full \t\t$([ \"$(apk --print-arch)\" != 'ppc64le' ] && echo 'nss_wrapper') \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2023-09-01T00:56:44.601173329Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-09-01T00:56:45.431052745Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql"
                },
                {
                    "created": "2023-09-01T00:56:45.51063068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:46.004504542Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\""
                },
                {
                    "created": "2023-09-01T00:56:46.094971923Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:46.187795861Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e635913e9467265f505455bc3f08bed37d67ce6597a1f10365f8faf79f09b654 in /usr/local/bin/ "
                },
                {
                    "created": "2023-09-01T00:56:46.267170773Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:46.350878058Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:46.435252905Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-01T00:56:46.521471253Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:26:47.019063484Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.0 spatial database extension with PostgreSQL 16rc1 Alpine org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:26:47.019063484Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:26:47.019063484Z",
                    "created_by": "ENV POSTGIS_SHA256=3acdf303adfd58d73543a70e6ebe99af29301262c56cf32220d42caa3efab024",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:26:47.019063484Z",
                    "created_by": "RUN /bin/sh -c set -eux     && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev         geos-dev         proj-dev         proj-util         sfcgal-dev                 $DOCKER_PG_LLVM_DEPS                 autoconf         automake         cunit-dev         file         g++         gcc         gettext-dev         git         json-c-dev         libtool         libxml2-dev         make         pcre2-dev         perl         protobuf-c-dev         && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install         && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal         geos         proj         sfcgal                 json-c         libstdc++         pcre2         protobuf-c                 ca-certificates     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:26:47.049435385Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:26:47.065100695Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:50df5bf6a7731c1f1b78b469a80e11f4a56bbd6d19b217e0a565abb8b11367a9",
                    "sha256:0129a3a7da15e43a01355d3a949c685434362c1a42f7a669b18d859e11f34ef7",
                    "sha256:19ed11b4b39240797154dc82faa5b43928315ae6eb5804d59c31fb9b57b1985f",
                    "sha256:6e1a9510f6f7c78bebb8093e55275b4849643506dd7599ef804c6fb0fe27c482",
                    "sha256:129ba202c1a60a35c18f5fe9a30ae1fdc31811f40f02317801bd322e7a97c02b",
                    "sha256:fc94a3c1ffa1acc44d995cb8c4ebe210bdcd40e00eadc4d58ca50407611b9574",
                    "sha256:8bb85000b209db36e766dd76f2837bda9a8ebae5af0d657c050c988809a496b6",
                    "sha256:887634adaa2ed71df138446876bb63202c2846d3f7c9aa96257f3557ef3882c3",
                    "sha256:fb6bfba1212f2dcc9342139c8a5297be4fa9e3c87f901f673d06579774e4b337",
                    "sha256:1553eac2c0dcd505527ea7e4236173fc441ed785ad042558d52ff587d757d428"
                ]
            }
        },
        "16rc1-master": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.16",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16~rc1-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "DOCKER_CMAKE_BUILD_TYPE=Release",
                    "CGAL_GIT_BRANCH=5.6.x-branch",
                    "CGAL5X_GIT_HASH=9c9a2690fb4916c249342f3c2dcd08ccd99b7ac8",
                    "SFCGAL_GIT_HASH=fc4dc5640e402c8b00426b5a3562324226725df9",
                    "PROJ_GIT_HASH=4a14240a606e5d2ba091a922f52cd3f38dba258c",
                    "GEOS_GIT_HASH=15185e65b3e7bc671cf693c97cf103125fb4a171",
                    "GDAL_GIT_HASH=7dec7e98b6be558ef76e1c17262994610a532573",
                    "POSTGIS_GIT_HASH=cc7a8ca0871ae2114e920aa7472c639ec80abe7d"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "StopSignal": "SIGINT",
                "OnBuild": null
            },
            "created": "2023-09-11T06:00:41.568910557Z",
            "history": [
                {
                    "created": "2023-09-07T00:21:13.444807009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb5fcc80c057b356a31492a20c6e3a75b70ed70a663506c8e97ad730ae32a02d in / "
                },
                {
                    "created": "2023-09-07T00:21:13.838729514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:13.765137075Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2023-09-07T14:23:19.183679464Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:19.311321222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:26.862178498Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2023-09-07T14:23:33.281642868Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2023-09-07T14:23:33.440246538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:37.313145995Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-07T14:23:37.867702596Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2023-09-07T14:23:39.012907332Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2023-09-07T14:23:39.11970143Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=16",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:39.208408209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:23:39.296417325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=16~rc1-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:01.342010519Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2023-09-07T14:24:02.545277174Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2023-09-07T14:24:03.0432217Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2023-09-07T14:24:03.137197266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.6218827Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2023-09-07T14:24:03.712626622Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.812023563Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:512acb0aab31f9e5d908f16e2f4478f65cddd5d4e555a02a1551074bb16f54d7 in /usr/local/bin/ "
                },
                {
                    "created": "2023-09-07T14:24:03.893074313Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:03.997780895Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:04.085144241Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-07T14:24:04.170544741Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.090007089Z",
                    "created_by": "ARG DOCKER_CMAKE_BUILD_TYPE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.090007089Z",
                    "created_by": "ENV DOCKER_CMAKE_BUILD_TYPE=Release",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:23:35.090007089Z",
                    "created_by": "RUN |1 DOCKER_CMAKE_BUILD_TYPE=Release /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       curl       libboost-atomic1.74.0       libboost-chrono1.74.0       libboost-date-time1.74.0       libboost-filesystem1.74.0       libboost-program-options1.74.0       libboost-serialization1.74.0       libboost-system1.74.0       libboost-test1.74.0       libboost-thread1.74.0       libboost-timer1.74.0       libcurl3-gnutls       libexpat1       libgmp10       libgmpxx4ldbl       libjson-c5       libmpfr6       libpcre3       libprotobuf-c1       libtiff5       libxml2       sqlite3       libblosc1       libcfitsio9       libfreexl1       libfyba0       libhdf5-103-1       libkmlbase1       libkmldom1       libkmlengine1       libopenjp2-7       libqhull-r8.0     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:56:46.324019545Z",
                    "created_by": "COPY /_pgis*.* / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "COPY /usr/local /usr/local # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ARG CGAL_GIT_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV CGAL_GIT_BRANCH=5.6.x-branch",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV CGAL5X_GIT_HASH=9c9a2690fb4916c249342f3c2dcd08ccd99b7ac8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV SFCGAL_GIT_HASH=fc4dc5640e402c8b00426b5a3562324226725df9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV PROJ_GIT_HASH=4a14240a606e5d2ba091a922f52cd3f38dba258c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV GEOS_GIT_HASH=15185e65b3e7bc671cf693c97cf103125fb4a171",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:46.662943398Z",
                    "created_by": "ENV GDAL_GIT_HASH=7dec7e98b6be558ef76e1c17262994610a532573",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T05:56:47.048785454Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && ogr2ogr --formats | grep -q \"PostgreSQL/PostGIS\" && exit 0             || echo \"ogr2ogr missing PostgreSQL driver\" && exit 1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T05:56:47.048785454Z",
                    "created_by": "ENV POSTGIS_GIT_HASH=cc7a8ca0871ae2114e920aa7472c639ec80abe7d",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T06:00:40.854066007Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends       autoconf       automake       autotools-dev       bison       build-essential       ca-certificates       cmake       g++       git       libboost-all-dev       libcunit1-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && cd     && cd /usr/src/     && git clone https://github.com/postgis/postgis.git     && cd postgis     && git checkout ${POSTGIS_GIT_HASH}     && git log -1 > /_pgis_last_commit.txt     && ./autogen.sh     && ./configure         --enable-lto     && make -j$(nproc)     && make install     && projsync --system-directory --file ch_swisstopo_CHENyx06_ETRS     && projsync --system-directory --file us_noaa_eshpgn     && projsync --system-directory --file us_noaa_prvi     && projsync --system-directory --file us_noaa_wmhpgn     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb -c -l /tmp/logfile -o '-F' start '     && ldconfig     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_raster;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_sfcgal;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS fuzzystrmatch; --needed for postgis_tiger_geocoder \"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS address_standardizer_data_us;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\"'     && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis_topology;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"\\dx\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/logfile     && rm -rf /tmp/pgis_reg     && cd /     && rm -rf /usr/src/postgis     && apt-get purge -y --autoremove       autoconf       automake       autotools-dev       bison       build-essential       cmake       g++       git       libboost-all-dev       libcurl4-gnutls-dev       libgmp-dev       libjson-c-dev       libmpfr-dev       libpcre3-dev       libprotobuf-c-dev       libsqlite3-dev       libtiff-dev       libtool       libxml2-dev       make       pkg-config       postgresql-server-dev-$PG_MAJOR       protobuf-c-compiler       xsltproc     && apt-get clean     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T06:00:41.102365016Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T06:00:41.145597357Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T06:00:41.194980976Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T06:00:41.568910557Z",
                    "created_by": "RUN |2 DOCKER_CMAKE_BUILD_TYPE=Release CGAL_GIT_BRANCH=5.6.x-branch /bin/sh -c set -ex     && ldconfig     && cs2cs     && ldd $(which gdalinfo)     && gdalinfo --version     && gdal-config --formats     && geos-config --version     && ogr2ogr --version     && proj     && sfcgal-config --version         && dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\"         && find /_pgis_*_last_commit.txt -type f -print -exec cat {} \\;      && cat _pgis_full_version.txt # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6e3b92711bf1028e9565d1f7bdae6de5d1323597de24629c27d757060eaa3019",
                    "sha256:a88919c1a9f013143ee1300d545363cc13eaeae888126515c66f4e2f808a4b1c",
                    "sha256:a6cede517eeb1c3cecaf97db0ac5c532e640e553c3eb01f7c82500bc50b1802f",
                    "sha256:ebd1959f07a8ed20fb387e320b18752de5cf2be1d53e638eba2de357acf94c87",
                    "sha256:fa0184627c18873cfae686441e291d14d3e670f36e86788f73632d1a9c2c0108",
                    "sha256:727675f0080cb756b1fdd53cda8d2010cf408e55c8ade99773a4050703494d01",
                    "sha256:fd3531f1797ceabdff2e259088429cb3b434b9e6fb1adbb6e3d1a0e03f82eb90",
                    "sha256:05698033e19d12c65bb9ddb98bc37a0b0bad52d16e7c22fd05d41d5be03daff9",
                    "sha256:24136346964be78a19a1ee0e2369e944380a0f89d04b622eb15d1d14ce6b6ee8",
                    "sha256:e0d7a58d4b60978caf7cc79c655d0ab6f528e6d9a1d862f521859cae80ed3960",
                    "sha256:cf69fcd72c98df9c651628e89d3aba89dc0a2d6350701bd6c43ee023be70a240",
                    "sha256:ad0233b9787b37c1e6a8095290eb58d6000185ccc12fd4e6220dda2598dc228e",
                    "sha256:b5a07d037b0b5c5dcf1ca9ee02730816e0ffa163421c7240eb221181b04d30a7",
                    "sha256:ac8fe27a2873e75333d6ff8e593de5b2e5945d1f70af5917e5d049d686a9a881",
                    "sha256:13274d9d4ff9b0b51816e1ab8ff475cc82203ae2436e56d1718150d1a105d7da",
                    "sha256:ca99c0c726803e78ee5a08e82a4b83aceadb4035f004ba94231ad834e98ca7fd",
                    "sha256:51e76afe8027c86bd39c8243dc7f4a809825e86bfaa5e65c16075bcd1fe6e621",
                    "sha256:225c4310e4604ad3e770624218c865c0096aa5b3e23a047f1aeeb1f7cddcdcf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f068ab96be95c6537790aaf3b81ac1d2031bffb9cba0436ace8c4540e3e5fe0",
                    "sha256:9c62caa6cd021e5a9f24ef2c9d843d74f7c8acc8ad7df4b207bd9be0973b5b4b",
                    "sha256:c786e196b311d8e314c16378d8314d6d5e17dea6e49c602e259058bef199d225"
                ]
            }
        },
        "9.5-2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:2c8f4a16d0ec68240d484e52045964ae9f02a0d0e2c1f9015339b704d09f49db",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:2c8f4a16d0ec68240d484e52045964ae9f02a0d0e2c1f9015339b704d09f49db",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-06-21T05:31:22.000263637Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-12T01:23:21.781399546Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a88164546613d1850e5c5494cccad7124d713187bfabf592a783eb9328de51eb in / "
                },
                {
                    "created": "2021-05-12T01:23:22.541316374Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:10.088426027Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-05-12T14:36:11.463661414Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-05-12T14:36:11.669708341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:23.884441004Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-05-12T14:36:29.685980416Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-05-12T14:36:29.951121991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:33.983196809Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-12T14:36:35.169591328Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-05-12T14:36:38.560407873Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-05-12T14:38:49.574537355Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:38:49.764044561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.5.25-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:06.100310558Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2021-05-12T14:39:07.609778962Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-05-12T14:39:08.95703679Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-05-12T14:39:09.281629417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:09.535188147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:10.977043481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-05-12T14:39:11.275637995Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:11.619150275Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b14ac9ddf7e0a36b021a2f5ce366f60c1befa4d9e96285f4c5a38ce8c3886b3e in /usr/local/bin/ "
                },
                {
                    "created": "2021-05-12T14:39:13.304117695Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-05-12T14:39:13.564712327Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:13.831211756Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:14.196326965Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:14.459636345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:01.116134384Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:01.506270522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=2.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:02.376747383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:18.719330582Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-21T05:31:19.613146422Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:21.000228384Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-06-21T05:31:22.000263637Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f682eac6c77746da208b984e7ebbf526e3af4cc02960c10b152df198623c32d",
                    "sha256:9dce5d890e0e10b2d58bd578fb761a736c099a4d386d889b13266bea49d0c658",
                    "sha256:538f4118a82a5dfefbb3b56de2c56923832cd03680f43b75cba00884f1c5f2f0",
                    "sha256:c0e78bc61573f9ca09dce30e96174457a667196430a90b310d7236c2191a1b61",
                    "sha256:51fe8c094d72d64d215fc24a619eb7c17b5fe7ef0951fac15489da44e9119699",
                    "sha256:590540afdf9c41207e80746e9e620f321006f4e2e90b5f01f0dce2559d75df6f",
                    "sha256:26fabc9e88e05d76760ca1f32d064824f0e3c7d7637de6e032e66f6d58340e99",
                    "sha256:15ec5850a582b3da21d03a12ba9ccceedd3fb552d62c3e9ee8063f0f07bba971",
                    "sha256:00abbe98c703e8995fda1c22544c25ce32c7e491e1bb51bda41def6a0b5be647",
                    "sha256:d429db99daabcf9d1a8bb31f4e140eae7e0c84428eb268eb36448a74c00b2a01",
                    "sha256:0d811bb91aa86c935a06b79ee01726602b7ba1c4c09b0eea8ce030c244b6c4e2",
                    "sha256:b853877fd557f39cc1121663354d33b832116864ce778d70204eb85a09502111",
                    "sha256:eb7049883ab499de3bb66f1fbccc5ee2219877060329ff7f8b1d919b0b30b336",
                    "sha256:480f374bfd75dfac139b2c34ad294165372bfa4cf11677ffbe97377af78e619f",
                    "sha256:137831a8d1bba965ec56769870bd59dfb1b06e8dca97e655fbd45e63c0a869b6",
                    "sha256:13f37b7eaab6bcae66e8cdad1f7995e8973c5d780dda3dbe121266778322fa93",
                    "sha256:7f73e3f8d1329c7b64be330a54d370b3eaa2c9a5267b6f4a2280a8b0259f82e1"
                ]
            }
        },
        "9.5-2.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25",
                    "PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:d81ffa8fbd7512ab634bcbfacc25556727e48a33e33591c0fba54d0cdefc31da",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25",
                    "PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:d81ffa8fbd7512ab634bcbfacc25556727e48a33e33591c0fba54d0cdefc31da",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-06-21T05:34:50.000245796Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T03:44:32.469602352Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-04-15T03:44:32.669806526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T03:44:33.634533834Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-04-15T04:15:36.719545191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:15:36.910751612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.5.25",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:15:37.098905205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:07.815740062Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-04-15T04:20:10.434499015Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-04-15T04:20:12.190413868Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-04-15T04:20:12.626198002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:14.598704863Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-04-15T04:20:14.974262203Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:15.307749845Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e881105b30bb0f1591c0f7f6dfe19bf5351d029d5babae597d2698e04a16ec8b in /usr/local/bin/ "
                },
                {
                    "created": "2021-04-15T04:20:17.354552236Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-04-15T04:20:17.69065748Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:17.931065186Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:18.189671467Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:18.559596638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:00.718157748Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:01.205527416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:02.199572338Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:34:48.709887001Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev         pcre-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         pcre         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2021-06-21T05:34:49.017484124Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-06-21T05:34:50.000245796Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:14b570d7a00500e1deb9971903b9cc08e9f2ca73b4bccf9b3512c10a1a00f90f",
                    "sha256:14aebbb8205d74f2bb3789954f12cb318bb2c54fe59ef4721b6c671d6593e77f",
                    "sha256:ad0c8b94b4f774b4cb5b73d4be15390d5ee8b6e44a6763018f3fe50cd4244168",
                    "sha256:4c50de4ff25526b31dee38f410556cf98806c4d86140fd41da788bed29ddf22b",
                    "sha256:b339a87ffe95d8fc22406d558ebb75e3f4eb359eb8c80baa687a683537f9d60c",
                    "sha256:4f0c2fffb63f29a3602f9e8b072a10799ece4f5638293506e8045564804f652d",
                    "sha256:2e801a0a464fe2450a6f3ea6253da18b7cec1b931abefc61c51f3e33ba5355f0",
                    "sha256:ef97d787e073510bd64d86e7659a21f901016310cf7bf0e9e0a82933cf93b758",
                    "sha256:7117586d2966d08b4fc49055c7733bd47ea5b8a736982ed7d03f9ce7476ec899",
                    "sha256:f9a9b554f635e730bfa4eae1d5ac6cf8faf6f6ca887856398b0023ac33d095dd",
                    "sha256:3cd9596653c8971f6bb0e36d21a822a42872b452a309faad49aee6c01c8a2cec"
                ]
            }
        },
        "9.5-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:73ca93d2f6cd7f5df09571ced34182e8c643c3e1a1556580d8a4a97714fb009c",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:73ca93d2f6cd7f5df09571ced34182e8c643c3e1a1556580d8a4a97714fb009c",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-06-21T05:33:04.000198081Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-12T01:23:21.781399546Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a88164546613d1850e5c5494cccad7124d713187bfabf592a783eb9328de51eb in / "
                },
                {
                    "created": "2021-05-12T01:23:22.541316374Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:10.088426027Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-05-12T14:36:11.463661414Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-05-12T14:36:11.669708341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:23.884441004Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-05-12T14:36:29.685980416Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-05-12T14:36:29.951121991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:36:33.983196809Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-12T14:36:35.169591328Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-05-12T14:36:38.560407873Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-05-12T14:38:49.574537355Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:38:49.764044561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.5.25-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:06.100310558Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2021-05-12T14:39:07.609778962Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-05-12T14:39:08.95703679Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-05-12T14:39:09.281629417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.5/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:09.535188147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:10.977043481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-05-12T14:39:11.275637995Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:11.619150275Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b14ac9ddf7e0a36b021a2f5ce366f60c1befa4d9e96285f4c5a38ce8c3886b3e in /usr/local/bin/ "
                },
                {
                    "created": "2021-05-12T14:39:13.304117695Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-05-12T14:39:13.564712327Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:13.831211756Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:14.196326965Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-12T14:39:14.459636345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:32:44.557546273Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:32:45.355609212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:32:46.423505196Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:33:01.048903248Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-21T05:33:01.958865759Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:33:03.00019059Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-06-21T05:33:04.000198081Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f682eac6c77746da208b984e7ebbf526e3af4cc02960c10b152df198623c32d",
                    "sha256:9dce5d890e0e10b2d58bd578fb761a736c099a4d386d889b13266bea49d0c658",
                    "sha256:538f4118a82a5dfefbb3b56de2c56923832cd03680f43b75cba00884f1c5f2f0",
                    "sha256:c0e78bc61573f9ca09dce30e96174457a667196430a90b310d7236c2191a1b61",
                    "sha256:51fe8c094d72d64d215fc24a619eb7c17b5fe7ef0951fac15489da44e9119699",
                    "sha256:590540afdf9c41207e80746e9e620f321006f4e2e90b5f01f0dce2559d75df6f",
                    "sha256:26fabc9e88e05d76760ca1f32d064824f0e3c7d7637de6e032e66f6d58340e99",
                    "sha256:15ec5850a582b3da21d03a12ba9ccceedd3fb552d62c3e9ee8063f0f07bba971",
                    "sha256:00abbe98c703e8995fda1c22544c25ce32c7e491e1bb51bda41def6a0b5be647",
                    "sha256:d429db99daabcf9d1a8bb31f4e140eae7e0c84428eb268eb36448a74c00b2a01",
                    "sha256:0d811bb91aa86c935a06b79ee01726602b7ba1c4c09b0eea8ce030c244b6c4e2",
                    "sha256:b853877fd557f39cc1121663354d33b832116864ce778d70204eb85a09502111",
                    "sha256:eb7049883ab499de3bb66f1fbccc5ee2219877060329ff7f8b1d919b0b30b336",
                    "sha256:480f374bfd75dfac139b2c34ad294165372bfa4cf11677ffbe97377af78e619f",
                    "sha256:529b1ac65aea03fb3fb9c44b4c00ad44240abf501385b8869aec0f41caf57fe3",
                    "sha256:e170049a9a5d9ee01757591ab9c6504a290a4f060de878aa15cf28b7e9451f62",
                    "sha256:1e403062deb2b05cd581a4ddfa15aa7e14fc212f7f3ccde7f09558cd7a269c4c"
                ]
            }
        },
        "9.5-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25",
                    "PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:285dbfc4661559bacf3db9c9c4e5c12a7c8dfde9f3e330834a44866be472666e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.5",
                    "PG_VERSION=9.5.25",
                    "PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:285dbfc4661559bacf3db9c9c4e5c12a7c8dfde9f3e330834a44866be472666e",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-06-21T05:34:26.0001592Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T03:44:32.469602352Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-04-15T03:44:32.669806526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T03:44:33.634533834Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-04-15T04:15:36.719545191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:15:36.910751612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.5.25",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:15:37.098905205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=7628c55eb23768a2c799c018988d8f2ab48ee3d80f5e11259938f7a935f0d603",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:07.815740062Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-04-15T04:20:10.434499015Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-04-15T04:20:12.190413868Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-04-15T04:20:12.626198002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:14.598704863Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-04-15T04:20:14.974262203Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:15.307749845Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e881105b30bb0f1591c0f7f6dfe19bf5351d029d5babae597d2698e04a16ec8b in /usr/local/bin/ "
                },
                {
                    "created": "2021-04-15T04:20:17.354552236Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-04-15T04:20:17.69065748Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:17.931065186Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:18.189671467Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T04:20:18.559596638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:00.962217319Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:01.202284506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:31:02.213742096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-21T05:34:24.319946279Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev         pcre-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         pcre         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2021-06-21T05:34:25.000195677Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-06-21T05:34:26.0001592Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:14b570d7a00500e1deb9971903b9cc08e9f2ca73b4bccf9b3512c10a1a00f90f",
                    "sha256:14aebbb8205d74f2bb3789954f12cb318bb2c54fe59ef4721b6c671d6593e77f",
                    "sha256:ad0c8b94b4f774b4cb5b73d4be15390d5ee8b6e44a6763018f3fe50cd4244168",
                    "sha256:4c50de4ff25526b31dee38f410556cf98806c4d86140fd41da788bed29ddf22b",
                    "sha256:b339a87ffe95d8fc22406d558ebb75e3f4eb359eb8c80baa687a683537f9d60c",
                    "sha256:4f0c2fffb63f29a3602f9e8b072a10799ece4f5638293506e8045564804f652d",
                    "sha256:2e801a0a464fe2450a6f3ea6253da18b7cec1b931abefc61c51f3e33ba5355f0",
                    "sha256:ef97d787e073510bd64d86e7659a21f901016310cf7bf0e9e0a82933cf93b758",
                    "sha256:3732728b96cef9eb01928ed6c548da1f6d231a550c6b77286a1913a211dea9b8",
                    "sha256:7afa1f3d64bbfe0de1ea4137f39053cb70b169ebdc1cba504567f7e2d1ddc3f4",
                    "sha256:851226c02a40e061e09ce0785f7458f7e35475b7a39b3067a5405bf8c2c3e400"
                ]
            }
        },
        "9.6-2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:9add535e2219579ee6ca5ea30f15daf8c213d2a3a3cbf66632e0a552befdf754",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=2.5",
                    "POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:9add535e2219579ee6ca5ea30f15daf8c213d2a3a3cbf66632e0a552befdf754",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-13T05:30:52.000635377Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-01-26T01:42:57.149042063Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bed2454356c48f77207726865f8aee34a5b3db6927a881655573cbde13ce5a89 in / "
                },
                {
                    "created": "2022-01-26T01:42:57.603137223Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:12:42.649809194Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-27T01:12:43.598181786Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-01-27T01:12:43.835307295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:13:01.591094673Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-01-27T01:13:07.572713826Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-01-27T01:13:07.839895872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:13:12.251080442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-27T01:13:13.090317571Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-02-12T00:51:41.281512689Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-02-12T01:04:07.604775188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:07.800969811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:08.035148574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:22.822223799Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-02-12T01:04:24.003853685Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-02-12T01:04:24.807936249Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-02-12T01:04:25.033053288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:25.847522229Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-02-12T01:04:26.054801892Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:26.271980873Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3800bc4c74f15c7b0a6353826ad40078debc969a660caacde1772c4e43df552a in /usr/local/bin/ "
                },
                {
                    "created": "2022-02-12T01:04:27.074287952Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-02-12T01:04:27.283061819Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:27.503177519Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:27.70760033Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:27.922712962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:34.012277491Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:34.346764017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=2.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:35.340186392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5+dfsg-1.pgdg90+2",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:48.867299051Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-13T05:30:49.643434882Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:51.000933224Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-13T05:30:52.000635377Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8f0b8fdd795ff9618717bb0bbfbb4729fbd8e201f9fbdd6b7d1a7e67ef1ab879",
                    "sha256:ebdf554a07cf529a6e765fd04f3ad3707f4fbb0a2279204feb80b2dac45e9ebd",
                    "sha256:0a4039e8132a44dd759c1bf21aa9195868f0ecddc2ad1e593e94fce539509bec",
                    "sha256:2ff8c8e40e1aa496c0f72b7f9067c79c3f3a83a93087279b67371eed97dd4aba",
                    "sha256:1f06cf5c9091a161a30c833be75439bc5f60746f2f018abcbc8669030624fdd3",
                    "sha256:11a69874639b96245200689637f6ce932a66c30a8f095e5e3ae2f209aead5d6a",
                    "sha256:178f9737641e34fb275f6ccc4a1e9e5f3bb6c229c36ca7775afcec05fe6e4d8a",
                    "sha256:83a445bd17e7129bde9788c10ed4123e6b222cedcd7ccabe8d556922e503a64a",
                    "sha256:bfe1049b03f05df7f289a28ec0d12c38ba0e7db73bb3c483cae56b1be9a09000",
                    "sha256:d1012c167637e557ec9e29c0cc6a32721c521b594fbf117d49f86bed8899faa1",
                    "sha256:3ad2cb0fd7a47ebfb82faa05d299e7a76cbc1b04620056289da15dc42e47d82b",
                    "sha256:ea8bc5ae17e6e64bcf797a868a2e4dce8c2ec27f8efb22cde59e781ae77f7196",
                    "sha256:21acc0590c362f47a546c60cd8747c0233510fb642acaf31b313dfa915b49476",
                    "sha256:06687daff74fda1c3b83af869f0ade91a838214067d07303d94d918408afba5d",
                    "sha256:0b9618c9acddf9157cac4722167afd2659a908f3c9db3aff5dbaca4df455e5f3",
                    "sha256:bc4d082ce3242b2e77cfd84b292bacc9f8559991f47cd46997cb8f4d74f7fb7e",
                    "sha256:ce2e1b6bdb74e7d188675a15484d912b0ed5490392ecdcf37817c3eefb751cb9"
                ]
            }
        },
        "9.6-2.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:559135369d9567709f4b7f948899095e268aaa5a6280d2294b36288d2afc6b0f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=2.5.5",
                    "POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:559135369d9567709f4b7f948899095e268aaa5a6280d2294b36288d2afc6b0f",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-13T05:34:33.00109201Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T04:59:34.395213153Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-30T04:59:34.619652034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T04:59:35.432241349Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-30T05:40:27.481858173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:40:27.755079868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:40:28.021591619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:46:39.991143204Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-30T05:46:41.069800761Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-30T05:46:42.057962618Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-30T05:46:42.261234742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:46:43.179103453Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-30T05:46:43.405152564Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:51.62067208Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:cda82b5709f66a90b6babd661411ef1a87d0c9eeeae48253ec3248341658f54d in /usr/local/bin/ "
                },
                {
                    "created": "2022-01-04T01:20:52.392394386Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-01-04T01:20:52.591781198Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:52.789600455Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:52.981746595Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:53.15990815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:35.60798661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:36.181944888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=2.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:37.18654646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=24b15ee36f3af02015da0e92a18f9046ea0b4fd24896196c8e6c2aa8e4b56baa",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:34:31.775593906Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.4 ;             export PROJ_ALPINE_VER=8.2 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-06-13T05:34:32.087359502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-13T05:34:33.00109201Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:6cab14f8a43489c4923bf8a12a4a17581c8dc2b6f957d08a07b73ff194b4e3e5",
                    "sha256:b737c25801324ece502b515ac264eeedcfeef23add9e40d9f159f3e05c96e2b1",
                    "sha256:20d0eebecd821d42be5af9c2b1f7c1c88e8dac3356bd85b23fae25387ea47eba",
                    "sha256:d9707597ba818be3a21182300b049c0b13b559fbfb9dca2d721048ec1fc547be",
                    "sha256:1ac6935777061e5ea531a8bcf3a9f0598949a4120923f2dbcef12dba65cf391a",
                    "sha256:704b1cf3c207dbc2f23319eefe51451bbbc08a618bcbdd923d535f8c99970067",
                    "sha256:82b562f3958b782928425c402bee84746a4b41a1ff4778b9c214e86ff5398ee1",
                    "sha256:d72f9dfdfd82c9cc6f0d2b0326479777a344d108b0c2ac2a01be85b86672c3fa",
                    "sha256:385b8129f0bcd6df0b3c90968ae87ae8f6c5f21ae2f1bc4d05daa47efb941504",
                    "sha256:ea900c5c1a8ec290e7eeabf4eae3e9889080039f1bcc830c16fad42b8e559c28",
                    "sha256:fbea287a7c7f9b03f703f2b9d0a550d5fed850af3521cb4facdb83e0b5455902"
                ]
            }
        },
        "9.6-3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.20-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:bd900a48068e3287723e57faeb74f06004bdb77d06cefe902e4103aee989a497",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.12",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.20-1.pgdg90+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:bd900a48068e3287723e57faeb74f06004bdb77d06cefe902e4103aee989a497",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:34:08.000233979Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:08:58.665097692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f03e68a10b84e2342cfffbb8cdec1117c7f5e5d0dd004072e84efb62cfdf157c in / "
                },
                {
                    "created": "2020-12-11T02:08:58.90376076Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:11.636441237Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-12-11T12:41:14.235869886Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:41:14.675204645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:32.822588877Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2020-12-11T12:41:44.850741438Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2020-12-11T12:41:45.267480819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:41:52.04588059Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-11T12:41:53.843860432Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:41:58.15598735Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2020-12-11T12:57:15.216367491Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:15.402265603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.20-1.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:31.145648521Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | i386 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tcase \"$PG_MAJOR\" in \t\t\t\t9.* | 10 ) ;; \t\t\t\t*) \t\t\t\t\techo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t;; \t\t\tesac; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +"
                },
                {
                    "created": "2020-12-11T12:57:32.384129577Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T12:57:33.42843735Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T12:57:33.607562906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:33.794505007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:34.831474049Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T12:57:35.026866081Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:35.276105813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:cfbddd6bbbc80f3e5e232700023ccabc8dc57e5080e2200436538d799fadf82e in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T12:57:36.311660648Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T12:57:36.527434198Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:36.715979712Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:36.94322418Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:37.127396603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:45.884326309Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:46.353539411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:47.340035404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3+dfsg-2.pgdg90+1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:34:03.082242934Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-12-14T05:34:05.913605472Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:34:07.000198631Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:34:08.000233979Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e4b1e8d0745b9e73ccd05f1654c2dcd7806a841d65e083c32cc09259aad57da3",
                    "sha256:6c569577db3b7329fd82e1526bab1854332f4df87c31c9212c925089aa59a522",
                    "sha256:553f2cbe02586e8046945fcb13da0686e27965ac45ce916ddabb18e853f19849",
                    "sha256:4dd02ba6a63a4a6ffdbb795281a9794537e8474dc70b39ccb6417f1c301534f4",
                    "sha256:4e591cd03a46c5de80680a61c394d90907dcea48cb78ed7322e1fe94da561ff8",
                    "sha256:e6a92d9eb0d54fad9a95658f08a6c8b9cdd048e606c7dbe24dbfd1cccb09c5fe",
                    "sha256:ca29f245a26cb7fa0e4bc1622864678c30e9e883c84b9f0b608fa73e52da9f3a",
                    "sha256:d36fc57f486d2a7b523cacd9267bbf36e6d5b60e05dde656283b1042b4591050",
                    "sha256:6ff7af258c831f6ed6874bd2400b6645793cc38762048878fc9d8e021c4e96d3",
                    "sha256:c7ba9704d80775d26957cb3f0e80e36b9f306e627d03d79ce18d8f8911427461",
                    "sha256:8d053c02db3b7b07d24d433b3e48b1109544596237359cfd203d8a3997030414",
                    "sha256:5cf66c11cf44119c63da743f58da3dc76b0b2cf07eaa919d59c5b099c8121c21",
                    "sha256:40cbf70bbeb654070ab21cc398d2a8c86256550ba877540659aa42a55319390c",
                    "sha256:dc1396a4e212bca538530053be205648dd9f92a36d54526cd88c0e5fd061130b",
                    "sha256:b5902e704c23bf1fdd42b1227d242b87bb25e2b2fd80db20e632c5910fb07ace",
                    "sha256:e5a023adbb04e93db47c36067f5c59648a7fe1f1a140e352acd0047fd14aca4c",
                    "sha256:8f98f08674e3f0f6e4677cb7a04eb846076f63c6283ab16ee2a4df5754c2fd9d"
                ]
            }
        },
        "9.6-3.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.20",
                    "PG_SHA256=3d08cba409d45ab62d42b24431a0d55e7537bcd1db2d979f5f2eefe34d487bb6",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:eac4165bc31ad271f550e47dccfd53c7549b54a225bbcc895927a9a593e83d22",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.20",
                    "PG_SHA256=3d08cba409d45ab62d42b24431a0d55e7537bcd1db2d979f5f2eefe34d487bb6",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.0.3",
                    "POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:eac4165bc31ad271f550e47dccfd53c7549b54a225bbcc895927a9a593e83d22",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2020-12-14T05:36:16.000216461Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-12-11T02:04:06.980443025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:62a1e09319acb6d1bad91ef1c35aabdc7e5e19883a77f30f1951ccfffc812124 in / "
                },
                {
                    "created": "2020-12-11T02:04:07.192210007Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:09.894568878Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2020-12-11T12:24:10.104964068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:24:11.111577426Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2020-12-11T12:57:44.398732904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:44.59401132Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.20",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T12:57:44.798762256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=3d08cba409d45ab62d42b24431a0d55e7537bcd1db2d979f5f2eefe34d487bb6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:32.503680637Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2020-12-11T13:02:34.388946612Z",
                    "created_by": "/bin/sh -c sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2020-12-11T13:02:36.332767592Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2020-12-11T13:02:36.616939984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:38.65259901Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2020-12-11T13:02:39.004594338Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:39.618441878Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:be0996fe6c3fcec9976408f3f94ed203fdcb751cfa2cd940a2bfcbbbda925e9c in /usr/local/bin/ "
                },
                {
                    "created": "2020-12-11T13:02:41.481942608Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2020-12-11T13:02:41.837785539Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:42.236030973Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:42.544332905Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-11T13:02:42.887386087Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:36.559494568Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:37.15794552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:33:38.164779758Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=9aae25d46dc8b124f6e8a35886edcf9bd23a3ab049090edd8335b9c7324cae74",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-14T05:36:12.173801094Z",
                    "created_by": "/bin/sh -c set -ex         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         file         json-c-dev         libtool         libxml2-dev         make         perl         clang-dev         g++         gcc         gdal-dev         geos-dev         llvm10-dev         proj-dev         protobuf-c-dev     && cd /usr/src/postgis     && ./autogen.sh     && ./configure     && make -j$(nproc)     && make install     && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         json-c         geos         gdal         proj         libstdc++         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps"
                },
                {
                    "created": "2020-12-14T05:36:15.000327922Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2020-12-14T05:36:16.000216461Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4666769fca7a1db532e3de298ca87f7e3124f74d17e1937d1127cb17058fead",
                    "sha256:1e310653cfc3f26b3c374e50fe863ee1cc0a17bfe193249f5d36900416ad37d8",
                    "sha256:b5549f846d72ff2790fda1cd91932940e8c76d176cd5d29cc0ee5416f2868d83",
                    "sha256:5a9b35959ff3ac01fe639b689acb0a8da6152f51a625e382f464d54bc54bd00d",
                    "sha256:af9866cabd529af9fac009e95402957b733cb26d4efafdcc2f085c7c473a5a8c",
                    "sha256:c028335c7eaed8e37890bd34f9abc8a564ba923aa0c0f73334e2d1b6b7429927",
                    "sha256:f03f948c2737d7d14c96e41d7a1cebf16b0bac07f1a1ffcaa8f2b14105041977",
                    "sha256:d6359a7b51a883b6396041f680947538511b717d0efa1f385b521d6600ea0c4c",
                    "sha256:c5b45942fa44fc68c8c753bcaa570f96a89c5b002ae0de040aa1a1871d6a4d37",
                    "sha256:6bfae840bfa0842d093caa82284a0a3d82c7062d3b893235d1458f807bd6bf22",
                    "sha256:0bcb5c48d44e401e1d6e372376f076442819aaf624ea1b8d6a6f7da759b3c9d9",
                    "sha256:cf1c888d83a7f98daf6ecdbf05ff5547c5f1abb24f5e2609a6eb78ae433a2003"
                ]
            }
        },
        "9.6-3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:5328f22357cd367ae543c5d2c2e92a8b656a18e12e5bb34e4e2d70136cd2385d",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:5328f22357cd367ae543c5d2c2e92a8b656a18e12e5bb34e4e2d70136cd2385d",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:27:20.000993587Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-12-02T02:48:20.708690397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece5ff85ca549f0b1e9139d29dcb43a52af672d0591c423e28180f6d8d700ad7 in / "
                },
                {
                    "created": "2021-12-02T02:48:21.173095703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:04.345535219Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-12-02T23:24:05.30216378Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-12-02T23:24:05.500686521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:15.557268955Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2021-12-02T23:24:22.631535096Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2021-12-02T23:24:22.942162295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:24:30.423265372Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-02T23:24:32.289752473Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-12-02T23:24:43.746516604Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
                },
                {
                    "created": "2021-12-02T23:30:36.319929715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:36.548681759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:36.757287731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:53.243399302Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2021-12-02T23:30:54.412837203Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-12-02T23:30:55.351880811Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-12-02T23:30:55.548824812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:56.385017978Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-12-02T23:30:56.610031399Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:56.848072993Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:73785d4a64e88cd001941f2d0fb17c583e6d98ffda704b27106f5ef128737e5b in /usr/local/bin/ "
                },
                {
                    "created": "2021-12-02T23:30:57.751764319Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-12-02T23:30:57.955083275Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:58.180020846Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:58.385896606Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-02T23:30:58.595370146Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:57.052917231Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:57.569602561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:58.5079653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4+dfsg-3.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:17.374784591Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-20T05:27:18.373857881Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:27:19.000108986Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:27:20.000993587Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9321ff862abbe8e1532076e5fdc932371eff562334ac86984a836d77dfb717f5",
                    "sha256:1fd9b284a3ce6750b46ac36ffb90e34ba316d2304efd8848522169dd4f91da9a",
                    "sha256:e408a39a0b683cf94d3bd462c176acfa4c56b333ec6d9737aed6c616765c920d",
                    "sha256:8083ac6c7a074d27747cacb51e7ce4c6f5140ce83e4bfe9a6fd387a01ae9aae4",
                    "sha256:16bdcb6f65a3a864696fced98d103001692074a85009668de5d5298ec9693a05",
                    "sha256:470529a805d0ed430ae9d55de39e7b2c3eae4b6f41d9041ebc13da3c40dc358e",
                    "sha256:51e951dc5705e92cadc32dae632c6019398b246fae520b487d688e66c43c569a",
                    "sha256:27051a077cdcc043249c5fdf83c2451b87a3734288b619fc29fdb9116f8cf759",
                    "sha256:4eb1a99dc835a0db590569ebaf1b861af7aa9a0c2f4bd7602827f480d9c9368a",
                    "sha256:c2574897acea3e33307c31145306f5de718c789d8347fbba086c33381b5de777",
                    "sha256:9c4e6237f0307c07bbd2912c03f0fe4ea569edf39a5a6a5ebe9c3d398b49002d",
                    "sha256:012d0f706f716aa64afeafa45c2a290fa9804fd3177167430cff0072222301e0",
                    "sha256:d1cdc73716ec429cf7e7c826acdaf03042a16c6ff061864677d81eeb7ae72f8d",
                    "sha256:abd860f3473d5ad2f2067374307d2c05b23eb963711a0c35ee54476c7014023b",
                    "sha256:c3b94722e04470acce2f96c00f11382cc2af643f9d5dd553fbe0ffcb6e47a57a",
                    "sha256:9cf871cea6468c88b832bcddd1e99df6674ea6a48d7435afcb7a9252041690ce",
                    "sha256:c837885d52f0fdc0ecfec79440d330d28f9a0a91b2b27acf6dfb939f5c567ff6"
                ]
            }
        },
        "9.6-3.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:d8f88d8684564daa0bedef8139ac79a1ebb571da93d84360c2068f5e0139afff",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.1.4",
                    "POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "POSTGIS2_GEOS_VERSION=tags/3.8.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:d8f88d8684564daa0bedef8139ac79a1ebb571da93d84360c2068f5e0139afff",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2021-12-20T05:29:49.000183562Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:01.246039702Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-13T05:06:01.442961641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:06:02.244050589Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-13T05:38:17.700453184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:38:17.93571334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T05:38:18.155031637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:42.711756452Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-16T01:53:44.624498389Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-16T01:53:46.023734385Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-16T01:53:46.246551067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:47.043247214Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-16T01:53:47.239819587Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:47.474346237Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:d42fb1cc6f72ece1cbb2745ad3bacdce7d77c9f043187a056564c11463e6320f in /usr/local/bin/ "
                },
                {
                    "created": "2021-11-16T01:53:48.451953541Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2021-11-16T01:53:48.784365033Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:49.171864783Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:49.592070504Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-16T01:53:49.901115122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:47.136282225Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:47.314689791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.1.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:48.167112547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=dfcbad0c6090c80bc59d3ea77d1adc4b3ade533a403761b4af6d9a44be1a6e48",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:26:49.173173687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS2_GEOS_VERSION=tags/3.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-20T05:29:47.771959666Z",
                    "created_by": "/bin/sh -c set -eux         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     && echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps         autoconf         automake         clang-dev         file         g++         gcc         gdal-dev         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm11-dev         make         pcre-dev         perl         proj-dev         protobuf-c-dev           && if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .build-deps-geos geos-dev cunit-dev ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             apk add --no-cache --virtual .build-deps-geos cmake git ;             cd /usr/src ;             git clone https://github.com/libgeos/geos.git ;             cd geos ;             git checkout ${POSTGIS2_GEOS_VERSION} -b geos_build ;             mkdir cmake-build ;             cd cmake-build ;                 cmake -DCMAKE_BUILD_TYPE=Release .. ;                 make -j$(nproc) ;                 make check ;                 make install ;             cd / ;             rm -fr /usr/src/geos ;         else             echo \".... unknown PosGIS ....\" ;         fi             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres     && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps         gdal         json-c         libstdc++         pcre         proj         protobuf-c      && if [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             apk add --no-cache --virtual .postgis-rundeps-geos geos ;         fi     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps .build-deps-geos"
                },
                {
                    "created": "2021-12-20T05:29:48.042454251Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:76bd441e221ac1acdd58e9412d0cc4ff810fb9c32520f87e4144545d018f4a1d in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2021-12-20T05:29:49.000183562Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:c0b300facd17b018ff9b2f7eac474634f08a111e5a8a70f47072308b58e620c0",
                    "sha256:dd7ace6c669735715c1220fb7c12f5dfed1bedd3bf894c224f47be29eb9e1b96",
                    "sha256:15a76ec669e4c35abb4ff8b82a9751280ebd820e0401e0baf3a3b8416b3150ec",
                    "sha256:dd8d090ce98854449ca55e9e5ad47f612634179ee7d814bb5bf1a26205e491cf",
                    "sha256:63cfb4b67ccc1f8d4df0febe6cdda4de2f604197af11729389587c1ad68e8f01",
                    "sha256:656b812a654d1ceaea22103c392072ff34581058182f0be498060dca98e7d9d8",
                    "sha256:6c75df36582deeb6cd3e34f49297058ab275bcba2c11d5ba2b8f0eb87135bcc6",
                    "sha256:098f529c0cbc3b6a1248db38657fff1b3dac64274fe829022efcc7e4455d0739",
                    "sha256:6b6e858e0a806b42e5c23cc91087e5f441c62b748dec90a4ff2e6e518f8870bc",
                    "sha256:84d774d0cd8730015102fd911f89d29b69111b59a7c4ac99e216ceeed8b301f4",
                    "sha256:dc79b604348912f2d58ee3c42b4d8582689dfb736a9f29b54fa5531af57b85ff"
                ]
            }
        },
        "9.6-3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.0+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:69ab793c759ca3fbf6b3a510917af10e9746885efda2fb02260a4aab45cf5eae",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "GOSU_VERSION=1.14",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.2.0+dfsg-1.pgdg110+1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:69ab793c759ca3fbf6b3a510917af10e9746885efda2fb02260a4aab45cf5eae",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-13T05:31:10.000165038Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-01-26T01:40:35.769668496Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:90495c24c897ec47982e200f732f8be3109fcd791691ddffae0756898f91024f in / "
                },
                {
                    "created": "2022-01-26T01:40:36.265271157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:08:12.593482715Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-27T01:08:13.586350413Z",
                    "created_by": "/bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2022-01-27T01:08:13.807223127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOSU_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:08:26.598107159Z",
                    "created_by": "/bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
                },
                {
                    "created": "2022-01-27T01:08:34.227121635Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
                },
                {
                    "created": "2022-01-27T01:08:34.576639391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-27T01:08:39.187588905Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-27T01:08:40.158328407Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2022-02-12T00:27:21.405319328Z",
                    "created_by": "/bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\""
                },
                {
                    "created": "2022-02-12T01:03:44.08906359Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:03:44.291296977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/9.6/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:03:44.470977174Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:03:59.462560967Z",
                    "created_by": "/bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get build-dep -y \t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\tDEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\tapt-get source --compile \t\t\t\t\tpostgresql-common pgdg-keyring \t\t\t\t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\tdpkg-scanpackages . > Packages; \t\t\tgrep '^Package: ' Packages; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t\t\"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version"
                },
                {
                    "created": "2022-02-12T01:04:00.631129856Z",
                    "created_by": "/bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2022-02-12T01:04:01.434705087Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2022-02-12T01:04:01.658940571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:02.547866144Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2022-02-12T01:04:02.789148829Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:03.027336926Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3800bc4c74f15c7b0a6353826ad40078debc969a660caacde1772c4e43df552a in /usr/local/bin/ "
                },
                {
                    "created": "2022-02-12T01:04:03.959254459Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-02-12T01:04:04.164604755Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:04.394439192Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:04.600273267Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-12T01:04:04.807064089Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:45.459921637Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:46.438534197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_MAJOR=3",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:47.448868781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.0+dfsg-1.pgdg110+1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:31:07.089203572Z",
                    "created_by": "/bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-13T05:31:08.126784917Z",
                    "created_by": "/bin/sh -c mkdir -p /docker-entrypoint-initdb.d",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:31:09.00033577Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-13T05:31:10.000165038Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d0ebbe3f5d26c1b5ec4d5dbb6fe3205d7061f9735080b0162d550530328abd6",
                    "sha256:504d3c78f1942134301a91d83b6d2102b2c398eab2c81a76f62b9eb33f8c000b",
                    "sha256:8c1f84338867a554126fe7100341ff8174fe71e13518389803e4e1050aa8f200",
                    "sha256:10e60ad30e5f437ff02dd7273545deeeabb0d07595dae73cc0f1ea2d38a2956f",
                    "sha256:96d824739a641ee2e8f36bcd8ff576c7ba72029184aaa7c8ec5c418f5c60802f",
                    "sha256:a4b9517dfa8c2c05e3cd3423f52535a7e551ac7e4c026541742c054b19b1c5e4",
                    "sha256:f2e4fedb957df6c5380f46b9b08e2554b1936a553acbc0c77579faf53724feda",
                    "sha256:f30ec44d554a0078bfa681a4515ca8783a5d36c6e095f18e7a090db1dd943a78",
                    "sha256:a08501780535c566dacae84a2779eb2f5ed3c40649f53e806cff07452bad516c",
                    "sha256:75bea9922cfc0add61a97822890231a70ed795ac2e600649007e15b91f8594ca",
                    "sha256:505aeb31a5ac6a0c209426e4e9dcb91b66e630a92632b2804bc1163264daaeca",
                    "sha256:f59d15052a502f54286afffc627ea9a0a9873f89f3c107efca33d7dc1072b78e",
                    "sha256:229ee204c1c23fb09a5398fdb93a489e6589d7bb3b808826a12b6a8887c86751",
                    "sha256:33351a528565920fe4f47d9ba5e860b60fa99c04ac0023963187422f90af6151",
                    "sha256:25a5f7a9dfa97edf0139900f8043557776cbb9a5f47fb5080fc5d65e8ba5dd02",
                    "sha256:d386bd1b9d09ef7ec8525cf94445578a70b9df8637692d595dbdfe676ab89e51",
                    "sha256:2c931219fc0e3f1d84b54db935df41d455207751cc7cd9e6ecf4e900f48a0998"
                ]
            }
        },
        "9.6-3.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.0",
                    "POSTGIS_SHA256=c725d1be6d57ad199bbb6393cc3546defb70de1c78fe1787f7ccef2d51c3647b"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Image": "sha256:dd21dbb0bf2ea1528fc2628700f54d137305ce0f0fece126c92f432b1601d10b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=9.6",
                    "PG_VERSION=9.6.24",
                    "PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_VERSION=3.2.0",
                    "POSTGIS_SHA256=c725d1be6d57ad199bbb6393cc3546defb70de1c78fe1787f7ccef2d51c3647b"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                ],
                "Image": "sha256:dd21dbb0bf2ea1528fc2628700f54d137305ce0f0fece126c92f432b1601d10b",
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net"
                },
                "StopSignal": "SIGINT"
            },
            "created": "2022-06-13T05:33:23.000510991Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2021-11-24T20:19:40.199700946Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9233f6f2237d79659a9521f7e390df217cec49f1a8aa3a12147bbca1956acdb9 in / "
                },
                {
                    "created": "2021-11-24T20:19:40.483367546Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T04:59:34.395213153Z",
                    "created_by": "/bin/sh -c set -eux; \taddgroup -g 70 -S postgres; \tadduser -u 70 -S -D -G postgres -H -h /var/lib/postgresql -s /bin/sh postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql"
                },
                {
                    "created": "2021-11-30T04:59:34.619652034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=en_US.utf8",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T04:59:35.432241349Z",
                    "created_by": "/bin/sh -c mkdir /docker-entrypoint-initdb.d"
                },
                {
                    "created": "2021-11-30T05:40:27.481858173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_MAJOR=9.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:40:27.755079868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_VERSION=9.6.24",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:40:28.021591619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PG_SHA256=aeb7a196be3ebed1a7476ef565f39722187c108dd47da7489be9c4fcae982ace",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:46:39.991143204Z",
                    "created_by": "/bin/sh -c set -eux; \t\twget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"; \techo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -; \tmkdir -p /usr/src/postgresql; \ttar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t; \trm postgresql.tar.bz2; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tflex \t\tgcc \t\tkrb5-dev \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\topenldap-dev \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tperl-dev \t\tpython3-dev \t\ttcl-dev \t\tutil-linux-dev \t\tzlib-dev \t; \t\tcd /usr/src/postgresql; \tawk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new; \tgrep '/var/run/postgresql' src/include/pg_config_manual.h.new; \tmv src/include/pg_config_manual.h.new src/include/pg_config_manual.h; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \twget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'; \twget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432 \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include \t\t--with-libraries=/usr/local/lib \t\t--with-krb5 \t\t--with-gssapi \t\t--with-ldap \t\t--with-tcl \t\t--with-perl \t\t--with-python \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t; \tmake -j \"$(nproc)\" world; \tmake install-world; \tmake -C contrib install; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t\t| grep -v -e perl -e python -e tcl \t)\"; \tapk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t; \tapk del --no-network .build-deps; \tcd /; \trm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man \t; \t\tpostgres --version"
                },
                {
                    "created": "2021-11-30T05:46:41.069800761Z",
                    "created_by": "/bin/sh -c set -eux; \tcp -v /usr/local/share/postgresql/postgresql.conf.sample /usr/local/share/postgresql/postgresql.conf.sample.orig; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/local/share/postgresql/postgresql.conf.sample"
                },
                {
                    "created": "2021-11-30T05:46:42.057962618Z",
                    "created_by": "/bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql"
                },
                {
                    "created": "2021-11-30T05:46:42.261234742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PGDATA=/var/lib/postgresql/data",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T05:46:43.179103453Z",
                    "created_by": "/bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\""
                },
                {
                    "created": "2021-11-30T05:46:43.405152564Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/postgresql/data]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:51.62067208Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:cda82b5709f66a90b6babd661411ef1a87d0c9eeeae48253ec3248341658f54d in /usr/local/bin/ "
                },
                {
                    "created": "2022-01-04T01:20:52.392394386Z",
                    "created_by": "/bin/sh -c ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
                },
                {
                    "created": "2022-01-04T01:20:52.591781198Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:52.789600455Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGINT",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:52.981746595Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 5432",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-04T01:20:53.15990815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"postgres\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:31.899982795Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=PostGIS Project - https://postgis.net",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:32.166015257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_VERSION=3.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:30:33.167986679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV POSTGIS_SHA256=c725d1be6d57ad199bbb6393cc3546defb70de1c78fe1787f7ccef2d51c3647b",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T05:33:21.648821131Z",
                    "created_by": "/bin/sh -c set -eux         &&  if   [ $(printf %.1s \"$POSTGIS_VERSION\") == 3 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.10 ;             export GDAL_ALPINE_VER=3.4 ;             export PROJ_ALPINE_VER=8.2 ;         elif [ $(printf %.1s \"$POSTGIS_VERSION\") == 2 ]; then             set -eux ;             export GEOS_ALPINE_VER=3.8 ;             export GDAL_ALPINE_VER=3.2 ;             export PROJ_ALPINE_VER=7.2 ;                         echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.14/community' >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/main'      >> /etc/apk/repositories ;             echo 'https://dl-cdn.alpinelinux.org/alpine/v3.13/community' >> /etc/apk/repositories ;                     else             set -eux ;             echo \".... unknown \\$POSTGIS_VERSION ....\" ;             exit 1 ;         fi         && apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/${POSTGIS_VERSION}.tar.gz\"     && echo \"${POSTGIS_SHA256} *postgis.tar.gz\" | sha256sum -c -     && mkdir -p /usr/src/postgis     && tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     && rm postgis.tar.gz         && apk add --no-cache --virtual .build-deps                 gdal-dev~=${GDAL_ALPINE_VER}         geos-dev~=${GEOS_ALPINE_VER}         proj-dev~=${PROJ_ALPINE_VER}                 autoconf         automake         clang-dev         file         g++         gcc         gettext-dev         json-c-dev         libtool         libxml2-dev         llvm-dev         make         pcre-dev         perl         protobuf-c-dev             && cd /usr/src/postgis     && gettextize     && ./autogen.sh     && ./configure         --with-pcredir=\"$(pcre-config --prefix)\"     && make -j$(nproc)     && make install         && mkdir /tempdb     && chown -R postgres:postgres /tempdb     && su postgres -c 'pg_ctl -D /tempdb init'     && su postgres -c 'pg_ctl -D /tempdb start'     && cd regress     && make -j$(nproc) check RUNTESTFLAGS=--extension   PGUSER=postgres         && su postgres -c 'psql    -c \"CREATE EXTENSION IF NOT EXISTS postgis;\"'     && su postgres -c 'psql -t -c \"SELECT version();\"'              >> /_pgis_full_version.txt     && su postgres -c 'psql -t -c \"SELECT PostGIS_Full_Version();\"' >> /_pgis_full_version.txt         && su postgres -c 'pg_ctl -D /tempdb --mode=immediate stop'     && rm -rf /tempdb     && rm -rf /tmp/pgis_reg     && apk add --no-cache --virtual .postgis-rundeps                 gdal~=${GDAL_ALPINE_VER}         geos~=${GEOS_ALPINE_VER}         proj~=${PROJ_ALPINE_VER}                 json-c         libstdc++         pcre         protobuf-c     && cd /     && rm -rf /usr/src/postgis     && apk del .fetch-deps .build-deps     && cat /_pgis_full_version.txt"
                },
                {
                    "created": "2022-06-13T05:33:22.000176488Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d119eaa9c4e91f009e8fc783400fc9b48e3bd2868b2846eed9d5ec9dc0ecdbd in /docker-entrypoint-initdb.d/10_postgis.sh "
                },
                {
                    "created": "2022-06-13T05:33:23.000510991Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ac9e9890b9099e802b2b391049687555b8f22a663d84bd67629f1455d0430e02 in /usr/local/bin "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759",
                    "sha256:6cab14f8a43489c4923bf8a12a4a17581c8dc2b6f957d08a07b73ff194b4e3e5",
                    "sha256:b737c25801324ece502b515ac264eeedcfeef23add9e40d9f159f3e05c96e2b1",
                    "sha256:20d0eebecd821d42be5af9c2b1f7c1c88e8dac3356bd85b23fae25387ea47eba",
                    "sha256:d9707597ba818be3a21182300b049c0b13b559fbfb9dca2d721048ec1fc547be",
                    "sha256:1ac6935777061e5ea531a8bcf3a9f0598949a4120923f2dbcef12dba65cf391a",
                    "sha256:704b1cf3c207dbc2f23319eefe51451bbbc08a618bcbdd923d535f8c99970067",
                    "sha256:82b562f3958b782928425c402bee84746a4b41a1ff4778b9c214e86ff5398ee1",
                    "sha256:d72f9dfdfd82c9cc6f0d2b0326479777a344d108b0c2ac2a01be85b86672c3fa",
                    "sha256:b58b0455463d2e00255d5fa355982606fd76caf7ccfc50ffd3d7d4d265d435dd",
                    "sha256:0a52fc6f3f8d913126d49419a9c6a587148e6ac45ad3dca5fcd0876ff310edd1",
                    "sha256:356455eae080b3939cf8022b6cfb36567aae190602b036df126527e4dc30b758"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "5432/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "GOSU_VERSION=1.17",
                    "LANG=en_US.utf8",
                    "PG_MAJOR=16",
                    "PG_VERSION=16.3-1.pgdg110+1",
                    "PGDATA=/var/lib/postgresql/data",
                    "POSTGIS_MAJOR=3",
                    "POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "postgres"
                ],
                "Volumes": {
                    "/var/lib/postgresql/data": {}
                },
                "Labels": {
                    "maintainer": "PostGIS Project - https://postgis.net",
                    "org.opencontainers.image.description": "PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16 bullseye",
                    "org.opencontainers.image.source": "https://github.com/postgis/docker-postgis"
                },
                "StopSignal": "SIGINT",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-27T05:25:50.345566902Z",
            "history": [
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9b38b383dd93169a663eed88edf3f2285b837257ead69dc40ab5ed1fb3f52c35 in / "
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tgroupadd -r postgres --gid=999; \tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \tmkdir -p /var/lib/postgresql; \tchown -R postgres:postgres /var/lib/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t\tless \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV GOSU_VERSION=1.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends ca-certificates wget; \trm -rf /var/lib/apt/lists/*; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \tfi; \tapt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \techo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; \tlocale-gen; \tlocale -a | grep 'en_US.utf8' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV LANG=en_US.utf8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibnss-wrapper \t\txz-utils \t\tzstd \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tmkdir -p /usr/local/share/keyrings/; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tgpg --batch --export --armor \"$key\" > /usr/local/share/keyrings/postgres.gpg.asc; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_MAJOR=16",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PG_VERSION=16.3-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -ex; \t\texport PYTHONDONTWRITEBYTECODE=1; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \taptRepo=\"[ signed-by=/usr/local/share/keyrings/postgres.gpg.asc ] http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main $PG_MAJOR\"; \tcase \"$dpkgArch\" in \t\tamd64 | arm64 | ppc64el | s390x) \t\t\techo \"deb $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\techo \"deb-src $aptRepo\" > /etc/apt/sources.list.d/pgdg.list; \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tcd \"$tempDir\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends dpkg-dev; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \t\t\t_update_repo() { \t\t\t\tdpkg-scanpackages . > Packages; \t\t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t}; \t\t\t_update_repo; \t\t\t\t\t\tnproc=\"$(nproc)\"; \t\t\texport DEB_BUILD_OPTIONS=\"nocheck parallel=$nproc\"; \t\t\tapt-get build-dep -y postgresql-common pgdg-keyring; \t\t\tapt-get source --compile postgresql-common pgdg-keyring; \t\t\t_update_repo; \t\t\tapt-get build-dep -y \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\tapt-get source --compile \"postgresql-$PG_MAJOR=$PG_VERSION\"; \t\t\t\t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\tls -lAFh; \t\t\t_update_repo; \t\t\tgrep '^Package: ' Packages; \t\t\tcd /; \t\t\t;; \tesac; \t\tapt-get install -y --no-install-recommends postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y --no-install-recommends \t\t\"postgresql-$PG_MAJOR=$PG_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi; \t\tfind /usr -name '*.pyc' -type f -exec bash -c 'for pyc; do dpkg -S \"$pyc\" &> /dev/null || rm -vf \"$pyc\"; done' -- '{}' +; \t\tpostgres --version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tdpkg-divert --add --rename --divert \"/usr/share/postgresql/postgresql.conf.sample.dpkg\" \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\"; \tcp -v /usr/share/postgresql/postgresql.conf.sample.dpkg /usr/share/postgresql/postgresql.conf.sample; \tln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"; \tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample; \tgrep -F \"listen_addresses = '*'\" /usr/share/postgresql/postgresql.conf.sample # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 3777 /var/run/postgresql # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENV PGDATA=/var/lib/postgresql/data",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 1777 \"$PGDATA\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "VOLUME [/var/lib/postgresql/data]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "COPY docker-entrypoint.sh docker-ensure-initdb.sh /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "RUN /bin/sh -c ln -sT docker-ensure-initdb.sh /usr/local/bin/docker-enforce-initdb.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "STOPSIGNAL SIGINT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "EXPOSE map[5432/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-09T18:58:11Z",
                    "created_by": "CMD [\"postgres\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "LABEL maintainer=PostGIS Project - https://postgis.net org.opencontainers.image.description=PostGIS 3.4.2+dfsg-1.pgdg110+1 spatial database extension with PostgreSQL 16 bullseye org.opencontainers.image.source=https://github.com/postgis/docker-postgis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "ENV POSTGIS_MAJOR=3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "ENV POSTGIS_VERSION=3.4.2+dfsg-1.pgdg110+1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-27T05:25:49.979030233Z",
                    "created_by": "RUN /bin/sh -c apt-get update       && apt-cache showpkg postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR       && apt-get install -y --no-install-recommends            ca-certificates                       postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts       && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.313255528Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /docker-entrypoint-initdb.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.332632076Z",
                    "created_by": "COPY ./initdb-postgis.sh /docker-entrypoint-initdb.d/10_postgis.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-27T05:25:50.345566902Z",
                    "created_by": "COPY ./update-postgis.sh /usr/local/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123eef91533f6745362321baeef5b3fcbb846bbbf250f5b10653d0fab061b90f",
                    "sha256:10d40fad64fd1e98cfeb8b609fb69701c099332a7253b051bb283c7996b58a4b",
                    "sha256:e26829475f7a98b3f3a6d9afe48d263d810231c4e47440bbf9ddb0e751dc5d91",
                    "sha256:6316a8165e862396c61ad0b793f9cf542e48b5ed996d683dec7d6ec8815a8184",
                    "sha256:67c6b02a02be26ce2712b3965743cadaaf56b6b402159d98aa8f38d47715ead4",
                    "sha256:e619de6aed13c1d9869d162f07b6b7fd350d18a28add028aa87dbaaff7d7b542",
                    "sha256:25b48cb06100e056a5b2d49ec457345d2e54265dfc7616c03f434df686cbf278",
                    "sha256:220d726527a38bd54c92bcff1af95fcd9d3242b4bbe7f093cafcbb32981ffda4",
                    "sha256:f8a700e6d5d2f23ea748eac137b467e52610d55a496e30cda30e1af6d21cc126",
                    "sha256:af774239634720c1adf0f46187539968c39af72da64c4bc996fece0515bd905f",
                    "sha256:baa22dd9b807291171b4b084ae2468d72c41a484d11588def4a90684168f6389",
                    "sha256:ffeac10585609cc0254351421d42fc8bbcbab2a4b07bdfffe11b2b7efcd46485",
                    "sha256:2021692b13066dec50c2ffaa82eeeaa4fcc087389bf10591423fcf4dfe8ff6fc",
                    "sha256:160596d1c000bf7f5c54538309075c991009000b135c6dd4a3e0c13fa84f039f",
                    "sha256:72366b543e78f9dacd0ef4de65360c6e792492cc87e4531abcca4f824741f4c6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:299009d38d0fc171fd708639065f2c0929569c9bb500e4418850d0a5c267ad04",
                    "sha256:586dbf01beda7145f79a79695b8355adfa491caf19157760d9a67e511266b051"
                ]
            }
        }
    }
}